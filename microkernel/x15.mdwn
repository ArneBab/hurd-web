[[!meta copyright="Copyright © 2013 Free Software Foundation, Inc."]]

[[!meta license="""[[!toggle id="license" text="GFDL 1.2+"]][[!toggleable
id="license" text="Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
is included in the section entitled [[GNU Free Documentation
License|/fdl]]."]]"""]]

The x15 microkernel is under development by Richard Braun.  Overall, x15 is intended to provide better performance because of simpler IPC and data structures and better scalability because of improved data structure algorithms and concurrency.

The following specific features are intended to distinguish x15 from other microkernels.  However, it should be noted that the microkernel is under heavy development and so the list may (and almost certainly will) change.

* SMP support
* Lockless synchronisation à la RCU
* Support for large amounts of physical memory.  GNU Mach does the same as Linux, physical memory is mapped in kernel space so you can't have more physical memory than you have kernel space which is why gnumach can't handle more than 1.8G right now, it's a 2/2 split.  In x15, the kernel maps what it needs and can map it from anywhere in physical memory the drawback is that it needs to update kernel page tables more often.
* Virtual memory operations are planned to be completely concurrent on x15, similar to what is described in radixvm
* Intended to efficiently run a Hurd-like system providing a POSIX interface
* Providing both synchronisation IPC and signals, as opposed to just synchronisation IPC
* Port names which will transparently identify as file descriptors
* Light reference counting
* A restriction on ipc that only allows reliable transfers across network to machines with same arch and endianness
* etc.
