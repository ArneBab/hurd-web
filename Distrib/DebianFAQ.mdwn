# <a name="Debian_GNU_Hurd_FAQ"> </a> Debian GNU/Hurd FAQ

See also [[Hurd/FrequentlyAskedQuestions]]

## <a name="df"> df </a>

There is no /etc/mtab, so just running \`df' will yield an error. Pass df a path like \`df /' or \`df .' to see the disk usage of that particular file system.

## <a name="sshd"> sshd </a>

You need to disable [[PriviledgeSeperation]] in /etc/ssh/sshd\_options. Also make sure you have /dev/random, see below.

## <a name="_dev_random"> /dev/random </a>

There is no random device by default as no secure implementation has been finished yet. An easy (but very insecure) work-around is to copy a binary file like \`/bin/bash' to /dev/random and /dev/urandom.

## <a name="Hurd_console"> Hurd console </a>

Edit /etc/default/hurd-console to configure the Hurd console and enable it on bootup. See [[Hurd/HurdConsole]] for further information about the Hurd console.

## <a name="swap"> swap </a>

## <a name="2GB_harddisk_limit"> 2GB harddisk limit </a>

The 2GB limit has been removed in Debian GNU/Hurd.

## <a name="Free_memory"> Free memory </a>

Run \`vmstat' to see memory and swap usage.

## <a name="translators"> translators </a>

## <a name="512MB_RAM_limit"> </a> 512MB RAM limit

GNU Mach does not cope well with lots of memory. The best is to limit the memory it can see via GRUB's upppermem feature. Add \`uppermem 786432' to GRUB's Hurd entry in menu.lst

## <a name="xserver_common"> xserver-common </a>

You need to run \`dpkg-reconfigure xserver-common' and select \`Anybody' for starting X as there is no way to detect console users currently.

## <a name="emacs_snapshot_uninstallable"> emacs-snapshot uninstallable </a>

## <a name="reporting_Bugs"> reporting Bugs </a>

Please try to reproduce bugs which are not obviously Hurd-specific on Debian GNU/Linux and then file them there.

If you find a genuine issue in Debian GNU/Hurd, please file it in our Alioth bug tracker at [http://alioth.debian.org/tracker/?atid=411594&amp;group\_id=30628&amp;func=browse](http://alioth.debian.org/tracker/?atid=411594&group_id=30628&func=browse) If you find a bug in the Hurd or GNU Mach themselves, either file a bug against the respective Debian packages, or directly at <http://savannah.gnu.org/bugs/?group=hurd>

## <a name="ps_hangs"> ps hangs </a>

If \`ps' hangs, try \`ps -M' which might still works.

## <a name="porting_packages"> porting packages </a>

## <a name="debugging_glibc"> debugging glibc </a>

To get debugging information for glibc, you need to install the libc0.3-dbg package. At the place gdb looks for debugging symbols by default (/usr/lib/debug/lib/), Debian's libc0.3-dbg stores only frame unwind information. If you want to step into glibc while debugging, you need to add LD\_LIBRARY\_PATH=/usr/lib/debug to gdb's environment. If that still does not work, try LD\_PRELOAD=/usr/lib/debug/libc.so.0.3 instead. You can add to gdb's environment via "set env FOO bar" from the gdb command line.

## <a name="debugging_translators"> debugging translators </a>

In order to debug translators and being able to step into glibc during it, you need the hurd-dbg and libc0.3-dbg packages installed. Then start the translator like settrans -P /foo /usr/bin/env LD\_LIBRARY\_PATH=/usr/lib/debug /hurd/foofs". The -P option will make it pause and you will be able to attach gdb to the process.

## <a name="other_repositories"> other repositories </a>

If you want to use the _apt-get source_ facility, make sure that _/etc/apt/sources.list_ contains a line like

    deb-src http://ftp.de.debian.org/debian unstable main

... replacing _de_ with your homeland's code.

## <a name="kernel_logs"> kernel logs </a>

The kernel logs are written to /dev/klog by Mach. Run "cat /dev/klog &gt; foo" as root and hit ctrl+c after a few seconds to catch the logs. You can do this only once and do not do this in single-user mode (where ctrl+c does not work).

----

Page started.

-- [[Main/MichaelBanck]] - 14 Mar 2006

Mentioned Hurd FAQ. reformated. -- [[Main/AaronHawley]] - 14 Mar 2006
