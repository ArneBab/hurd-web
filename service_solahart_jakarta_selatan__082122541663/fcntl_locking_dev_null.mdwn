[[!meta copyright="Copyright © 2012 Free Software Foundation, Inc."]]

[[!meta license="""[[!toggle id="license" text="GFDL 1.2+"]][[!toggleable
id="license" text="Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
is included in the section entitled [[GNU Free Documentation
License|/fdl]]."]]"""]]

[[!meta title="fcntl locking /dev/null"]]

[[!tag open_issue_hurd]]


# IRC, OFTC, #debian-hurd, 2012-07-06

    <pinotree> regarding the libwibble failure (which holds libbuffy →
      libbuffy-bindings), the failing test happens because it logs to /dev/null
      as test file,
    <pinotree> and while doing that, it wants to lock it first, having a
      ENOTSUP in return
    <youpi> oh
    <youpi> locking null, how interesting
    <youpi> what is that supposed to do ? :o)
    <pinotree> from what i was reading posix, it would seem that such object is
      considered a "File"
    <youpi> is it our unimplemented record lock, or just the lock operation
      that /dev/null doesn't support ?
    <youpi> what size is null supposed to be? zero, right?
    <pinotree> the latter
    <youpi> ah
    <youpi> so we can simply make lock return 0
    <youpi> since there's no byte to lock?
    <youpi> I don't remember whether you can lock unexistant bytes
    <pinotree> indeed, if i change the libwibble unit test to use eg /tmp/foo,
      they pas
    <pinotree> s
