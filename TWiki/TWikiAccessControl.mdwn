%INCLUDE\{"UtilTempDocNote"\}%

%TOC% %STARTINCLUDE%

# <a name="TWiki_Access_Control"> TWiki Access Control </a>

_Restricting read and write access to topics and webs, by users and groups_

## <a name="Overview"> Overview </a>

[[TWikiAccessControl]] allows you restrict access to single topics and entire webs, by individual user and by user groups, in three main areas: view; edit &amp; attach; and rename/move/delete. These controls, combined with [[TWikiDocumentation]], let you easily create and manage an extremely flexible, fine-grained privilege system.

## <a name="An_Important_Control_Considerati"> An Important Control Consideration </a>

Open, freeform editing is the essence of the %TWIKIWEB%.WikiCulture - it's what makes TWiki different and often more effective than other collaboration tools. So, it is strongly recommended that decisions to restrict read or write access to a web or a topic are made with care. Experience shows that _unrestricted write access_ works very well because:

* Peer influence is enough to ensure that only relevant content is posted.

* Peer editing - the ability to rearrange anything on a page - keeps topics focussed.

* All content is preserved under revision control.
  * Edits can be undone by the %MAINWEB%.TWikiAdminGroup (the default administrators group; see Managing Groups).
  * Users are encouraged to edit and refactor (condense a long topic), since there's a safety net.

As a collaboration guideline:

* Create broad groups (more and varied input), and...
* Avoid creating view-only users (if you can read it, you can contribute to it).

## <a name="Users_and_Groups"> Users and Groups </a>

Access control is based on users and groups. Users are defined by their [[WikiNames]], an then organized into unlimited combinations under different user groups.

### <a name="Managing_Users"> Managing Users </a>

A user is created by with the [TWikiRegistration](%SCRIPTULRPATH%/view%SCRIPTSUFFIX%/TWiki/TWikiRegistration) form. The process generates a topic in the %MAINWEB% web in the new user's [[WikiName]]. The default visitor name is %MAINWEB%.TWikiGuest.

* Users can be authenticated using Basic Authentication or SSL. [[TWikiDocumentation]] is required in order to track user identities.

<a name="ManagingGroups"></a>

### <a name="Managing_Groups"> Managing Groups </a>

Groups are defined by group topics in the <code>**%MAINWEB%**</code> web, like the %MAINWEB%.TWikiAdminGroup. To start a new group:

1. **Create** a new topic with A name that ends in **Group**, `SomeGroup`
2. **Define** two variables:
  * Set GROUP = &lt; list of users and groups &gt;
  * Set ALLOWTOPICCHANGE = &lt; list of users and groups &gt;

* * GROUP is a comma-separated list of users and of other groups:<br /><code>**    \* Set GROUP = %MAINWEB%.SomeUser, %MAINWEB%.OtherUser, %MAINWEB%.SomeOtherGroup**</code>

* * ALLOWTOPICCHANGE defines who is allowed to change the group topic; it is a comma delimited list of users and groups. You typically want to restrict that to the members of the group itself, so it should contain the name of the topic,<br /><code>    \* Set ALLOWTOPICCHANGE = %MAINWEB%.TWikiAdminGroup</code><br /> for the TWikiAdminGroup topic. (This prevents users not in the group from editing the topic and from gaining unauthorized membership to the group.)

## <a name="Restricting_Write_Access"> Restricting Write Access </a>

You can define who is allowed to make changes to a web or a topic.

### <a name="Deny_Editing_by_Topic"> Deny Editing by Topic </a>

Denying editing of a topic also restricts attaching files to it; both privileges are assigned together.

* Define one or both of these variables in a topic, preferably at the end of the page:
  * Set DENYTOPICCHANGE = &lt; list of users and groups &gt;
  * Set ALLOWTOPICCHANGE = &lt; list of users and groups &gt;

* DENYTOPICCHANGE defines users or groups that **are not** allowed to make changes to the topic. It is a comma delimited list of users and groups. Example: <br /><code>    \* Set DENYTOPICCHANGE = %MAINWEB%.SomeBadBoy, %MAINWEB%.SomeBadGirl, %MAINWEB%.SomeHackerGroup</code>

* ALLOWTOPICCHANGE defines users or groups that **are** allowed to make changes to the topic. It is a comma delimited list of users and groups. Example: <br /><code>    \* Set ALLOWTOPICCHANGE = %MAINWEB%.SomeGoodGuy, %MAINWEB%.SomeGoodGirl, %MAINWEB%.TWikiAdminGroup</code>

* DENYTOPICCHANGE is evaluated before ALLOWTOPICCHANGE. Access is denied if the authenticated person is in the DENYTOPICCHANGE list, or not in the ALLOWTOPICCHANGE list. Access is granted in case DENYTOPICCHANGE and ALLOWTOPICCHANGE is not defined.

### <a name="Deny_Editing_by_Web"> Deny Editing by Web </a>

Restricting web-level editing blocks creating new topics, changing topics or attaching files.

* Define one or both of these variable in the %WEBPREFSTOPIC% topic:
  * Set DENYWEBCHANGE = &lt; list of users and groups &gt;
  * Set ALLOWWEBCHANGE = &lt; list of users and groups &gt;

The same rules apply as for restricting topics, with these additions:

* DENYTOPICCHANGE (in topic) overrides DENYWEBCHANGE (in %WEBPREFSTOPIC%)
* ALLOWTOPICCHANGE (in topic) overrides ALLOWWEBCHANGE (in %WEBPREFSTOPIC%)

## <a name="Restricting_Rename_Access"> Restricting Rename Access </a>

You can define who is allowed to rename, move or delete a topic, or rename a web.

### <a name="Deny_Renaming_by_Topic"> Deny Renaming by Topic </a>

To allow a user to rename, move or delete a topic, they also need write (editing) permission. They also need write access to change references in referring topics.

* Define one or both of these variables in a topic, preferably at the end of the topic:
  * Set DENYTOPICRENAME = &lt; list of users and groups &gt;
  * Set ALLOWTOPICRENAME = &lt; list of users and groups &gt;

* DENYTOPICCRENAME defines users or groups that **are not** allowed to rename the topic. It is a comma delimited list of users and groups. Example: <br /><code>    \* Set DENYTOPICRENAME = %MAINWEB%.SomeBadBoy, %MAINWEB%.SomeBadGirl, %MAINWEB%.SomeHackerGroup</code>

* ALLOWTOPICRENAME defines users or groups that **are** allowed to rename the topic. It is a comma delimited list of users and groups. Example: <br /><code>    \* Set ALLOWTOPICRENAME = %MAINWEB%.SomeGoodGuy, %MAINWEB%.SomeGoodGirl, %MAINWEB%.TWikiAdminGroup</code>

* DENYTOPICRENAME is evaluated before ALLOWTOPICRENAME. Access is denied if the authenticated person is in the DENYTOPICRENAME list, or not in the ALLOWTOPICRENAME list. Access is granted in case DENYTOPICRENAME and ALLOWTOPICRENAME is not defined.

### <a name="Deny_Renaming_by_Web"> Deny Renaming by Web </a>

You can define restrictions of who is allowed to rename a %WIKITOOLNAME% web.

* Define one or both of these variable in the %WEBPREFSTOPIC% topic:
  * Set DENYWEBRENAME = &lt; list of users and groups &gt;
  * Set ALLOWWEBRENAME = &lt; list of users and groups &gt;

The same rules apply as for topics, with these additions:

* DENYTOPICRENAME (in topic) overrides DENYWEBRENAME (in %WEBPREFSTOPIC%)
* ALLOWTOPICRENAME (in topic) overrides ALLOWWEBRENAME (in %WEBPREFSTOPIC%)

## <a name="Restricting_Read_Access"> Restricting Read Access </a>

You can define restrictions of who is allowed to view a %WIKITOOLNAME% web.

* Define one or both of these variable in the %WEBPREFSTOPIC% topic:
  * Set DENYWEBVIEW = &lt; list of users and groups &gt;
  * Set ALLOWWEBVIEW = &lt; list of users and groups &gt;

### <a name="Known_Issues"> Known Issues </a>

* The view restriction is not suitable for very sensitive content since there is a way to circumvent the read access restriction.
* Read access restriction only works if the view script is authenticated, that means that users need to log on also just to read topics. [[TWikiDocumentation]] has more on Basic Authentication based on the <code>**.htaccess**</code> file.

#### <a name="Selective_Unrestricted_Web_Acces"> Selective Unrestricted Web Access </a>

* There is a workaround if you prefer to have unrestricted access to view topics located in normal webs, and to authenticate users only for webs where view restriction is enabled:
  1. **Omit** the <code>**view**</code> script from the `.htaccess` file.
  2. **Enable** the <code>**$doRememberRemoteUser**</code> flag in <code>**lib/wikicfg.pm**</code> as described in [[TWikiDocumentation]]. %WIKITOOLNAME% will now remember the IP address of an authenticated user.
  3. **Copy** the <code>**view**</code> script to <code>**viewauth**</code> (or better, create a symbolic link)
  4. **Add** <code>**viewauth**</code> to the list of authenticated scripts in the .htaccess file.
    * When a user accesses a web where you enabled view restriction, %WIKITOOLNAME% will redirect from the `view` script to the `viewauth` script once (this happens only if the user has never edited a topic). Doing so will ask for authentication. The `viewauth` script shows the requested topic if the user could log on and if the user is authorized to see that web.
    * If you enable view restriction for a web, it is recommended to restrict search "all webs" from searching this web. Enable this restriction with the <code>**NOSEARCHALL**</code> variable in its [[WebPreferences]], like:
      * Set NOSEARCHALL = on
    * It is not recommended to restrict view access to individual topics since all content is searchable _within_ a web.

<a name="SuperAdminGroup"></a>

## <a name="The_SuperAdminGroup"> The SuperAdminGroup </a>

By mistyping a user or group name in the ALLOWTOPICCHANGE setting, it's possible to lock a topic so that it no-one can edit it from a browser. To avoid this:

* Set the `$superAdminGroup` variable in `lib/TWiki.cfg` to the name of a group of users that are always allowed to edit/view topics.

> $superAdminGroup = "TWikiAdminGroup";

* The default setting is not to have superusers.

-- [[PeterThoeny]] - 16 Mar 2001 <br /> -- [[AndreaSterbini]] - 11 Apr 2001 <br /> %STOPINCLUDE% **_Related topics:_** %WIKIPREFSTOPIC%, %WEBPREFSTOPIC% (in every web), %MAINWEB%.TWikiAdminGroup, %MAINWEB%.TWikiGroups
