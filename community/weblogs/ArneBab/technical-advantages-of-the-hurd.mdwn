*answer to http://blog.flameeyes.eu/2011/05/15/just-accept-it-truth-hurds .*

Thanks for explaining your reasons. As answer: 

Firstoff: FUSE is essentially an implementation of parts of the translators system (which is the main building block of the Hurd) to Linux and NetBSD recently got a port of the translators system¹. That’s the main contribution to other projects I see. 

¹: http://netbsd-soc.sourceforge.net/projects/hurdt/

On the bare technical side, the translator-based filesystem stands out: The filesystem allows for making arbitrary programs responsible for displaying a given node (which can also be a directory tree) and to start these programs on demand. To make them persistent over reboots, you only need to add them to the filesystem node (for which you need the right to change that node). Also you can start translators on any node without having to change the node itself, but then they are not persistent and only affect your view of the filesystem without affecting other users. These translators are called active, and you don’t need write permissions on a node to add them. 

The filesystem implements stuff like Gnome VFS and KDE network transparency on the filesystem level, so they are available for all programs. And you can add a new filesystem as simple user, just as if you’d just write into a file “instead of this node, show the filesystem you get by interpreting file X with filesystem Y” (this is what you actually do when setting a translator but not yet starting it (passive translator)).

One practical advantage of this is that the following works: 

    settrans -a ftp\: /hurd/hostmux /hurd/ftpfs /
    dpkg -i ftp://ftp.gnu.org/path/to/*.deb

The shell sees normal directories (beginning with the directory “ftp:”), so shell expressions just work.

You could even define a Gentoo mirror translator (`settrans mirror\: /hurd/gentoo-mirror`), so every program could just access mirror://gentoo/portage-2.2.0_alpha31.tar.bz2 and get the data from a mirror automatically: `wget mirror://gentoo/portage-2.2.0_alpha31.tar.bz2`

Or you could add a uniounmount translator to root which makes writes happen at another place. Every user is able to make a readonly system readwrite by just specifying where the writes should go. But the writes only affect his view of the filesystem.

Starting a network process is done by a translator, too: The first time something accesses the network card, the network translator starts up and actually provides the device. This replaces most initscripts in the Hurd: Just add a translator to a node, and the service will persist over restarts.

It’s a surprisingly simple concept, which reduces the complexity of many basic tasks needed for desktop systems.

And at its most basic level, Hurd is a set of protocols for messages which allow using the filesystem to coordinate and connect processes (along with helper libraries to make that easy). 

Also it adds POSIX compatibility to Mach (while still providing access to the capabilities-based access rights underneath, if you need them). You can give a process permissions at runtime and take them away at will. For example you can start all programs without permission to use the network (or write to any file) and add the permissions when you need them. 

And then there are subhurds (essentially lightweight virtualization which allows cutting off processes from other processes without the overhead of creating a virtual machine for each process). But that’s an entire post of its own… 

And the fact that a translator is just a simple standalone program means that these can be shared and tested much more easily, opening up completely new options for lowlevel hacking, because it massively lowers the barrier of entry.

And then there is the possibility of subdividing memory management and using different microkernels (by porting the Hurd layer, as partly done in the NetBSD port), but that is purely academic right now (search for Viengoos to see what its about).


So in short: The translator system in the Hurd is a simple concept which makes many tasks easy, which are complex with Linux (like init, network transparency, new filesystems, …). Additionally there are capabilities, subhurds and (academic) memory management.

Best wishes, 
Arne

PS: I decided to read your post as “please give me technical reasons to dispell my emotional impression”.


------

## Followup discussion in IRC 

IRC, freenode, #hurd, 2011-05-15

<dl>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: hi, I read the hurd rant by flameeyes and your response ... I'm following Hurd for some time and would like to ask some questions about it, would you mind? :)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> please ask :)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> I don’t mind (as long as I have the time - which I have right now)</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ok, so essentially I'm trying to figure out, as flameeyes probably is, whether reasons behind developing Hurd are more philosophical/value based or are there real-world technical advantages to it as well</dd>
<dt>&lt;ArneBab&gt;</dt><dd> antrik: I think his original remark was meant as part-jokingly remark to an aquaintance - which seems fitting, when you keep in mind that flameeyes works very hard and very much on Gentoo, hardly the most popular distro (but the one I like most).</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: the reasons for working on the Hurd are a little bit different for every contributor.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> (or rather: vastly different :) )</dd>
<dt>&lt;LibreMan&gt;</dt><dd> as I'm reading about it and your reposne as well, I'm not sure the techical advantages you list would have any real world effect on usability of the OS, do you think they would?</dd>
<dt>&lt;ArneBab&gt;</dt><dd> I think they would</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: yeah, sure ... my reasons for supporting Hurd are philosophical/value based ... I'll say that outright</dd>
<dt>&lt;ArneBab&gt;</dt><dd> for example you enter an FTP address in your filebrowser. No problem. Then you want to grep the file contents.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> you go into the shell and first need to get the files (completely inconvenient)</dd>
<dt>&lt;-- npnth (~npnth@pdpc/supporter/active/npnth) hat das Netzwerk verlassen (Disconnected by services)
<dt>&lt;ArneBab&gt;</dt><dd> or you use gnome and kde programs, and both access the same URL, but cache 2 times.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: isn't that solved by mounting it?</dd>
<dt>&lt;ArneBab&gt;</dt><dd> or you want to implement your own desktop and need to do that network transarency stuff yourself.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> You can’t really mount everything - especially not without root rights.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> and that’s just one aspect.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> But that’s only the technical side (he only wanted to hear that)</dd>
<dt>&lt;LibreMan&gt;</dt><dd> the thing is all these advantages seem too trivial to support a wholly new OS to be developed ... but maybe I'm mistaken, that's why I'm asking, I would love to be good techical reasons for Hurd ... but are not aware of any so far</dd>
<dt>&lt;ArneBab&gt;</dt><dd> What interests me the most as that I as user can change my environment without affecting others.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> s/as/is/</dd>
<dt>&lt;ArneBab&gt;</dt><dd> the main community part is (and I think I missed that), that any server is just a userspace program.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> it can be exchanged just like any other program</dd>
<dt>&lt;antrik&gt;</dt><dd> ArneBab: yeah, I found the original remark after following the other links... though it's rather painful to trace the conversations :-)</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: yeah, I understand that ... but what practical advantage would that give me I do not see ... as a server administrator for example</dd>
<dt>&lt;ArneBab&gt;</dt><dd> I can write an improved filesystem and pass it to you for testing, and you test it only for a backup snapshot of your disk without rebooting.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> As server admin, you don’t need to install all drivers users could need.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> the users can just install what they need themselves.</dd>
<dt>&lt;antrik&gt;</dt><dd> it certainly didn't sound half-joking though... and if it was meant privately, identi.ca is clearly NOT the right place</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: You simply provide a base which reduces the number of things people need to install.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: but do not I have to give them access to raw HW too then?</dd>
<dt>&lt;ArneBab&gt;</dt><dd> antrik: I prefer to always assume good faith :)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> brb</dd>
<dt>&lt;ArneBab&gt;</dt><dd> child</dd>
<dt>&lt;ArneBab&gt;</dt><dd> re</dd>
<dt>&lt;LibreMan&gt;</dt><dd> well, I do not see that people not able to install their own drivers on a server would be any problem currently</dd>
<dt>&lt;LibreMan&gt;</dt><dd> that's my point ... is seems to solve "problems" that are not really actual real world problems ...</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: no, you just give them a safe device, where a server makes sure they don’t do illegal things.</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: most of the advantages are not directly visible, unless you do very specific things, where traditional systems impose limits</dd>
<dt>&lt;ArneBab&gt;</dt><dd> For me network transparency is a realworld problem</dd>
<dt>&lt;ArneBab&gt;</dt><dd> as is that I can’t give a program network access later</dd>
<dt>&lt;antrik&gt;</dt><dd> but it makes many things easier, which in the end will translate into advantages for everyone I believe</dd>
<dt>&lt;ArneBab&gt;</dt><dd> “log out and in again to play games”</dd>
<dt>&lt;ArneBab&gt;</dt><dd> (after adding yourself to the games group)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> or better still: Always start with minimal rights and only add what is really needed.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> There’s no reason why a program should have access to my audio hardware without me granting it.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> That way I could even run malicious software without having to fear compromising my system.</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: I could come up with situations where it could help you as an administrator; but this is not really helpful. you won't really understand the advantages until you get into a specific situation that is hard to do on Linux for example, and much easier on the Hurd</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: well, then it becomes a tradeoff between security and user friendliness ... I do not think that problem is unsolvable currently, I think it is a design decision not to "solve it" as wast majority of users do not actually need or want it</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: Time and again I find myself sitting in front of my linux box and thinking “damn, this woul be so easy in the Hurd”</dd>
<dt>&lt;ArneBab&gt;</dt><dd> (I do most of my work on a Linux box)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Gentoo GNU/Linux with KDE and Emacs</dd>
<dt>&lt;LibreMan&gt;</dt><dd> antrik: yeah, could you give me an example of something that is hard on linux but easy under hurd? with real world implications for real use cases :)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: Get a hg/git log of a repo on an ftp server</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: no, it's *not* a tradeoff. the whole point is that the Hurd architecture allows users to customize their environment *without* compromising the security of the system</dd>
<dt>&lt;ArneBab&gt;</dt><dd> antrik LibreMan: I think there we have one point: When you use Linux you are used to thinking of the Linux limits as the absolute limits.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> antrik: the point is, wast majority of users do not need that ... AFAIK</dd>
<dt>-*- youpi is fed up with using sudo just to mount an iso image
<youpi&gt;</dt><dd> really</dd>
<dt>&lt;Tekk_&gt;</dt><dd> youpi: dbus</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: just wait for the first strong linux worm which spreads in a game and requires sudo for install… </dd>
<dt>&lt;youpi&gt;</dt><dd> (and it's just one of the strongest examples)</dd>
<dt>&lt;youpi&gt;</dt><dd> Tekk_: ??</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: ArneBab already gave you various exmples. including at least one that works out of the box</dd>
<dt>&lt;Tekk_&gt;</dt><dd> youpi: with dbus you don't need root permissions</dd>
<dt>&lt;youpi&gt;</dt><dd> Tekk_: and you can mount any iso?</dd>
<dt>&lt;antrik&gt;</dt><dd> (others would require some additional coding)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Tekk_: but something needs them.</dd>
<dt>&lt;Tekk_&gt;</dt><dd> youpi: oh, iso...</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: why would a game need sudo to install? :)</dd>
<dt>&lt;youpi&gt;</dt><dd> Tekk_: yes, iso</dd>
<dt>&lt;youpi&gt;</dt><dd> or $WHATEVER_FS</dd>
<dt>&lt;Tekk_&gt;</dt><dd> youpi: sec</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: yes, I would ask that, too. But the general Ubuntu user?</dd>
<dt>&lt;youpi&gt;</dt><dd> or sshfs, or ftpfs, etc.</dd>
<dt>-*- ArneBab had hoped you’d catch that :)
<LibreMan&gt;</dt><dd> the area where I can imagine hurd being better is virtualization</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: again, the "general Ubuntu user" won't directly see the benefits. but he will see them when developers use them to implement nice features that would be much harder to implement elsewhere</dd>
<dt>&lt;LibreMan&gt;</dt><dd> making everything cloudy is a big trend nowadays and hurd could provide additional flexibility there ... or no? I'm really just guessing based on what I read</dd>
<dt>&lt;antrik&gt;</dt><dd> it's a bad trend</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: it could give me more options when I have to work on another ones computer. After all it was conceived in the time of dumb terminals - which now comes back.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: oh well, if we are talking about user stupidity then no OS is going to help ;)</dd>
<dt>&lt;antrik&gt;</dt><dd> I'm not sure whether the Hurd help with "making things cloudy", but it's not something I'd consider an advantage anyways :-)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: The OS can reduce the impact of user stupidity (called DAU in german: „Dümmster anzunehmender User“ → “dumbest conceivable user”)</dd>
<dt>&lt;antrik&gt;</dt><dd> as for virtualization, indeed there is a *very* close relation between that and microkernel systems, which most people fail to see...</dd>
<dt>&lt;LibreMan&gt;</dt><dd> antrik: the "cloud" is coming if we like it or not ... it better run on FOSS if it comes ;)</dd>
<dt>&lt;Tekk_&gt;</dt><dd> you know, you gues have a huge advantage</dd>
<dt>&lt;Tekk_&gt;</dt><dd> guys*</dd>
<dt>&lt;Tekk_&gt;</dt><dd> people have waited forever and written you off</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: just think about the difference between a GNU/Linux distro and Windows XP where you were admin at all times.</dd>
<dt>&lt;Tekk_&gt;</dt><dd> and as duke nukem forever shows, that's a good thing ;P</dd>
<dt>&lt;antrik&gt;</dt><dd> in fact, the only fundamental difference is that a VM makes the subenvironment look more or less like a real machine, while in traditional microkernel systems different interfaces are used</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: A Hurd system would go one step further.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> You’d even need a password more seldomly, reducing the incentive to just work as admin.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Reason: There are less things which can really badly impact the system.</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: when talking about "the cloud", people usually mean things that are fundamentally incompatible with the idea of free software</dd>
<dt>&lt;antrik&gt;</dt><dd> (you don't have control over the software running web services)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> antrik: but the cloud just means “I’m on a different computer”. AGPLv3 is cool there :)</dd>
<dt>&lt;LibreMan&gt;</dt><dd> antrik: yeah, that's the common bussines practice but it doesn't have to be ... AGPL ;)</dd>
<dt>&lt;antrik&gt;</dt><dd> ArneBab: well, actually "the cloud" means something different to everyone ;-)</dd>
<dt>&lt;LibreMan&gt;</dt><dd> I do not have any problem with a cloud running AGPL software</dd>
<dt>&lt;ArneBab&gt;</dt><dd> antrik: well, yes :)</dd>
<dt>&lt;antrik&gt;</dt><dd> ArneBab: but generally it relies on using programs on foreign machines, controlled by someone else. AGPL doesn't change that</dd>
<dt>&lt;LibreMan&gt;</dt><dd> freedombox is going to be a "cloud" too</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: that's not what most people mean by "cloud"</dd>
<dt>&lt;LibreMan&gt;</dt><dd> at least I hope so</dd>
<dt>&lt;ArneBab&gt;</dt><dd> I don’t have control over my webserver. I can’t run a real Python there. Hurd could change that (though that will take a lot of coding: the conceptual options are there)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: what could interest you: http://www.gnu.org/software/hurd/community/weblogs/ArneBab/niches_for_the_hurd.html</dd>
<dt>&lt;ArneBab&gt;</dt><dd> “Niches of the Hurd”</dd>
<dt>&lt;LibreMan&gt;</dt><dd> what I mean by "the cloud" is what Eben Moglen explaied it as ... the technology which make it possible to forget about the "iron" and move servers around seamlessly</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: thank.. going to look at it</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: that's actually more or less what used to be called "grid computing" before the cloud hype</dd>
<dt>&lt;LibreMan&gt;</dt><dd> antrik: well ... yes, essentially</dd>
<dt>&lt;antrik&gt;</dt><dd> LibreMan: but most people mean many other things too when talking about "clouds"</dd>
<dt>&lt;antrik&gt;</dt><dd> and anyways, you can't really forget about the iron. there is a middle layer which you don't have control of</dd>
<dt>&lt;LibreMan&gt;</dt><dd> antrik: sure, I would say that most people do not know what they mean :)</dd>
<dt>&lt;Tekk_&gt;</dt><dd> hmm</dd>
<dt>&lt;Tekk_&gt;</dt><dd> ArneBab: I can see a big place for virtualization in browsers</dd>
<dt>&lt;Tekk_&gt;</dt><dd> I mean, with everyone so worried about the code getting executed there, we just have GNUBrowse run in it's own little environment all closed off</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Tekk_: me too: safe subenvironments.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> the reason I follow Hurd is because i would LOVE to have viable GPLv3 OS as opposed to GPLv2 Linux</dd>
<dt>&lt;antrik&gt;</dt><dd> that's not a good reason</dd>
<dt>&lt;LibreMan&gt;</dt><dd> there are people hard at work subverting Linux</dd>
<dt>&lt;antrik&gt;</dt><dd> first of all, we'd have to get rid of all Linux code</dd>
<dt>&lt;LibreMan&gt;</dt><dd> locking it down ... and Linus doesn't seem to care</dd>
<dt>&lt;antrik&gt;</dt><dd> also, if that's all you care about, it would be less work to implement a simple monolithic kernel from scratch</dd>
<dt>&lt;LibreMan&gt;</dt><dd> antrik: so why is hurd a good idea if it's so much harder to develop?</dd>
<dt>&lt;-- azeem (~mbanck@p5DF41DDE.dip0.t-ipconnect.de) hat das Netzwerk verlassen (Ping timeout: 240 seconds)
<LibreMan&gt;</dt><dd> antrik: I thought that was the reason all along ... to develop GNU mopatible kernel</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: what do you mean GNU compatible?</dd>
<dt>&lt;LibreMan&gt;</dt><dd> Tekk_: the philosophy of GNU</dd>
<dt>&lt;Tekk_&gt;</dt><dd> ah, yes they've always needed a gnu kernel</dd>
<dt>&lt;LibreMan&gt;</dt><dd> the reason why it was created in a first place</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: I just added a missing part in the article: </dd>
<dt>&lt;ArneBab&gt;</dt><dd> “And the fact that a translator is just a simple standalone program means that these can be shared and tested much more easily, opening up completely new options for lowlevel hacking, because it massively lowers the barrier of entry.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> ”</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ok, next question :) why is it so hard to make Hurd work?</dd>
<dt>&lt;ArneBab&gt;</dt><dd> because we are so few people… </dd>
<dt>&lt;LibreMan&gt;</dt><dd> I mean, it's in developement for 20 years or so, no?</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: it's never been done before too</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: well, one person developed Linux</dd>
<dt>&lt;ArneBab&gt;</dt><dd> One person make Linux basically work</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: there has *never* been a full microkernel outside of research, which is what hurd plans to be</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: yeah, one person made linux kinda work in a year, then basically handed it off to everyone to help</dd>
<dt>&lt;LibreMan&gt;</dt><dd> but if it's so much complicated to develop, is it worth it?</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: and that was with a well trodden path that everyone knwos</dd>
<dt>&lt;ArneBab&gt;</dt><dd> But for the Hurd to basically work means it already provides far more options than waat Linux did.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> That’s why the foundation is harder: It makes everything else easier.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> But at the moment it works.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> And I think I’ll just repeat that: The Hurd works. It is not feature complete, but all the really hard parts work.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Missing are many of the hard (but not really hard) parts, like adding drivers.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> (and then there are ultra hard features which are possible but currently layed off, but now I get into beat-em-up speech :) )</dd>
<dt>&lt;LibreMan&gt;</dt><dd> I would define "works" as I can install it right now and run stable system ... I do not think it worls in those terms</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: that I’d define as production system</dd>
<dt>&lt;youpi&gt;</dt><dd> LibreMan: define "stable"</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: I'm pretty sure linux didn't "work" by your definition when linus passed it off</dd>
<dt>&lt;ArneBab&gt;</dt><dd> But I can start a Hurd right now and code in it.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: yeah, that's waht "works" means for me :)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> I can start emacs</dd>
<dt>&lt;youpi&gt;</dt><dd> LibreMan: I wouldn't even call my linux "stable"</dd>
<dt>&lt;youpi&gt;</dt><dd> as I just need to unplug my external USB hdd to make it crash...</dd>
<dt>&lt;youpi&gt;</dt><dd> while in a hurd system, it'd just crash the corresponding ext2fs daemon only</dd>
<dt>&lt;LibreMan&gt;</dt><dd> youpi: well yes :) but you can function on it pretty successfully ...</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: Frankly all I’m missing for a production environment are USB support and Audio.</dd>
<dt>&lt;youpi&gt;</dt><dd> you can on a hurd system too</dd>
<dt>&lt;ArneBab&gt;</dt><dd> (and it should work on an OLPC)</dd>
<dt>&lt;LibreMan&gt;</dt><dd> youpi: without USB and sound? :P</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Both are driver issues. No problem in the kernel.</dd>
<dt>&lt;youpi&gt;</dt><dd> I seldomly use USB and sound actually</dd>
<dt>&lt;youpi&gt;</dt><dd> and never for my actual work</dd>
<dt>&lt;-- Tekk_ (~user@2002:474d:d1e9:0:21d:72ff:fe24:4c37) hat das Netzwerk verlassen (Remote host closed the connection)
--&gt;</dt><dd> Tekk_ (~user@2002:474d:d1e9:0:21f:3aff:fe54:7cc3) hat #hurd betreten</dd>
<dt>&lt;LibreMan&gt;</dt><dd> youpi: yeah, but how many users can ay that?</dd>
<dt>&lt;youpi&gt;</dt><dd> so what?</dd>
<dt>&lt;youpi&gt;</dt><dd> how many users can install linux?</dd>
<dt>&lt;youpi&gt;</dt><dd> does that make it unsuccessful?</dd>
<dt>&lt;LibreMan&gt;</dt><dd> many people actually</dd>
<dt>&lt;youpi&gt;</dt><dd> well, many people don't care about USB and sound either</dd>
<dt>&lt;youpi&gt;</dt><dd> depends what you mean by "many"</dd>
<dt>&lt;LibreMan&gt;</dt><dd> compared to how many do not mind having USB and sound ...</dd>
<dt>&lt;youpi&gt;</dt><dd> just like depends what you mean by "stable"</dd>
<dt>&lt;youpi&gt;</dt><dd> so _basically_ it works</dd>
<dt>&lt;youpi&gt;</dt><dd> not for all users on earth of course</dd>
<dt>&lt;youpi&gt;</dt><dd> not for all linux users of course</dd>
<dt>&lt;youpi&gt;</dt><dd> but for a lot of them already</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: USB and Sound are just driver issues.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> They are not part of the core functionality.</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: usb keyboards and mice work though</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: sure, but that doesn't matter ... user doen't care about the technicalities ...</dd>
<dt>&lt;Tekk_&gt;</dt><dd> I think</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: But for the Hurd it means that it’s no general unsolved problem, but just an issue of too little coders to do the work.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> if it's driver, kernel, microkernel whatever ... does it work or not, that's what it comes down to</dd>
<dt>&lt;ArneBab&gt;</dt><dd> s/too little/too few/</dd>
<dt>&lt;LibreMan&gt;</dt><dd> so it's a matter of attracting more people to work on it</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: yes</dd>
<dt>&lt;ArneBab&gt;</dt><dd> The Arch people helped a lot with that, because 2 distributions is not just 2× one distribution (in it’s outside effect)</dd>
<dt>&lt;ArneBab&gt;</dt><dd> But we need more people who do the easy work.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> relatively easy… </dd>
<dt>&lt;ArneBab&gt;</dt><dd> porting the 10-15% packages which just have PATH_MAX issues.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> so there would need to be sufficient motivations for them to join developement ... so far I do not see any different than Free Software ideals</dd>
<dt>&lt;ArneBab&gt;</dt><dd> for example</dd>
<dt>&lt;ArneBab&gt;</dt><dd> jupp</dd>
<dt>&lt;ArneBab&gt;</dt><dd> plus some cool options.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> and experimenting in low-level</dd>
<dt>&lt;ArneBab&gt;</dt><dd> “ever wanted to write your own filesystem from scratch - and test it without wrecking your box?”</dd>
<dt>&lt;LibreMan&gt;</dt><dd> I do not understand why FSF does not do something similar to GSoC</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: I assume “too little money”…</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: hurd is in the gsoc</dd>
<dt>&lt;LibreMan&gt;</dt><dd> yeah, that would be the obvious answer :) and the right onw I guess</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Besides: antrik, do you know how jkkenig fares?</dd>
<dt>&lt;Tekk_&gt;</dt><dd> LibreMan: gsoc is a per project thing, and most of them don't need the help</dd>
<dt>&lt;ArneBab&gt;</dt><dd> jkoenig</dd>
<dt>&lt;LibreMan&gt;</dt><dd> Tekk_: I know ... I just do not like that a company like Google needs to sponsor it and "we" are not selfsufficient</dd>
<dt>&lt;ArneBab&gt;</dt><dd> LibreMan: well, too few people are used to pay for what they like instead of for what requires payment.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> But that is changing.</dd>
<dt>&lt;LibreMan&gt;</dt><dd> ArneBab: exactly ...</dd>
<dt>&lt;LibreMan&gt;</dt><dd> things like Flattr are trying to change that mentalty</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Besides (stable): Hurd runs the Hurd wiki.</dd>
<dt>&lt;ArneBab&gt;</dt><dd> http://www.bddebian.com/~hurd-web/</dd>
<dt>&lt;LibreMan&gt;</dt><dd> I'm quite surprised I did not know about this http://www.fossfactory.org</dd>
<dt>&lt;LibreMan&gt;</dt><dd> I was planning to make such a website myself ...</dd>
<dt>&lt;LibreMan&gt;</dt><dd> I do not understand why it doesn't get more publicity ... the way Kickstarted does</dd>
<dt>-*- ArneBab goes lurker, sons here
<jkoenig&gt;</dt><dd> ArneBab, I have exams till friday, I should be more present after that</dd>
<dt>&lt;Tekk_&gt;</dt><dd> what does the hello world translator do? XD</dd>
<dt>&lt;ArneBab&gt;</dt><dd> Tekk_: content = hello</dd>
<dt>&lt;antrik&gt;</dt><dd> ArneBab: I have no idea about the status of GSoC</dd>
<dt>&lt;antrik&gt;</dt><dd> I haven't even read my mails for a couple of weeks; so you probably know more than me</dd>
<dt>&lt;antrik&gt;</dt><dd> Tekk_: provide a pseudo-file with "hello world" as contents</dd>
<dt>&lt;Tekk_&gt;</dt><dd> ah</dd>
<dt>&lt;antrik&gt;</dt><dd> BTW, gvfs is actually my favourite example of why the Hurd architecture makes sense</dd>
<dt>&lt;antrik&gt;</dt><dd> they implemented an extra GNOME-specific VFS layer, that is mostly redundant with the kernel one, adding complexity, overhead, and not integrated with the rest of the system -- and the only reason they need it is because the kernel VFS of traditional systems is too limited</dd>
<dt>&lt;antrik&gt;</dt><dd> with the Hurd's decentralized VFS, they could have implemented everything they need trivially right in the system VFS layer</dd>
<dt>&lt;antrik&gt;</dt><dd> the question is not really what features are possible with the Hurd architecture: given enough effort, any feature can be implemented with any architecture. it's the amount of effort that differs, making some things *feasible* that are not on other systems</dd>
<dt>&lt;Tekk_&gt;</dt><dd> see: windows ME</dd>
<dt>&lt;antrik&gt;</dt><dd> there is no reason for example why things like isolated subenvironments couldn't be implemented on Linux. (and it fact it's clearly moving in that direction, with the virtualisation hype) -- but it requires a shitload of kernel changes. while on Hurd all it needs is a little userspace programming</dd>
<dt>&lt;antrik&gt;</dt><dd> and every new feature added to Linux container solutions require further kernel hacking</dd>
<dt>&lt;antrik&gt;</dt><dd> or every new feature added to FUSE</dd>
<dt>&lt;antrik&gt;</dt><dd> and so on</dd>
</dl>
