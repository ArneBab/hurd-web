# <a name="Building_the_Hurd_from_Source"> Building the Hurd from Source </a>

If you want to build the Hurd libraries and servers (translators) yourself instead of just using pre-built binaries, follow these instructions.

One note before we begin: the likelihood that the compiled result will actually do what you expect it to do is the highest if you try building from the Debian source packages. This is especially true if you want to use your compilation within a Debian system.

## <a name="Getting_the_Source_Code"> Getting the Source Code </a>

You can chose between getting the [sources from the developers's RCS](http://www.gnu.org/software/hurd/download.html#cvs):

    $ cvs -z3 -d:pserver:anonymous@cvs.savannah.gnu.org:/sources/hurd co hurd

... or (if you are working on a Debian system) the ones that are used for the [current Debian hurd package](http://packages.debian.net/source/unstable/hurd):

    $ apt-get source hurd

Please see [[Distrib/DebianFAQ]] before using _apt-get source_.

The unpacked source tree is around 20 MiB, and the build tree (configured with _--disable-profile_) is around 100 MiB.

## <a name="Preparing_for_the_Build"> Preparing for the Build </a>

### <a name="_on_Debian_systems"> ... on Debian systems </a>

Building the Hurd requires the _build-essential_ and _fakeroot_ packages, their dependencies and additional packages that are specified by the source hurd package:

    # apt-get install build-essential fakeroot
    # apt-get build-dep hurd

### <a name="_on_non_Debian_systems"> ... on non-Debian systems </a>

[TODO]

## <a name="Building"> Building </a>

### <a name="Debian_deb_Files"> Debian _.deb_ Files </a>

Change into the directory with the downloaded / unpacked Hurd sources, e.g.

    $ cd hurd-[TODO]

If you want to work on the sources before building them, it's advisable to first apply the patches the Debian hurd package additionally contains:

    $ debian/rules apply-patches

Then edit and change whatever files you want and finally start the build process with

    $ dpkg-buildpackage -us -uc -nc -b -rfakeroot

The _.deb_ packages will then drop out at the _../_ directory.

### <a name="Building_but_not_the_Debian_Way"> Building, but not the Debian Way </a>

The Hurd has to be built in a separate directory:

    $ mkdir hurd-build
    $ cd hurd-build

    $ [...]/hurd-[TODO]/configure --disable-profile
    $ make
    $ make install

Notice that _make install_ will install the Hurd in _/_, not in _/usr/local/_ or _/local/_, so your current Hurd servers will be replaced. [TODO: how to install somewhere else.]

By default profiling versions of all the libraries and code are generated but this is useless in most of the cases, so we disable them by specifying _--disable-profile_ on \_configure\_'s command line.

If you just want to build a specific server or library, you can pass its name to _make_:

    $ make ext2fs
    $ make libtrivfs

This will automatically build all libraries that are required to build the requested server or library.

### <a name="Cross_Compiling"> Cross Compiling </a>

See <http://nic-nac-project.de/~schwinge/tmp/cross-gnu-env> and <http://nic-nac-project.de/~schwinge/tmp/cross-gnu> for now.

## <a name="RPC_Ids"> </a> RPC Ids

[TODO: update / integrate somewhere.]

If you want to trace the RPC calls made by some process by using `rpctrace` command, you will also want some more human-readable output of this command. This is achieved by generating `hurd.msgids` file that includes the mapping between the number of the RPC call and its name:

    $ cd build/hurd
    $ make hurd.msgids
    $ cp hurd.msgids ~

Now you can use this file in the following way:

    $ rpctrace -i ~/hurd.msgids ls

-- [[Main/OgnyanKulev]] - 08 Apr 2003
