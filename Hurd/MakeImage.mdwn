## <a name="Make_a_disk_image"> Make a disk image </a>

This is just a reminder to myself currently.

    dd if=/dev/zero of=gnu.img count=224000
    parted -s gnu.img mklabel msdos
    parted -s gnu.img mkpartfs p ext2 0.0 109.375
    parted -s gnu.img set 1 boot on
    losetup -o 32256 /dev/loop0 gnu.img
    mke2fs -o hurd -L GNU -b 4096 /dev/loop0

## <a name="Install_GNU_Hurd"> </a> Install GNU/Hurd

    mkdir image
    mount /dev/loop0 image
    cd image/
    /usr/share/crosshurd/makehurddir.sh `pwd` i386 gnu
    cd ..
    umount image
    losetup -d /dev/loop0

## <a name="Make_Boot_ISO"> </a> Make Boot ISO

I use this for testing OSKit...

    mkdir -p iso/boot/grub
    cp /lib/grub/i386-pc/stage2_eltorito iso/boot/grub/
    cp oskit-mach.gz iso/boot/
    cat >iso/boot/grub/menu.lst << EOF
    title GNUmach 2.0 (OSKit-Mach)
    root (cd)
    kernel /boot/oskit-mach.gz root=device:hd0s1 --
    root (hd0,0)
    module /hurd/ext2fs.static --multiboot-command-line=${kernel-command-line} --host-priv-port=${host-port} --device-master-port=${device-port} --exec-server-task=${exec-task} -T typed ${root} $(task-create) $(task-resume)
    module /lib/ld-2.3.2.so /hurd/exec $(exec-task=task-create)

    title GNU/Hurd (GNUmach 1.3)
    root (hd0,0)
    kernel /boot/gnumach.gz root=device:hd0s1
    module /hurd/ext2fs.static --multiboot-command-line=${kernel-command-line} --host-priv-port=${host-port} --device-master-port=${device-port} --exec-server-task=${exec-task} -T typed ${root} $(task-create) $(task-resume)
    module /lib/ld.so.1 /hurd/exec $(exec-task=task-create)

    EOF
    mkisofs -R -b boot/grub/stage2_eltorito -no-emul-boot -boot-load-size 4 -boot-info-table -o grub.iso iso

## <a name="Booting_Qemu"> Booting Qemu </a>

    qemu -user-net -isa -boot d -cdrom grub.iso -hda gnu.img

The switch `-isa` is for current gnumach.gz on hda.

-- [[Main/JoachimNilsson]] - 11 Apr 2005
