Test Run By thomas on Tue Jan  7 10:39:01 2014
Native configuration is i686-pc-linux-gnu

		=== gdb tests ===

Schedule of variations:
    unix

Running target unix
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/abstract-origin.exp ...
PASS: gdb.cp/abstract-origin.exp: continue to breakpoint: break-here
PASS: gdb.cp/abstract-origin.exp: p problem
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/ambiguous.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/annota2.exp ...
PASS: gdb.cp/annota2.exp: set height 0
PASS: gdb.cp/annota2.exp: breakpoint main
PASS: gdb.cp/annota2.exp: annotation set at level 2
PASS: gdb.cp/annota2.exp: run until main breakpoint
PASS: gdb.cp/annota2.exp: print class
PASS: gdb.cp/annota2.exp: continue until exit
PASS: gdb.cp/annota2.exp: delete bps
PASS: gdb.cp/annota2.exp: breakpoint at main
PASS: gdb.cp/annota2.exp: run until main breakpoint
PASS: gdb.cp/annota2.exp: set watch on a.x
KFAIL: gdb.cp/annota2.exp: watch triggered on a.x (PRMS: gdb/38)
PASS: gdb.cp/annota2.exp: annotate-quit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/annota3.exp ...
PASS: gdb.cp/annota3.exp: set height 0
PASS: gdb.cp/annota3.exp: breakpoint main
PASS: gdb.cp/annota3.exp: annotation set at level 3
PASS: gdb.cp/annota3.exp: first run until main breakpoint
PASS: gdb.cp/annota3.exp: print class
PASS: gdb.cp/annota3.exp: continue to exit
PASS: gdb.cp/annota3.exp: delete bps
PASS: gdb.cp/annota3.exp: break at main
PASS: gdb.cp/annota3.exp: second run until main breakpoint
PASS: gdb.cp/annota3.exp: set watch on a.x
KFAIL: gdb.cp/annota3.exp: watch triggered on a.x (PRMS: gdb/38)
PASS: gdb.cp/annota3.exp: annotate-quit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/anon-ns.exp ...
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::doit1(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::doit1(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::doit1(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::doit1(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::one::one(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::one::one(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::one::one(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::one::one(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::doit2(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::doit2(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::doit2(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::doit2(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::two::two(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::two::two(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::two::two(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::two::two(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::doit1(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::doit1(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::doit1(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::doit1(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::one::one(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::one::one(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::one::one(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::one::one(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::doit2(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::doit2(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::doit2(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::doit2(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::two::two(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::two::two(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::two::two(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::two::two(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::doit1(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::doit1(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::doit1(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::doit1(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::one::one(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::one::one(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::one::one(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::one::one(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::doit2(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::doit2(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::doit2(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::doit2(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::two::two(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::two::two(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::two::two(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::two::two(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::one::doit(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::one::doit(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::one::doit(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::one::doit(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::two::doit(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::two::doit(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::two::doit(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::two::doit(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::doit(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::doit(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::doit(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::doit(void)'
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/anon-struct.exp ...
PASS: gdb.cp/anon-struct.exp: print type of t::t
PASS: gdb.cp/anon-struct.exp: print type of X::t2
PASS: gdb.cp/anon-struct.exp: print type of X::t2::t2
PASS: gdb.cp/anon-struct.exp: print type of t3::~t3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/anon-union.exp ...
PASS: gdb.cp/anon-union.exp: set width 0
PASS: gdb.cp/anon-union.exp: next 1
PASS: gdb.cp/anon-union.exp: print foo 1
PASS: gdb.cp/anon-union.exp: next 2
PASS: gdb.cp/anon-union.exp: print foo 2
PASS: gdb.cp/anon-union.exp: set var foo.cloth
PASS: gdb.cp/anon-union.exp: print foo 3
PASS: gdb.cp/anon-union.exp: next 3
PASS: gdb.cp/anon-union.exp: print foo 4
PASS: gdb.cp/anon-union.exp: set var foo.pebble
PASS: gdb.cp/anon-union.exp: print foo 5
PASS: gdb.cp/anon-union.exp: set var foo.qux
PASS: gdb.cp/anon-union.exp: print foo 6
PASS: gdb.cp/anon-union.exp: set var foo.mux
PASS: gdb.cp/anon-union.exp: print foo 7
PASS: gdb.cp/anon-union.exp: set var foo.x.rock
PASS: gdb.cp/anon-union.exp: print foo 8
PASS: gdb.cp/anon-union.exp: set var foo.x.rock2
PASS: gdb.cp/anon-union.exp: print foo 9
PASS: gdb.cp/anon-union.exp: next 4
PASS: gdb.cp/anon-union.exp: print w 1
PASS: gdb.cp/anon-union.exp: print z 1
PASS: gdb.cp/anon-union.exp: next 5
PASS: gdb.cp/anon-union.exp: print w 2
PASS: gdb.cp/anon-union.exp: print z 2
PASS: gdb.cp/anon-union.exp: set var z
PASS: gdb.cp/anon-union.exp: print w 3
PASS: gdb.cp/anon-union.exp: print z 3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/arg-reference.exp ...
PASS: gdb.cp/arg-reference.exp: No false reference
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/baseenum.exp ...
PASS: gdb.cp/baseenum.exp: continue to breakpoint: breakpoint 1
PASS: gdb.cp/baseenum.exp: Print enum constant X of class A
PASS: gdb.cp/baseenum.exp: continue to breakpoint: breakpoint 2
PASS: gdb.cp/baseenum.exp: Print enum constant X of class A in namespace N
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/bool.exp ...
PASS: gdb.cp/bool.exp: print return_true()
PASS: gdb.cp/bool.exp: print return_false()
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/breakpoint.exp ...
PASS: gdb.cp/breakpoint.exp: continue to C1::Nested::foo
PASS: gdb.cp/breakpoint.exp: conditional breakpoint in method
PASS: gdb.cp/breakpoint.exp: conditional breakpoint in method 2
PASS: gdb.cp/breakpoint.exp: continue to breakpoint
PASS: gdb.cp/breakpoint.exp: check the member variable
PASS: gdb.cp/breakpoint.exp: continue to breakpoint
PASS: gdb.cp/breakpoint.exp: check the member variable
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/bs15503.exp ...
PASS: gdb.cp/bs15503.exp: break StringTest<wchar_t>::testFunction
PASS: gdb.cp/bs15503.exp: continue to StringTest<wchar_t>
PASS: gdb.cp/bs15503.exp: continue to breakpoint: find position where blank needs to be inserted
PASS: gdb.cp/bs15503.exp: print s.length()
PASS: gdb.cp/bs15503.exp: print s[0]
PASS: gdb.cp/bs15503.exp: print s[s.length()-1]
PASS: gdb.cp/bs15503.exp: print (const char *) s
PASS: gdb.cp/bs15503.exp: print (const char *) s.substr(0,4)
PASS: gdb.cp/bs15503.exp: print (const char *) (s=s.substr(0,4))
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/call-c.exp ...
PASS: gdb.cp/call-c.exp: b 42
PASS: gdb.cp/call-c.exp: print foo(1)
PASS: gdb.cp/call-c.exp: continue to bp
PASS: gdb.cp/call-c.exp: print rf->func()
PASS: gdb.cp/call-c.exp: print handle->func()
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/casts.exp ...
PASS: gdb.cp/casts.exp: cast base class pointer to derived class pointer
PASS: gdb.cp/casts.exp: let compiler cast base class pointer to derived class pointer
PASS: gdb.cp/casts.exp: cast derived class pointer to base class pointer
PASS: gdb.cp/casts.exp: cast derived class reference to base class reference
PASS: gdb.cp/casts.exp: cast base class reference to derived class reference
PASS: gdb.cp/casts.exp: let compiler cast base class reference to derived class reference
PASS: gdb.cp/casts.exp: basic test of const_cast
PASS: gdb.cp/casts.exp: const_cast of 0
PASS: gdb.cp/casts.exp: basic test of static_cast
PASS: gdb.cp/casts.exp: static_cast to reference type
PASS: gdb.cp/casts.exp: basic test of reinterpret_cast
PASS: gdb.cp/casts.exp: test invalid reinterpret_cast
PASS: gdb.cp/casts.exp: reinterpret_cast to reference type
PASS: gdb.cp/casts.exp: whatis decltype(5)
PASS: gdb.cp/casts.exp: old-style cast using __typeof__
PASS: gdb.cp/casts.exp: static_cast using __typeof__
PASS: gdb.cp/casts.exp: reinterpret_cast using __typeof__
PASS: gdb.cp/casts.exp: old-style cast using __typeof
PASS: gdb.cp/casts.exp: static_cast using __typeof
PASS: gdb.cp/casts.exp: reinterpret_cast using __typeof
PASS: gdb.cp/casts.exp: old-style cast using __decltype
PASS: gdb.cp/casts.exp: static_cast using __decltype
PASS: gdb.cp/casts.exp: reinterpret_cast using __decltype
PASS: gdb.cp/casts.exp: whatis __decltype(*a)
PASS: gdb.cp/casts.exp: invalid dynamic_cast
PASS: gdb.cp/casts.exp: dynamic_cast of 0 to void*
PASS: gdb.cp/casts.exp: dynamic_cast simple upcast
PASS: gdb.cp/casts.exp: dynamic_cast upcast to unique base
PASS: gdb.cp/casts.exp: dynamic_cast simple upcast to reference
PASS: gdb.cp/casts.exp: dynamic_cast simple downcast
PASS: gdb.cp/casts.exp: dynamic_cast simple downcast to intermediate class
PASS: gdb.cp/casts.exp: dynamic_cast to non-existing base
PASS: gdb.cp/casts.exp: dynamic_cast to reference to non-existing base
PASS: gdb.cp/casts.exp: dynamic_cast unique downcast
PASS: gdb.cp/casts.exp: dynamic_cast to sibling
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/class2.exp ...
PASS: gdb.cp/class2.exp: set print object off
PASS: gdb.cp/class2.exp: print alpha at marker return 0
PASS: gdb.cp/class2.exp: print beta at marker return 0
PASS: gdb.cp/class2.exp: print * aap at marker return 0
PASS: gdb.cp/class2.exp: print * bbp at marker return 0
PASS: gdb.cp/class2.exp: print * abp at marker return 0, s-p-o off
PASS: gdb.cp/class2.exp: print * (B *) abp at marker return 0
PASS: gdb.cp/class2.exp: print object with no data fields
PASS: gdb.cp/class2.exp: set print object on
PASS: gdb.cp/class2.exp: p acp
PASS: gdb.cp/class2.exp: p acp->c1
PASS: gdb.cp/class2.exp: p acp->c2
PASS: gdb.cp/class2.exp: p aref
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/classes.exp ...
PASS: gdb.cp/classes.exp: ptype struct default_public_struct
PASS: gdb.cp/classes.exp: ptype struct explicit_public_struct
PASS: gdb.cp/classes.exp: ptype struct protected_struct
PASS: gdb.cp/classes.exp: ptype struct private_struct
PASS: gdb.cp/classes.exp: ptype struct mixed_protection_struct
PASS: gdb.cp/classes.exp: ptype class public_class
PASS: gdb.cp/classes.exp: ptype class protected_class
PASS: gdb.cp/classes.exp: ptype class default_private_class
PASS: gdb.cp/classes.exp: ptype class explicit_private_class
PASS: gdb.cp/classes.exp: ptype class mixed_protection_class
PASS: gdb.cp/classes.exp: ptype class A
PASS: gdb.cp/classes.exp: ptype class B
PASS: gdb.cp/classes.exp: ptype class C
PASS: gdb.cp/classes.exp: ptype class D
PASS: gdb.cp/classes.exp: ptype class E
PASS: gdb.cp/classes.exp: ptype class Static
PASS: gdb.cp/classes.exp: ptype class vA
PASS: gdb.cp/classes.exp: ptype class vB
PASS: gdb.cp/classes.exp: ptype class vC
PASS: gdb.cp/classes.exp: ptype class vD
PASS: gdb.cp/classes.exp: ptype class vE
PASS: gdb.cp/classes.exp: ptype class Base1
PASS: gdb.cp/classes.exp: ptype class Foo
PASS: gdb.cp/classes.exp: ptype class Bar
PASS: gdb.cp/classes.exp: print g_A.a
PASS: gdb.cp/classes.exp: print g_A.x
PASS: gdb.cp/classes.exp: print g_B.b
PASS: gdb.cp/classes.exp: print g_B.x
PASS: gdb.cp/classes.exp: print g_C.c
PASS: gdb.cp/classes.exp: print g_C.x
PASS: gdb.cp/classes.exp: print g_D.d
PASS: gdb.cp/classes.exp: print g_D.x
PASS: gdb.cp/classes.exp: print g_E.e
PASS: gdb.cp/classes.exp: print g_E.x
PASS: gdb.cp/classes.exp: print g_A.b
PASS: gdb.cp/classes.exp: print g_B.c
PASS: gdb.cp/classes.exp: print g_B.d
PASS: gdb.cp/classes.exp: print g_C.b
PASS: gdb.cp/classes.exp: print g_C.d
PASS: gdb.cp/classes.exp: print g_D.e
PASS: gdb.cp/classes.exp: print g_A.y
PASS: gdb.cp/classes.exp: print g_B.z
PASS: gdb.cp/classes.exp: print g_C.q
PASS: gdb.cp/classes.exp: print g_D.p
PASS: gdb.cp/classes.exp: call class_param.Aptr_a (&g_A)
PASS: gdb.cp/classes.exp: call class_param.Aptr_x (&g_A)
PASS: gdb.cp/classes.exp: call class_param.Aptr_a (&g_B)
PASS: gdb.cp/classes.exp: call class_param.Aptr_x (&g_B)
PASS: gdb.cp/classes.exp: call class_param.Aref_a (g_A)
PASS: gdb.cp/classes.exp: call class_param.Aref_x (g_A)
PASS: gdb.cp/classes.exp: call class_param.Aref_a (g_B)
PASS: gdb.cp/classes.exp: call class_param.Aref_x (g_B)
PASS: gdb.cp/classes.exp: call class_param.Aval_a (g_A)
PASS: gdb.cp/classes.exp: call class_param.Aval_x (g_A)
PASS: gdb.cp/classes.exp: call class_param.Aval_a (g_B)
PASS: gdb.cp/classes.exp: call class_param.Aval_x (g_B)
PASS: gdb.cp/classes.exp: unrelated class *param
PASS: gdb.cp/classes.exp: unrelated class &param
PASS: gdb.cp/classes.exp: unrelated class param
PASS: gdb.cp/classes.exp: continue to enums2(\(\)|)
PASS: gdb.cp/classes.exp: print obj_with_enum (1)
PASS: gdb.cp/classes.exp: next
PASS: gdb.cp/classes.exp: print obj_with_enum (2)
PASS: gdb.cp/classes.exp: print obj_with_enum.priv_enum
PASS: gdb.cp/classes.exp: ptype obj_with_enum.priv_enum
PASS: gdb.cp/classes.exp: ptype obj_with_enum
PASS: gdb.cp/classes.exp: print (ClassWithEnum::PrivEnum) 42
PASS: gdb.cp/classes.exp: print ('ClassWithEnum::PrivEnum') 42
PASS: gdb.cp/classes.exp: print Bar::z
PASS: gdb.cp/classes.exp: print &Foo::x
PASS: gdb.cp/classes.exp: print (int)&Foo::x
PASS: gdb.cp/classes.exp: print (int)&Bar::y == 2*sizeof(int)
PASS: gdb.cp/classes.exp: ptype Bar::z
PASS: gdb.cp/classes.exp: ptype &Bar::z
PASS: gdb.cp/classes.exp: print (int)pmi == sizeof(int)
PASS: gdb.cp/classes.exp: print Foo::st
PASS: gdb.cp/classes.exp: print bar.st
PASS: gdb.cp/classes.exp: print &foo.st
PASS: gdb.cp/classes.exp: print &Bar::st
PASS: gdb.cp/classes.exp: print *$
PASS: gdb.cp/classes.exp: set print static-members off
PASS: gdb.cp/classes.exp: print csi without static members
PASS: gdb.cp/classes.exp: print cnsi without static members
PASS: gdb.cp/classes.exp: set print static-members on
PASS: gdb.cp/classes.exp: print csi with static members
PASS: gdb.cp/classes.exp: print cnsi with static members
PASS: gdb.cp/classes.exp: finish from marker_reg1
PASS: gdb.cp/classes.exp: calling method for small class
PASS: gdb.cp/classes.exp: print ctor of typedef class
PASS: gdb.cp/classes.exp: print dtor of typedef class
PASS: gdb.cp/classes.exp: list ByAnyOtherName::times
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/cmpd-minsyms.exp ...
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::a() const'
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::b() volatile'
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::c() const volatile'
PASS: gdb.cp/cmpd-minsyms.exp: set language c++
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::operator ==
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::operator==(GDB<int> const&)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<char>::harder(char)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::harder(int)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at "int GDB<char>::even_harder<int>(char)"
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::simple()
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/converts.exp ...
PASS: gdb.cp/converts.exp: continue to breakpoint: end of main
PASS: gdb.cp/converts.exp: typedef to another typedef
PASS: gdb.cp/converts.exp: typedef to typedef of a typedef
PASS: gdb.cp/converts.exp: Pointer-to-pointer-to-pointer derived to Pointer-to-pointer-to-pointer base.
PASS: gdb.cp/converts.exp: pointer to pointer
PASS: gdb.cp/converts.exp: pointer to array
PASS: gdb.cp/converts.exp: pointer to pointer of wrong type
PASS: gdb.cp/converts.exp: pointer to pointer of wrong type
PASS: gdb.cp/converts.exp: pointer to ancestor pointer
PASS: gdb.cp/converts.exp: pointer to void pointer
PASS: gdb.cp/converts.exp: pointer to void pointer pointer
PASS: gdb.cp/converts.exp: pointer to boolean
PASS: gdb.cp/converts.exp: pointer to long int
PASS: gdb.cp/converts.exp: pointer pointer to void pointer
PASS: gdb.cp/converts.exp: pointer pointer to pointer pointer
PASS: gdb.cp/converts.exp: pointer pointer to array of arrays
PASS: gdb.cp/converts.exp: pointer pointer to array of pointers
PASS: gdb.cp/converts.exp: pointer pointer to array of wrong pointers
PASS: gdb.cp/converts.exp: check all parameters for badness
PASS: gdb.cp/converts.exp: null pointer conversion
PASS: gdb.cp/converts.exp: p foo3_1 (0, 1)
PASS: gdb.cp/converts.exp: p foo3_1 (0, (const char**) 1)
PASS: gdb.cp/converts.exp: p foo3_2 (0, 0)
PASS: gdb.cp/converts.exp: p foo3_2 (0, (char const**) 0)
PASS: gdb.cp/converts.exp: p foo1_7(0)
PASS: gdb.cp/converts.exp: p foo1_7(integer)
PASS: gdb.cp/converts.exp: p foo1_7(long_int)
PASS: gdb.cp/converts.exp: p foo1_7(*a)
PASS: gdb.cp/converts.exp: p foo1_7(MY_A)
PASS: gdb.cp/converts.exp: p foo1_7(&foo1_7)
PASS: gdb.cp/converts.exp: p foo1_7(&A::member_)
PASS: gdb.cp/converts.exp: p foo1_7(a)
PASS: gdb.cp/converts.exp: p foo1_7(fp)
PASS: gdb.cp/converts.exp: p foo1_7(dp)
PASS: gdb.cp/converts.exp: p foo1_7(-1.23)
PASS: gdb.cp/converts.exp: p foo1_7(ta)
PASS: gdb.cp/converts.exp: show check type
PASS: gdb.cp/converts.exp: p foo1_type_check (123)
PASS: gdb.cp/converts.exp: p foo2_type_check (0, 1)
PASS: gdb.cp/converts.exp: p foo2_type_check (1, 0)
PASS: gdb.cp/converts.exp: p foo2_type_check (1, 1)
PASS: gdb.cp/converts.exp: p foo3_type_check (0, 0, 1)
PASS: gdb.cp/converts.exp: p foo3_type_check (0, 1, 0)
PASS: gdb.cp/converts.exp: p foo3_type_check (1, 0, 0)
PASS: gdb.cp/converts.exp: p foo3_type_check (0, 1, 1)
PASS: gdb.cp/converts.exp: p foo3_type_check (1, 1, 0)
PASS: gdb.cp/converts.exp: p foo3_type_check (1, 1, 1)
PASS: gdb.cp/converts.exp: set check type off
PASS: gdb.cp/converts.exp: show check type
PASS: gdb.cp/converts.exp: p foo1_type_check (123)
PASS: gdb.cp/converts.exp: p foo2_type_check (0, 1)
PASS: gdb.cp/converts.exp: p foo2_type_check (1, 0)
PASS: gdb.cp/converts.exp: p foo2_type_check (1, 1)
PASS: gdb.cp/converts.exp: p foo3_type_check (0, 0, 1)
PASS: gdb.cp/converts.exp: p foo3_type_check (0, 1, 0)
PASS: gdb.cp/converts.exp: p foo3_type_check (1, 0, 0)
PASS: gdb.cp/converts.exp: p foo3_type_check (0, 1, 1)
PASS: gdb.cp/converts.exp: p foo3_type_check (1, 1, 0)
PASS: gdb.cp/converts.exp: p foo3_type_check (1, 1, 1)
PASS: gdb.cp/converts.exp: p foo3_2 (1,1)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/cp-relocate.exp ...
PASS: gdb.cp/cp-relocate.exp: info functions
PASS: gdb.cp/cp-relocate.exp: get address of func<1>(int)
PASS: gdb.cp/cp-relocate.exp: get address of func<2>(int)
PASS: gdb.cp/cp-relocate.exp: get address of caller
PASS: gdb.cp/cp-relocate.exp: C++ functions have different addresses
PASS: gdb.cp/cp-relocate.exp: info file
PASS: gdb.cp/cp-relocate.exp: add-symbol-file cp-relocate.o
PASS: gdb.cp/cp-relocate.exp: break *func<1>(int)
PASS: gdb.cp/cp-relocate.exp: break *func<2>(int)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/cpcompletion.exp ...
PASS: gdb.cp/cpcompletion.exp: complete class methods
PASS: gdb.cp/cpcompletion.exp: complete class methods beginning with F
PASS: gdb.cp/cpcompletion.exp: complete p foo1.g
PASS: gdb.cp/cpcompletion.exp: complete p foo1.base
PASS: gdb.cp/cpcompletion.exp: complete p foo1.Fo
PASS: gdb.cp/cpcompletion.exp: complete p a.g
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/cpexprs.exp ...
PASS: gdb.cp/cpexprs.exp: set listsize 1
PASS: gdb.cp/cpexprs.exp: print base1::a_function
PASS: gdb.cp/cpexprs.exp: print base1::base1(int)
PASS: gdb.cp/cpexprs.exp: print base1::base1(void)
PASS: gdb.cp/cpexprs.exp: print base2::a_function
PASS: gdb.cp/cpexprs.exp: print base2::base2
PASS: gdb.cp/cpexprs.exp: print base::base(int)
PASS: gdb.cp/cpexprs.exp: print base::base(void)
PASS: gdb.cp/cpexprs.exp: print base::operator char*
PASS: gdb.cp/cpexprs.exp: print base::operator delete
PASS: gdb.cp/cpexprs.exp: print base::operator delete[]
PASS: gdb.cp/cpexprs.exp: print base::operator fluff*
PASS: gdb.cp/cpexprs.exp: print base::operator fluff**
PASS: gdb.cp/cpexprs.exp: print base::operator int
PASS: gdb.cp/cpexprs.exp: print base::operator new
PASS: gdb.cp/cpexprs.exp: print base::operator new[]
PASS: gdb.cp/cpexprs.exp: print base::operator!
PASS: gdb.cp/cpexprs.exp: print base::operator!=
PASS: gdb.cp/cpexprs.exp: print base::operator%
PASS: gdb.cp/cpexprs.exp: print base::operator%=
PASS: gdb.cp/cpexprs.exp: print base::operator&
PASS: gdb.cp/cpexprs.exp: print base::operator&&
PASS: gdb.cp/cpexprs.exp: print base::operator&=
PASS: gdb.cp/cpexprs.exp: print base::operator()
PASS: gdb.cp/cpexprs.exp: print base::operator*
PASS: gdb.cp/cpexprs.exp: print base::operator*=
PASS: gdb.cp/cpexprs.exp: print base::operator+
PASS: gdb.cp/cpexprs.exp: print base::operator++
PASS: gdb.cp/cpexprs.exp: print base::operator+=
PASS: gdb.cp/cpexprs.exp: print base::operator-
PASS: gdb.cp/cpexprs.exp: print base::operator--
PASS: gdb.cp/cpexprs.exp: print base::operator-=
PASS: gdb.cp/cpexprs.exp: print base::operator/
PASS: gdb.cp/cpexprs.exp: print base::operator/=
PASS: gdb.cp/cpexprs.exp: print base::operator<
PASS: gdb.cp/cpexprs.exp: print base::operator<<
PASS: gdb.cp/cpexprs.exp: print base::operator<<=
PASS: gdb.cp/cpexprs.exp: print base::operator<=
PASS: gdb.cp/cpexprs.exp: print base::operator=
PASS: gdb.cp/cpexprs.exp: print base::operator==
PASS: gdb.cp/cpexprs.exp: print base::operator>
PASS: gdb.cp/cpexprs.exp: print base::operator>=
PASS: gdb.cp/cpexprs.exp: print base::operator>>
PASS: gdb.cp/cpexprs.exp: print base::operator>>=
PASS: gdb.cp/cpexprs.exp: print base::operator[]
PASS: gdb.cp/cpexprs.exp: print base::operator^
PASS: gdb.cp/cpexprs.exp: print base::operator^=
PASS: gdb.cp/cpexprs.exp: print base::operator|
PASS: gdb.cp/cpexprs.exp: print base::operator|=
PASS: gdb.cp/cpexprs.exp: print base::operator||
PASS: gdb.cp/cpexprs.exp: print base::operator~
PASS: gdb.cp/cpexprs.exp: print base::overload(base&) const
PASS: gdb.cp/cpexprs.exp: print base::overload(char*) const
PASS: gdb.cp/cpexprs.exp: print base::overload(int) const
PASS: gdb.cp/cpexprs.exp: print base::overload(long) const
PASS: gdb.cp/cpexprs.exp: print base::overload(short) const
PASS: gdb.cp/cpexprs.exp: print base::overload(void) const
PASS: gdb.cp/cpexprs.exp: print base::~base
PASS: gdb.cp/cpexprs.exp: print derived::a_function
PASS: gdb.cp/cpexprs.exp: print derived::derived
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, char, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, char, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, char, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, char, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, int, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, int, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, int, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, int, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, long, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, long, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, long, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, long, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, short, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, short, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, short, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, short, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, int, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, int, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, int, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, short, int>
PASS: gdb.cp/cpexprs.exp: print flubber<long, short, long, short, long>
PASS: gdb.cp/cpexprs.exp: print flubber<short, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: print policy1::function
PASS: gdb.cp/cpexprs.exp: print policy1::policy
PASS: gdb.cp/cpexprs.exp: print policy2::function
PASS: gdb.cp/cpexprs.exp: print policy2::policy
PASS: gdb.cp/cpexprs.exp: print policy3::function
PASS: gdb.cp/cpexprs.exp: print policy3::policy
PASS: gdb.cp/cpexprs.exp: print policy4::function
PASS: gdb.cp/cpexprs.exp: print policy4::policy
PASS: gdb.cp/cpexprs.exp: print policyd1::function
PASS: gdb.cp/cpexprs.exp: print policyd1::policyd
PASS: gdb.cp/cpexprs.exp: print policyd1::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd2::function
PASS: gdb.cp/cpexprs.exp: print policyd2::policyd
PASS: gdb.cp/cpexprs.exp: print policyd2::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd3::function
PASS: gdb.cp/cpexprs.exp: print policyd3::policyd
PASS: gdb.cp/cpexprs.exp: print policyd3::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd4::function
PASS: gdb.cp/cpexprs.exp: print policyd4::policyd
PASS: gdb.cp/cpexprs.exp: print policyd4::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd5::function
PASS: gdb.cp/cpexprs.exp: print policyd5::policyd
PASS: gdb.cp/cpexprs.exp: print policyd5::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<base, operation_1<base> >::function
PASS: gdb.cp/cpexprs.exp: print policyd<base, operation_1<base> >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<base, operation_1<base> >::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<char, operation_1<char> >::function
PASS: gdb.cp/cpexprs.exp: print policyd<char, operation_1<char> >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<char, operation_1<char> >::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<int, operation_1<int> >::function
PASS: gdb.cp/cpexprs.exp: print policyd<int, operation_1<int> >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<int, operation_1<int> >::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<long, operation_1<long> >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<long, operation_1<long> >::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<tclass<int>, operation_1<tclass<int> > >::function
PASS: gdb.cp/cpexprs.exp: print policyd<tclass<int>, operation_1<tclass<int> > >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<tclass<int>, operation_1<tclass<int> > >::~policyd
PASS: gdb.cp/cpexprs.exp: print tclass<base>::do_something
PASS: gdb.cp/cpexprs.exp: print tclass<char>::do_something
PASS: gdb.cp/cpexprs.exp: print tclass<int>::do_something
PASS: gdb.cp/cpexprs.exp: print tclass<long>::do_something
PASS: gdb.cp/cpexprs.exp: print tclass<short>::do_something
PASS: gdb.cp/cpexprs.exp: print test_function
PASS: gdb.cp/cpexprs.exp: list base1::a_function
PASS: gdb.cp/cpexprs.exp: list base1::base1(int)
PASS: gdb.cp/cpexprs.exp: list base1::base1(void)
PASS: gdb.cp/cpexprs.exp: list base2::a_function
PASS: gdb.cp/cpexprs.exp: list base2::base2
PASS: gdb.cp/cpexprs.exp: list base::base(int)
PASS: gdb.cp/cpexprs.exp: list base::base(void)
PASS: gdb.cp/cpexprs.exp: list base::operator char*
PASS: gdb.cp/cpexprs.exp: list base::operator delete
PASS: gdb.cp/cpexprs.exp: list base::operator delete[]
PASS: gdb.cp/cpexprs.exp: list base::operator fluff*
PASS: gdb.cp/cpexprs.exp: list base::operator fluff**
PASS: gdb.cp/cpexprs.exp: list base::operator int
PASS: gdb.cp/cpexprs.exp: list base::operator new
PASS: gdb.cp/cpexprs.exp: list base::operator new[]
PASS: gdb.cp/cpexprs.exp: list base::operator!
PASS: gdb.cp/cpexprs.exp: list base::operator!=
PASS: gdb.cp/cpexprs.exp: list base::operator%
PASS: gdb.cp/cpexprs.exp: list base::operator%=
PASS: gdb.cp/cpexprs.exp: list base::operator&
PASS: gdb.cp/cpexprs.exp: list base::operator&&
PASS: gdb.cp/cpexprs.exp: list base::operator&=
PASS: gdb.cp/cpexprs.exp: list base::operator()
PASS: gdb.cp/cpexprs.exp: list base::operator*
PASS: gdb.cp/cpexprs.exp: list base::operator*=
PASS: gdb.cp/cpexprs.exp: list base::operator+
PASS: gdb.cp/cpexprs.exp: list base::operator++
PASS: gdb.cp/cpexprs.exp: list base::operator+=
PASS: gdb.cp/cpexprs.exp: list base::operator-
PASS: gdb.cp/cpexprs.exp: list base::operator--
PASS: gdb.cp/cpexprs.exp: list base::operator-=
PASS: gdb.cp/cpexprs.exp: list base::operator/
PASS: gdb.cp/cpexprs.exp: list base::operator/=
PASS: gdb.cp/cpexprs.exp: list base::operator<
PASS: gdb.cp/cpexprs.exp: list base::operator<<
PASS: gdb.cp/cpexprs.exp: list base::operator<<=
PASS: gdb.cp/cpexprs.exp: list base::operator<=
PASS: gdb.cp/cpexprs.exp: list base::operator=
PASS: gdb.cp/cpexprs.exp: list base::operator==
PASS: gdb.cp/cpexprs.exp: list base::operator>
PASS: gdb.cp/cpexprs.exp: list base::operator>=
PASS: gdb.cp/cpexprs.exp: list base::operator>>
PASS: gdb.cp/cpexprs.exp: list base::operator>>=
PASS: gdb.cp/cpexprs.exp: list base::operator[]
PASS: gdb.cp/cpexprs.exp: list base::operator^
PASS: gdb.cp/cpexprs.exp: list base::operator^=
PASS: gdb.cp/cpexprs.exp: list base::operator|
PASS: gdb.cp/cpexprs.exp: list base::operator|=
PASS: gdb.cp/cpexprs.exp: list base::operator||
PASS: gdb.cp/cpexprs.exp: list base::operator~
PASS: gdb.cp/cpexprs.exp: list base::overload(base&) const
PASS: gdb.cp/cpexprs.exp: list base::overload(char*) const
PASS: gdb.cp/cpexprs.exp: list base::overload(int) const
PASS: gdb.cp/cpexprs.exp: list base::overload(long) const
PASS: gdb.cp/cpexprs.exp: list base::overload(short) const
PASS: gdb.cp/cpexprs.exp: list base::overload(void) const
PASS: gdb.cp/cpexprs.exp: list base::~base
PASS: gdb.cp/cpexprs.exp: list derived::a_function
PASS: gdb.cp/cpexprs.exp: list derived::derived
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, char, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, char, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, char, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, char, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, int, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, int, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, int, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, int, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, long, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, long, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, long, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, long, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, short, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, short, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, short, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, short, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, int, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, int, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, int, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, short, int>
PASS: gdb.cp/cpexprs.exp: list flubber<long, short, long, short, long>
PASS: gdb.cp/cpexprs.exp: list flubber<short, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: list policy1::function
PASS: gdb.cp/cpexprs.exp: list policy1::policy
PASS: gdb.cp/cpexprs.exp: list policy2::function
PASS: gdb.cp/cpexprs.exp: list policy2::policy
PASS: gdb.cp/cpexprs.exp: list policy3::function
PASS: gdb.cp/cpexprs.exp: list policy3::policy
PASS: gdb.cp/cpexprs.exp: list policy4::function
PASS: gdb.cp/cpexprs.exp: list policy4::policy
PASS: gdb.cp/cpexprs.exp: list policyd1::function
PASS: gdb.cp/cpexprs.exp: list policyd1::policyd
PASS: gdb.cp/cpexprs.exp: list policyd1::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd2::function
PASS: gdb.cp/cpexprs.exp: list policyd2::policyd
PASS: gdb.cp/cpexprs.exp: list policyd2::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd3::function
PASS: gdb.cp/cpexprs.exp: list policyd3::policyd
PASS: gdb.cp/cpexprs.exp: list policyd3::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd4::function
PASS: gdb.cp/cpexprs.exp: list policyd4::policyd
PASS: gdb.cp/cpexprs.exp: list policyd4::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd5::function
PASS: gdb.cp/cpexprs.exp: list policyd5::policyd
PASS: gdb.cp/cpexprs.exp: list policyd5::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<base, operation_1<base> >::function
PASS: gdb.cp/cpexprs.exp: list policyd<base, operation_1<base> >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<base, operation_1<base> >::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<char, operation_1<char> >::function
PASS: gdb.cp/cpexprs.exp: list policyd<char, operation_1<char> >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<char, operation_1<char> >::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<int, operation_1<int> >::function
PASS: gdb.cp/cpexprs.exp: list policyd<int, operation_1<int> >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<int, operation_1<int> >::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<long, operation_1<long> >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<long, operation_1<long> >::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<tclass<int>, operation_1<tclass<int> > >::function
PASS: gdb.cp/cpexprs.exp: list policyd<tclass<int>, operation_1<tclass<int> > >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<tclass<int>, operation_1<tclass<int> > >::~policyd
PASS: gdb.cp/cpexprs.exp: list tclass<base>::do_something
PASS: gdb.cp/cpexprs.exp: list tclass<char>::do_something
PASS: gdb.cp/cpexprs.exp: list tclass<int>::do_something
PASS: gdb.cp/cpexprs.exp: list tclass<long>::do_something
PASS: gdb.cp/cpexprs.exp: list tclass<short>::do_something
PASS: gdb.cp/cpexprs.exp: list test_function
PASS: gdb.cp/cpexprs.exp: continue to base1::a_function
PASS: gdb.cp/cpexprs.exp: continue to base1::base1(int)
PASS: gdb.cp/cpexprs.exp: continue to base1::base1(void)
PASS: gdb.cp/cpexprs.exp: continue to base2::a_function
PASS: gdb.cp/cpexprs.exp: continue to base2::base2
PASS: gdb.cp/cpexprs.exp: continue to base::base(int)
PASS: gdb.cp/cpexprs.exp: continue to base::base(void)
PASS: gdb.cp/cpexprs.exp: continue to base::operator char*
PASS: gdb.cp/cpexprs.exp: continue to base::operator delete
PASS: gdb.cp/cpexprs.exp: continue to base::operator delete[]
PASS: gdb.cp/cpexprs.exp: continue to base::operator fluff*
PASS: gdb.cp/cpexprs.exp: continue to base::operator fluff**
PASS: gdb.cp/cpexprs.exp: continue to base::operator int
PASS: gdb.cp/cpexprs.exp: continue to base::operator new
PASS: gdb.cp/cpexprs.exp: continue to base::operator new[]
PASS: gdb.cp/cpexprs.exp: continue to base::operator!
PASS: gdb.cp/cpexprs.exp: continue to base::operator!=
PASS: gdb.cp/cpexprs.exp: continue to base::operator%
PASS: gdb.cp/cpexprs.exp: continue to base::operator%=
PASS: gdb.cp/cpexprs.exp: continue to base::operator&
PASS: gdb.cp/cpexprs.exp: continue to base::operator&&
PASS: gdb.cp/cpexprs.exp: continue to base::operator&=
PASS: gdb.cp/cpexprs.exp: continue to base::operator()
PASS: gdb.cp/cpexprs.exp: continue to base::operator*
PASS: gdb.cp/cpexprs.exp: continue to base::operator*=
PASS: gdb.cp/cpexprs.exp: continue to base::operator+
PASS: gdb.cp/cpexprs.exp: continue to base::operator++
PASS: gdb.cp/cpexprs.exp: continue to base::operator+=
PASS: gdb.cp/cpexprs.exp: continue to base::operator-
PASS: gdb.cp/cpexprs.exp: continue to base::operator--
PASS: gdb.cp/cpexprs.exp: continue to base::operator-=
PASS: gdb.cp/cpexprs.exp: continue to base::operator/
PASS: gdb.cp/cpexprs.exp: continue to base::operator/=
PASS: gdb.cp/cpexprs.exp: continue to base::operator<
PASS: gdb.cp/cpexprs.exp: continue to base::operator<<
PASS: gdb.cp/cpexprs.exp: continue to base::operator<<=
PASS: gdb.cp/cpexprs.exp: continue to base::operator<=
PASS: gdb.cp/cpexprs.exp: continue to base::operator=
PASS: gdb.cp/cpexprs.exp: continue to base::operator==
PASS: gdb.cp/cpexprs.exp: continue to base::operator>
PASS: gdb.cp/cpexprs.exp: continue to base::operator>=
PASS: gdb.cp/cpexprs.exp: continue to base::operator>>
PASS: gdb.cp/cpexprs.exp: continue to base::operator>>=
PASS: gdb.cp/cpexprs.exp: continue to base::operator[]
PASS: gdb.cp/cpexprs.exp: continue to base::operator^
PASS: gdb.cp/cpexprs.exp: continue to base::operator^=
PASS: gdb.cp/cpexprs.exp: continue to base::operator|
PASS: gdb.cp/cpexprs.exp: continue to base::operator|=
PASS: gdb.cp/cpexprs.exp: continue to base::operator||
PASS: gdb.cp/cpexprs.exp: continue to base::operator~
PASS: gdb.cp/cpexprs.exp: continue to base::overload(base&) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(char*) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(int) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(long) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(short) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(void) const
PASS: gdb.cp/cpexprs.exp: continue to base::~base
PASS: gdb.cp/cpexprs.exp: continue to derived::a_function
PASS: gdb.cp/cpexprs.exp: continue to derived::derived
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, char, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, char, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, char, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, char, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, int, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, int, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, int, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, int, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, long, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, long, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, long, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, long, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, short, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, short, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, short, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, short, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, int, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, int, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, int, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, short, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<long, short, long, short, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<short, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: continue to policy1::function
PASS: gdb.cp/cpexprs.exp: continue to policy1::policy
PASS: gdb.cp/cpexprs.exp: continue to policy2::function
PASS: gdb.cp/cpexprs.exp: continue to policy2::policy
PASS: gdb.cp/cpexprs.exp: continue to policy3::function
PASS: gdb.cp/cpexprs.exp: continue to policy3::policy
PASS: gdb.cp/cpexprs.exp: continue to policy4::function
PASS: gdb.cp/cpexprs.exp: continue to policy4::policy
PASS: gdb.cp/cpexprs.exp: continue to policyd1::function
PASS: gdb.cp/cpexprs.exp: continue to policyd1::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd1::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd2::function
PASS: gdb.cp/cpexprs.exp: continue to policyd2::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd2::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd3::function
PASS: gdb.cp/cpexprs.exp: continue to policyd3::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd3::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd4::function
PASS: gdb.cp/cpexprs.exp: continue to policyd4::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd4::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd5::function
PASS: gdb.cp/cpexprs.exp: continue to policyd5::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd5::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<base, operation_1<base> >::function
PASS: gdb.cp/cpexprs.exp: continue to policyd<base, operation_1<base> >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<base, operation_1<base> >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<char, operation_1<char> >::function
PASS: gdb.cp/cpexprs.exp: continue to policyd<char, operation_1<char> >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<char, operation_1<char> >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<int, operation_1<int> >::function
PASS: gdb.cp/cpexprs.exp: continue to policyd<int, operation_1<int> >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<int, operation_1<int> >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<long, operation_1<long> >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<long, operation_1<long> >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<tclass<int>, operation_1<tclass<int> > >::function
PASS: gdb.cp/cpexprs.exp: continue to policyd<tclass<int>, operation_1<tclass<int> > >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<tclass<int>, operation_1<tclass<int> > >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to tclass<base>::do_something
PASS: gdb.cp/cpexprs.exp: continue to tclass<char>::do_something
PASS: gdb.cp/cpexprs.exp: continue to tclass<int>::do_something
PASS: gdb.cp/cpexprs.exp: continue to tclass<long>::do_something
PASS: gdb.cp/cpexprs.exp: continue to tclass<short>::do_something
PASS: gdb.cp/cpexprs.exp: p 'CV::m(int)'
PASS: gdb.cp/cpexprs.exp: p CV::m(int)
PASS: gdb.cp/cpexprs.exp: p 'CV::m(int) const'
KFAIL: gdb.cp/cpexprs.exp: p CV::m(int) const (PRMS: c++/14186)
PASS: gdb.cp/cpexprs.exp: p 'CV::m(int) volatile'
KFAIL: gdb.cp/cpexprs.exp: p CV::m(int) volatile (PRMS: c++/14186)
PASS: gdb.cp/cpexprs.exp: p 'CV::m(int) const volatile'
KFAIL: gdb.cp/cpexprs.exp: p CV::m(int) const volatile (PRMS: c++/14186)
PASS: gdb.cp/cpexprs.exp: p CV_f(int)
PASS: gdb.cp/cpexprs.exp: p CV_f(CV::t)
PASS: gdb.cp/cpexprs.exp: p CV_f(CV::i)
PASS: gdb.cp/cpexprs.exp: p CV_f('cpexprs.cc'::CV::t)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/cplabel.exp ...
PASS: gdb.cp/cplabel.exp: break foo::bar:to_the_top
PASS: gdb.cp/cplabel.exp: break foo::bar:get_out_of_here
PASS: gdb.cp/cplabel.exp: break foo::baz:to_the_top
PASS: gdb.cp/cplabel.exp: break foo::baz:get_out_of_here
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/cplusfuncs.exp ...
PASS: gdb.cp/cplusfuncs.exp: set width 0
PASS: gdb.cp/cplusfuncs.exp: set language c++
PASS: gdb.cp/cplusfuncs.exp: detect dm_operator_comma
PASS: gdb.cp/cplusfuncs.exp: detect dm_operator_char_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_char_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_foo_ref
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_int_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_long_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_int
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_void
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_void_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_short
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_short
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_long
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_long
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_typedef
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(void)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(signed char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(short)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned short)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(long)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned long)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(float)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(double)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator*(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator%(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator-(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>>(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator!=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator|(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&&(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator!(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator++(int)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator+=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator*=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator%=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>>=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator|=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator,(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator/(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator+(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<<(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator==(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator^(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator||(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator~(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator--(int)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator->(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator-=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator/=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<<=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator^=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator->*(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator[](foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator()(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator new
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator new[]
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator delete(void*)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator delete(void*)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator int(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator char*(void)
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc1
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc2
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc3
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc4
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc5
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc6
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc7
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\*("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator%("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator-("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>>("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator!=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator|("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&&("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator!("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator++("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator+=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\*=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator%=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>>=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator|=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator,("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator/("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator+("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<<("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator==("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator^("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator||("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator~("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator--("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator->("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator-=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator/=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<<=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator^=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator->\*("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\[\]("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator new("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator delete("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator int("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator()("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator char\*("
PASS: gdb.cp/cplusfuncs.exp: list foo::operator int*
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/ctti.exp ...
PASS: gdb.cp/ctti.exp: continue to breakpoint: marker add1
PASS: gdb.cp/ctti.exp: print c
PASS: gdb.cp/ctti.exp: print f
PASS: gdb.cp/ctti.exp: print i
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/debug-expr.exp ...
PASS: gdb.cp/debug-expr.exp: set language c++
PASS: gdb.cp/debug-expr.exp: set debug expression 1
PASS: gdb.cp/debug-expr.exp: print static_cast<void*>(0)
PASS: gdb.cp/debug-expr.exp: print reinterpret_cast<void*>(0)
PASS: gdb.cp/debug-expr.exp: print dynamic_cast<void*>(0)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/demangle.exp ...
PASS: gdb.cp/demangle.exp: set language c++
PASS: gdb.cp/demangle.exp: set width 0
PASS: gdb.cp/demangle.exp: lucid: set demangle-style
PASS: gdb.cp/demangle.exp: lucid: check demangling style
PASS: gdb.cp/demangle.exp: lucid: WS__FR7istream
PASS: gdb.cp/demangle.exp: lucid: __aa__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __aad__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ad__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __adv__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __adv__7complexF7complex
PASS: gdb.cp/demangle.exp: lucid: __aer__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __als__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amd__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ami__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amu__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amu__7complexF7complex
PASS: gdb.cp/demangle.exp: lucid: __aor__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __apl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ars__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __as__18istream_withassignFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __as__18istream_withassignFR7istream
PASS: gdb.cp/demangle.exp: lucid: __as__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __as__3iosFR3ios
PASS: gdb.cp/demangle.exp: lucid: __cl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __cm__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __co__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __ct__10istrstreamFPc
PASS: gdb.cp/demangle.exp: lucid: __ct__10istrstreamFPci
PASS: gdb.cp/demangle.exp: lucid: __ct__10ostrstreamFPciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__10ostrstreamFv
PASS: gdb.cp/demangle.exp: lucid: __ct__10smanip_intFPFR3iosi_R3iosi
PASS: gdb.cp/demangle.exp: lucid: __ct__11c_exceptionFPcRC7complexT2
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFi
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFv
PASS: gdb.cp/demangle.exp: lucid: __ct__11smanip_longFPFR3iosl_R3iosl
PASS: gdb.cp/demangle.exp: lucid: __ct__11stdiostreamFP4FILE
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPFl_PvPFPv_v
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPUciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFi
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFv
PASS: gdb.cp/demangle.exp: lucid: __ct__13strstreambaseFPciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiN31
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiPCc
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiR3fooT1T2T1T2
PASS: gdb.cp/demangle.exp: lucid: __ct__3iosFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7filebufFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7fstreamFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__7fstreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFP9streambufiP7ostream
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFiT1P7ostream
PASS: gdb.cp/demangle.exp: lucid: __ct__7ostreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7ostreamFiPc
PASS: gdb.cp/demangle.exp: lucid: __ct__8ifstreamFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__8ifstreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__Q23foo3barFv
PASS: gdb.cp/demangle.exp: lucid: __ct__Q33foo3bar4bellFv
PASS: gdb.cp/demangle.exp: lucid: __dl__3fooSFPv
PASS: gdb.cp/demangle.exp: lucid: __dl__FPv
PASS: gdb.cp/demangle.exp: lucid: __dt__10istrstreamFv
PASS: gdb.cp/demangle.exp: lucid: __dt__Q23foo3barFv
PASS: gdb.cp/demangle.exp: lucid: __dt__Q33foo3bar4bellFv
PASS: gdb.cp/demangle.exp: lucid: __dv__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __dv__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __er__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ge__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __gt__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __le__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ls__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPCc
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPv
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFUi
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFUl
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFd
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFf
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFi
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFl
PASS: gdb.cp/demangle.exp: lucid: __ls__FR7ostream7complex
PASS: gdb.cp/demangle.exp: lucid: __lt__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __md__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __mi__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ml__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ml__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: __mm__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __ne__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __nt__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __nw__3fooSFi
PASS: gdb.cp/demangle.exp: lucid: __nw__FUi
PASS: gdb.cp/demangle.exp: lucid: __nw__FUiPv
PASS: gdb.cp/demangle.exp: lucid: __oo__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __opPc__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __opi__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __or__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __pl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __pp__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __pt__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __rm__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __rs__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPFR7istream_R7istream
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPUc
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPc
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUi
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUl
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUs
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRd
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRf
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRi
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRl
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRs
PASS: gdb.cp/demangle.exp: lucid: __rs__FR7istreamR7complex
PASS: gdb.cp/demangle.exp: lucid: __vc__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __vtbl__10istrstream
PASS: gdb.cp/demangle.exp: lucid: __vtbl__17ostream__iostream__19iostream_withassign
PASS: gdb.cp/demangle.exp: lucid: __vtbl__3ios
PASS: gdb.cp/demangle.exp: lucid: __vtbl__3ios__13strstreambase
KFAIL: gdb.cp/demangle.exp: lucid: __vtbl__3foo__vt_cc_main_ (PRMS: gdb/945)
PASS: gdb.cp/demangle.exp: lucid: abs__F7complex
PASS: gdb.cp/demangle.exp: lucid: allocate__9streambufFv
PASS: gdb.cp/demangle.exp: lucid: attach__11fstreambaseFi
PASS: gdb.cp/demangle.exp: lucid: bitalloc__3iosSFv
PASS: gdb.cp/demangle.exp: lucid: chr__FiT1
PASS: gdb.cp/demangle.exp: lucid: complex_error__FR11c_exception
PASS: gdb.cp/demangle.exp: lucid: complexfunc2__FPFPc_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc3__FPFPFPl_s_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc4__FPFPFPc_s_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc5__FPFPc_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc6__FPFPi_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc7__FPFPFPc_i_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complicated_put__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: conv10__FlPc
PASS: gdb.cp/demangle.exp: lucid: conv16__FUlPc
PASS: gdb.cp/demangle.exp: lucid: dec__FR3ios
PASS: gdb.cp/demangle.exp: lucid: dec__Fli
PASS: gdb.cp/demangle.exp: lucid: dofield__FP7ostreamPciT2T3
PASS: gdb.cp/demangle.exp: lucid: flags__3iosFl
PASS: gdb.cp/demangle.exp: lucid: flags__3iosFv
PASS: gdb.cp/demangle.exp: lucid: foo__FiN31
PASS: gdb.cp/demangle.exp: lucid: foo__FiR3fooT1T2T1T2
PASS: gdb.cp/demangle.exp: lucid: foo___3barFl
PASS: gdb.cp/demangle.exp: lucid: form__FPCce
PASS: gdb.cp/demangle.exp: lucid: get__7istreamFPcic
PASS: gdb.cp/demangle.exp: lucid: get__7istreamFR9streambufc
PASS: gdb.cp/demangle.exp: lucid: get_complicated__7istreamFRUc
PASS: gdb.cp/demangle.exp: lucid: get_complicated__7istreamFRc
PASS: gdb.cp/demangle.exp: lucid: getline__7istreamFPUcic
PASS: gdb.cp/demangle.exp: lucid: getline__7istreamFPcic
PASS: gdb.cp/demangle.exp: lucid: ignore__7istreamFiT1
PASS: gdb.cp/demangle.exp: lucid: init__12strstreambufFPciT1
PASS: gdb.cp/demangle.exp: lucid: init__3iosFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: initcount__13Iostream_init
PASS: gdb.cp/demangle.exp: lucid: ipfx__7istreamFi
PASS: gdb.cp/demangle.exp: lucid: ls_complicated__7ostreamFUc
PASS: gdb.cp/demangle.exp: lucid: ls_complicated__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: open__11fstreambaseFPCciT2
PASS: gdb.cp/demangle.exp: lucid: open__7filebufFPCciT2
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FSc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUi
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUl
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUs
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fd
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Ff
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fi
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fl
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fs
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fv
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN21
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN31
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN41
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN51
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN61
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN71
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN81
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN91
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN91N11
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiT1
PASS: gdb.cp/demangle.exp: lucid: polar__FdT1
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexd
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexi
PASS: gdb.cp/demangle.exp: lucid: pow__Fd7complex
PASS: gdb.cp/demangle.exp: lucid: pstart__FPciT2
PASS: gdb.cp/demangle.exp: lucid: put__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: read__7istreamFPci
PASS: gdb.cp/demangle.exp: lucid: resetiosflags__FR3iosl
PASS: gdb.cp/demangle.exp: lucid: restore_errno__FRi
PASS: gdb.cp/demangle.exp: lucid: rs_complicated__7istreamFRUc
PASS: gdb.cp/demangle.exp: lucid: rs_complicated__7istreamFRc
PASS: gdb.cp/demangle.exp: lucid: seekg__7istreamFl8seek_dir
PASS: gdb.cp/demangle.exp: lucid: seekoff__12strstreambufFl8seek_diri
PASS: gdb.cp/demangle.exp: lucid: seekoff__9streambufFlQ2_3ios12ios_seek_diri
PASS: gdb.cp/demangle.exp: lucid: seekpos__9streambufFli
PASS: gdb.cp/demangle.exp: lucid: set_new_handler__FPFv_v
PASS: gdb.cp/demangle.exp: lucid: setb__9streambufFPcT1i
PASS: gdb.cp/demangle.exp: lucid: setb__FR3iosi
PASS: gdb.cp/demangle.exp: lucid: setbuf__11fstreambaseFPci
PASS: gdb.cp/demangle.exp: lucid: setbuf__9streambufFPUci
PASS: gdb.cp/demangle.exp: lucid: setbuf__9streambufFPciT2
PASS: gdb.cp/demangle.exp: lucid: setf__3iosFlT1
PASS: gdb.cp/demangle.exp: lucid: setfill__FR3iosi
PASS: gdb.cp/demangle.exp: lucid: setg__9streambufFPcN21
PASS: gdb.cp/demangle.exp: lucid: setp__9streambufFPcT1
PASS: gdb.cp/demangle.exp: lucid: sputn__9streambufFPCci
PASS: gdb.cp/demangle.exp: lucid: str__FPCci
PASS: gdb.cp/demangle.exp: lucid: tie__3iosFP7ostream
PASS: gdb.cp/demangle.exp: lucid: uconv10__FUlPc
PASS: gdb.cp/demangle.exp: lucid: write__7ostreamFPCci
PASS: gdb.cp/demangle.exp: lucid: xget__7istreamFPc
PASS: gdb.cp/demangle.exp: lucid: xsgetn__9streambufFPci
PASS: gdb.cp/demangle.exp: lucid: xsputn__9streambufFPCci
PASS: gdb.cp/demangle.exp: lucid: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: gnu: set demangle-style
PASS: gdb.cp/demangle.exp: gnu: check demangling style
PASS: gdb.cp/demangle.exp: gnu: Abort__FP6EditoriPCc
PASS: gdb.cp/demangle.exp: gnu: AddAlignment__9ivTSolverUiP12ivInteractorP7ivTGlue
PASS: gdb.cp/demangle.exp: gnu: Append__15NameChooserViewPCc
PASS: gdb.cp/demangle.exp: gnu: ArrowheadIntersects__9ArrowLineP9ArrowheadR6BoxObjP7Graphic
PASS: gdb.cp/demangle.exp: gnu: AtEnd__13ivRubberGroup
PASS: gdb.cp/demangle.exp: gnu: BgFilter__9ivTSolverP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: BitPatterntoa__FRC10BitPatternccc
PASS: gdb.cp/demangle.exp: gnu: Check__6UArrayi
PASS: gdb.cp/demangle.exp: gnu: CoreConstDecls__8TextCodeR7ostream
PASS: gdb.cp/demangle.exp: gnu: Detach__8StateVarP12StateVarView
PASS: gdb.cp/demangle.exp: gnu: Done__9ComponentG8Iterator
PASS: gdb.cp/demangle.exp: gnu: DrawDestinationTransformedImage__FP7_XImageiiT0iiUlUiiiUiUlUlP4_XGCRC13ivTransformeriiii
PASS: gdb.cp/demangle.exp: gnu: Edit__12StringEditorPCcii
PASS: gdb.cp/demangle.exp: gnu: Effect__11RelateManipR7ivEvent
PASS: gdb.cp/demangle.exp: gnu: FilterName__FPCc
PASS: gdb.cp/demangle.exp: gnu: Filter__6PSTextPCci
PASS: gdb.cp/demangle.exp: gnu: FindColor__7CatalogPCciii
PASS: gdb.cp/demangle.exp: gnu: FindFixed__FRP4CNetP4CNet
PASS: gdb.cp/demangle.exp: gnu: FindFont__7CatalogPCcN21
PASS: gdb.cp/demangle.exp: gnu: Fix48_abort__FR8twolongs
PASS: gdb.cp/demangle.exp: gnu: GetBarInfo__15iv2_6_VScrollerP13ivPerspectiveRiT2
PASS: gdb.cp/demangle.exp: gnu: GetBgColor__C9ivPainter
PASS: gdb.cp/demangle.exp: gnu: Iisdouble__FPC6IntRep
PASS: gdb.cp/demangle.exp: gnu: InsertBody__15H_PullrightMenuii
PASS: gdb.cp/demangle.exp: gnu: InsertCharacter__9TextManipc
PASS: gdb.cp/demangle.exp: gnu: InsertToplevel__7ivWorldP12ivInteractorT1
PASS: gdb.cp/demangle.exp: gnu: InsertToplevel__7ivWorldP12ivInteractorT1iiUi
PASS: gdb.cp/demangle.exp: gnu: IsADirectory__FPCcR4stat
PASS: gdb.cp/demangle.exp: gnu: IsAGroup__FP11GraphicViewP11GraphicComp
PASS: gdb.cp/demangle.exp: gnu: IsA__10ButtonCodeUl
PASS: gdb.cp/demangle.exp: gnu: ReadName__FR7istreamPc
PASS: gdb.cp/demangle.exp: gnu: Redraw__13StringBrowseriiii
PASS: gdb.cp/demangle.exp: gnu: Rotate__13ivTransformerf
PASS: gdb.cp/demangle.exp: gnu: Rotated__C13ivTransformerf
PASS: gdb.cp/demangle.exp: gnu: Round__Ff
PASS: gdb.cp/demangle.exp: gnu: SetExport__16MemberSharedNameUi
PASS: gdb.cp/demangle.exp: gnu: Set__14ivControlState13ControlStatusUi
PASS: gdb.cp/demangle.exp: gnu: Set__5DFacePcii
PASS: gdb.cp/demangle.exp: gnu: VConvert__9ivTSolverP12ivInteractorRP8TElementT2
PASS: gdb.cp/demangle.exp: gnu: VConvert__9ivTSolverP7ivTGlueRP8TElement
PASS: gdb.cp/demangle.exp: gnu: VOrder__9ivTSolverUiRP12ivInteractorT2
PASS: gdb.cp/demangle.exp: gnu: Valid__7CatalogPCcRP4Tool
PASS: gdb.cp/demangle.exp: gnu: _10PageButton$__both
PASS: gdb.cp/demangle.exp: gnu: _3RNG$singleMantissa
PASS: gdb.cp/demangle.exp: gnu: _5IComp$_release
PASS: gdb.cp/demangle.exp: gnu: _$_10BitmapComp
PASS: gdb.cp/demangle.exp: gnu: _$_9__io_defs
PASS: gdb.cp/demangle.exp: gnu: _$_Q23foo3bar
PASS: gdb.cp/demangle.exp: gnu: _$_Q33foo3bar4bell
PASS: gdb.cp/demangle.exp: gnu: __10ivTelltaleiP7ivGlyph
PASS: gdb.cp/demangle.exp: gnu: __10ivViewportiP12ivInteractorUi
PASS: gdb.cp/demangle.exp: gnu: __10ostrstream
PASS: gdb.cp/demangle.exp: gnu: __10ostrstreamPcii
PASS: gdb.cp/demangle.exp: gnu: __11BasicDialogiPCcP13ivButtonStateN22Ui
PASS: gdb.cp/demangle.exp: gnu: __11BitmapTablei
PASS: gdb.cp/demangle.exp: gnu: __12ViewportCodeP12ViewportComp
PASS: gdb.cp/demangle.exp: gnu: __12iv2_6_BorderiPCci
PASS: gdb.cp/demangle.exp: gnu: __12iv2_6_Borderii
PASS: gdb.cp/demangle.exp: gnu: __12ivBackgroundiP7ivGlyphPC7ivColor
PASS: gdb.cp/demangle.exp: gnu: __12ivBreak_Listl
PASS: gdb.cp/demangle.exp: gnu: __14TextInteractoriPCcUi
PASS: gdb.cp/demangle.exp: gnu: __14iv2_6_MenuItemiP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: __14iv2_6_MenuItemiPCcP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: __20DisplayList_IteratorR11DisplayList
PASS: gdb.cp/demangle.exp: gnu: __3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __3fooiN31
PASS: gdb.cp/demangle.exp: gnu: __3fooiPCc
PASS: gdb.cp/demangle.exp: gnu: __3fooiRT0iT2iT2
PASS: gdb.cp/demangle.exp: gnu: __6GetOptiPPcPCc
PASS: gdb.cp/demangle.exp: gnu: __6KeyMapPT0
PASS: gdb.cp/demangle.exp: gnu: __7ivWorldPCcRiPPcPC12ivOptionDescPC14ivPropertyData
PASS: gdb.cp/demangle.exp: gnu: __7procbufPCci
PASS: gdb.cp/demangle.exp: gnu: __8ArrowCmdP6EditorUiUi
PASS: gdb.cp/demangle.exp: gnu: __9F_EllipseiiiiP7Graphic
PASS: gdb.cp/demangle.exp: gnu: __9FrameDataP9FrameCompi
PASS: gdb.cp/demangle.exp: gnu: __9HVGraphicP9CanvasVarP7Graphic
PASS: gdb.cp/demangle.exp: gnu: __Q23foo3bar
PASS: gdb.cp/demangle.exp: gnu: __Q33foo3bar4bell
PASS: gdb.cp/demangle.exp: gnu: __aa__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aad__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ad__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __adv__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aer__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __als__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __amd__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ami__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aml__3FixRT0
PASS: gdb.cp/demangle.exp: gnu: __aml__5Fix16i
PASS: gdb.cp/demangle.exp: gnu: __aml__5Fix32RT0
PASS: gdb.cp/demangle.exp: gnu: __aor__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __apl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ars__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __as__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __cl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __cl__6Normal
PASS: gdb.cp/demangle.exp: gnu: __cl__6Stringii
PASS: gdb.cp/demangle.exp: gnu: __cm__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __co__3foo
PASS: gdb.cp/demangle.exp: gnu: __dl__3fooPv
PASS: gdb.cp/demangle.exp: gnu: __dv__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __er__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ge__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __gt__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __le__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ls__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ls__FR7ostreamPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: gnu: __ls__FR7ostreamR3Fix
PASS: gdb.cp/demangle.exp: gnu: __lt__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __md__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __mi__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ml__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __mm__3fooi
PASS: gdb.cp/demangle.exp: gnu: __ne__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC7ComplexT0
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC7Complexd
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC9SubStringRC6String
PASS: gdb.cp/demangle.exp: gnu: __nt__3foo
PASS: gdb.cp/demangle.exp: gnu: __nw__3fooi
PASS: gdb.cp/demangle.exp: gnu: __oo__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __opPc__3foo
PASS: gdb.cp/demangle.exp: gnu: __opi__3foo
PASS: gdb.cp/demangle.exp: gnu: __or__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __pl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __pp__3fooi
PASS: gdb.cp/demangle.exp: gnu: __rf__3foo
PASS: gdb.cp/demangle.exp: gnu: __rm__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __rs__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __vc__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: _gsub__6StringRC5RegexPCci
PASS: gdb.cp/demangle.exp: gnu: _new_Fix__FUs
PASS: gdb.cp/demangle.exp: gnu: _vt.foo
PASS: gdb.cp/demangle.exp: gnu: _vt.foo.bar
PASS: gdb.cp/demangle.exp: gnu: _vt$foo
PASS: gdb.cp/demangle.exp: gnu: _vt$foo$bar
PASS: gdb.cp/demangle.exp: gnu: append__7ivGlyphPT0
PASS: gdb.cp/demangle.exp: gnu: arg__FRC7Complex
PASS: gdb.cp/demangle.exp: gnu: clearok__FP7_win_sti
PASS: gdb.cp/demangle.exp: gnu: complexfunc2__FPFPc_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc3__FPFPFPl_s_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc4__FPFPFPc_s_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc5__FPFPc_PFl_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc6__FPFPi_PFl_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc7__FPFPFPc_i_PFl_i
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRC10BitPattern
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRC12BitSubStringi
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRT0
PASS: gdb.cp/demangle.exp: gnu: div__FPC6IntRepT0P6IntRep
PASS: gdb.cp/demangle.exp: gnu: div__FPC6IntReplP6IntRep
PASS: gdb.cp/demangle.exp: gnu: div__FRC8RationalT0R8Rational
PASS: gdb.cp/demangle.exp: gnu: divide__FRC7IntegerT0R7IntegerT2
PASS: gdb.cp/demangle.exp: gnu: divide__FRC7IntegerlR7IntegerRl
PASS: gdb.cp/demangle.exp: gnu: enable__14DocumentViewerPCcUi
PASS: gdb.cp/demangle.exp: gnu: foo__FiN30
PASS: gdb.cp/demangle.exp: gnu: foo__FiR3fooiT1iT1
PASS: gdb.cp/demangle.exp: gnu: foo___3barl
PASS: gdb.cp/demangle.exp: gnu: insert__15ivClippingStacklRP8_XRegion
PASS: gdb.cp/demangle.exp: gnu: insert__16ChooserInfo_ListlR11ChooserInfo
PASS: gdb.cp/demangle.exp: gnu: insert__17FontFamilyRepListlRP15ivFontFamilyRep
PASS: gdb.cp/demangle.exp: gnu: leaveok__FP7_win_stc
PASS: gdb.cp/demangle.exp: gnu: left_mover__C7ivMFKitP12ivAdjustableP7ivStyle
PASS: gdb.cp/demangle.exp: gnu: matches__C9BitStringRC10BitPatterni
PASS: gdb.cp/demangle.exp: gnu: matches__C9SubStringRC5Regex
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FSc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUi
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUl
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUs
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fd
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Ff
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fi
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fl
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fs
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fv
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fi
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: pick__13ivCompositionP8ivCanvasRC12ivAllocationiR5ivHit
PASS: gdb.cp/demangle.exp: gnu: pointer__C11ivHScrollerRC7ivEventRC12ivAllocation
PASS: gdb.cp/demangle.exp: gnu: poke__8ivRasterUlUlffff
PASS: gdb.cp/demangle.exp: gnu: polar__Fdd
PASS: gdb.cp/demangle.exp: gnu: read__10osStdInputRPCc
PASS: gdb.cp/demangle.exp: gnu: scale__13ivTransformerff
PASS: gdb.cp/demangle.exp: gnu: scanw__12CursesWindowPCce
PASS: gdb.cp/demangle.exp: gnu: scmp__FPCcT0
PASS: gdb.cp/demangle.exp: gnu: sgetn__7filebufPci
PASS: gdb.cp/demangle.exp: gnu: shift__FP5_FrepiT0
PASS: gdb.cp/demangle.exp: gnu: test__C6BitSeti
PASS: gdb.cp/demangle.exp: gnu: test__C6BitSetii
PASS: gdb.cp/demangle.exp: gnu: testbit__FRC7Integerl
PASS: gdb.cp/demangle.exp: gnu: text_source__8Documentl
PASS: gdb.cp/demangle.exp: gnu: variance__6Erlangd
PASS: gdb.cp/demangle.exp: gnu: vform__8iostreamPCcPc
PASS: gdb.cp/demangle.exp: gnu: view__14DocumentViewerP8ItemViewP11TabularItem
PASS: gdb.cp/demangle.exp: gnu: xy_extents__11ivExtensionffff
PASS: gdb.cp/demangle.exp: gnu: zero__8osMemoryPvUi
PASS: gdb.cp/demangle.exp: gnu: _2T4$N
PASS: gdb.cp/demangle.exp: gnu: _Q22T42t1$N
PASS: gdb.cp/demangle.exp: gnu: get__2T1
PASS: gdb.cp/demangle.exp: gnu: get__Q22T11a
PASS: gdb.cp/demangle.exp: gnu: get__Q32T11a1b
PASS: gdb.cp/demangle.exp: gnu: get__Q42T11a1b1c
PASS: gdb.cp/demangle.exp: gnu: get__Q52T11a1b1c1d
PASS: gdb.cp/demangle.exp: gnu: put__2T1i
PASS: gdb.cp/demangle.exp: gnu: put__Q22T11ai
PASS: gdb.cp/demangle.exp: gnu: put__Q32T11a1bi
PASS: gdb.cp/demangle.exp: gnu: put__Q42T11a1b1ci
PASS: gdb.cp/demangle.exp: gnu: put__Q52T11a1b1c1di
PASS: gdb.cp/demangle.exp: gnu: bar__3fooPv
PASS: gdb.cp/demangle.exp: gnu: bar__3fooPCv
PASS: gdb.cp/demangle.exp: gnu: bar__C3fooPv
PASS: gdb.cp/demangle.exp: gnu: bar__C3fooPCv
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRC3foo
PASS: gdb.cp/demangle.exp: gnu: __eq__C3fooR3foo
PASS: gdb.cp/demangle.exp: gnu: __eq__C3fooRT0
PASS: gdb.cp/demangle.exp: gnu: elem__t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: elem__t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: __t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: __t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: _$_t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: _$_t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: __nw__t2T11ZcUi
PASS: gdb.cp/demangle.exp: gnu: __nw__t2T11Z1tUi
PASS: gdb.cp/demangle.exp: gnu: __dl__t2T11ZcPv
PASS: gdb.cp/demangle.exp: gnu: __dl__t2T11Z1tPv
PASS: gdb.cp/demangle.exp: gnu: __t2T11Zci
PASS: gdb.cp/demangle.exp: gnu: __t2T11Zc
PASS: gdb.cp/demangle.exp: gnu: __t2T11Z1ti
PASS: gdb.cp/demangle.exp: gnu: __t2T11Z1t
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3PixPQ2t4List1Z10VHDLEntity7element
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3PixRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity7elementRC10VHDLEntityPT0
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity7elementRCQ2t4List1Z10VHDLEntity7element
PASS: gdb.cp/demangle.exp: gnu: __cl__C11VHDLLibraryGt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct4List1Z10VHDLEntityRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4List1Z10VHDLEntityRCt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityP14VHDLLibraryRepGQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: nextE__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: next__Ct4List1Z10VHDLEntityRQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: _GLOBAL_$D$set
PASS: gdb.cp/demangle.exp: gnu: _GLOBAL_$I$set
PASS: gdb.cp/demangle.exp: gnu: __as__t5ListS1ZUiRCt5ListS1ZUi
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct5ListS1ZUiRCQ2t5ListS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct5SetLS1ZUiRCQ2t5SetLS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __t10ListS_link1ZUiRCUiPT0
PASS: gdb.cp/demangle.exp: gnu: __t10ListS_link1ZUiRCt10ListS_link1ZUi
PASS: gdb.cp/demangle.exp: gnu: __t5ListS1ZUiRCt5ListS1ZUi
PASS: gdb.cp/demangle.exp: gnu: next__Ct5ListS1ZUiRQ2t5ListS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ2t5SetLS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __t8ListElem1Z5LabelRt4List1Z5Label
PASS: gdb.cp/demangle.exp: gnu: __t8BDDHookV1ZPcRCPc
PASS: gdb.cp/demangle.exp: gnu: _vt$t8BDDHookV1ZPc
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ211BDDFunction4VixB
PASS: gdb.cp/demangle.exp: gnu: __eq__FPvRCQ211BDDFunction4VixB
PASS: gdb.cp/demangle.exp: gnu: relativeId__CQ36T_phi210T_preserve8FPC_nextRCQ26T_phi210T_preserveRC10Parameters
PASS: gdb.cp/demangle.exp: gnu: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: gnu: foo__I40
PASS: gdb.cp/demangle.exp: gnu: foo__I_200_
PASS: gdb.cp/demangle.exp: gnu: foo__I_200
PASS: gdb.cp/demangle.exp: gnu: foo__I_4000000000000000000000000000000000000000000000000000000000000000000000000
PASS: gdb.cp/demangle.exp: gnu: __thunk_64__0RL__list__Q29CosNaming20_proxy_NamingContextUlRPt25_CORBA_Unbounded_Sequence1ZQ29CosNaming7BindingRPQ29CosNaming15BindingIterator
PASS: gdb.cp/demangle.exp: arm: set demangle-style
PASS: gdb.cp/demangle.exp: arm: check demangling style
PASS: gdb.cp/demangle.exp: arm: __dt__21T5__pt__11_PFiPPdPv_iFv
PASS: gdb.cp/demangle.exp: arm: __ct__1cFi
PASS: gdb.cp/demangle.exp: arm: __dt__11T5__pt__2_iFv
PASS: gdb.cp/demangle.exp: arm: __dt__11T5__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __ct__2T2Fi
PASS: gdb.cp/demangle.exp: arm: __dt__2T1Fv
PASS: gdb.cp/demangle.exp: arm: __dt__12T5__pt__3_1xFv
PASS: gdb.cp/demangle.exp: arm: __dt__17T5__pt__8_PFcPv_iFv
PASS: gdb.cp/demangle.exp: arm: g__FP1cPC1cT1
PASS: gdb.cp/demangle.exp: arm: g__FPUlPCUlT1
PASS: gdb.cp/demangle.exp: arm: g__FPUiPCUiT1
PASS: gdb.cp/demangle.exp: arm: g__FPUsPCUsT1
PASS: gdb.cp/demangle.exp: arm: g__FPUcPCUcT1
PASS: gdb.cp/demangle.exp: arm: g__F1TPlPClT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRlRClT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPiPCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRiRCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPsPCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRsRCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPcPCcT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRcRCcT2
PASS: gdb.cp/demangle.exp: arm: __ct__21T5__pt__11_PFiPPdPv_iFi
PASS: gdb.cp/demangle.exp: arm: __gt__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __ge__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __lt__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __le__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __ne__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __eq__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __amd__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __adv__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __amu__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __ami__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __apl__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __nw__2T1SFUi
PASS: gdb.cp/demangle.exp: arm: __dl__2T1SFPv
PASS: gdb.cp/demangle.exp: arm: put__2T7SFi
PASS: gdb.cp/demangle.exp: arm: __dl__12T5__pt__3_1xSFPv
PASS: gdb.cp/demangle.exp: arm: h__FUc
PASS: gdb.cp/demangle.exp: arm: f__Fic
PASS: gdb.cp/demangle.exp: arm: h__FUi
PASS: gdb.cp/demangle.exp: arm: h__Fci
PASS: gdb.cp/demangle.exp: arm: h__FUl
PASS: gdb.cp/demangle.exp: arm: h__Fcl
PASS: gdb.cp/demangle.exp: arm: h__FUs
PASS: gdb.cp/demangle.exp: arm: h__Fcs
PASS: gdb.cp/demangle.exp: arm: __amd__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __adv__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __amu__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __ami__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __apl__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUlRPCUlT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUiRPCUiT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUsRPCUsT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUcRPCUcT2
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPlRPClT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPiRPCiT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPcRPCcT3
PASS: gdb.cp/demangle.exp: arm: X__12T5__pt__3_1x
PASS: gdb.cp/demangle.exp: arm: __ct__11T5__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__11T5__pt__2_cFi
PASS: gdb.cp/demangle.exp: arm: __gt__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __ge__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __lt__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __le__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __ne__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __eq__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: g__FcR1cRC1cT2
PASS: gdb.cp/demangle.exp: arm: g__FcRPdRPCdT2
PASS: gdb.cp/demangle.exp: arm: g__FcRPfRPCfT2
PASS: gdb.cp/demangle.exp: arm: h__FcT1
PASS: gdb.cp/demangle.exp: arm: f__Ficd
PASS: gdb.cp/demangle.exp: arm: g__F1T1SdRPsRPCsT4
PASS: gdb.cp/demangle.exp: arm: g__F1cC1cT1
PASS: gdb.cp/demangle.exp: arm: g__FPdPCdT1
PASS: gdb.cp/demangle.exp: arm: g__FPfPCfT1
PASS: gdb.cp/demangle.exp: arm: g__FUlCUlT1
PASS: gdb.cp/demangle.exp: arm: g__FPlPClT1
PASS: gdb.cp/demangle.exp: arm: g__FUiCUiT1
PASS: gdb.cp/demangle.exp: arm: g__FPiPCiT1
PASS: gdb.cp/demangle.exp: arm: g__FUsCUsT1
PASS: gdb.cp/demangle.exp: arm: g__FPsPCsT1
PASS: gdb.cp/demangle.exp: arm: g__FUcCUcT1
PASS: gdb.cp/demangle.exp: arm: g__FPcPCcT1
PASS: gdb.cp/demangle.exp: arm: g__F1TlClT2
PASS: gdb.cp/demangle.exp: arm: g__F1TiCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1TsCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1TcCcT2
PASS: gdb.cp/demangle.exp: arm: __dl__17T5__pt__8_PFcPv_iSFPv
PASS: gdb.cp/demangle.exp: arm: printf__FPCce
PASS: gdb.cp/demangle.exp: arm: X__17T5__pt__8_PFcPv_i
PASS: gdb.cp/demangle.exp: arm: __ct__12T5__pt__3_1xFi
PASS: gdb.cp/demangle.exp: arm: g__F1SRUlRCUlT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPlRPClT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUiRCUiT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPiRPCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUsRCUsT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPsRPCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUcRCUcT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPcRPCcT2
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRlRClT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRiRCiT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRsRCsT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRcRCcT3
PASS: gdb.cp/demangle.exp: arm: __dl__21T5__pt__11_PFiPPdPv_iSFPv
PASS: gdb.cp/demangle.exp: arm: __std__foo
PASS: gdb.cp/demangle.exp: arm: __sti__bar
PASS: gdb.cp/demangle.exp: arm: f__FicdPcPFci_v
PASS: gdb.cp/demangle.exp: arm: f__FicdPcPFic_v
PASS: gdb.cp/demangle.exp: arm: get__2T7SFv
PASS: gdb.cp/demangle.exp: arm: X__21T5__pt__11_PFiPPdPv_i
PASS: gdb.cp/demangle.exp: arm: g__FcRdRCdT2
PASS: gdb.cp/demangle.exp: arm: g__FcRfRCfT2
PASS: gdb.cp/demangle.exp: arm: __md__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __dv__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __ml__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __mi__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __pl__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __dl__11T5__pt__2_iSFPv
PASS: gdb.cp/demangle.exp: arm: __dl__11T5__pt__2_cSFPv
PASS: gdb.cp/demangle.exp: arm: h__Fc
PASS: gdb.cp/demangle.exp: arm: h__Fd
PASS: gdb.cp/demangle.exp: arm: h__Ff
PASS: gdb.cp/demangle.exp: arm: h__Fi
PASS: gdb.cp/demangle.exp: arm: f__Fi
PASS: gdb.cp/demangle.exp: arm: h__Fl
PASS: gdb.cp/demangle.exp: arm: h__Fs
PASS: gdb.cp/demangle.exp: arm: __md__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __dv__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __ml__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __mi__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __pl__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: g__FcRP1cRPC1cT2
PASS: gdb.cp/demangle.exp: arm: X__11T5__pt__2_c
PASS: gdb.cp/demangle.exp: arm: X__11T5__pt__2_i
PASS: gdb.cp/demangle.exp: arm: g__FdCdT1
PASS: gdb.cp/demangle.exp: arm: g__FfCfT1
PASS: gdb.cp/demangle.exp: arm: g__FlClT1
PASS: gdb.cp/demangle.exp: arm: g__FiCiT1
PASS: gdb.cp/demangle.exp: arm: g__FsCsT1
PASS: gdb.cp/demangle.exp: arm: g__FcCcT1
PASS: gdb.cp/demangle.exp: arm: __ct__17T5__pt__8_PFcPv_iFi
PASS: gdb.cp/demangle.exp: arm: f__FicdPc
PASS: gdb.cp/demangle.exp: arm: __nw__FUi
PASS: gdb.cp/demangle.exp: arm: __ct__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: __dt__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: put__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: get__Q2_2T11aSFv
PASS: gdb.cp/demangle.exp: arm: put__2T1SFi
PASS: gdb.cp/demangle.exp: arm: put__Q5_2T11a1b1c1dSFi
PASS: gdb.cp/demangle.exp: arm: get__Q4_2T11a1b1cSFv
PASS: gdb.cp/demangle.exp: arm: put__Q2_2T11aSFi
PASS: gdb.cp/demangle.exp: arm: put__Q4_2T11a1b1cSFi
PASS: gdb.cp/demangle.exp: arm: get__Q3_2T11a1bSFv
PASS: gdb.cp/demangle.exp: arm: get__2T1SFv
PASS: gdb.cp/demangle.exp: arm: get__Q5_2T11a1b1c1dSFv
PASS: gdb.cp/demangle.exp: arm: __dt__11T1__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __dt__12T1__pt__3_1tFv
PASS: gdb.cp/demangle.exp: arm: __dl__12T1__pt__3_1tSFPv
PASS: gdb.cp/demangle.exp: arm: __ct__11T1__pt__2_cFi
PASS: gdb.cp/demangle.exp: arm: __ct__11T1__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __ct__12T1__pt__3_1tFi
PASS: gdb.cp/demangle.exp: arm: __ct__12T1__pt__3_1tFv
PASS: gdb.cp/demangle.exp: arm: __dl__11T1__pt__2_cSFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPCv
PASS: gdb.cp/demangle.exp: arm: bar__3fooCFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooCFPCv
PASS: gdb.cp/demangle.exp: arm: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooFRC3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooCFR3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooCFRC3foo
PASS: gdb.cp/demangle.exp: arm: elem__15vector__pt__2_dFi
PASS: gdb.cp/demangle.exp: arm: elem__15vector__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__15vector__pt__2_dFi
PASS: gdb.cp/demangle.exp: arm: __ct__15vector__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__25DListNode__pt__9_R6RLabelFR6RLabelP25DListNode__pt__9_R6RLabelT2
PASS: gdb.cp/demangle.exp: arm: bar__3fooFiT16FooBar
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPiN51PdN37PcN211T1iN215
PASS: gdb.cp/demangle.exp: arm: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: hp: set demangle-style
PASS: gdb.cp/demangle.exp: hp: check demangling style
PASS: gdb.cp/demangle.exp: hp: g__FP1cPC1cT1
PASS: gdb.cp/demangle.exp: hp: g__FPUlPCUlT1
PASS: gdb.cp/demangle.exp: hp: g__FPUiPCUiT1
PASS: gdb.cp/demangle.exp: hp: g__FPUsPCUsT1
PASS: gdb.cp/demangle.exp: hp: g__FPUcPCUcT1
PASS: gdb.cp/demangle.exp: hp: g__F1TPlPClT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRlRClT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPiPCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRiRCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPsPCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRsRCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPcPCcT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRcRCcT2
PASS: gdb.cp/demangle.exp: hp: __gt__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __ge__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __lt__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __le__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __ne__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __eq__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __amd__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __adv__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __amu__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __ami__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __apl__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __nw__2T1SFUi
PASS: gdb.cp/demangle.exp: hp: __dl__2T1SFPv
PASS: gdb.cp/demangle.exp: hp: put__2T7SFi
PASS: gdb.cp/demangle.exp: hp: h__FUc
PASS: gdb.cp/demangle.exp: hp: f__Fic
PASS: gdb.cp/demangle.exp: hp: h__FUi
PASS: gdb.cp/demangle.exp: hp: h__Fci
PASS: gdb.cp/demangle.exp: hp: h__FUl
PASS: gdb.cp/demangle.exp: hp: h__Fcl
PASS: gdb.cp/demangle.exp: hp: h__FUs
PASS: gdb.cp/demangle.exp: hp: h__Fcs
PASS: gdb.cp/demangle.exp: hp: __amd__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __adv__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __amu__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __ami__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __apl__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUlRPCUlT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUiRPCUiT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUsRPCUsT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUcRPCUcT2
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPlRPClT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPiRPCiT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPcRPCcT3
PASS: gdb.cp/demangle.exp: hp: __gt__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __ge__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __lt__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __le__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __ne__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __eq__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: g__FcR1cRC1cT2
PASS: gdb.cp/demangle.exp: hp: g__FcRPdRPCdT2
PASS: gdb.cp/demangle.exp: hp: g__FcRPfRPCfT2
PASS: gdb.cp/demangle.exp: hp: h__FcT1
PASS: gdb.cp/demangle.exp: hp: f__Ficd
PASS: gdb.cp/demangle.exp: hp: g__F1T1SdRPsRPCsT4
PASS: gdb.cp/demangle.exp: hp: g__F1cC1cT1
PASS: gdb.cp/demangle.exp: hp: g__FPdPCdT1
PASS: gdb.cp/demangle.exp: hp: g__FPfPCfT1
PASS: gdb.cp/demangle.exp: hp: g__FUlCUlT1
PASS: gdb.cp/demangle.exp: hp: g__FPlPClT1
PASS: gdb.cp/demangle.exp: hp: g__FUiCUiT1
PASS: gdb.cp/demangle.exp: hp: g__FPiPCiT1
PASS: gdb.cp/demangle.exp: hp: g__FUsCUsT1
PASS: gdb.cp/demangle.exp: hp: g__FPsPCsT1
PASS: gdb.cp/demangle.exp: hp: g__FUcCUcT1
PASS: gdb.cp/demangle.exp: hp: g__FPcPCcT1
PASS: gdb.cp/demangle.exp: hp: g__F1TlClT2
PASS: gdb.cp/demangle.exp: hp: g__F1TiCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1TsCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1TcCcT2
PASS: gdb.cp/demangle.exp: hp: printf__FPCce
PASS: gdb.cp/demangle.exp: hp: g__F1SRUlRCUlT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPlRPClT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUiRCUiT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPiRPCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUsRCUsT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPsRPCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUcRCUcT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPcRPCcT2
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRlRClT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRiRCiT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRsRCsT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRcRCcT3
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFci_v
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFic_v
PASS: gdb.cp/demangle.exp: hp: get__2T7SFv
PASS: gdb.cp/demangle.exp: hp: g__FcRdRCdT2
PASS: gdb.cp/demangle.exp: hp: g__FcRfRCfT2
PASS: gdb.cp/demangle.exp: hp: __md__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __dv__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __ml__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __mi__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __pl__FC2T2i
PASS: gdb.cp/demangle.exp: hp: h__Fc
PASS: gdb.cp/demangle.exp: hp: h__Fd
PASS: gdb.cp/demangle.exp: hp: h__Ff
PASS: gdb.cp/demangle.exp: hp: h__Fi
PASS: gdb.cp/demangle.exp: hp: f__Fi
PASS: gdb.cp/demangle.exp: hp: h__Fl
PASS: gdb.cp/demangle.exp: hp: h__Fs
PASS: gdb.cp/demangle.exp: hp: __md__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __dv__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __ml__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __mi__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __pl__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: g__FcRP1cRPC1cT2
PASS: gdb.cp/demangle.exp: hp: g__FdCdT1
PASS: gdb.cp/demangle.exp: hp: g__FfCfT1
PASS: gdb.cp/demangle.exp: hp: g__FlClT1
PASS: gdb.cp/demangle.exp: hp: g__FiCiT1
PASS: gdb.cp/demangle.exp: hp: g__FsCsT1
PASS: gdb.cp/demangle.exp: hp: g__FcCcT1
PASS: gdb.cp/demangle.exp: hp: f__FicdPc
PASS: gdb.cp/demangle.exp: hp: __nw__FUi
PASS: gdb.cp/demangle.exp: hp: __ct__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: __dt__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: put__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: get__Q2_2T11aSFv
PASS: gdb.cp/demangle.exp: hp: put__2T1SFi
PASS: gdb.cp/demangle.exp: hp: put__Q5_2T11a1b1c1dSFi
PASS: gdb.cp/demangle.exp: hp: get__Q4_2T11a1b1cSFv
PASS: gdb.cp/demangle.exp: hp: put__Q2_2T11aSFi
PASS: gdb.cp/demangle.exp: hp: put__Q4_2T11a1b1cSFi
PASS: gdb.cp/demangle.exp: hp: get__Q3_2T11a1bSFv
PASS: gdb.cp/demangle.exp: hp: get__2T1SFv
PASS: gdb.cp/demangle.exp: hp: get__Q5_2T11a1b1c1dSFv
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPv
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPCv
PASS: gdb.cp/demangle.exp: hp: bar__3fooCFPv
PASS: gdb.cp/demangle.exp: hp: bar__3fooCFPCv
PASS: gdb.cp/demangle.exp: hp: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooFRC3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooCFR3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooCFRC3foo
PASS: gdb.cp/demangle.exp: hp: bar__3fooFiT16FooBar
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPiN51PdN37PcN211T1iN215
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTPFiPPdPv_i__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__1cFi
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTi__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T2Fi
PASS: gdb.cp/demangle.exp: hp: __dt__2T1Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XT1x__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTPFcPv_i__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFiPPdPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XT1x__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XT1x
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTc__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTPFcPv_i__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTPFcPv_i
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XT1x__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTPFiPPdPv_i__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTPFiPPdPv_i
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTi__SFPv
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTc__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTc
PASS: gdb.cp/demangle.exp: hp: X__2T5XTi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: __dt__2T1XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T1XT1t__Fv
PASS: gdb.cp/demangle.exp: hp: __dl__2T1XT1t__SFPv
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XTc__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XT1t__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XT1t__Fv
PASS: gdb.cp/demangle.exp: hp: __dl__2T1XTc__SFPv
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTd__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__6vectorXTd__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__6vectorXTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__9DListNodeXTR6RLabel__FR6RLabelP9DListNodeXTR6RLabel_T2
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiUP34__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXUP2701Td__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSP334__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSM__SCFPPd
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67UP4000TRs__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67TRdTFPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: X__6vectorXTiSN67TdTPvUP5TRs
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiA3foo__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiA3fooTPvA5Label__FiPPvT2
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN42A3foo__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi_2
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi_19
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFci_v_34
PASS: gdb.cp/demangle.exp: hp: spec__13Spec<%1,%1.*>XTiTPi_FPi
PASS: gdb.cp/demangle.exp: hp: spec__16Spec<%1,%1.&,%1>XTiTRiTi_FPi
PASS: gdb.cp/demangle.exp: hp: add__XTc_FcT1
PASS: gdb.cp/demangle.exp: hp: add__XTcSP9A5label_FcPPlT1
PASS: gdb.cp/demangle.exp: hp: add__XTPfTFPd_f_FcT1
PASS: gdb.cp/demangle.exp: hp: unLink__12basic_stringXTcT18string_char_traitsXTc_T9allocator_Fv
PASS: gdb.cp/demangle.exp: hp: _Utf390_1__1_9223372036854775807__9223372036854775
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/derivation.exp ...
PASS: gdb.cp/derivation.exp: before run: ptype A::value_type
PASS: gdb.cp/derivation.exp: before run: whatis A::value_type
PASS: gdb.cp/derivation.exp: before run: p (A::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype D::value_type
PASS: gdb.cp/derivation.exp: before run: whatis D::value_type
PASS: gdb.cp/derivation.exp: before run: p (D::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype E::value_type
PASS: gdb.cp/derivation.exp: before run: whatis E::value_type
PASS: gdb.cp/derivation.exp: before run: p (E::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype F::value_type
PASS: gdb.cp/derivation.exp: before run: whatis F::value_type
PASS: gdb.cp/derivation.exp: before run: p (F::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype A2::value_type
PASS: gdb.cp/derivation.exp: before run: whatis A2::value_type
PASS: gdb.cp/derivation.exp: before run: p (A2::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype D2::value_type
PASS: gdb.cp/derivation.exp: before run: whatis D2::value_type
PASS: gdb.cp/derivation.exp: before run: p (D2::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype Z::value_type
PASS: gdb.cp/derivation.exp: before run: whatis Z::value_type
PASS: gdb.cp/derivation.exp: before run: p (Z::value_type) 0
PASS: gdb.cp/derivation.exp: before run: ptype ZZ::value_type
PASS: gdb.cp/derivation.exp: before run: whatis ZZ::value_type
PASS: gdb.cp/derivation.exp: before run: p (ZZ::value_type) 0
PASS: gdb.cp/derivation.exp: at marker1: ptype A::value_type
PASS: gdb.cp/derivation.exp: at marker1: whatis A::value_type
PASS: gdb.cp/derivation.exp: at marker1: p (A::value_type) 0
PASS: gdb.cp/derivation.exp: at marker1: ptype D::value_type
PASS: gdb.cp/derivation.exp: at marker1: whatis D::value_type
PASS: gdb.cp/derivation.exp: at marker1: p (D::value_type) 0
PASS: gdb.cp/derivation.exp: at marker1: ptype A2::value_type
PASS: gdb.cp/derivation.exp: at marker1: whatis A2::value_type
PASS: gdb.cp/derivation.exp: at marker1: p (A2::value_type) 0
PASS: gdb.cp/derivation.exp: at marker1: ptype D2::value_type
PASS: gdb.cp/derivation.exp: at marker1: whatis D2::value_type
PASS: gdb.cp/derivation.exp: at marker1: p (D2::value_type) 0
PASS: gdb.cp/derivation.exp: up from marker1
PASS: gdb.cp/derivation.exp: print value of a_instance
PASS: gdb.cp/derivation.exp: ptype a_instance
PASS: gdb.cp/derivation.exp: print value of d_instance
PASS: gdb.cp/derivation.exp: ptype d_instance
PASS: gdb.cp/derivation.exp: print value of e_instance
PASS: gdb.cp/derivation.exp: ptype e_instance
PASS: gdb.cp/derivation.exp: print value of f_instance
PASS: gdb.cp/derivation.exp: ptype f_instance
PASS: gdb.cp/derivation.exp: ptype g_instance
PASS: gdb.cp/derivation.exp: print value of d_instance.a
PASS: gdb.cp/derivation.exp: print value of d_instance.aa
PASS: gdb.cp/derivation.exp: print value of d_instance.b
PASS: gdb.cp/derivation.exp: print value of d_instance.bb
PASS: gdb.cp/derivation.exp: print value of d_instance.c
PASS: gdb.cp/derivation.exp: print value of d_instance.cc
PASS: gdb.cp/derivation.exp: print value of d_instance.d
PASS: gdb.cp/derivation.exp: print value of d_instance.dd
PASS: gdb.cp/derivation.exp: print value of g_instance.a
PASS: gdb.cp/derivation.exp: print value of g_instance.b
PASS: gdb.cp/derivation.exp: print value of g_instance.c
PASS: gdb.cp/derivation.exp: print value of g_instance.afoo()
PASS: gdb.cp/derivation.exp: re-selected 'main' frame after inferior call
PASS: gdb.cp/derivation.exp: print value of g_instance.bfoo()
PASS: gdb.cp/derivation.exp: print value of g_instance.cfoo()
PASS: gdb.cp/derivation.exp: whatis c_instance.c
PASS: gdb.cp/derivation.exp: ptype c_instance.c
PASS: gdb.cp/derivation.exp: whatis g_instance.g
PASS: gdb.cp/derivation.exp: ptype g_instance.g
PASS: gdb.cp/derivation.exp: whatis a_instance.a
PASS: gdb.cp/derivation.exp: ptype a_instance.a
PASS: gdb.cp/derivation.exp: p (A::value_type) 0
PASS: gdb.cp/derivation.exp: whatis b_instance.b
PASS: gdb.cp/derivation.exp: ptype b_instance.b
PASS: gdb.cp/derivation.exp: whatis d_instance.d
PASS: gdb.cp/derivation.exp: ptype d_instance.d
PASS: gdb.cp/derivation.exp: p (D::value_type) 0
PASS: gdb.cp/derivation.exp: whatis e_instance.e
PASS: gdb.cp/derivation.exp: ptype e_instance.e
PASS: gdb.cp/derivation.exp: p (E::value_type) 0
PASS: gdb.cp/derivation.exp: whatis f_instance.f
PASS: gdb.cp/derivation.exp: ptype f_instance.f
PASS: gdb.cp/derivation.exp: p (F::value_type) 0
PASS: gdb.cp/derivation.exp: whatis z_instance.z
PASS: gdb.cp/derivation.exp: ptype z_instance.z
PASS: gdb.cp/derivation.exp: p (Z::value_type) 0
PASS: gdb.cp/derivation.exp: whatis zz_instance.zz
PASS: gdb.cp/derivation.exp: ptype zz_instance.zz
PASS: gdb.cp/derivation.exp: p (ZZ::value_type) 0
PASS: gdb.cp/derivation.exp: ptype vderived
PASS: gdb.cp/derivation.exp: print vderived
PASS: gdb.cp/derivation.exp: ptype N::value_type
PASS: gdb.cp/derivation.exp: ptype N::Derived::value_type
PASS: gdb.cp/derivation.exp: ptype value_type
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/destrprint.exp ...
PASS: gdb.cp/destrprint.exp: continue to breakpoint: Break here
PASS: gdb.cp/destrprint.exp: go up to ~Derived
PASS: gdb.cp/destrprint.exp: set print object on
PASS: gdb.cp/destrprint.exp: print *this with print object = on
PASS: gdb.cp/destrprint.exp: set print object off
PASS: gdb.cp/destrprint.exp: print *this with print object = off
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/dispcxx.exp ...
PASS: gdb.cp/dispcxx.exp: continue to breakpoint: here
PASS: gdb.cp/dispcxx.exp: display k
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/exception.exp ...
PASS: gdb.cp/exception.exp: catch catch (before inferior run)
PASS: gdb.cp/exception.exp: catch throw (before inferior run)
PASS: gdb.cp/exception.exp: catch rethrow (before inferior run)
PASS: gdb.cp/exception.exp: info breakpoints (before inferior run)
PASS: gdb.cp/exception.exp: Set temporary breakpoint at main
PASS: gdb.cp/exception.exp: Run to main
PASS: gdb.cp/exception.exp: info breakpoints (after inferior run)
PASS: gdb.cp/exception.exp: break catcher
PASS: gdb.cp/exception.exp: continue to first throw
PASS: gdb.cp/exception.exp: backtrace after first throw
PASS: gdb.cp/exception.exp: continue to first catch
PASS: gdb.cp/exception.exp: backtrace after first catch
PASS: gdb.cp/exception.exp: continue to catcher for the first time
PASS: gdb.cp/exception.exp: continue to second throw
PASS: gdb.cp/exception.exp: backtrace after second throw
PASS: gdb.cp/exception.exp: continue to second catch
PASS: gdb.cp/exception.exp: backtrace after second catch
PASS: gdb.cp/exception.exp: continue to catcher for the second time
PASS: gdb.cp/exception.exp: continue to rethrow
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/exceptprint.exp ...
UNTESTED: gdb.cp/exceptprint.exp: could not find libstdc++ stap probe
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/expand-psymtabs-cxx.exp ...
PASS: gdb.cp/expand-psymtabs-cxx.exp: set language c++
PASS: gdb.cp/expand-psymtabs-cxx.exp: before expand
PASS: gdb.cp/expand-psymtabs-cxx.exp: force expand
PASS: gdb.cp/expand-psymtabs-cxx.exp: after expand
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/expand-sals.exp ...
PASS: gdb.cp/expand-sals.exp: continue to breakpoint: func
PASS: gdb.cp/expand-sals.exp: up
PASS: gdb.cp/expand-sals.exp: break
PASS: gdb.cp/expand-sals.exp: continue to breakpoint: caller
PASS: gdb.cp/expand-sals.exp: bt from A
PASS: gdb.cp/expand-sals.exp: continue to breakpoint: next caller func
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/extern-c.exp ...
PASS: gdb.cp/extern-c.exp: setting breakpoint at c_func
PASS: gdb.cp/extern-c.exp: continue to breakpoint: c_func
PASS: gdb.cp/extern-c.exp: initialize counter
PASS: gdb.cp/extern-c.exp: rbreak c_funcs
PASS: gdb.cp/extern-c.exp: command details for multiple breakpoints
PASS: gdb.cp/extern-c.exp: set commands on multiple breakpoints
PASS: gdb.cp/extern-c.exp: continue to breakpoint: c_funcs_1
PASS: gdb.cp/extern-c.exp: verify counter at first breakpoint
PASS: gdb.cp/extern-c.exp: continue to breakpoint: c_funcs_2
PASS: gdb.cp/extern-c.exp: verify counter at second breakpoint
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/formatted-ref.exp ...
PASS: gdb.cp/formatted-ref.exp: print/x s
PASS: gdb.cp/formatted-ref.exp: print/x e
PASS: gdb.cp/formatted-ref.exp: print/x i
PASS: gdb.cp/formatted-ref.exp: print/x &s
PASS: gdb.cp/formatted-ref.exp: print/x &e
PASS: gdb.cp/formatted-ref.exp: print/x &i
PASS: gdb.cp/formatted-ref.exp: print/x *(&(&s))
PASS: gdb.cp/formatted-ref.exp: print/x *(&(&i))
PASS: gdb.cp/formatted-ref.exp: print/x *(&(&e))
PASS: gdb.cp/formatted-ref.exp: print s.x == 13
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/fpointer.exp ...
PASS: gdb.cp/fpointer.exp: p p1()
PASS: gdb.cp/fpointer.exp: p p2()
PASS: gdb.cp/fpointer.exp: p p[0]()
PASS: gdb.cp/fpointer.exp: p p[1]()
PASS: gdb.cp/fpointer.exp: p p3('a')
PASS: gdb.cp/fpointer.exp: p p4(1)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/gdb1355.exp ...
PASS: gdb.cp/gdb1355.exp: ptype s1
PASS: gdb.cp/gdb1355.exp: print s1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/gdb2384.exp ...
PASS: gdb.cp/gdb2384.exp: continue to breakpoint: set breakpoint here
PASS: gdb.cp/gdb2384.exp: print d1.meth ()
PASS: gdb.cp/gdb2384.exp: continue to breakpoint: set breakpoint here
PASS: gdb.cp/gdb2384.exp: gdb2384
PASS: gdb.cp/gdb2384.exp: continue to breakpoint: set breakpoint here (second)
PASS: gdb.cp/gdb2384.exp: print d2.meth()
PASS: gdb.cp/gdb2384.exp: continue to breakpoint: set breakpoint here (second)
PASS: gdb.cp/gdb2384.exp: gdb2384 (second)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/gdb2495.exp ...
PASS: gdb.cp/gdb2495.exp: p exceptions.no_throw_function()
PASS: gdb.cp/gdb2495.exp: p exceptions.throw_function_with_handler()
PASS: gdb.cp/gdb2495.exp: Call a function that raises an exception without a handler.
PASS: gdb.cp/gdb2495.exp: bt after returning from a popped frame
PASS: gdb.cp/gdb2495.exp: info breakpoints
PASS: gdb.cp/gdb2495.exp: set unwinn-on-terminating-exception off
PASS: gdb.cp/gdb2495.exp: Turn off unwind on terminating exception flag
PASS: gdb.cp/gdb2495.exp: Call a function that raises an exception with unwinding off..
PASS: gdb.cp/gdb2495.exp: set unwindonsignal on
PASS: gdb.cp/gdb2495.exp: Turn on unwind on signal
PASS: gdb.cp/gdb2495.exp: p exceptions.raise_signal(1)
PASS: gdb.cp/gdb2495.exp: set unwindonsignal off
PASS: gdb.cp/gdb2495.exp: Turn off unwind on signal
PASS: gdb.cp/gdb2495.exp: p exceptions.raise_signal(1)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/hang.exp ...
PASS: gdb.cp/hang.exp: doesn't overwrite struct type
PASS: gdb.cp/hang.exp: doesn't corrupt cv_type chain
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/infcall-dlopen.exp ...
PASS: gdb.cp/infcall-dlopen.exp: test 0
PASS: gdb.cp/infcall-dlopen.exp: test 0 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 0 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 1
PASS: gdb.cp/infcall-dlopen.exp: test 1 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 1 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 2
PASS: gdb.cp/infcall-dlopen.exp: test 2 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 2 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 3
PASS: gdb.cp/infcall-dlopen.exp: test 3 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 3 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 4
PASS: gdb.cp/infcall-dlopen.exp: test 4 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 4 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 5
PASS: gdb.cp/infcall-dlopen.exp: test 5 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 5 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 6
PASS: gdb.cp/infcall-dlopen.exp: test 6 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 6 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 7
PASS: gdb.cp/infcall-dlopen.exp: test 7 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 7 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 8
PASS: gdb.cp/infcall-dlopen.exp: test 8 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 8 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 9
PASS: gdb.cp/infcall-dlopen.exp: test 9 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 9 stub 2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/inherit.exp ...
PASS: gdb.cp/inherit.exp: set width 0
PASS: gdb.cp/inherit.exp: set language c++
PASS: gdb.cp/inherit.exp: ptype A (FIXME)
PASS: gdb.cp/inherit.exp: ptype class A (FIXME)
PASS: gdb.cp/inherit.exp: ptype g_A (FIXME)
PASS: gdb.cp/inherit.exp: ptype B
PASS: gdb.cp/inherit.exp: ptype class B
PASS: gdb.cp/inherit.exp: ptype g_B
PASS: gdb.cp/inherit.exp: ptype C
PASS: gdb.cp/inherit.exp: ptype class C
PASS: gdb.cp/inherit.exp: ptype g_C
PASS: gdb.cp/inherit.exp: ptype tagless struct
PASS: gdb.cp/inherit.exp: ptype variable of type tagless struct
PASS: gdb.cp/inherit.exp: ptype D
PASS: gdb.cp/inherit.exp: ptype class D
PASS: gdb.cp/inherit.exp: ptype g_D
PASS: gdb.cp/inherit.exp: ptype E
PASS: gdb.cp/inherit.exp: ptype class E
PASS: gdb.cp/inherit.exp: ptype g_E
PASS: gdb.cp/inherit.exp: ptype vA
PASS: gdb.cp/inherit.exp: ptype class vA
PASS: gdb.cp/inherit.exp: ptype g_vA
PASS: gdb.cp/inherit.exp: ptype vB
PASS: gdb.cp/inherit.exp: ptype class vB
PASS: gdb.cp/inherit.exp: ptype g_vB
PASS: gdb.cp/inherit.exp: ptype vC
PASS: gdb.cp/inherit.exp: ptype class vC
PASS: gdb.cp/inherit.exp: ptype g_vC
PASS: gdb.cp/inherit.exp: ptype vD
PASS: gdb.cp/inherit.exp: ptype class vD
PASS: gdb.cp/inherit.exp: ptype g_vD
PASS: gdb.cp/inherit.exp: ptype vE
PASS: gdb.cp/inherit.exp: ptype class vE
PASS: gdb.cp/inherit.exp: ptype g_vE
PASS: gdb.cp/inherit.exp: print g_A.A::a
PASS: gdb.cp/inherit.exp: print g_A.A::x
PASS: gdb.cp/inherit.exp: print g_A.a
PASS: gdb.cp/inherit.exp: print g_A.x
PASS: gdb.cp/inherit.exp: print g_B.A::a
PASS: gdb.cp/inherit.exp: print g_B.A::x
PASS: gdb.cp/inherit.exp: print g_B.B::b
PASS: gdb.cp/inherit.exp: print g_B.B::x
PASS: gdb.cp/inherit.exp: print g_B.a
PASS: gdb.cp/inherit.exp: print g_B.b
PASS: gdb.cp/inherit.exp: print g_B.x
PASS: gdb.cp/inherit.exp: print g_C.A::a
PASS: gdb.cp/inherit.exp: print g_C.A::x
PASS: gdb.cp/inherit.exp: print g_C.C::c
PASS: gdb.cp/inherit.exp: print g_C.C::x
PASS: gdb.cp/inherit.exp: print g_C.a
PASS: gdb.cp/inherit.exp: print g_C.c
PASS: gdb.cp/inherit.exp: print g_C.x
PASS: gdb.cp/inherit.exp: print g_A
PASS: gdb.cp/inherit.exp: print g_B
PASS: gdb.cp/inherit.exp: print g_C
PASS: gdb.cp/inherit.exp: print g_A.A::a
PASS: gdb.cp/inherit.exp: print g_A.A::x
PASS: gdb.cp/inherit.exp: print g_B.A::a
PASS: gdb.cp/inherit.exp: print g_B.A::x
PASS: gdb.cp/inherit.exp: print g_B.B::b
PASS: gdb.cp/inherit.exp: print g_B.B::x
PASS: gdb.cp/inherit.exp: print g_C.A::a
PASS: gdb.cp/inherit.exp: print g_C.A::x
PASS: gdb.cp/inherit.exp: print g_C.C::c
PASS: gdb.cp/inherit.exp: print g_C.C::x
PASS: gdb.cp/inherit.exp: print g_D.A::a
PASS: gdb.cp/inherit.exp: print g_D.C::a
PASS: gdb.cp/inherit.exp: print g_D.B::a
PASS: gdb.cp/inherit.exp: print g_D.A::x
PASS: gdb.cp/inherit.exp: print g_D.B::b
PASS: gdb.cp/inherit.exp: print g_D.B::x
PASS: gdb.cp/inherit.exp: print g_D.C::c
PASS: gdb.cp/inherit.exp: print g_D.C::x
PASS: gdb.cp/inherit.exp: print g_D.D::d
PASS: gdb.cp/inherit.exp: print g_D.D::x
PASS: gdb.cp/inherit.exp: print g_E.A::a
PASS: gdb.cp/inherit.exp: print g_E.A::x
PASS: gdb.cp/inherit.exp: print g_E.B::b
PASS: gdb.cp/inherit.exp: print g_E.B::x
PASS: gdb.cp/inherit.exp: print g_E.C::c
PASS: gdb.cp/inherit.exp: print g_E.C::x
PASS: gdb.cp/inherit.exp: print g_E.D::d
PASS: gdb.cp/inherit.exp: print g_E.D::x
PASS: gdb.cp/inherit.exp: print g_E.E::e
PASS: gdb.cp/inherit.exp: print g_E.E::x
PASS: gdb.cp/inherit.exp: ptype g_D.b
PASS: gdb.cp/inherit.exp: ptype g_D.c
PASS: gdb.cp/inherit.exp: ptype g_D.d
PASS: gdb.cp/inherit.exp: ptype g_A.A::a
PASS: gdb.cp/inherit.exp: ptype g_A.A::x
PASS: gdb.cp/inherit.exp: ptype g_B.A::a
PASS: gdb.cp/inherit.exp: ptype g_B.A::x
PASS: gdb.cp/inherit.exp: ptype g_B.B::b
PASS: gdb.cp/inherit.exp: ptype g_B.B::x
PASS: gdb.cp/inherit.exp: ptype g_C.A::a
PASS: gdb.cp/inherit.exp: ptype g_C.A::x
PASS: gdb.cp/inherit.exp: ptype g_C.C::c
PASS: gdb.cp/inherit.exp: ptype g_C.C::x
PASS: gdb.cp/inherit.exp: ptype g_D.A::a
PASS: gdb.cp/inherit.exp: ptype g_D.A::x
PASS: gdb.cp/inherit.exp: ptype g_D.B::b
PASS: gdb.cp/inherit.exp: ptype g_D.B::x
PASS: gdb.cp/inherit.exp: ptype g_D.C::c
PASS: gdb.cp/inherit.exp: ptype g_D.C::x
PASS: gdb.cp/inherit.exp: ptype g_D.D::d
PASS: gdb.cp/inherit.exp: ptype g_D.D::x
PASS: gdb.cp/inherit.exp: ptype g_E.A::a
PASS: gdb.cp/inherit.exp: ptype g_E.A::x
PASS: gdb.cp/inherit.exp: ptype g_E.B::b
PASS: gdb.cp/inherit.exp: ptype g_E.B::x
PASS: gdb.cp/inherit.exp: ptype g_E.C::c
PASS: gdb.cp/inherit.exp: ptype g_E.C::x
PASS: gdb.cp/inherit.exp: ptype g_E.D::d
PASS: gdb.cp/inherit.exp: ptype g_E.D::x
PASS: gdb.cp/inherit.exp: ptype g_E.E::e
PASS: gdb.cp/inherit.exp: ptype g_E.E::x
PASS: gdb.cp/inherit.exp: print g_D
PASS: gdb.cp/inherit.exp: print g_E
PASS: gdb.cp/inherit.exp: print anonymous union member
PASS: gdb.cp/inherit.exp: print variable of type anonymous union
PASS: gdb.cp/inherit.exp: print type of anonymous union
PASS: gdb.cp/inherit.exp: print g_vA.vA::va
PASS: gdb.cp/inherit.exp: print g_vA.vA::vx
PASS: gdb.cp/inherit.exp: print g_vA.va
PASS: gdb.cp/inherit.exp: print g_vA.vx
PASS: gdb.cp/inherit.exp: print g_vB.vA::va
PASS: gdb.cp/inherit.exp: print g_vB.vA::vx
PASS: gdb.cp/inherit.exp: print g_vB.vB::vb
PASS: gdb.cp/inherit.exp: print g_vB.vB::vx
PASS: gdb.cp/inherit.exp: print g_vB.va
PASS: gdb.cp/inherit.exp: print g_vB.vb
PASS: gdb.cp/inherit.exp: print g_vB.vx
PASS: gdb.cp/inherit.exp: print g_vC.vA::va
PASS: gdb.cp/inherit.exp: print g_vC.vA::vx
PASS: gdb.cp/inherit.exp: print g_vC.vC::vc
PASS: gdb.cp/inherit.exp: print g_vC.vC::vx
PASS: gdb.cp/inherit.exp: print g_vC.va
PASS: gdb.cp/inherit.exp: print g_vC.vc
PASS: gdb.cp/inherit.exp: print g_vC.vx
PASS: gdb.cp/inherit.exp: print g_vA
PASS: gdb.cp/inherit.exp: print g_vB (FIXME v3 vtbl ptr)
PASS: gdb.cp/inherit.exp: print g_vC (FIXME v3 vtbl ptr)
PASS: gdb.cp/inherit.exp: print g_vD.vA::va
PASS: gdb.cp/inherit.exp: print g_vD.vA::vx
PASS: gdb.cp/inherit.exp: print g_vD.vB::vb
PASS: gdb.cp/inherit.exp: print g_vD.vB::vx
PASS: gdb.cp/inherit.exp: print g_vD.vC::vc
PASS: gdb.cp/inherit.exp: print g_vD.vC::vx
PASS: gdb.cp/inherit.exp: print g_vD.vD::vd
PASS: gdb.cp/inherit.exp: print g_vD.vD::vx
PASS: gdb.cp/inherit.exp: print g_vE.vA::va
PASS: gdb.cp/inherit.exp: print g_vE.vA::vx
PASS: gdb.cp/inherit.exp: print g_vE.vB::vb
PASS: gdb.cp/inherit.exp: print g_vE.vB::vx
PASS: gdb.cp/inherit.exp: print g_vE.vC::vc
PASS: gdb.cp/inherit.exp: print g_vE.vC::vx
PASS: gdb.cp/inherit.exp: print g_vE.vD::vd
PASS: gdb.cp/inherit.exp: print g_vE.vD::vx
PASS: gdb.cp/inherit.exp: print g_vE.vE::ve
PASS: gdb.cp/inherit.exp: print g_vE.vE::vx
PASS: gdb.cp/inherit.exp: print g_vD (FIXME v3 vtbl ptr)
PASS: gdb.cp/inherit.exp: print g_vE (FIXME v3 vtbl ptr)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/koenig.exp ...
PASS: gdb.cp/koenig.exp: p first(c)
PASS: gdb.cp/koenig.exp: p second(0,0,c,0,0)
PASS: gdb.cp/koenig.exp: p entry (c)
PASS: gdb.cp/koenig.exp: p first(0,c)
PASS: gdb.cp/koenig.exp: p first(b.c)
PASS: gdb.cp/koenig.exp: p foo(eo)
PASS: gdb.cp/koenig.exp: p foo(eo, eo)
PASS: gdb.cp/koenig.exp: p foo(eo, eo, 1)
PASS: gdb.cp/koenig.exp: p foo(fo, eo)
PASS: gdb.cp/koenig.exp: p foo(1 ,fo, eo)
PASS: gdb.cp/koenig.exp: p foo(go, fo, eo)
PASS: gdb.cp/koenig.exp: p fake(eo)
PASS: gdb.cp/koenig.exp: p foo (fake)
PASS: gdb.cp/koenig.exp: p foo(io)
PASS: gdb.cp/koenig.exp: p foo(ix)
PASS: gdb.cp/koenig.exp: p foo(ju)
PASS: gdb.cp/koenig.exp: p foo(js)
PASS: gdb.cp/koenig.exp: p foo(je)
XFAIL: gdb.cp/koenig.exp: p foo(jab)
PASS: gdb.cp/koenig.exp: p foo(jap)
PASS: gdb.cp/koenig.exp: p foo(japp)
PASS: gdb.cp/koenig.exp: p foo(jca)
PASS: gdb.cp/koenig.exp: p foo(ko,1)
PASS: gdb.cp/koenig.exp: p foo(ko,1.0f)
XFAIL: gdb.cp/koenig.exp: p bar(ko,1)
PASS: gdb.cp/koenig.exp: p foo(labo)
PASS: gdb.cp/koenig.exp: p ma.foo('a')
PASS: gdb.cp/koenig.exp: p foo(ma,'a')
PASS: gdb.cp/koenig.exp: p M::N::foo(ma,'a')
PASS: gdb.cp/koenig.exp: p M::FAKE::foo(ma,'a')
PASS: gdb.cp/koenig.exp: p M::N::fake(ma,'a')
PASS: gdb.cp/koenig.exp: p M::bar('a')
PASS: gdb.cp/koenig.exp: p M::N::bar('a')
PASS: gdb.cp/koenig.exp: p foo(ttoa, 'a')
PASS: gdb.cp/koenig.exp: p foo (p_union)
PASS: gdb.cp/koenig.exp: p q == 5
PASS: gdb.cp/koenig.exp: p q == 5.0f
PASS: gdb.cp/koenig.exp: p q != 5
PASS: gdb.cp/koenig.exp: p q != 5.0f
PASS: gdb.cp/koenig.exp: p q + 5.0f
PASS: gdb.cp/koenig.exp: p q + 5
PASS: gdb.cp/koenig.exp: p ++q
PASS: gdb.cp/koenig.exp: p r.rfoo()
PASS: gdb.cp/koenig.exp: continue to breakpoint: marker1
PASS: gdb.cp/koenig.exp: p rfoo()
PASS: gdb.cp/koenig.exp: p this->rfoo()
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/local.exp ...
PASS: gdb.cp/local.exp: up from marker1
PASS: gdb.cp/local.exp: ptype l
PASS: gdb.cp/local.exp: ptype Local
PASS: gdb.cp/local.exp: break marker2
PASS: gdb.cp/local.exp: continuing to marker2
PASS: gdb.cp/local.exp: up from marker2
PASS: gdb.cp/local.exp: Local out of scope
PASS: gdb.cp/local.exp: ptype InnerLocal (pattern 1)
PASS: gdb.cp/local.exp: ptype NestedInnerLocal
KFAIL: gdb.cp/local.exp: ptype InnerLocal::NestedInnerLocal (PRMS: gdb/482)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/m-data.exp ...
PASS: gdb.cp/m-data.exp: continue to breakpoint: end of first constructors
PASS: gdb.cp/m-data.exp: simple object, const bool
PASS: gdb.cp/m-data.exp: simple object, const int
PASS: gdb.cp/m-data.exp: simple object, long
PASS: gdb.cp/m-data.exp: simple object, enum
PASS: gdb.cp/m-data.exp: derived template object, base const bool
PASS: gdb.cp/m-data.exp: derived template object, base const int
PASS: gdb.cp/m-data.exp: derived template object, base long
PASS: gdb.cp/m-data.exp: derived template object, base enum
PASS: gdb.cp/m-data.exp: derived template object, derived enum
PASS: gdb.cp/m-data.exp: template object, const bool
PASS: gdb.cp/m-data.exp: template object, const int
PASS: gdb.cp/m-data.exp: template object, long
PASS: gdb.cp/m-data.exp: template object, base enum
PASS: gdb.cp/m-data.exp: template object, derived enum
PASS: gdb.cp/m-data.exp: continue to breakpoint: continue to shadow breakpoint
PASS: gdb.cp/m-data.exp: shadowing member
PASS: gdb.cp/m-data.exp: shadowed global variable
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/m-static.exp ...
PASS: gdb.cp/m-static.exp: continue to breakpoint: end of constructors
PASS: gdb.cp/m-static.exp: simple object, static const int, accessing via 'class::method::variable
PASS: gdb.cp/m-static.exp: simple object, static const bool
PASS: gdb.cp/m-static.exp: simple object, static const int
PASS: gdb.cp/m-static.exp: simple object, static long
PASS: gdb.cp/m-static.exp: simple object, static enum
PASS: gdb.cp/m-static.exp: simple object instance, print constructor
PASS: gdb.cp/m-static.exp: simple object instance, ptype constructor
PASS: gdb.cp/m-static.exp: simple object class, ptype constructor
PASS: gdb.cp/m-static.exp: simple object instance, print destructor
PASS: gdb.cp/m-static.exp: simple object instance, ptype destructor
PASS: gdb.cp/m-static.exp: simple object instance, print quoted destructor
PASS: gdb.cp/m-static.exp: simple object class, ptype quoted destructor
PASS: gdb.cp/m-static.exp: derived template object, base static const bool
PASS: gdb.cp/m-static.exp: derived template object, base static const int
PASS: gdb.cp/m-static.exp: derived template object, base static long
PASS: gdb.cp/m-static.exp: derived template object, base static enum
PASS: gdb.cp/m-static.exp: derived template object, static enum
PASS: gdb.cp/m-static.exp: template object, static const bool
PASS: gdb.cp/m-static.exp: template object, static const int
PASS: gdb.cp/m-static.exp: template object, static long
PASS: gdb.cp/m-static.exp: template object, static enum
PASS: gdb.cp/m-static.exp: template object, static derived enum
PASS: gdb.cp/m-static.exp: static const int initialized elsewhere
PASS: gdb.cp/m-static.exp: static const int initialized nowhere
PASS: gdb.cp/m-static.exp: static const int initialized in class definition
PASS: gdb.cp/m-static.exp: static const float initialized in class definition
PASS: gdb.cp/m-static.exp: info variable everywhere
PASS: gdb.cp/m-static.exp: step
PASS: gdb.cp/m-static.exp: print svar
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/maint.exp ...
PASS: gdb.cp/maint.exp: help maintenance cplus
PASS: gdb.cp/maint.exp: help maint cp
PASS: gdb.cp/maint.exp: maint cp
PASS: gdb.cp/maint.exp: help maint cp first_component
PASS: gdb.cp/maint.exp: help maint cp namespace
PASS: gdb.cp/maint.exp: set complaints 1000
PASS: gdb.cp/maint.exp: maint cp first_component foo
PASS: gdb.cp/maint.exp: maint cp first_component operator<<
PASS: gdb.cp/maint.exp: maint cp first_component operator>>
PASS: gdb.cp/maint.exp: maint cp first_component operator ->
PASS: gdb.cp/maint.exp: maint cp first_component operator()
PASS: gdb.cp/maint.exp: maint cp first_component operator>
PASS: gdb.cp/maint.exp: maint cp first_component operator<
PASS: gdb.cp/maint.exp: maint cp first_component operator ->
PASS: gdb.cp/maint.exp: maint cp first_component operator  ->
PASS: gdb.cp/maint.exp: maint cp first_component foo()
PASS: gdb.cp/maint.exp: maint cp first_component foo(int)
PASS: gdb.cp/maint.exp: maint cp first_component foo(X::Y)
PASS: gdb.cp/maint.exp: maint cp first_component foo(X::Y, A::B)
PASS: gdb.cp/maint.exp: maint cp first_component foo(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >)
PASS: gdb.cp/maint.exp: maint cp first_component operator>(X::Y)
PASS: gdb.cp/maint.exp: maint cp first_component int operator<< <char>()
PASS: gdb.cp/maint.exp: maint cp first_component T<Cooperator>
PASS: gdb.cp/maint.exp: maint cp first_component int foo<&(operator<<(C, C))>()
PASS: gdb.cp/maint.exp: maint cp first_component int foo<&operator<<(C, C)>()
PASS: gdb.cp/maint.exp: maint cp first_component int foo<operator<<(C, C)>()
PASS: gdb.cp/maint.exp: maint cp first_component foo::bar
PASS: gdb.cp/maint.exp: maint cp first_component foo::bar::baz
PASS: gdb.cp/maint.exp: maint cp first_component C<A>::bar
PASS: gdb.cp/maint.exp: maint cp first_component C<std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > >::bar
PASS: gdb.cp/maint.exp: maint cp first_component foo<
PASS: gdb.cp/maint.exp: maint cp first_component foo(
PASS: gdb.cp/maint.exp: maint cp first_component bool operator<<char>
PASS: gdb.cp/maint.exp: maint cp namespace
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/mb-ctor.exp ...
PASS: gdb.cp/mb-ctor.exp: set-breakpoint at ctor
PASS: gdb.cp/mb-ctor.exp: set-breakpoint at dtor
PASS: gdb.cp/mb-ctor.exp: run to breakpoint 1 v1
PASS: gdb.cp/mb-ctor.exp: continue to breakpoint: set breakpoint here
PASS: gdb.cp/mb-ctor.exp: run to breakpoint 1 v2
PASS: gdb.cp/mb-ctor.exp: continue to breakpoint: set breakpoint here
PASS: gdb.cp/mb-ctor.exp: run to breakpoint 3 v1
PASS: gdb.cp/mb-ctor.exp: run to breakpoint 3 v2
PASS: gdb.cp/mb-ctor.exp: run to exit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/mb-inline.exp ...
PASS: gdb.cp/mb-inline.exp: set breakpoint
PASS: gdb.cp/mb-inline.exp: info break
PASS: gdb.cp/mb-inline.exp: run to breakpoint
PASS: gdb.cp/mb-inline.exp: run to breakpoint 2
PASS: gdb.cp/mb-inline.exp: disabling location: disable
PASS: gdb.cp/mb-inline.exp: disabling location: run to breakpoint
PASS: gdb.cp/mb-inline.exp: disabled breakpoint 1.2
PASS: gdb.cp/mb-inline.exp: set multi_line_foo breakpoint
PASS: gdb.cp/mb-inline.exp: run to multi_line_foo breakpoint 4 afn
PASS: gdb.cp/mb-inline.exp: run to multi_line_foo breakpoint 4 bfn
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/mb-templates.exp ...
PASS: gdb.cp/mb-templates.exp: initial condition: set breakpoint
PASS: gdb.cp/mb-templates.exp: initial condition: run to breakpoint
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/member-name.exp ...
PASS: gdb.cp/member-name.exp: continue to breakpoint: continue to first breakpoint
PASS: gdb.cp/member-name.exp: print C::x from first breakpoint
PASS: gdb.cp/member-name.exp: print B::b from first breakpoint
PASS: gdb.cp/member-name.exp: print inner::z from first breakpoint
PASS: gdb.cp/member-name.exp: continue to breakpoint: continue to second breakpoint
PASS: gdb.cp/member-name.exp: print C::x from second breakpoint
PASS: gdb.cp/member-name.exp: print B::b from second breakpoint
PASS: gdb.cp/member-name.exp: print inner::z from second breakpoint
PASS: gdb.cp/member-name.exp: continue to breakpoint: continue to third breakpoint
PASS: gdb.cp/member-name.exp: print Templ::y from third breakpoint
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/member-ptr.exp ...
PASS: gdb.cp/member-ptr.exp: continue to breakpoint: continue to pmi = NULL
PASS: gdb.cp/member-ptr.exp: ptype pmi (A::j)
PASS: gdb.cp/member-ptr.exp: print pmi (A::j)
PASS: gdb.cp/member-ptr.exp: print a.*pmi (A::j)
PASS: gdb.cp/member-ptr.exp: print a_p->*pmi (A::j)
PASS: gdb.cp/member-ptr.exp: set var pmi = &A::jj
PASS: gdb.cp/member-ptr.exp: print pmi (A::jj)
PASS: gdb.cp/member-ptr.exp: print a.*pmi (A::jj)
PASS: gdb.cp/member-ptr.exp: set var pmi = &A::j
PASS: gdb.cp/member-ptr.exp: print a.*pmi (A::j) (again)
PASS: gdb.cp/member-ptr.exp: print a.*pmi = 33
PASS: gdb.cp/member-ptr.exp: print a.*pmi (A::j) (33)
PASS: gdb.cp/member-ptr.exp: print a (j = 33)
PASS: gdb.cp/member-ptr.exp: print a_p->*pmi = 44
PASS: gdb.cp/member-ptr.exp: print a_p->*pmi (44)
PASS: gdb.cp/member-ptr.exp: print a (j = 44)
PASS: gdb.cp/member-ptr.exp: ptype a.*pmi
PASS: gdb.cp/member-ptr.exp: print *pmi
PASS: gdb.cp/member-ptr.exp: ptype *pmi
PASS: gdb.cp/member-ptr.exp: print (int) pmi
PASS: gdb.cp/member-ptr.exp: print ((int) pmi) == ((char *) &a.j - (char *) &a)
PASS: gdb.cp/member-ptr.exp: ptype diamond_pfunc_ptr
PASS: gdb.cp/member-ptr.exp: ptype diamond.*diamond_pfunc_ptr
PASS: gdb.cp/member-ptr.exp: print diamond.*diamond_pfunc_ptr (20)
PASS: gdb.cp/member-ptr.exp: print (diamond.*diamond_pfunc_ptr) (20)
PASS: gdb.cp/member-ptr.exp: print diamond.func_ptr (20)
PASS: gdb.cp/member-ptr.exp: ptype pmf
PASS: gdb.cp/member-ptr.exp: print pmf
PASS: gdb.cp/member-ptr.exp: ptype pmf_p
PASS: gdb.cp/member-ptr.exp: gdb/NNNN
PASS: gdb.cp/member-ptr.exp: print a.*pmf
PASS: gdb.cp/member-ptr.exp: print a_p->*pmf
PASS: gdb.cp/member-ptr.exp: set var pmf = &A::foo
PASS: gdb.cp/member-ptr.exp: print *pmf
PASS: gdb.cp/member-ptr.exp: ptype *pmf
PASS: gdb.cp/member-ptr.exp: print (a.*pmf)(3)
PASS: gdb.cp/member-ptr.exp: ptype a.*pmf
PASS: gdb.cp/member-ptr.exp: ptype (a.*pmf)(3)
PASS: gdb.cp/member-ptr.exp: print diamond_pmi
PASS: gdb.cp/member-ptr.exp: print diamond.*diamond_pmi
PASS: gdb.cp/member-ptr.exp: print diamond.*left_pmf
PASS: gdb.cp/member-ptr.exp: print diamond.*right_pmf
PASS: gdb.cp/member-ptr.exp: print (diamond.*left_pmf) ()
PASS: gdb.cp/member-ptr.exp: print (diamond.*right_pmf) ()
PASS: gdb.cp/member-ptr.exp: print diamond.*left_vpmf
PASS: gdb.cp/member-ptr.exp: print diamond.*right_vpmf
PASS: gdb.cp/member-ptr.exp: print (diamond.*left_vpmf) ()
PASS: gdb.cp/member-ptr.exp: print (diamond.*left_base_vpmf) ()
PASS: gdb.cp/member-ptr.exp: print (diamond.*right_vpmf) ()
PASS: gdb.cp/member-ptr.exp: print left_vpmf
PASS: gdb.cp/member-ptr.exp: print right_vpmf
PASS: gdb.cp/member-ptr.exp: print base_vpmf
PASS: gdb.cp/member-ptr.exp: print diamond.*left_vpmf ()
PASS: gdb.cp/member-ptr.exp: print null_pmi
PASS: gdb.cp/member-ptr.exp: print null_pmi = &A::j
PASS: gdb.cp/member-ptr.exp: print null_pmi = 0
PASS: gdb.cp/member-ptr.exp: print null_pmf
PASS: gdb.cp/member-ptr.exp: print null_pmf = &A::foo
PASS: gdb.cp/member-ptr.exp: print null_pmf = 0
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/meth-typedefs.exp ...
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(int)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(int)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(int)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(int)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(int)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(int)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(int)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(int)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_other_type_2, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_other_type_2, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_other_type_2, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_other_type_2, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_other_type_2, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_other_type_2, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_other_type_2, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_other_type_2, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_other_type_2, const my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_other_type_2, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_other_type_2, const my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_other_type_2, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_other_type_2, my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_other_type_2, my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_other_type_2, my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_other_type_2, my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_other_type_2, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_other_type_2, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_other_type_2, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_other_type_2, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_other_type_2, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_other_type_2, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_other_type_2, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_other_type_2, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_type_2, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_type_2, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_type_2, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_type_2, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_type_2, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_type_2, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_type_2, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_type_2, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_type_2, const my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_type_2, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_type_2, const my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_type_2, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_type_2, my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_type_2, my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_type_2, my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_type_2, my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_type_2, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_type_2, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_type_2, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_type_2, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(my_type_2, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(my_type_2, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(my_type_2, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(my_type_2, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(int, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(int, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(int, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(int, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(int, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(int, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(int, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(int, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(int, const my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(int, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(int, const my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(int, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(int, my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(int, my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(int, my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(int, my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(int, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(int, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(int, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(int, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(int, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(int, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(int, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(int, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_other_type_2, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_other_type_2, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_other_type_2, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_other_type_2, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_other_type_2, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_other_type_2, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_other_type_2, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_other_type_2, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_other_type_2, const my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_other_type_2, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_other_type_2, const my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_other_type_2, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_other_type_2, my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_other_type_2, my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_other_type_2, my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_other_type_2, my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_other_type_2, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_other_type_2, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_other_type_2, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_other_type_2, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_other_type_2, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_other_type_2, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_other_type_2, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_other_type_2, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_type_2, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_type_2, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_type_2, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_type_2, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_type_2, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_type_2, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_type_2, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_type_2, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_type_2, const my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_type_2, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_type_2, const my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_type_2, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_type_2, my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_type_2, my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_type_2, my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_type_2, my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_type_2, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_type_2, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_type_2, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_type_2, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(my_type_2, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(my_type_2, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(my_type_2, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(my_type_2, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(int, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(int, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(int, const my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(int, const my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(int, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(int, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(int, my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(int, my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(int, const my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(int, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(int, const my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(int, const my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(int, my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(int, my_type)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(int, my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(int, my_type)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(int, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(int, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(int, const const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(int, const const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(int, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(int, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(int, const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(int, const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(aenum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(aenum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(aenum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(aenum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(aenum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(aenum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(aenum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(aenum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(aenum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(aenum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(aenum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(aenum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(aenum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(aenum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(aenum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(aenum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(anon_enum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(anon_enum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(anon_enum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(anon_enum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(anon_enum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(anon_enum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(anon_enum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(anon_enum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(anon_enum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(anon_enum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(anon_enum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(anon_enum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(anon_enum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(anon_enum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(anon_enum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(anon_enum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(aenum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(aenum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(aenum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(aenum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(aenum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(aenum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(aenum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(aenum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(aenum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(aenum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(aenum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(aenum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(aenum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(aenum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(aenum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(aenum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(anon_enum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(anon_enum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(anon_enum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(anon_enum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(anon_enum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(anon_enum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(anon_enum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(anon_enum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(anon_enum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(anon_enum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(anon_enum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(anon_enum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(anon_enum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(anon_enum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(anon_enum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(anon_enum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(aenum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(aenum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(aenum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(aenum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(aenum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(aenum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(aenum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(aenum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(aenum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(aenum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(aenum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(aenum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(aenum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(aenum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(aenum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(aenum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(anon_enum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(anon_enum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(anon_enum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(anon_enum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(anon_enum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(anon_enum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(anon_enum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(anon_enum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(anon_enum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(anon_enum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(anon_enum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(anon_enum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(anon_enum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(anon_enum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(anon_enum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(anon_enum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list test(aenum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'test(aenum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break test(aenum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'test(aenum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list test(aenum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'test(aenum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break test(aenum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'test(aenum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list test(aenum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'test(aenum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break test(aenum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'test(aenum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list test(aenum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'test(aenum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break test(aenum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'test(aenum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list test(anon_enum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'test(anon_enum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break test(anon_enum, astruct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'test(anon_enum, astruct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list test(anon_enum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'test(anon_enum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break test(anon_enum, astruct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'test(anon_enum, astruct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list test(anon_enum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: list 'test(anon_enum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: break test(anon_enum, anon_struct const&, aunion const***)
PASS: gdb.cp/meth-typedefs.exp: break 'test(anon_enum, anon_struct const&, aunion const***)'
PASS: gdb.cp/meth-typedefs.exp: list test(anon_enum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: list 'test(anon_enum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: break test(anon_enum, anon_struct const&, anon_union const***)
PASS: gdb.cp/meth-typedefs.exp: break 'test(anon_enum, anon_struct const&, anon_union const***)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(fptr1*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(fptr1*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(fptr1*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(fptr1*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (**) (my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (**) (my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (**) (my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (**) (my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (**) (my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (**) (my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (**) (my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (**) (my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (**) (const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (**) (const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (**) (const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (**) (const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(fptr1*)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(fptr1*)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(fptr1*)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(fptr1*)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (**) (my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (**) (my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (**) (my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (**) (my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (**) (my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (**) (my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (**) (my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (**) (my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (**) (const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (**) (const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (**) (const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (**) (const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(fptr3)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(fptr3)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(fptr3)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(fptr3)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(fptr2, my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(fptr2, my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(fptr2, my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(fptr2, my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(fptr2, my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(fptr2, my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(fptr2, my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(fptr2, my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, int), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, int), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(fptr2, const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(fptr2, const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(fptr2, const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(fptr2, const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(fptr1, int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(fptr1, int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(fptr1, int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(fptr1, int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_other_type), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (my_type), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (my_type), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (my_type), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (my_type), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(void (*)(void (*)(void (*) (const char* const*), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(fptr3)
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(fptr3)'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(fptr3)
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(fptr3)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(fptr2, my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(fptr2, my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(fptr2, my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(fptr2, my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), my_other_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), my_other_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(fptr2, my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(fptr2, my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(fptr2, my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(fptr2, my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, int), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, int), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), my_type))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), my_type))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(fptr2, const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(fptr2, const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(fptr2, const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(fptr2, const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_other_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), my_type_2), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(fptr1, int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(fptr1, int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(fptr1, int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(fptr1, int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_other_type), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (my_type), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), const char* const*))
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(void (*)(void (*)(void (*) (const char* const*), int), const char* const*))'
PASS: gdb.cp/meth-typedefs.exp: list test(my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'test(my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break test(my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'test(my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(my_other_type, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(my_other_type, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(my_other_type, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(my_other_type, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(my_other_type, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(my_other_type, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(my_other_type, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(my_other_type, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(my_other_type, int)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(my_other_type, int)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(my_other_type, int)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(my_other_type, int)'
PASS: gdb.cp/meth-typedefs.exp: list test(my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'test(my_type)'
PASS: gdb.cp/meth-typedefs.exp: break test(my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'test(my_type)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(my_type, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(my_type, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(my_type, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(my_type, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(my_type, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(my_type, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(my_type, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(my_type, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(my_type, int)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(my_type, int)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(my_type, int)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(my_type, int)'
PASS: gdb.cp/meth-typedefs.exp: list test(const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'test(const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break test(const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'test(const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(const char* const*, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(const char* const*, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(const char* const*, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(const char* const*, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(const char* const*, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(const char* const*, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(const char* const*, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(const char* const*, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list test<my_other_type, my_other_type_2>(const char* const*, int)
PASS: gdb.cp/meth-typedefs.exp: list 'test<my_other_type, my_other_type_2>(const char* const*, int)'
PASS: gdb.cp/meth-typedefs.exp: break test<my_other_type, my_other_type_2>(const char* const*, int)
PASS: gdb.cp/meth-typedefs.exp: break 'test<my_other_type, my_other_type_2>(const char* const*, int)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(my_other_type)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(my_other_type)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(my_other_type)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(my_other_type, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(my_other_type, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(my_other_type, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(my_other_type, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(my_other_type, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(my_other_type, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(my_other_type, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(my_other_type, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(my_other_type, int)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(my_other_type, int)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(my_other_type, int)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(my_other_type, int)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(my_type)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(my_type)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(my_type)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(my_type)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(my_type, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(my_type, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(my_type, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(my_type, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(my_type, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(my_type, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(my_type, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(my_type, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(my_type, int)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(my_type, int)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(my_type, int)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(my_type, int)'
PASS: gdb.cp/meth-typedefs.exp: list B::test(const char* const*)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test(const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: break B::test(const char* const*)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test(const char* const*)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(const char* const*, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(const char* const*, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(const char* const*, my_other_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(const char* const*, my_other_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(const char* const*, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(const char* const*, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(const char* const*, my_type_2)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(const char* const*, my_type_2)'
PASS: gdb.cp/meth-typedefs.exp: list B::test<my_other_type, my_other_type_2>(const char* const*, int)
PASS: gdb.cp/meth-typedefs.exp: list 'B::test<my_other_type, my_other_type_2>(const char* const*, int)'
PASS: gdb.cp/meth-typedefs.exp: break B::test<my_other_type, my_other_type_2>(const char* const*, int)
PASS: gdb.cp/meth-typedefs.exp: break 'B::test<my_other_type, my_other_type_2>(const char* const*, int)'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(CORE_ADDR (*) [10])
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(CORE_ADDR (*) [10])'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(CORE_ADDR (*) [10])
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(CORE_ADDR (*) [10])'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::foo(unsigned long (*) [10])
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::foo(unsigned long (*) [10])'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::foo(unsigned long (*) [10])
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::foo(unsigned long (*) [10])'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(CORE_ADDR (*) [10])
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(CORE_ADDR (*) [10])'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(CORE_ADDR (*) [10])
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(CORE_ADDR (*) [10])'
PASS: gdb.cp/meth-typedefs.exp: list A::FOO::test(unsigned long (*) [10])
PASS: gdb.cp/meth-typedefs.exp: list 'A::FOO::test(unsigned long (*) [10])'
PASS: gdb.cp/meth-typedefs.exp: break A::FOO::test(unsigned long (*) [10])
PASS: gdb.cp/meth-typedefs.exp: break 'A::FOO::test(unsigned long (*) [10])'
PASS: gdb.cp/meth-typedefs.exp: list test(_BAR_&)
PASS: gdb.cp/meth-typedefs.exp: list 'test(_BAR_&)'
PASS: gdb.cp/meth-typedefs.exp: break test(_BAR_&)
PASS: gdb.cp/meth-typedefs.exp: break 'test(_BAR_&)'
PASS: gdb.cp/meth-typedefs.exp: list test(a::b::BAR&)
PASS: gdb.cp/meth-typedefs.exp: list 'test(a::b::BAR&)'
PASS: gdb.cp/meth-typedefs.exp: break test(a::b::BAR&)
PASS: gdb.cp/meth-typedefs.exp: break 'test(a::b::BAR&)'
PASS: gdb.cp/meth-typedefs.exp: list test(a::b::c::d::bar&)
PASS: gdb.cp/meth-typedefs.exp: list 'test(a::b::c::d::bar&)'
PASS: gdb.cp/meth-typedefs.exp: break test(a::b::c::d::bar&)
PASS: gdb.cp/meth-typedefs.exp: break 'test(a::b::c::d::bar&)'
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/method.exp ...
PASS: gdb.cp/method.exp: break A::foo
PASS: gdb.cp/method.exp: continue to A::foo
PASS: gdb.cp/method.exp: print x in A::foo
PASS: gdb.cp/method.exp: print this in A::foo
PASS: gdb.cp/method.exp: break A::bar
PASS: gdb.cp/method.exp: continue to A::bar
PASS: gdb.cp/method.exp: print x in A::bar
PASS: gdb.cp/method.exp: print this in A::bar
PASS: gdb.cp/method.exp: break 21
PASS: gdb.cp/method.exp: continue to 21
PASS: gdb.cp/method.exp: print data_ in funk::getFunky
PASS: gdb.cp/method.exp: print this in funk::getFunky
PASS: gdb.cp/method.exp: print res in funk::getFunky
PASS: gdb.cp/method.exp: ptype A
PASS: gdb.cp/method.exp: finish program
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/method2.exp ...
PASS: gdb.cp/method2.exp: set multiple-symbols ask
PASS: gdb.cp/method2.exp: setting language c
PASS: gdb.cp/method2.exp: breaking in method (c)
PASS: gdb.cp/method2.exp: setting language c++
PASS: gdb.cp/method2.exp: breaking in method (c++)
PASS: gdb.cp/method2.exp: continue until exit at continue to end
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/minsym-fallback.exp ...
PASS: gdb.cp/minsym-fallback.exp: set breakpoint pending off
PASS: gdb.cp/minsym-fallback.exp: break C::f()
PASS: gdb.cp/minsym-fallback.exp: break C::operator()()
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/misc.exp ...
PASS: gdb.cp/misc.exp: deduced language is C++, before full symbols
PASS: gdb.cp/misc.exp: deduced language is C++, after full symbols
PASS: gdb.cp/misc.exp: print s.a for foo struct (known gcc 2.7.2 and earlier bug)
PASS: gdb.cp/misc.exp: print as bool (setup)
PASS: gdb.cp/misc.exp: print as bool (print 1 == 1)
PASS: gdb.cp/misc.exp: print as bool (print 1 == 2)
PASS: gdb.cp/misc.exp: print a bool var
PASS: gdb.cp/misc.exp: set a bool var (setup)
PASS: gdb.cp/misc.exp: set a bool var (print v_bool)
PASS: gdb.cp/misc.exp: print a bool array
PASS: gdb.cp/misc.exp: set a bool array elem (setup)
PASS: gdb.cp/misc.exp: set a bool array elem (print v_bool_array)
PASS: gdb.cp/misc.exp: print true
PASS: gdb.cp/misc.exp: print false
PASS: gdb.cp/misc.exp: 1 + true
PASS: gdb.cp/misc.exp: 3 + false
PASS: gdb.cp/misc.exp: 1 < 2 < 3
PASS: gdb.cp/misc.exp: 2 < 1 > 4
PASS: gdb.cp/misc.exp: (bool)43
PASS: gdb.cp/misc.exp: (bool)0
PASS: gdb.cp/misc.exp: (bool)17.93
PASS: gdb.cp/misc.exp: (bool)0.0
PASS: gdb.cp/misc.exp: (int)true
PASS: gdb.cp/misc.exp: (int)false
PASS: gdb.cp/misc.exp: expression using block qualifier
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/namespace-enum.exp ...
PASS: gdb.cp/namespace-enum.exp: print foo::B::B_B
PASS: gdb.cp/namespace-enum.exp: print foo::B_B
PASS: gdb.cp/namespace-enum.exp: print A_A
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/namespace-nested-import.exp ...
PASS: gdb.cp/namespace-nested-import.exp: print C::x
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/namespace.exp ...
PASS: gdb.cp/namespace.exp: show lang
PASS: gdb.cp/namespace.exp: up from marker1
PASS: gdb.cp/namespace.exp: print 'AAA::c'
PASS: gdb.cp/namespace.exp: print AAA::c
PASS: gdb.cp/namespace.exp: print ina
PASS: gdb.cp/namespace.exp: ptype ina
PASS: gdb.cp/namespace.exp: info func xyzq
PASS: gdb.cp/namespace.exp: print 'AAA::xyzq'('x')
PASS: gdb.cp/namespace.exp: print AAA::xyzq('x')
PASS: gdb.cp/namespace.exp: break AAA::xyzq
PASS: gdb.cp/namespace.exp: break ::ensureOtherRefs
PASS: gdb.cp/namespace.exp: print 'BBB::CCC::xyzq'('x')
PASS: gdb.cp/namespace.exp: print BBB::CCC::xyzq('x')
PASS: gdb.cp/namespace.exp: break BBB::CCC::xyzq
PASS: gdb.cp/namespace.exp: break ::BBB::CCC::xyzq
PASS: gdb.cp/namespace.exp: print 'BBB::Class::xyzq'
PASS: gdb.cp/namespace.exp: print BBB::Class::xyzq
PASS: gdb.cp/namespace.exp: break BBB::Class::xyzq
PASS: gdb.cp/namespace.exp: whatis C::cOtherFileType
PASS: gdb.cp/namespace.exp: whatis ::C::cOtherFileType
PASS: gdb.cp/namespace.exp: whatis C::cOtherFileVar
PASS: gdb.cp/namespace.exp: whatis ::C::cOtherFileVar
PASS: gdb.cp/namespace.exp: print C::cOtherFileVar
PASS: gdb.cp/namespace.exp: print ::C::cOtherFileVar
PASS: gdb.cp/namespace.exp: whatis C::OtherFileClass::cOtherFileClassType
PASS: gdb.cp/namespace.exp: whatis ::C::OtherFileClass::cOtherFileClassType
PASS: gdb.cp/namespace.exp: print C::OtherFileClass::cOtherFileClassVar
PASS: gdb.cp/namespace.exp: print ::cOtherFileClassVar
PASS: gdb.cp/namespace.exp: print ::C::OtherFileClass::cOtherFileClassVar
PASS: gdb.cp/namespace.exp: print c
PASS: gdb.cp/namespace.exp: print cc
PASS: gdb.cp/namespace.exp: print 'C::cc'
PASS: gdb.cp/namespace.exp: print C::cc
PASS: gdb.cp/namespace.exp: print cd
PASS: gdb.cp/namespace.exp: print C::D::cd
PASS: gdb.cp/namespace.exp: print 'E::cde'
PASS: gdb.cp/namespace.exp: print E::cde
PASS: gdb.cp/namespace.exp: print shadow
PASS: gdb.cp/namespace.exp: print E::ce
PASS: gdb.cp/namespace.exp: ptype C
PASS: gdb.cp/namespace.exp: ptype E
PASS: gdb.cp/namespace.exp: ptype CClass
PASS: gdb.cp/namespace.exp: ptype CClass::NestedClass
PASS: gdb.cp/namespace.exp: ptype NestedClass
PASS: gdb.cp/namespace.exp: ptype ::C::CClass
PASS: gdb.cp/namespace.exp: ptype ::C::CClass::NestedClass
PASS: gdb.cp/namespace.exp: ptype ::C::NestedClass
PASS: gdb.cp/namespace.exp: ptype C::CClass
PASS: gdb.cp/namespace.exp: ptype C::CClass::NestedClass
PASS: gdb.cp/namespace.exp: ptype C::NestedClass
PASS: gdb.cp/namespace.exp: print cOtherFile
PASS: gdb.cp/namespace.exp: ptype OtherFileClass
PASS: gdb.cp/namespace.exp: ptype ::C::OtherFileClass
PASS: gdb.cp/namespace.exp: ptype C::OtherFileClass
PASS: gdb.cp/namespace.exp: ptype OtherFileClass typedefs
PASS: gdb.cp/namespace.exp: ptype ::C::OtherFileClass typedefs
PASS: gdb.cp/namespace.exp: print cX
PASS: gdb.cp/namespace.exp: print 'F::cXf'
PASS: gdb.cp/namespace.exp: print F::cXf
PASS: gdb.cp/namespace.exp: print F::cXfX
PASS: gdb.cp/namespace.exp: print X
PASS: gdb.cp/namespace.exp: print 'G::Xg'
PASS: gdb.cp/namespace.exp: print G::Xg
PASS: gdb.cp/namespace.exp: print G::XgX
PASS: gdb.cp/namespace.exp: print cXOtherFile
PASS: gdb.cp/namespace.exp: print XOtherFile
PASS: gdb.cp/namespace.exp: print AAA::ALPHA
PASS: gdb.cp/namespace.exp: whatis ::C::CClass::NestedClass
PASS: gdb.cp/namespace.exp: whatis ::C::CClass::NestedClass *
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/nextoverthrow.exp ...
UNSUPPORTED: gdb.cp/nextoverthrow.exp: nextoverthrow.exp could not find _Unwind_DebugHook
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/no-dmgl-verbose.exp ...
PASS: gdb.cp/no-dmgl-verbose.exp: set breakpoint pending off
PASS: gdb.cp/no-dmgl-verbose.exp: DMGL_VERBOSE-demangled f(std::string) is not defined
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/noparam.exp ...
PASS: gdb.cp/noparam.exp: p C::m (int)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/nsdecl.exp ...
PASS: gdb.cp/nsdecl.exp: print fakex
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/nsimport.exp ...
PASS: gdb.cp/nsimport.exp: print x
PASS: gdb.cp/nsimport.exp: print xx
PASS: gdb.cp/nsimport.exp: print xxx
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/nsnested.exp ...
PASS: gdb.cp/nsnested.exp: print ab
PASS: gdb.cp/nsnested.exp: continue to breakpoint: C::first
PASS: gdb.cp/nsnested.exp: print ab
PASS: gdb.cp/nsnested.exp: print C::D::ab
PASS: gdb.cp/nsnested.exp: continue to breakpoint: C::D::second
PASS: gdb.cp/nsnested.exp: print ab
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/nsnoimports.exp ...
PASS: gdb.cp/nsnoimports.exp: print A::_a
PASS: gdb.cp/nsnoimports.exp: print A::B::ab
PASS: gdb.cp/nsnoimports.exp: print A::B::C::abc
PASS: gdb.cp/nsnoimports.exp: print _a
PASS: gdb.cp/nsnoimports.exp: print ab
PASS: gdb.cp/nsnoimports.exp: print abc
PASS: gdb.cp/nsnoimports.exp: continue to breakpoint: A::B::first
PASS: gdb.cp/nsnoimports.exp: print A::_a
PASS: gdb.cp/nsnoimports.exp: print A::B::ab
PASS: gdb.cp/nsnoimports.exp: print A::B::C::abc
PASS: gdb.cp/nsnoimports.exp: print _a
PASS: gdb.cp/nsnoimports.exp: print ab
PASS: gdb.cp/nsnoimports.exp: print C::abc
PASS: gdb.cp/nsnoimports.exp: print abc
PASS: gdb.cp/nsnoimports.exp: continue to breakpoint: A::B::C::second
PASS: gdb.cp/nsnoimports.exp: print A::_a
PASS: gdb.cp/nsnoimports.exp: print A::B::ab
PASS: gdb.cp/nsnoimports.exp: print A::B::C::abc
PASS: gdb.cp/nsnoimports.exp: print _a
PASS: gdb.cp/nsnoimports.exp: print ab
PASS: gdb.cp/nsnoimports.exp: print abc
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/nsrecurs.exp ...
PASS: gdb.cp/nsrecurs.exp: print ax
PASS: gdb.cp/nsrecurs.exp: print dx
PASS: gdb.cp/nsrecurs.exp: print xx
KFAIL: gdb.cp/nsrecurs.exp: ptype G::GF (PRMS: gdb/10541)
KFAIL: gdb.cp/nsrecurs.exp: print G::GF::FE::ex (PRMS: gdb/10541)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/nsstress.exp ...
PASS: gdb.cp/nsstress.exp: print y
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/nsusing.exp ...
PASS: gdb.cp/nsusing.exp: print _a
PASS: gdb.cp/nsusing.exp: continue to breakpoint: marker3
PASS: gdb.cp/nsusing.exp: Print _a without import
PASS: gdb.cp/nsusing.exp: continue to breakpoint: marker1 stop
PASS: gdb.cp/nsusing.exp: print _a in a nested scope
PASS: gdb.cp/nsusing.exp: print cc
PASS: gdb.cp/nsusing.exp: print B::_a
PASS: gdb.cp/nsusing.exp: print _a in namespace alias scope
PASS: gdb.cp/nsusing.exp: print x in namespace alias scope
PASS: gdb.cp/nsusing.exp: Print _a without import
PASS: gdb.cp/nsusing.exp: print dx
PASS: gdb.cp/nsusing.exp: print efx
PASS: gdb.cp/nsusing.exp: print ghx
PASS: gdb.cp/nsusing.exp: print jx
PASS: gdb.cp/nsusing.exp: continue to breakpoint: K::marker9
PASS: gdb.cp/nsusing.exp: print jx
PASS: gdb.cp/nsusing.exp: continue to breakpoint: marker10 stop
PASS: gdb.cp/nsusing.exp: print x (from M::x)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/operator.exp ...
PASS: gdb.cp/operator.exp: global operator
PASS: gdb.cp/operator.exp: global operator overload
PASS: gdb.cp/operator.exp: ADL operator
PASS: gdb.cp/operator.exp: ADL operator overload
PASS: gdb.cp/operator.exp: Fully qualified explicit operator call
PASS: gdb.cp/operator.exp: anonymous namespace operator
PASS: gdb.cp/operator.exp: anonymous namespace operator overload
PASS: gdb.cp/operator.exp: anonymous namespace operator overload float
PASS: gdb.cp/operator.exp: imported operator
PASS: gdb.cp/operator.exp: imported operator overload
PASS: gdb.cp/operator.exp: imported operator overload float
PASS: gdb.cp/operator.exp: member operator
PASS: gdb.cp/operator.exp: member operator overload
PASS: gdb.cp/operator.exp: namespace alias
PASS: gdb.cp/operator.exp: imported declaration
PASS: gdb.cp/operator.exp: p l == 1
PASS: gdb.cp/operator.exp: p x[0]
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/oranking.exp ...
PASS: gdb.cp/oranking.exp: continue to breakpoint: end of main
KFAIL: gdb.cp/oranking.exp: p foo0(b) (PRMS: gdb/12096)
PASS: gdb.cp/oranking.exp: p test1()
PASS: gdb.cp/oranking.exp: p foo1(b)
PASS: gdb.cp/oranking.exp: p test2()
KFAIL: gdb.cp/oranking.exp: p foo2(b) (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test3()
PASS: gdb.cp/oranking.exp: p foo3(1.0f)
PASS: gdb.cp/oranking.exp: p test4()
KFAIL: gdb.cp/oranking.exp: p foo4(&a) (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test5()
PASS: gdb.cp/oranking.exp: p foo5(c)
PASS: gdb.cp/oranking.exp: p test6()
PASS: gdb.cp/oranking.exp: p foo6(bp)
PASS: gdb.cp/oranking.exp: p test7()
PASS: gdb.cp/oranking.exp: p foo7(cp)
PASS: gdb.cp/oranking.exp: p test8()
PASS: gdb.cp/oranking.exp: p foo8(co)
PASS: gdb.cp/oranking.exp: p test9()
PASS: gdb.cp/oranking.exp: p foo9(co)
PASS: gdb.cp/oranking.exp: p test10()
KFAIL: gdb.cp/oranking.exp: p foo10(amp) (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test101()
KFAIL: gdb.cp/oranking.exp: p foo101("abc") (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test11()
KFAIL: gdb.cp/oranking.exp: p foo11(d) (PRMS: gdb/12096)
PASS: gdb.cp/oranking.exp: p test12()
PASS: gdb.cp/oranking.exp: p foo12(1)
PASS: gdb.cp/oranking.exp: p test13()
KFAIL: gdb.cp/oranking.exp: p foo13(c) (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test14()
KFAIL: gdb.cp/oranking.exp: p foo14(e) (PRMS: gdb/12096)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/overload-const.exp ...
PASS: gdb.cp/overload-const.exp: set language c++
PASS: gdb.cp/overload-const.exp: setting breakpoint at myclass::func
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/overload.exp ...
PASS: gdb.cp/overload.exp: up from marker1
PASS: gdb.cp/overload.exp: print foo_instance1
PASS: gdb.cp/overload.exp: ptype foo_instance1 (shorter match)
PASS: gdb.cp/overload.exp: print foo_instance2
PASS: gdb.cp/overload.exp: print foo_instance3
PASS: gdb.cp/overload.exp: print call overloaded func 1 arg
PASS: gdb.cp/overload.exp: print foo_instance1.overloadfnarg(23, intintfunc)
PASS: gdb.cp/overload.exp: re-selected 'main' frame after inferior call
PASS: gdb.cp/overload.exp: print call overloaded func 2 args
PASS: gdb.cp/overload.exp: print call overloaded func 3 args
PASS: gdb.cp/overload.exp: print call overloaded func 4 args
PASS: gdb.cp/overload.exp: print call overloaded func 5 args
PASS: gdb.cp/overload.exp: print call overloaded func 6 args
PASS: gdb.cp/overload.exp: print call overloaded func 7 args
PASS: gdb.cp/overload.exp: print call overloaded func 8 args
PASS: gdb.cp/overload.exp: print call overloaded func 9 args
PASS: gdb.cp/overload.exp: print call overloaded func 10 args
PASS: gdb.cp/overload.exp: print call overloaded func 11 args
PASS: gdb.cp/overload.exp: print call overloaded func void arg
PASS: gdb.cp/overload.exp: print call overloaded func char arg
PASS: gdb.cp/overload.exp: print call overloaded func signed char arg
PASS: gdb.cp/overload.exp: print call overloaded func unsigned char arg
PASS: gdb.cp/overload.exp: print call overloaded func short arg
PASS: gdb.cp/overload.exp: print call overloaded func unsigned short arg
PASS: gdb.cp/overload.exp: print call overloaded func int arg
PASS: gdb.cp/overload.exp: print call overloaded func unsigned int arg
PASS: gdb.cp/overload.exp: print call overloaded func long arg
PASS: gdb.cp/overload.exp: print call overloaded func unsigned long arg
PASS: gdb.cp/overload.exp: print call overloaded func float arg
PASS: gdb.cp/overload.exp: print call overloaded func double arg
PASS: gdb.cp/overload.exp: print call overloaded func int\* arg
PASS: gdb.cp/overload.exp: print call overloaded func char\* arg
PASS: gdb.cp/overload.exp: print bar(a)
PASS: gdb.cp/overload.exp: print bar(b)
PASS: gdb.cp/overload.exp: print bar(c)
PASS: gdb.cp/overload.exp: print bar(d)
PASS: gdb.cp/overload.exp: list overloaded function with no args
PASS: gdb.cp/overload.exp: list overloaded function with int arg
PASS: gdb.cp/overload.exp: list overloaded function with function ptr args
PASS: gdb.cp/overload.exp: list overloaded function with function ptr args - quotes around argument
PASS: gdb.cp/overload.exp: list overload.cc:intToChar
PASS: gdb.cp/overload.exp: list overload.cc:intToChar(char)
PASS: gdb.cp/overload.exp: list overload.cc:'intToChar(char)'
PASS: gdb.cp/overload.exp: list 'overload.cc:intToChar(char)'
PASS: gdb.cp/overload.exp: list 'overload.cc':intToChar(char)
PASS: gdb.cp/overload.exp: list 'overload.cc':'intToChar(char)'
PASS: gdb.cp/overload.exp: list overload.cc:foo::overloadfnarg(int)
PASS: gdb.cp/overload.exp: list overload.cc:'foo::overloadfnarg(int)'
PASS: gdb.cp/overload.exp: print overloadNamespace(1)
PASS: gdb.cp/overload.exp: print overloadNamespace('a')
PASS: gdb.cp/overload.exp: print overloadNamespace(dummyInstance)
PASS: gdb.cp/overload.exp: print K::staticoverload ()
PASS: gdb.cp/overload.exp: print K::staticoverload (2)
PASS: gdb.cp/overload.exp: print K::staticoverload (2, 3)
PASS: gdb.cp/overload.exp: print N::nsoverload ()
PASS: gdb.cp/overload.exp: print N::nsoverload (2)
PASS: gdb.cp/overload.exp: print N::nsoverload (2, 3)
PASS: gdb.cp/overload.exp: print overloadNamespace(1) in XXX
PASS: gdb.cp/overload.exp: print overloadNamespace('a') in XXX
PASS: gdb.cp/overload.exp: print overloadNamespace(dummyInstance) in XXX
PASS: gdb.cp/overload.exp: print intToChar(1)
PASS: gdb.cp/overload.exp: print foo::overload1arg
PASS: gdb.cp/overload.exp: print foo::overload1arg(char***)
PASS: gdb.cp/overload.exp: print foo::overload1arg(void)
PASS: gdb.cp/overload.exp: print foo::overload1arg(char)
PASS: gdb.cp/overload.exp: print foo::overload1arg(signed char)
PASS: gdb.cp/overload.exp: print foo::overload1arg(unsigned char)
PASS: gdb.cp/overload.exp: print foo::overload1arg(short)
PASS: gdb.cp/overload.exp: print foo::overload1arg(unsigned short)
PASS: gdb.cp/overload.exp: print foo::overload1arg(int)
PASS: gdb.cp/overload.exp: print foo::overload1arg(unsigned int)
PASS: gdb.cp/overload.exp: print foo::overload1arg(long)
PASS: gdb.cp/overload.exp: print foo::overload1arg(unsigned long)
PASS: gdb.cp/overload.exp: print foo::overload1arg(float)
PASS: gdb.cp/overload.exp: print foo::overload1arg(double)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/ovldbreak.exp ...
PASS: gdb.cp/ovldbreak.exp: detect void
PASS: gdb.cp/ovldbreak.exp: detect char
PASS: gdb.cp/ovldbreak.exp: detect signed_char
PASS: gdb.cp/ovldbreak.exp: detect unsigned_char
PASS: gdb.cp/ovldbreak.exp: detect short_int
PASS: gdb.cp/ovldbreak.exp: detect unsigned_short_int
PASS: gdb.cp/ovldbreak.exp: detect int
PASS: gdb.cp/ovldbreak.exp: detect unsigned_int
PASS: gdb.cp/ovldbreak.exp: detect long_int
PASS: gdb.cp/ovldbreak.exp: detect unsigned_long_int
PASS: gdb.cp/ovldbreak.exp: detect float
PASS: gdb.cp/ovldbreak.exp: detect double
PASS: gdb.cp/ovldbreak.exp: set multiple-symbols ask
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 2
PASS: gdb.cp/ovldbreak.exp: set bp 2 on foo::overload1arg 2 line 107
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 3
PASS: gdb.cp/ovldbreak.exp: set bp 3 on foo::overload1arg 3 line 110
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 4
PASS: gdb.cp/ovldbreak.exp: set bp 4 on foo::overload1arg 4 line 140
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 5
PASS: gdb.cp/ovldbreak.exp: set bp 5 on foo::overload1arg 5 line 137
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 6
PASS: gdb.cp/ovldbreak.exp: set bp 6 on foo::overload1arg 6 line 125
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 7
PASS: gdb.cp/ovldbreak.exp: set bp 7 on foo::overload1arg 7 line 131
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 8
PASS: gdb.cp/ovldbreak.exp: set bp 8 on foo::overload1arg 8 line 119
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 9
PASS: gdb.cp/ovldbreak.exp: set bp 9 on foo::overload1arg 9 line 113
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 10
PASS: gdb.cp/ovldbreak.exp: set bp 10 on foo::overload1arg 10 line 116
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 11
PASS: gdb.cp/ovldbreak.exp: set bp 11 on foo::overload1arg 11 line 128
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 12
PASS: gdb.cp/ovldbreak.exp: set bp 12 on foo::overload1arg 12 line 134
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 13
PASS: gdb.cp/ovldbreak.exp: set bp 13 on foo::overload1arg 13 line 122
PASS: gdb.cp/ovldbreak.exp: breakpoint info (after setting one-by-one)
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice cancel
PASS: gdb.cp/ovldbreak.exp: set bp on overload1arg canceled
PASS: gdb.cp/ovldbreak.exp: breakpoint info (after cancel)
PASS: gdb.cp/ovldbreak.exp: delete all breakpoints
PASS: gdb.cp/ovldbreak.exp: breakpoint info (after delete)
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice all
PASS: gdb.cp/ovldbreak.exp: set bp on overload1arg all
PASS: gdb.cp/ovldbreak.exp: breakpoint info (after setting on all)
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : void
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : char
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : signed_char
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : unsigned_char
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : short_int
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : unsigned_short_int
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : int
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : unsigned_int
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : long_int
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : unsigned_long_int
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : float
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : double
PASS: gdb.cp/ovldbreak.exp: set multiple-symbols cancel
PASS: gdb.cp/ovldbreak.exp: break foo::foofunc
PASS: gdb.cp/ovldbreak.exp: set multiple-symbols all
PASS: gdb.cp/ovldbreak.exp: break foo::foofunc
PASS: gdb.cp/ovldbreak.exp: continue until exit at finish program
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/ovsrch.exp ...
PASS: gdb.cp/ovsrch.exp: break A::stop_here
PASS: gdb.cp/ovsrch.exp: break 'A::stop_here'
PASS: gdb.cp/ovsrch.exp: continue to breakpoint: stop_here
PASS: gdb.cp/ovsrch.exp: break A::outer::foo  (char*)  const
PASS: gdb.cp/ovsrch.exp: break 'A::outer::foo  (char*)  const'
PASS: gdb.cp/ovsrch.exp: break A::outer::foo  (char*)  const if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break 'A::outer::foo  (char*)  const' if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break A::outer::foo  (char*)  const if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break 'A::outer::foo  (char*)  const' if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break A::outer::foo  (void)  const
PASS: gdb.cp/ovsrch.exp: break 'A::outer::foo  (void)  const'
PASS: gdb.cp/ovsrch.exp: break A::outer::foo  (int)  const
PASS: gdb.cp/ovsrch.exp: break 'A::outer::foo  (int)  const'
PASS: gdb.cp/ovsrch.exp: break A::outer::foo  (int)  const if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break 'A::outer::foo  (int)  const' if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break A::outer::foo  (int)  const if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break 'A::outer::foo  (int)  const' if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break A::outer::hibob if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break A::B::stop_here_too
PASS: gdb.cp/ovsrch.exp: break 'A::B::stop_here_too'
PASS: gdb.cp/ovsrch.exp: continue to breakpoint: stop_here_too
PASS: gdb.cp/ovsrch.exp: break A::B::inner::foo  (char*)  const
PASS: gdb.cp/ovsrch.exp: break 'A::B::inner::foo  (char*)  const'
PASS: gdb.cp/ovsrch.exp: break A::B::inner::foo  (char*)  const if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break 'A::B::inner::foo  (char*)  const' if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break A::B::inner::foo  (char*)  const if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break 'A::B::inner::foo  (char*)  const' if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break A::B::inner::foo  (void)  const
PASS: gdb.cp/ovsrch.exp: break 'A::B::inner::foo  (void)  const'
PASS: gdb.cp/ovsrch.exp: break A::B::inner::foo  (int)  const
PASS: gdb.cp/ovsrch.exp: break 'A::B::inner::foo  (int)  const'
PASS: gdb.cp/ovsrch.exp: break A::B::inner::foo  (int)  const if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break 'A::B::inner::foo  (int)  const' if (a_param == 3)
PASS: gdb.cp/ovsrch.exp: break A::B::inner::foo  (int)  const if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break 'A::B::inner::foo  (int)  const' if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break A::B::inner::hibob if (a_param == 3)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/paren-type.exp ...
PASS: gdb.cp/paren-type.exp: set breakpoint pending off
PASS: gdb.cp/paren-type.exp: break C::f(long)
PASS: gdb.cp/paren-type.exp: break C::f(short)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/parse-lang.exp ...
PASS: gdb.cp/parse-lang.exp: breakpoint hit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pass-by-ref.exp ...
PASS: gdb.cp/pass-by-ref.exp: call function in obj
PASS: gdb.cp/pass-by-ref.exp: call function in derived
PASS: gdb.cp/pass-by-ref.exp: call function in container
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr-1023.exp ...
PASS: gdb.cp/pr-1023.exp: break myClass::performBlocking
PASS: gdb.cp/pr-1023.exp: break myClass::performUnblocking
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr-1210.exp ...
PASS: gdb.cp/pr-1210.exp: step past initialization
PASS: gdb.cp/pr-1210.exp: print *obj
PASS: gdb.cp/pr-1210.exp: print obj->myB
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr-574.exp ...
PASS: gdb.cp/pr-574.exp: continue to breakpoint: end of constructors
PASS: gdb.cp/pr-574.exp: PR gdb/574
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr10687.exp ...
PASS: gdb.cp/pr10687.exp: continue to breakpoint: marker
PASS: gdb.cp/pr10687.exp: p a
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr10728.exp ...
PASS: gdb.cp/pr10728.exp: continue to breakpoint: marker 1
PASS: gdb.cp/pr10728.exp: print x->y2 - x->y1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr12028.exp ...
PASS: gdb.cp/pr12028.exp: p D::foo(b)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr9067.exp ...
PASS: gdb.cp/pr9067.exp: print b
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr9167.exp ...
PASS: gdb.cp/pr9167.exp: continue to breakpoint: marker
PASS: gdb.cp/pr9167.exp: p b
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/pr9631.exp ...
PASS: gdb.cp/pr9631.exp: continue to breakpoint: after bar tender is initialized
PASS: gdb.cp/pr9631.exp: print tender
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/printmethod.exp ...
PASS: gdb.cp/printmethod.exp: continue to breakpoint: end of constructors
PASS: gdb.cp/printmethod.exp: print virtual method.
PASS: gdb.cp/printmethod.exp: print nonvirtual method.
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/psmang.exp ...
PASS: gdb.cp/psmang.exp: break s::method1
PASS: gdb.cp/psmang.exp: break s::method2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/psymtab-parameter.exp ...
PASS: gdb.cp/psymtab-parameter.exp: set language c++
PASS: gdb.cp/psymtab-parameter.exp: maintenance info symtabs
PASS: gdb.cp/psymtab-parameter.exp: complete p 'func<short>(
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/ptype-cv-cp.exp ...
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_const_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_const_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_const_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_const_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_volatile_const_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_volatile_const_my_int
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/ptype-flags.exp ...
PASS: gdb.cp/ptype-flags.exp: basic test
PASS: gdb.cp/ptype-flags.exp: no methods
PASS: gdb.cp/ptype-flags.exp: no typedefs
PASS: gdb.cp/ptype-flags.exp: no methods or typedefs
PASS: gdb.cp/ptype-flags.exp: raw
PASS: gdb.cp/ptype-flags.exp: raw no methods
PASS: gdb.cp/ptype-flags.exp: raw no typedefs
PASS: gdb.cp/ptype-flags.exp: raw no methods or typedefs
PASS: gdb.cp/ptype-flags.exp: set print type methods off
PASS: gdb.cp/ptype-flags.exp: basic test, default methods off
PASS: gdb.cp/ptype-flags.exp: methods, default methods off
PASS: gdb.cp/ptype-flags.exp: no typedefs, default methods off
PASS: gdb.cp/ptype-flags.exp: methods, no typedefs, default methods off
PASS: gdb.cp/ptype-flags.exp: set print type typedefs off
PASS: gdb.cp/ptype-flags.exp: basic test, default methods+typedefs off
PASS: gdb.cp/ptype-flags.exp: methods, default methods+typedefs off
PASS: gdb.cp/ptype-flags.exp: typedefs, default methods+typedefs off
PASS: gdb.cp/ptype-flags.exp: methods typedefs, default methods+typedefs off
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/punctuator.exp ...
PASS: gdb.cp/punctuator.exp: set lang c++
PASS: gdb.cp/punctuator.exp: print (0x5a5a bitand 0xaaaa) == (0x5a5a & 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a bitor 0xaaaa) == (0x5a5a | 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a xor 0xaaaa) == (0x5a5a ^ 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a and 0xaaaa) == (0x5a5a && 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a or 0xaaaa) == (0x5a5a || 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (not not 0xaaaa) == (!!0xaaaa)
PASS: gdb.cp/punctuator.exp: print (compl 0xaaaa) == (~0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 1
PASS: gdb.cp/punctuator.exp: set $v 1
PASS: gdb.cp/punctuator.exp: print ($u not_eq 0xaaaa) == ($v != 0xaaaa)
PASS: gdb.cp/punctuator.exp: print ($u and_eq 0xaaaa) == ($v &= 0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 2
PASS: gdb.cp/punctuator.exp: set $v 2
PASS: gdb.cp/punctuator.exp: print ($u or_eq 0xaaaa) == ($v |= 0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 3
PASS: gdb.cp/punctuator.exp: set $v 3
PASS: gdb.cp/punctuator.exp: print ($u xor_eq 0xaaaa) == ($v ^= 0xaaaa)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/re-set-overloaded.exp ...
PASS: gdb.cp/re-set-overloaded.exp: set breakpoint pending yes
PASS: gdb.cp/re-set-overloaded.exp: break C::C
PASS: gdb.cp/re-set-overloaded.exp: set variable $brk = $bpnum
PASS: gdb.cp/re-set-overloaded.exp: start
PASS: gdb.cp/re-set-overloaded.exp: breakpoint resolved
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/readnow-language.exp ...
PASS: gdb.cp/readnow-language.exp: show language
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/ref-params.exp ...
PASS: gdb.cp/ref-params.exp: print value of a Child in main
PASS: gdb.cp/ref-params.exp: print value of f1 on Child in main
PASS: gdb.cp/ref-params.exp: print value of f2 on Child in main
PASS: gdb.cp/ref-params.exp: print value of f1 on (Child&) in main
PASS: gdb.cp/ref-params.exp: print value of f2 on (Child&) in main
PASS: gdb.cp/ref-params.exp: print value of Child& in f2
PASS: gdb.cp/ref-params.exp: print value of f1 on Child& in f2
PASS: gdb.cp/ref-params.exp: print value of Parent& in f1
PASS: gdb.cp/ref-params.exp: print f1(MQ)
PASS: gdb.cp/ref-params.exp: print mf1(MQ)
PASS: gdb.cp/ref-params.exp: print mf2(MQ)
PASS: gdb.cp/ref-params.exp: print f1(MQR)
PASS: gdb.cp/ref-params.exp: print mf1(MQR)
PASS: gdb.cp/ref-params.exp: print mf2(MQR)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/ref-types.exp ...
PASS: gdb.cp/ref-types.exp: up from marker1 1
PASS: gdb.cp/ref-types.exp: print value of s
PASS: gdb.cp/ref-types.exp: ptype s
PASS: gdb.cp/ref-types.exp: print value of ps
PASS: gdb.cp/ref-types.exp: ptype ps
PASS: gdb.cp/ref-types.exp: print value of as[0]
PASS: gdb.cp/ref-types.exp: ptype as
PASS: gdb.cp/ref-types.exp: print value of as[1]
PASS: gdb.cp/ref-types.exp: print value of as[2]
PASS: gdb.cp/ref-types.exp: print value of as[3]
PASS: gdb.cp/ref-types.exp: print value of rs
PASS: gdb.cp/ref-types.exp: ptype rs
PASS: gdb.cp/ref-types.exp: print value of *rps
PASS: gdb.cp/ref-types.exp: examine value at rps
PASS: gdb.cp/ref-types.exp: ptype rps
PASS: gdb.cp/ref-types.exp: print value of ras[0]
PASS: gdb.cp/ref-types.exp: ptype ras
PASS: gdb.cp/ref-types.exp: print value of ras[1]
PASS: gdb.cp/ref-types.exp: print value of ras[2]
PASS: gdb.cp/ref-types.exp: print value of ras[3]
PASS: gdb.cp/ref-types.exp: up from f
PASS: gdb.cp/ref-types.exp: print value of C
PASS: gdb.cp/ref-types.exp: ptype C
PASS: gdb.cp/ref-types.exp: print value of UC
PASS: gdb.cp/ref-types.exp: ptype UC
PASS: gdb.cp/ref-types.exp: print value of S
PASS: gdb.cp/ref-types.exp: ptype S
PASS: gdb.cp/ref-types.exp: print value of US
PASS: gdb.cp/ref-types.exp: ptype US
PASS: gdb.cp/ref-types.exp: print value of I
PASS: gdb.cp/ref-types.exp: ptype I
PASS: gdb.cp/ref-types.exp: print value of UI
PASS: gdb.cp/ref-types.exp: ptype UI
PASS: gdb.cp/ref-types.exp: print value of L
PASS: gdb.cp/ref-types.exp: ptype L
PASS: gdb.cp/ref-types.exp: print value of UL
PASS: gdb.cp/ref-types.exp: ptype UL
PASS: gdb.cp/ref-types.exp: print value of F
PASS: gdb.cp/ref-types.exp: ptype F
PASS: gdb.cp/ref-types.exp: print value of D
PASS: gdb.cp/ref-types.exp: ptype D
PASS: gdb.cp/ref-types.exp: ptype rC
PASS: gdb.cp/ref-types.exp: ptype rUC
PASS: gdb.cp/ref-types.exp: ptype rS
PASS: gdb.cp/ref-types.exp: ptype rUS
PASS: gdb.cp/ref-types.exp: ptype rI
PASS: gdb.cp/ref-types.exp: ptype rUI
PASS: gdb.cp/ref-types.exp: ptype rL
PASS: gdb.cp/ref-types.exp: ptype rUL
PASS: gdb.cp/ref-types.exp: ptype rF
PASS: gdb.cp/ref-types.exp: ptype rD
PASS: gdb.cp/ref-types.exp: print value of rC
PASS: gdb.cp/ref-types.exp: print value of rUC
PASS: gdb.cp/ref-types.exp: print value of rS
PASS: gdb.cp/ref-types.exp: print value of rUS
PASS: gdb.cp/ref-types.exp: print value of rI
PASS: gdb.cp/ref-types.exp: print value of UI
PASS: gdb.cp/ref-types.exp: print value of rL
PASS: gdb.cp/ref-types.exp: print value of rUL
PASS: gdb.cp/ref-types.exp: print value of rF
PASS: gdb.cp/ref-types.exp: print value of rD
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/rtti.exp ...
PASS: gdb.cp/rtti.exp: continue to breakpoint: end of constructors in main
PASS: gdb.cp/rtti.exp: print *e1
PASS: gdb.cp/rtti.exp: print *e2
PASS: gdb.cp/rtti.exp: continue to breakpoint: end of constructors in func
PASS: gdb.cp/rtti.exp: print *obj
PASS: gdb.cp/rtti.exp: continue to breakpoint: end of constructors in func3
PASS: gdb.cp/rtti.exp: print *obj3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/shadow.exp ...
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker1
PASS: gdb.cp/shadow.exp: Print class x shadowing global x
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker2
PASS: gdb.cp/shadow.exp: Print local x shadowing class x
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker3
PASS: gdb.cp/shadow.exp: Print inner scope x
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker4
PASS: gdb.cp/shadow.exp: Print local x not namespace x
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker5
PASS: gdb.cp/shadow.exp: Print imported namespace x
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/smartp.exp ...
PASS: gdb.cp/smartp.exp: continue to breakpoint: end of main
PASS: gdb.cp/smartp.exp: p mp->foo()
PASS: gdb.cp/smartp.exp: p mtp->foo()
PASS: gdb.cp/smartp.exp: p mt1.foo()
PASS: gdb.cp/smartp.exp: p mt4p.a
PASS: gdb.cp/smartp.exp: p mt4->a
PASS: gdb.cp/smartp.exp: p sp1->foo()
PASS: gdb.cp/smartp.exp: p sp2->foo()
PASS: gdb.cp/smartp.exp: p sp3->foo(1)
PASS: gdb.cp/smartp.exp: p sp3->foo('a')
PASS: gdb.cp/smartp.exp: p sp4->a
PASS: gdb.cp/smartp.exp: p sp4->b
PASS: gdb.cp/smartp.exp: p mt4p->a
PASS: gdb.cp/smartp.exp: p mt4p->b
PASS: gdb.cp/smartp.exp: p mt4->fake
PASS: gdb.cp/smartp.exp: p mt4->fake()
PASS: gdb.cp/smartp.exp: p b->foo()
PASS: gdb.cp/smartp.exp: p c->foo()
PASS: gdb.cp/smartp.exp: p c->inta
KFAIL: gdb.cp/smartp.exp: p c2->inta (PRMS: gdb/11606)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/static-method.exp ...
PASS: gdb.cp/static-method.exp: info addr A::func()
PASS: gdb.cp/static-method.exp: list static-method.cc:xxx::(anonymous namespace)::func
PASS: gdb.cp/static-method.exp: list 'static-method.cc:xxx::(anonymous namespace)::func'
PASS: gdb.cp/static-method.exp: list 'static-method.cc':'xxx::(anonymous namespace)::func'
PASS: gdb.cp/static-method.exp: list static-method.cc:'xxx::(anonymous namespace)::func'
PASS: gdb.cp/static-method.exp: continue to xxx::(anonymous namespace)::func
PASS: gdb.cp/static-method.exp: continue to 'xxx::(anonymous namespace)::func'
PASS: gdb.cp/static-method.exp: list static-method.cc:xxx::(anonymous namespace)::A::func
PASS: gdb.cp/static-method.exp: list 'static-method.cc:xxx::(anonymous namespace)::A::func'
PASS: gdb.cp/static-method.exp: list 'static-method.cc':'xxx::(anonymous namespace)::A::func'
PASS: gdb.cp/static-method.exp: list static-method.cc:'xxx::(anonymous namespace)::A::func'
PASS: gdb.cp/static-method.exp: continue to xxx::(anonymous namespace)::A::func
PASS: gdb.cp/static-method.exp: continue to 'xxx::(anonymous namespace)::A::func'
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/static-print-quit.exp ...
PASS: gdb.cp/static-print-quit.exp: set width 80
PASS: gdb.cp/static-print-quit.exp: set height 2
PASS: gdb.cp/static-print-quit.exp: print c - <return>
PASS: gdb.cp/static-print-quit.exp: print c - q <return>
PASS: gdb.cp/static-print-quit.exp: print c - to quit
PASS: gdb.cp/static-print-quit.exp: q
PASS: gdb.cp/static-print-quit.exp: set pagination off
PASS: gdb.cp/static-print-quit.exp: first print
PASS: gdb.cp/static-print-quit.exp: second print
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/temargs.exp ...
PASS: gdb.cp/temargs.exp: set first breakpoint for temargs
PASS: gdb.cp/temargs.exp: set second breakpoint for temargs
PASS: gdb.cp/temargs.exp: set third breakpoint for temargs
PASS: gdb.cp/temargs.exp: set fourth breakpoint for temargs
PASS: gdb.cp/temargs.exp: set fifth breakpoint for temargs
PASS: gdb.cp/temargs.exp: set sixth breakpoint for temargs
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to first breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of T in base_m
PASS: gdb.cp/temargs.exp: test value of I in base_m
PASS: gdb.cp/temargs.exp: test value of P in base_m
PASS: gdb.cp/temargs.exp: test value of MP in base_m
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to second breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of T in inner_m
PASS: gdb.cp/temargs.exp: test value of I in inner_m
PASS: gdb.cp/temargs.exp: test value of P in inner_m
PASS: gdb.cp/temargs.exp: test value of MP in inner_m
PASS: gdb.cp/temargs.exp: test type of Z in inner_m
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to third breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of T in func
PASS: gdb.cp/temargs.exp: test value of I in func
PASS: gdb.cp/temargs.exp: test value of P in func
PASS: gdb.cp/temargs.exp: test value of MP in func
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to fourth breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of T in templ_m
PASS: gdb.cp/temargs.exp: test value of I in templ_m
PASS: gdb.cp/temargs.exp: test value of P in templ_m
PASS: gdb.cp/temargs.exp: test value of MP in templ_m
PASS: gdb.cp/temargs.exp: test type of Q in templ_m
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to fifth breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of F in k2_m
XFAIL: gdb.cp/temargs.exp: test value of F in k2_m (PRMS gcc/49366)
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to sixth breakpoint for temargs
XFAIL: gdb.cp/temargs.exp: test type of F in k3_m (PRMS gcc/49546)
XFAIL: gdb.cp/temargs.exp: test value of F in k3_m (PRMS gcc/49546)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/templates.exp ...
PASS: gdb.cp/templates.exp: set multiple-symbols ask
KFAIL: gdb.cp/templates.exp: ptype T5<int> (PRMS: gdb/8218)
KFAIL: gdb.cp/templates.exp: ptype T5<int> (PRMS: gdb/8218)
PASS: gdb.cp/templates.exp: constructor breakpoint
PASS: gdb.cp/templates.exp: destructor breakpoint
PASS: gdb.cp/templates.exp: value method breakpoint
PASS: gdb.cp/templates.exp: breakpoint on a line with no real code
PASS: gdb.cp/templates.exp: print method of template typedef
XFAIL: gdb.cp/templates.exp: print destructor of template typedef (PRMS gcc/51668)
PASS: gdb.cp/templates.exp: verify GCC PR debug/51668
PASS: gdb.cp/templates.exp: ptype empty
PASS: gdb.cp/templates.exp: ptype arg
PASS: gdb.cp/templates.exp: print t5i.value()
PASS: gdb.cp/templates.exp: b 770
PASS: gdb.cp/templates.exp: continue to line 770
PASS: gdb.cp/templates.exp: print fint
PASS: gdb.cp/templates.exp: print fvpchar
PASS: gdb.cp/templates.exp: ptype Foo
PASS: gdb.cp/templates.exp: ptype fint
PASS: gdb.cp/templates.exp: ptype fchar
KFAIL: gdb.cp/templates.exp: ptype fvpchar (PRMS: gdb/1512)
PASS: gdb.cp/templates.exp: print Foo<volatile char *>::foo
PASS: gdb.cp/templates.exp: print Foo<volatile char*>::foo
PASS: gdb.cp/templates.exp: ptype Bar
PASS: gdb.cp/templates.exp: ptype bint
PASS: gdb.cp/templates.exp: ptype bint2
PASS: gdb.cp/templates.exp: ptype Baz
PASS: gdb.cp/templates.exp: ptype bazint
PASS: gdb.cp/templates.exp: ptype bazint2
PASS: gdb.cp/templates.exp: ptype Qux
PASS: gdb.cp/templates.exp: ptype quxint
PASS: gdb.cp/templates.exp: ptype Spec
PASS: gdb.cp/templates.exp: ptype siip
PASS: gdb.cp/templates.exp: ptype Garply<int>
PASS: gdb.cp/templates.exp: ptype Garply<Garply<char> >
PASS: gdb.cp/templates.exp: print Garply<Garply<char> >::garply
PASS: gdb.cp/templates.exp: break Garply<Garply<char> >::garply
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/try_catch.exp ...
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 1-throw
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 1-catch
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 2-start
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 2-next
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 2-throw
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 2-catch
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 3-throw
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 3-catch
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/typedef-operator.exp ...
PASS: gdb.cp/typedef-operator.exp: set language c++
PASS: gdb.cp/typedef-operator.exp: test crash
PASS: gdb.cp/typedef-operator.exp: test typedef
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/typeid.exp ...
PASS: gdb.cp/typeid.exp: before starting: print &typeid(i)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(i) == &typeid(typeof(i))
PASS: gdb.cp/typeid.exp: before starting: print &typeid(cp)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(cp) == &typeid(typeof(cp))
PASS: gdb.cp/typeid.exp: before starting: print &typeid(ccp)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(ccp) == &typeid(typeof(ccp))
PASS: gdb.cp/typeid.exp: before starting: print &typeid(ca)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(ca) == &typeid(typeof(ca))
PASS: gdb.cp/typeid.exp: before starting: print &typeid(b)
PASS: gdb.cp/typeid.exp: before starting: print &typeid(b) == &typeid(typeof(b))
PASS: gdb.cp/typeid.exp: after starting: print &typeid(i)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(i) == &typeid(typeof(i))
PASS: gdb.cp/typeid.exp: after starting: print &typeid(cp)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(cp) == &typeid(typeof(cp))
PASS: gdb.cp/typeid.exp: after starting: print &typeid(ccp)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(ccp) == &typeid(typeof(ccp))
PASS: gdb.cp/typeid.exp: after starting: print &typeid(ca)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(ca) == &typeid(typeof(ca))
PASS: gdb.cp/typeid.exp: after starting: print &typeid(b)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(b) == &typeid(typeof(b))
PASS: gdb.cp/typeid.exp: after starting: print &typeid(*b)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(*b) == &typeid(d)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(*vb1)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(*vb1) == &typeid(d)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(*vb2)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(*vb2) == &typeid(d)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(*bv)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(*bv) == &typeid(d)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(d)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(d) == &typeid(d)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(const Derived)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(const Derived) == &typeid(d)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(const Derived &)
PASS: gdb.cp/typeid.exp: after starting: print &typeid(const Derived &) == &typeid(d)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/userdef.exp ...
PASS: gdb.cp/userdef.exp: break marker1
PASS: gdb.cp/userdef.exp: continue to marker1
PASS: gdb.cp/userdef.exp: up from marker1
PASS: gdb.cp/userdef.exp: print one + two
PASS: gdb.cp/userdef.exp: re-selected 'main' frame after inferior call
PASS: gdb.cp/userdef.exp: print one - two
PASS: gdb.cp/userdef.exp: print one * two
PASS: gdb.cp/userdef.exp: print one / two
PASS: gdb.cp/userdef.exp: print one % two
PASS: gdb.cp/userdef.exp: print one && two
PASS: gdb.cp/userdef.exp: print one || two
PASS: gdb.cp/userdef.exp: print one & two
PASS: gdb.cp/userdef.exp: print one | two
PASS: gdb.cp/userdef.exp: print one ^ two
PASS: gdb.cp/userdef.exp: print one < two
PASS: gdb.cp/userdef.exp: print one <= two
PASS: gdb.cp/userdef.exp: print one > two
PASS: gdb.cp/userdef.exp: print one >= two
PASS: gdb.cp/userdef.exp: print one == two
PASS: gdb.cp/userdef.exp: print one.operator== (two)
PASS: gdb.cp/userdef.exp: print one != two
PASS: gdb.cp/userdef.exp: print one << 31
PASS: gdb.cp/userdef.exp: print one >> 31
PASS: gdb.cp/userdef.exp: print !one
PASS: gdb.cp/userdef.exp: print +one
PASS: gdb.cp/userdef.exp: print ~one
PASS: gdb.cp/userdef.exp: print -one
PASS: gdb.cp/userdef.exp: print one++
PASS: gdb.cp/userdef.exp: print ++one
PASS: gdb.cp/userdef.exp: print one--
PASS: gdb.cp/userdef.exp: print --one
PASS: gdb.cp/userdef.exp: print one += 7
PASS: gdb.cp/userdef.exp: print two = one
PASS: gdb.cp/userdef.exp: break A2::operator+
PASS: gdb.cp/userdef.exp: break A2::operator +
PASS: gdb.cp/userdef.exp: print c
PASS: gdb.cp/userdef.exp: print *c
PASS: gdb.cp/userdef.exp: print &*c
PASS: gdb.cp/userdef.exp: ptype &*c
PASS: gdb.cp/userdef.exp: print operator== (mem1, mem2)
PASS: gdb.cp/userdef.exp: print operator== (mem1, mem1)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/using-crash.exp ...
PASS: gdb.cp/using-crash.exp: reload file
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/virtbase.exp ...
PASS: gdb.cp/virtbase.exp: continue to breakpoint: first breakpoint
PASS: gdb.cp/virtbase.exp: print *this
PASS: gdb.cp/virtbase.exp: print x in get_y
PASS: gdb.cp/virtbase.exp: continue to breakpoint: second breakpoint
PASS: gdb.cp/virtbase.exp: print x in get_z
PASS: gdb.cp/virtbase.exp: continue to breakpoint: third breakpoint
PASS: gdb.cp/virtbase.exp: print *(D *) e
PASS: gdb.cp/virtbase.exp: set print object on
PASS: gdb.cp/virtbase.exp: print/x b->mA
PASS: gdb.cp/virtbase.exp: print rtti_data
PASS: gdb.cp/virtbase.exp: print pointer to virtual base at non-zero offset of larger object
PASS: gdb.cp/virtbase.exp: print same pointer from history value
PASS: gdb.cp/virtbase.exp: print whole pointed-to object, starting from the virtual base pointer
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/virtfunc.exp ...
PASS: gdb.cp/virtfunc.exp: ptype VA
PASS: gdb.cp/virtfunc.exp: ptype VB
PASS: gdb.cp/virtfunc.exp: ptype V
PASS: gdb.cp/virtfunc.exp: ptype A
PASS: gdb.cp/virtfunc.exp: ptype B
PASS: gdb.cp/virtfunc.exp: ptype C
PASS: gdb.cp/virtfunc.exp: ptype AD
PASS: gdb.cp/virtfunc.exp: ptype D
PASS: gdb.cp/virtfunc.exp: ptype E
PASS: gdb.cp/virtfunc.exp: ptype dd
PASS: gdb.cp/virtfunc.exp: ptype ppd
PASS: gdb.cp/virtfunc.exp: ptype pAd
PASS: gdb.cp/virtfunc.exp: ptype a
PASS: gdb.cp/virtfunc.exp: ptype b
PASS: gdb.cp/virtfunc.exp: ptype c
PASS: gdb.cp/virtfunc.exp: ptype d
PASS: gdb.cp/virtfunc.exp: ptype e
PASS: gdb.cp/virtfunc.exp: ptype v
PASS: gdb.cp/virtfunc.exp: ptype vb
PASS: gdb.cp/virtfunc.exp: ptype pAa
PASS: gdb.cp/virtfunc.exp: ptype pAe
PASS: gdb.cp/virtfunc.exp: ptype pBe
PASS: gdb.cp/virtfunc.exp: ptype pDd
PASS: gdb.cp/virtfunc.exp: ptype pDe
PASS: gdb.cp/virtfunc.exp: ptype pVa
PASS: gdb.cp/virtfunc.exp: ptype pVv
PASS: gdb.cp/virtfunc.exp: ptype pVe
PASS: gdb.cp/virtfunc.exp: ptype pVd
PASS: gdb.cp/virtfunc.exp: ptype pADe
PASS: gdb.cp/virtfunc.exp: ptype pEe
PASS: gdb.cp/virtfunc.exp: ptype pVB
PASS: gdb.cp/virtfunc.exp: info vtbl a
PASS: gdb.cp/virtfunc.exp: info vtbl b
PASS: gdb.cp/virtfunc.exp: info vtbl c
PASS: gdb.cp/virtfunc.exp: info vtbl d
PASS: gdb.cp/virtfunc.exp: info vtbl e
PASS: gdb.cp/virtfunc.exp: info vtbl pEe
PASS: gdb.cp/virtfunc.exp: info vtbl
PASS: gdb.cp/virtfunc.exp: info vtbl va
PASS: gdb.cp/virtfunc.exp: info vtbl all_count
PASS: gdb.cp/virtfunc.exp: print pAe->f()
PASS: gdb.cp/virtfunc.exp: print pAa->f()
PASS: gdb.cp/virtfunc.exp: print pDe->vg()
PASS: gdb.cp/virtfunc.exp: print pADe->vg()
PASS: gdb.cp/virtfunc.exp: print pDd->vg()
PASS: gdb.cp/virtfunc.exp: print pEe->vvb()
PASS: gdb.cp/virtfunc.exp: print pVB->vvb()
PASS: gdb.cp/virtfunc.exp: print pBe->vvb()
PASS: gdb.cp/virtfunc.exp: print pDe->vvb()
PASS: gdb.cp/virtfunc.exp: print pEe->vd()
PASS: gdb.cp/virtfunc.exp: print pEe->fvb()
KFAIL: gdb.cp/virtfunc.exp: print pEe->D::vg() (PRMS: gdb/1064)
PASS: gdb.cp/virtfunc.exp: next to pAa->f call
PASS: gdb.cp/virtfunc.exp: next to pDe->vg call
PASS: gdb.cp/virtfunc.exp: step through thunk into E::vg
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.cp/virtfunc2.exp ...
PASS: gdb.cp/virtfunc2.exp: continue to breakpoint: marker 1
PASS: gdb.cp/virtfunc2.exp: print o.do_print()
PASS: gdb.cp/virtfunc2.exp: print o.do_print3()
PASS: gdb.cp/virtfunc2.exp: print o2.do_print()
PASS: gdb.cp/virtfunc2.exp: print o2.do_print2()
PASS: gdb.cp/virtfunc2.exp: print o2.do_print3()
PASS: gdb.cp/virtfunc2.exp: print o

		=== gdb Summary ===

# of expected passes		4031
# of expected failures		6
# of known failures		22
# of untested testcases		1
# of unsupported tests		1
[...]/tschwinge/Ferry_Tagscherer.build/gdb/testsuite/../../gdb/gdb version  7.6.50.20131021-cvs -nw -nx -data-directory [...]/tschwinge/Ferry_Tagscherer.build/gdb/testsuite/../data-directory 

