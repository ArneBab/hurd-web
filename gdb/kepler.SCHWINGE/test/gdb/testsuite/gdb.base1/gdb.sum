Test Run By thomas on Thu Feb  7 23:27:03 2013
Native configuration is i686-pc-linux-gnu

		=== gdb tests ===

Schedule of variations:
    unix

Running target unix
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gcore.exp ...
PASS: gdb.base/gcore.exp: help gcore
PASS: gdb.base/gcore.exp: set breakpoint at terminal_func
PASS: gdb.base/gcore.exp: continue to terminal_func
PASS: gdb.base/gcore.exp: save a corefile
PASS: gdb.base/gcore.exp: re-load generated corefile
PASS: gdb.base/gcore.exp: where in corefile
PASS: gdb.base/gcore.exp: corefile restored general registers
PASS: gdb.base/gcore.exp: corefile restored all registers
PASS: gdb.base/gcore.exp: corefile restored extern array
PASS: gdb.base/gcore.exp: corefile restored static array
PASS: gdb.base/gcore.exp: corefile restored un-initialized array
PASS: gdb.base/gcore.exp: corefile restored heap array
PASS: gdb.base/gcore.exp: corefile restored stack array
PASS: gdb.base/gcore.exp: corefile restored backtrace
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/exe-lock.exp ...
PASS: gdb.base/exe-lock.exp: continue until exit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/complex.exp ...
PASS: gdb.base/complex.exp: print complex packed value in C
PASS: gdb.base/complex.exp: print complex value in C
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdbvars.exp ...
PASS: gdb.base/gdbvars.exp: set print sevenbit-strings
PASS: gdb.base/gdbvars.exp: Set value-history[1] using $1
PASS: gdb.base/gdbvars.exp: Set value-history[2] using $2
PASS: gdb.base/gdbvars.exp: Set value-history[3] using $3
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] using inplicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] again using implicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using implicit index $
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-2] using explicit index $$2
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $0
PASS: gdb.base/gdbvars.exp: print 108
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $$0
PASS: gdb.base/gdbvars.exp: Print value-history[1] using explicit index $1
PASS: gdb.base/gdbvars.exp: Print value-history[2] using explicit index $2
PASS: gdb.base/gdbvars.exp: Print value-history[3] using explicit index $3
PASS: gdb.base/gdbvars.exp: Print (value-history[MAX] - 3) using implicit index $
PASS: gdb.base/gdbvars.exp: Use value-history element in arithmetic expression
PASS: gdb.base/gdbvars.exp: Set a new convenience variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable to a new value
PASS: gdb.base/gdbvars.exp: Print new contents of convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable $_
PASS: gdb.base/gdbvars.exp: Print contents of convenience variable $_
PASS: gdb.base/gdbvars.exp: Use convenience variable in arithmetic expression
PASS: gdb.base/gdbvars.exp: Use convenience variable assignment in arithmetic expression
PASS: gdb.base/gdbvars.exp: Print contents of uninitialized convenience variable
PASS: gdb.base/gdbvars.exp: Set a new convenience variable to a program variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable of program variable
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/detach.exp ...
PASS: gdb.base/detach.exp: set should_exit, one
PASS: gdb.base/detach.exp: detach, one
PASS: gdb.base/detach.exp: set should_exit, two
PASS: gdb.base/detach.exp: detach, two
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/condbreak.exp ...
PASS: gdb.base/condbreak.exp: breakpoint function
PASS: gdb.base/condbreak.exp: break marker1 if 1==1
PASS: gdb.base/condbreak.exp: delete 2
PASS: gdb.base/condbreak.exp: break break.c:93 if 1==1
PASS: gdb.base/condbreak.exp: delete 3
PASS: gdb.base/condbreak.exp: break marker1 if (1==1)
PASS: gdb.base/condbreak.exp: break break.c:93 if (1==1)
PASS: gdb.base/condbreak.exp: break marker2 if (a==43)
PASS: gdb.base/condbreak.exp: break marker3 if (multi_line_if_conditional(1,1,1)==0)
PASS: gdb.base/condbreak.exp: break marker4
PASS: gdb.base/condbreak.exp: breakpoint info
PASS: gdb.base/condbreak.exp: rerun to main
PASS: gdb.base/condbreak.exp: run until breakpoint set at a line number
PASS: gdb.base/condbreak.exp: run until breakpoint at marker1
PASS: gdb.base/condbreak.exp: run until breakpoint at marker2
PASS: gdb.base/condbreak.exp: break main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break *main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) task 999
PASS: gdb.base/condbreak.exp: break *main task 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) t 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) th 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) ta 999
PASS: gdb.base/condbreak.exp: run until breakpoint at marker3
PASS: gdb.base/condbreak.exp: run until breakpoint at marker4
PASS: gdb.base/condbreak.exp: complete cond 1
PASS: gdb.base/condbreak.exp: set variable $var = 1
PASS: gdb.base/condbreak.exp: complete cond $v
PASS: gdb.base/condbreak.exp: complete cond 1 values[0].a
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/breakpoint-shadow.exp ...
PASS: gdb.base/breakpoint-shadow.exp: set breakpoint always-inserted on
PASS: gdb.base/breakpoint-shadow.exp: show breakpoint always-inserted
PASS: gdb.base/breakpoint-shadow.exp: disassembly without breakpoints
PASS: gdb.base/breakpoint-shadow.exp: First breakpoint placed
PASS: gdb.base/breakpoint-shadow.exp: Second breakpoint placed
PASS: gdb.base/breakpoint-shadow.exp: disassembly with breakpoints
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/info-os.exp ...
PASS: gdb.base/info-os.exp: get inferior process ID
PASS: gdb.base/info-os.exp: continue to breakpoint: Set breakpoint here
PASS: gdb.base/info-os.exp: get shared memory key
PASS: gdb.base/info-os.exp: get shared memory ID
PASS: gdb.base/info-os.exp: get semaphore key
PASS: gdb.base/info-os.exp: get semaphore ID
PASS: gdb.base/info-os.exp: get message queue key
PASS: gdb.base/info-os.exp: get message queue ID
PASS: gdb.base/info-os.exp: get socket port number
PASS: gdb.base/info-os.exp: get process list
PASS: gdb.base/info-os.exp: get process groups
PASS: gdb.base/info-os.exp: get threads
PASS: gdb.base/info-os.exp: get threads
PASS: gdb.base/info-os.exp: get file descriptors
PASS: gdb.base/info-os.exp: get internet-domain sockets
PASS: gdb.base/info-os.exp: get shared-memory regions
PASS: gdb.base/info-os.exp: get semaphores
PASS: gdb.base/info-os.exp: get message queues
PASS: gdb.base/info-os.exp: continue
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/bigcore.exp ...
PASS: gdb.base/bigcore.exp: set print sevenbit-strings
PASS: gdb.base/bigcore.exp: set width 0
PASS: gdb.base/bigcore.exp: tbreak 269
PASS: gdb.base/bigcore.exp: continue
PASS: gdb.base/bigcore.exp: next
PASS: gdb.base/bigcore.exp: extract next heap
PASS: gdb.base/bigcore.exp: extract prev heap
PASS: gdb.base/bigcore.exp: save heap size
PASS: gdb.base/bigcore.exp: grab pid
PASS: gdb.base/bigcore.exp: signal SIGABRT
PASS: gdb.base/bigcore.exp: check core size
PASS: gdb.base/bigcore.exp: load corefile
PASS: gdb.base/bigcore.exp: check next heap
PASS: gdb.base/bigcore.exp: check prev heap
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/jump.exp ...
PASS: gdb.base/jump.exp: break before jump to non-call
PASS: gdb.base/jump.exp: jump to non-call
PASS: gdb.base/jump.exp: break before jump to call
PASS: gdb.base/jump.exp: jump to call
PASS: gdb.base/jump.exp: disable breakpoint on call
PASS: gdb.base/jump.exp: jump to call with disabled breakpoint
PASS: gdb.base/jump.exp: jump without argument disallowed
PASS: gdb.base/jump.exp: jump with trailing argument junk
PASS: gdb.base/jump.exp: aborted jump out of current function
PASS: gdb.base/jump.exp: jump out of current function
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/multi-forks.exp ...
PASS: gdb.base/multi-forks.exp: set follow-fork child
PASS: gdb.base/multi-forks.exp: run to exit 2
PASS: gdb.base/multi-forks.exp: follow child, print pids
PASS: gdb.base/multi-forks.exp: run to exit 2
PASS: gdb.base/multi-forks.exp: follow parent, print pids
PASS: gdb.base/multi-forks.exp: help set detach
PASS: gdb.base/multi-forks.exp: show detach default on
PASS: gdb.base/multi-forks.exp: set detach off
PASS: gdb.base/multi-forks.exp: Run to exit 1
PASS: gdb.base/multi-forks.exp: info inferior 1
PASS: gdb.base/multi-forks.exp: inferior 1
PASS: gdb.base/multi-forks.exp: Run to exit 2
PASS: gdb.base/multi-forks.exp: info inferior 2
PASS: gdb.base/multi-forks.exp: inferior 2
PASS: gdb.base/multi-forks.exp: Run to exit 3
PASS: gdb.base/multi-forks.exp: info inferior 3
PASS: gdb.base/multi-forks.exp: inferior 3
PASS: gdb.base/multi-forks.exp: Run to exit 4
PASS: gdb.base/multi-forks.exp: info inferior 4
PASS: gdb.base/multi-forks.exp: inferior 4
PASS: gdb.base/multi-forks.exp: Run to exit 5
PASS: gdb.base/multi-forks.exp: info inferior 5
PASS: gdb.base/multi-forks.exp: inferior 5
PASS: gdb.base/multi-forks.exp: Run to exit 6
PASS: gdb.base/multi-forks.exp: info inferior 6
PASS: gdb.base/multi-forks.exp: inferior 6
PASS: gdb.base/multi-forks.exp: Run to exit 7
PASS: gdb.base/multi-forks.exp: info inferior 7
PASS: gdb.base/multi-forks.exp: inferior 7
PASS: gdb.base/multi-forks.exp: Run to exit 8
PASS: gdb.base/multi-forks.exp: info inferior 8
PASS: gdb.base/multi-forks.exp: inferior 8
PASS: gdb.base/multi-forks.exp: Run to exit 9
PASS: gdb.base/multi-forks.exp: info inferior 9
PASS: gdb.base/multi-forks.exp: inferior 9
PASS: gdb.base/multi-forks.exp: Run to exit 10
PASS: gdb.base/multi-forks.exp: info inferior 10
PASS: gdb.base/multi-forks.exp: inferior 10
PASS: gdb.base/multi-forks.exp: Run to exit 11
PASS: gdb.base/multi-forks.exp: info inferior 11
PASS: gdb.base/multi-forks.exp: inferior 11
PASS: gdb.base/multi-forks.exp: Run to exit 12
PASS: gdb.base/multi-forks.exp: info inferior 12
PASS: gdb.base/multi-forks.exp: inferior 12
PASS: gdb.base/multi-forks.exp: Run to exit 13
PASS: gdb.base/multi-forks.exp: info inferior 13
PASS: gdb.base/multi-forks.exp: inferior 13
PASS: gdb.base/multi-forks.exp: Run to exit 14
PASS: gdb.base/multi-forks.exp: info inferior 14
PASS: gdb.base/multi-forks.exp: inferior 14
PASS: gdb.base/multi-forks.exp: Run to exit 15
PASS: gdb.base/multi-forks.exp: info inferior 15
PASS: gdb.base/multi-forks.exp: inferior 15
PASS: gdb.base/multi-forks.exp: Run to exit 16
PASS: gdb.base/multi-forks.exp: info inferior 16
PASS: gdb.base/multi-forks.exp: restart final
PASS: gdb.base/multi-forks.exp: Detach 2
PASS: gdb.base/multi-forks.exp: Detach 3
PASS: gdb.base/multi-forks.exp: Detach 4
PASS: gdb.base/multi-forks.exp: Detach 5
PASS: gdb.base/multi-forks.exp: Kill 6
PASS: gdb.base/multi-forks.exp: Did kill 6
PASS: gdb.base/multi-forks.exp: Kill 7
PASS: gdb.base/multi-forks.exp: Did kill 7
PASS: gdb.base/multi-forks.exp: Kill 8
PASS: gdb.base/multi-forks.exp: Did kill 8
PASS: gdb.base/multi-forks.exp: Kill 9
PASS: gdb.base/multi-forks.exp: Did kill 9
PASS: gdb.base/multi-forks.exp: Kill 10
PASS: gdb.base/multi-forks.exp: Did kill 10
PASS: gdb.base/multi-forks.exp: Kill 11
PASS: gdb.base/multi-forks.exp: Did kill 11
PASS: gdb.base/multi-forks.exp: Kill 12
PASS: gdb.base/multi-forks.exp: Did kill 12
PASS: gdb.base/multi-forks.exp: Kill 13
PASS: gdb.base/multi-forks.exp: Did kill 13
PASS: gdb.base/multi-forks.exp: Kill 14
PASS: gdb.base/multi-forks.exp: Did kill 14
PASS: gdb.base/multi-forks.exp: Kill 15
PASS: gdb.base/multi-forks.exp: Did kill 15
PASS: gdb.base/multi-forks.exp: Kill 16
PASS: gdb.base/multi-forks.exp: Did kill 16
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/hbreak.exp ...
PASS: gdb.base/hbreak.exp: hbreak
PASS: gdb.base/hbreak.exp: continue to break-at-exit after hbreak
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/frame-args.exp ...
PASS: gdb.base/frame-args.exp: set print frame-arguments all
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to all
PASS: gdb.base/frame-args.exp: set print frame-arguments scalars
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to scalars
PASS: gdb.base/frame-args.exp: set print frame-arguments none
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to none
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/dbx.exp ...
PASS: gdb.base/dbx.exp: stop in main
PASS: gdb.base/dbx.exp: status
PASS: gdb.base/dbx.exp: stop at average.c:43
PASS: gdb.base/dbx.exp: stop in average.c:43
PASS: gdb.base/dbx.exp: stop at main
PASS: gdb.base/dbx.exp: running to main
PASS: gdb.base/dbx.exp: assign first
PASS: gdb.base/dbx.exp: print first
PASS: gdb.base/dbx.exp: whereis my_list
PASS: gdb.base/dbx.exp: file average.c:1
PASS: gdb.base/dbx.exp: cont 1
PASS: gdb.base/dbx.exp: step
XFAIL: gdb.base/dbx.exp: func sum
PASS: gdb.base/dbx.exp: stop in sum
PASS: gdb.base/dbx.exp: cont 2
XFAIL: gdb.base/dbx.exp: func print_average
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/jit.exp ...
PASS: gdb.base/jit.exp: one_jit_test-1: continue to breakpoint: break here 0
PASS: gdb.base/jit.exp: one_jit_test-1: set var argc = 2
PASS: gdb.base/jit.exp: one_jit_test-1: set var libname = "SHLIBDIR/jit-solib.so"
PASS: gdb.base/jit.exp: one_jit_test-1: set var count = 1
PASS: gdb.base/jit.exp: one_jit_test-1: continue to breakpoint: break here 1
PASS: gdb.base/jit.exp: one_jit_test-1: info function jit_function
PASS: gdb.base/jit.exp: one_jit_test-1: continue to breakpoint: break here 2
PASS: gdb.base/jit.exp: one_jit_test-1: info function jit_function
PASS: gdb.base/jit.exp: one_jit_test-2: continue to breakpoint: break here 0
PASS: gdb.base/jit.exp: one_jit_test-2: set var argc = 2
PASS: gdb.base/jit.exp: one_jit_test-2: set var libname = "SHLIBDIR/jit-solib.so"
PASS: gdb.base/jit.exp: one_jit_test-2: set var count = 2
PASS: gdb.base/jit.exp: one_jit_test-2: continue to breakpoint: break here 1
PASS: gdb.base/jit.exp: one_jit_test-2: info function jit_function
PASS: gdb.base/jit.exp: one_jit_test-2: continue to breakpoint: break here 2
PASS: gdb.base/jit.exp: one_jit_test-2: info function jit_function
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/hbreak2.exp ...
PASS: gdb.base/hbreak2.exp: hardware breakpoint support
PASS: gdb.base/hbreak2.exp: hardware breakpoint insertion
PASS: gdb.base/hbreak2.exp: hardware breakpoint function
PASS: gdb.base/hbreak2.exp: hardware breakpoint quoted function
PASS: gdb.base/hbreak2.exp: hardware breakpoint function in file
PASS: gdb.base/hbreak2.exp: use `list' to establish default source file
PASS: gdb.base/hbreak2.exp: hardware breakpoint line number
PASS: gdb.base/hbreak2.exp: hardware breakpoint line number in file
PASS: gdb.base/hbreak2.exp: hardware breakpoint at start of multi line if conditional
PASS: gdb.base/hbreak2.exp: hardware breakpoint at start of multi line while conditional
PASS: gdb.base/hbreak2.exp: hardware breakpoint info
PASS: gdb.base/hbreak2.exp: hardware breakpoint function (2)
PASS: gdb.base/hbreak2.exp: run until function breakpoint
PASS: gdb.base/hbreak2.exp: hardware breakpoint line number (2)
PASS: gdb.base/hbreak2.exp: run until breakpoint set at a line number
PASS: gdb.base/hbreak2.exp: hardware breakpoint function in file (2)
PASS: gdb.base/hbreak2.exp: run until file:function(6) breakpoint
PASS: gdb.base/hbreak2.exp: run until file:function(5) breakpoint
PASS: gdb.base/hbreak2.exp: run until file:function(4) breakpoint
PASS: gdb.base/hbreak2.exp: run until file:function(3) breakpoint
PASS: gdb.base/hbreak2.exp: run until file:function(2) breakpoint
PASS: gdb.base/hbreak2.exp: run until file:function(1) breakpoint
PASS: gdb.base/hbreak2.exp: hardware breakpoint quoted function (2)
PASS: gdb.base/hbreak2.exp: run until quoted breakpoint
PASS: gdb.base/hbreak2.exp: hardware breakpoint line number in file (2)
PASS: gdb.base/hbreak2.exp: run until file:linenum breakpoint
PASS: gdb.base/hbreak2.exp: hardware breakpoint offset +1
PASS: gdb.base/hbreak2.exp: step onto hardware breakpoint
PASS: gdb.base/hbreak2.exp: setting hardware breakpoint at }
PASS: gdb.base/hbreak2.exp: continue to hardware breakpoint at }
PASS: gdb.base/hbreak2.exp: temporary hardware breakpoint function
PASS: gdb.base/hbreak2.exp: temporary hardware breakpoint function in file
PASS: gdb.base/hbreak2.exp: temporary hardware breakpoint line number #1
PASS: gdb.base/hbreak2.exp: temporary hardware breakpoint line number #2
PASS: gdb.base/hbreak2.exp: temporary hardware breakpoint line number in file #1
PASS: gdb.base/hbreak2.exp: temporary hardware breakpoint line number in file #2
PASS: gdb.base/hbreak2.exp: temporary hardware breakpoint info
PASS: gdb.base/hbreak2.exp: set breakpoint pending off
PASS: gdb.base/hbreak2.exp: hardware break on non-existent source line
PASS: gdb.base/hbreak2.exp: until bp_location1
PASS: gdb.base/hbreak2.exp: hardware break on default location
PASS: gdb.base/hbreak2.exp: set to-be-silent hardware break bp_location1
PASS: gdb.base/hbreak2.exp: set silent break bp_location1
PASS: gdb.base/hbreak2.exp: info silent hardware break bp_location1
PASS: gdb.base/hbreak2.exp: hit silent hardware break bp_location1
PASS: gdb.base/hbreak2.exp: stopped for silent hardware break bp_location1
PASS: gdb.base/hbreak2.exp: thread-specific hardware breakpoint on non-existent thread disallowed
PASS: gdb.base/hbreak2.exp: thread-specific hardware breakpoint on bogus thread ID disallowed
PASS: gdb.base/hbreak2.exp: hardware breakpoint with trailing garbage disallowed
PASS: gdb.base/hbreak2.exp: step over hardware breakpoint
PASS: gdb.base/hbreak2.exp: clear line has no breakpoint disallowed
PASS: gdb.base/hbreak2.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/hbreak2.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/hbreak2.exp: set hardware breakpoint via convenience variable
PASS: gdb.base/hbreak2.exp: set convenience variable $foo to 81.5
PASS: gdb.base/hbreak2.exp: set hardware breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/hbreak2.exp: set hardware breakpoint on to-be-called function
PASS: gdb.base/hbreak2.exp: hit hardware breakpoint on called function
PASS: gdb.base/hbreak2.exp: backtrace while in called function
PASS: gdb.base/hbreak2.exp: finish from called function
PASS: gdb.base/hbreak2.exp: hardware break at factorial
PASS: gdb.base/hbreak2.exp: kill program
PASS: gdb.base/hbreak2.exp: run to factorial(6)
PASS: gdb.base/hbreak2.exp: continue to factorial(5)
PASS: gdb.base/hbreak2.exp: backtrace from factorial(5)
PASS: gdb.base/hbreak2.exp: next to recursive call
PASS: gdb.base/hbreak2.exp: next over recursive call
PASS: gdb.base/hbreak2.exp: backtrace from factorial(5.1)
PASS: gdb.base/hbreak2.exp: continue until exit at recursive next test
PASS: gdb.base/hbreak2.exp: hardware breakpoint function, optimized file
PASS: gdb.base/hbreak2.exp: run until hardware function breakpoint, optimized file (code motion)
PASS: gdb.base/hbreak2.exp: hardware breakpoint small function, optimized file
PASS: gdb.base/hbreak2.exp: run until hardware breakpoint set at small function, optimized file
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/eu-strip-infcall.exp ...
PASS: gdb.base/eu-strip-infcall.exp: infcall
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/echo.exp ...
PASS: gdb.base/echo.exp: Echo test
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/dprintf.exp ...
PASS: gdb.base/dprintf.exp: dprintf
PASS: gdb.base/dprintf.exp: dprintf foo
PASS: gdb.base/dprintf.exp: dprintf 29
PASS: gdb.base/dprintf.exp: dprintf foo,"At foo entry\n"
PASS: gdb.base/dprintf.exp: dprintf 26,"arg=%d, g=%d\n", arg, g
PASS: gdb.base/dprintf.exp: break 27
PASS: gdb.base/dprintf.exp: 1st dprintf, gdb
PASS: gdb.base/dprintf.exp: 2nd dprintf, gdb
PASS: gdb.base/dprintf.exp: Set dprintf style to call
PASS: gdb.base/dprintf.exp: 1st dprintf, call
PASS: gdb.base/dprintf.exp: 2nd dprintf, call
PASS: gdb.base/dprintf.exp: Set dprintf function
PASS: gdb.base/dprintf.exp: Set dprintf channel
PASS: gdb.base/dprintf.exp: 1st dprintf, fprintf
PASS: gdb.base/dprintf.exp: 2nd dprintf, fprintf
PASS: gdb.base/dprintf.exp: Set dprintf style to agent - cannot do
PASS: gdb.base/dprintf.exp: Set dprintf style to an unrecognized type
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/all-bin.exp ...
PASS: gdb.base/all-bin.exp: continuing after dummy()
PASS: gdb.base/all-bin.exp: print value of v_int+v_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int+v_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_float
PASS: gdb.base/all-bin.exp: print value of v_int+v_double
PASS: gdb.base/all-bin.exp: print value of v_int<=v_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int<=v_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_float
PASS: gdb.base/all-bin.exp: print value of v_int<=v_double
PASS: gdb.base/all-bin.exp: set v_char=0
PASS: gdb.base/all-bin.exp: set v_double=0
PASS: gdb.base/all-bin.exp: set v_unsigned_long=0
PASS: gdb.base/all-bin.exp: print value of v_int&&v_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int&&v_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_float
PASS: gdb.base/all-bin.exp: print value of v_int&&v_double
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/attach-pie-noexec.exp ...
PASS: gdb.base/attach-pie-noexec.exp: show architecture
PASS: gdb.base/attach-pie-noexec.exp: sanity check info shared
PASS: gdb.base/attach-pie-noexec.exp: attach
PASS: gdb.base/attach-pie-noexec.exp: set architecture i386
PASS: gdb.base/attach-pie-noexec.exp: info shared
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/empty_exe.exp ...
PASS: gdb.base/empty_exe.exp: file ''
PASS: gdb.base/empty_exe.exp: print 1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/bitfields2.exp ...
PASS: gdb.base/bitfields2.exp: set print sevenbit-strings
PASS: gdb.base/bitfields2.exp: break tester prior to break1
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break1
PASS: gdb.base/bitfields2.exp: continuing to break1 #0
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s1 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #1
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u1 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #2
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s2 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #3
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u2 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #4
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s3 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #5
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u3 = 1
PASS: gdb.base/bitfields2.exp: break tester prior to break2
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break2
PASS: gdb.base/bitfields2.exp: continuing to break2 #0
PASS: gdb.base/bitfields2.exp: bitfield containment; flags.u1, flags.u3, and flags.s3 to all 1s
PASS: gdb.base/bitfields2.exp: continuing to break2 #1
PASS: gdb.base/bitfields2.exp: bitfield containment; flags.u2, flags.s1, flags.s2 to all 1s
PASS: gdb.base/bitfields2.exp: break tester prior to break3
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break3
PASS: gdb.base/bitfields2.exp: continuing to break3 #0
PASS: gdb.base/bitfields2.exp: maximum unsigned bitfield values
PASS: gdb.base/bitfields2.exp: break tester prior to break4
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break4
PASS: gdb.base/bitfields2.exp: continuing to break4 #0
PASS: gdb.base/bitfields2.exp: maximum signed bitfield values
PASS: gdb.base/bitfields2.exp: continuing to break4 #1
PASS: gdb.base/bitfields2.exp: determining signed-ness of bitfields
PASS: gdb.base/bitfields2.exp: most negative signed bitfield values
PASS: gdb.base/bitfields2.exp: continuing to break4 #2
PASS: gdb.base/bitfields2.exp: signed bitfields containing -1
PASS: gdb.base/bitfields2.exp: break tester prior to break5
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break5
PASS: gdb.base/bitfields2.exp: continuing to break5 #0
PASS: gdb.base/bitfields2.exp: set long long unsigned bitfield
PASS: gdb.base/bitfields2.exp: set long long signed bitfield positive
PASS: gdb.base/bitfields2.exp: long long bitfield values after set
PASS: gdb.base/bitfields2.exp: set long long signed bitfield negative
PASS: gdb.base/bitfields2.exp: long long bitfield values after set negative
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/moribund-step.exp ...
PASS: gdb.base/moribund-step.exp: set non-stop on
PASS: gdb.base/moribund-step.exp: step
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdb1821.exp ...
PASS: gdb.base/gdb1821.exp: print /x bar
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/environ.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/disp-step-syscall.exp ...
PASS: gdb.base/disp-step-syscall.exp: fork: delete break 1
PASS: gdb.base/disp-step-syscall.exp: fork: break marker
PASS: gdb.base/disp-step-syscall.exp: fork: set displaced-stepping off
PASS: gdb.base/disp-step-syscall.exp: fork: break fork
PASS: gdb.base/disp-step-syscall.exp: fork: continue to fork (1st time)
PASS: gdb.base/disp-step-syscall.exp: fork: continue to fork (2nd time)
PASS: gdb.base/disp-step-syscall.exp: fork: display/i $pc
PASS: gdb.base/disp-step-syscall.exp: fork: get hexadecimal valueof "$pc"
PASS: gdb.base/disp-step-syscall.exp: fork: stepi fork insn
PASS: gdb.base/disp-step-syscall.exp: fork: get hexadecimal valueof "$pc"
PASS: gdb.base/disp-step-syscall.exp: fork: continue to fork (3rd time)
PASS: gdb.base/disp-step-syscall.exp: fork: break on syscall insns
PASS: gdb.base/disp-step-syscall.exp: fork: delete break fork
PASS: gdb.base/disp-step-syscall.exp: fork: continue to syscall insn fork
PASS: gdb.base/disp-step-syscall.exp: fork: set displaced-stepping on
PASS: gdb.base/disp-step-syscall.exp: fork: single step over fork
PASS: gdb.base/disp-step-syscall.exp: fork: get hexadecimal valueof "$pc"
PASS: gdb.base/disp-step-syscall.exp: fork: single step over fork final pc
PASS: gdb.base/disp-step-syscall.exp: fork: delete break fork insn
PASS: gdb.base/disp-step-syscall.exp: fork: continue to marker (fork)
PASS: gdb.base/disp-step-syscall.exp: vfork: delete break 1
PASS: gdb.base/disp-step-syscall.exp: vfork: break marker
PASS: gdb.base/disp-step-syscall.exp: vfork: set displaced-stepping off
PASS: gdb.base/disp-step-syscall.exp: vfork: break vfork
PASS: gdb.base/disp-step-syscall.exp: vfork: continue to vfork (1st time)
PASS: gdb.base/disp-step-syscall.exp: vfork: continue to vfork (2nd time)
PASS: gdb.base/disp-step-syscall.exp: vfork: display/i $pc
PASS: gdb.base/disp-step-syscall.exp: vfork: get hexadecimal valueof "$pc"
PASS: gdb.base/disp-step-syscall.exp: vfork: stepi vfork insn
PASS: gdb.base/disp-step-syscall.exp: vfork: get hexadecimal valueof "$pc"
PASS: gdb.base/disp-step-syscall.exp: vfork: continue to vfork (3rd time)
PASS: gdb.base/disp-step-syscall.exp: vfork: break on syscall insns
PASS: gdb.base/disp-step-syscall.exp: vfork: delete break vfork
PASS: gdb.base/disp-step-syscall.exp: vfork: continue to syscall insn vfork
PASS: gdb.base/disp-step-syscall.exp: vfork: set displaced-stepping on
PASS: gdb.base/disp-step-syscall.exp: vfork: single step over vfork
PASS: gdb.base/disp-step-syscall.exp: vfork: get hexadecimal valueof "$pc"
PASS: gdb.base/disp-step-syscall.exp: vfork: single step over vfork final pc
PASS: gdb.base/disp-step-syscall.exp: vfork: delete break vfork insn
PASS: gdb.base/disp-step-syscall.exp: vfork: continue to marker (vfork)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/break-inline.exp ...
PASS: gdb.base/break-inline.exp: break
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/interact.exp ...
PASS: gdb.base/interact.exp: set interactive-mode auto
PASS: gdb.base/interact.exp: source script with interactive-mode auto
PASS: gdb.base/interact.exp: sanity check with interactive-mode auto
PASS: gdb.base/interact.exp: show interactive-mode (auto)
PASS: gdb.base/interact.exp: set interactive-mode on
PASS: gdb.base/interact.exp: source script with interactive-mode on
PASS: gdb.base/interact.exp: sanity check with interactive-mode on
PASS: gdb.base/interact.exp: show interactive-mode (on)
PASS: gdb.base/interact.exp: set interactive-mode off
PASS: gdb.base/interact.exp: source script with interactive-mode off
PASS: gdb.base/interact.exp: sanity check with interactive-mode off
PASS: gdb.base/interact.exp: show interactive-mode (off)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/info-fun.exp ...
PASS: gdb.base/info-fun.exp: NO: info fun foo
PASS: gdb.base/info-fun.exp: IN: info fun foo
PASS: gdb.base/info-fun.exp: SEP: split solib
PASS: gdb.base/info-fun.exp: SEP: info fun foo
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/infnan.exp ...
PASS: gdb.base/infnan.exp: print a
PASS: gdb.base/infnan.exp: print b
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/advance.exp ...
PASS: gdb.base/advance.exp: advance line number
PASS: gdb.base/advance.exp: malformed advance
PASS: gdb.base/advance.exp: advance func
PASS: gdb.base/advance.exp: advance function not called by current frame
PASS: gdb.base/advance.exp: set breakpoint at call to func3
PASS: gdb.base/advance.exp: continue to call to func3 in main
PASS: gdb.base/advance.exp: advance function called as param
PASS: gdb.base/advance.exp: advance with no argument
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/commands.exp ...
PASS: gdb.base/commands.exp: set foo in gdbvar_simple_if_test
PASS: gdb.base/commands.exp: gdbvar_simple_if_test #1
PASS: gdb.base/commands.exp: gdbvar_simple_if_test #2
PASS: gdb.base/commands.exp: set foo in gdbvar_simple_while_test
PASS: gdb.base/commands.exp: gdbvar_simple_while_test #1
PASS: gdb.base/commands.exp: set foo in gdbvar complex_if_while_test
PASS: gdb.base/commands.exp: gdbvar_complex_if_while_test #1
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test #1
PASS: gdb.base/commands.exp: progvar_simple_if_test #1
PASS: gdb.base/commands.exp: progvar_simple_if_test #2
PASS: gdb.base/commands.exp: set args in progvar_simple_while_test
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test #2
PASS: gdb.base/commands.exp: progvar_simple_while_test #1
PASS: gdb.base/commands.exp: set args in progvar_complex_if_while_test
PASS: gdb.base/commands.exp: set value to 4 in progvar_simple_if_test
PASS: gdb.base/commands.exp: progvar_complex_if_while_test #1
PASS: gdb.base/commands.exp: set args in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test
PASS: gdb.base/commands.exp: break factorial #1
PASS: gdb.base/commands.exp: commands in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: commands part 2 in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: if_while_breakpoint_command_test #1
PASS: gdb.base/commands.exp: info break in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: set args in infrun_breakpoint_command_test
PASS: gdb.base/commands.exp: set value to 6 in progvar_simple_if_test #1
PASS: gdb.base/commands.exp: break factorial if value == 5
PASS: gdb.base/commands.exp: commands in infrun_breakpoint_command_test #1
PASS: gdb.base/commands.exp: commands in infrun_breakpoint_command_test #2
PASS: gdb.base/commands.exp: continue in infrun_breakpoint_command_test
PASS: gdb.base/commands.exp: set args in breakpoint_command_test
PASS: gdb.base/commands.exp: set value to 6 in progvar_simple_if_test #2
PASS: gdb.base/commands.exp: break factorial #2
PASS: gdb.base/commands.exp: commands in breakpoint_command_test
PASS: gdb.base/commands.exp: continue in breakpoint_command_test
PASS: gdb.base/commands.exp: print value in breakpoint_command_test
PASS: gdb.base/commands.exp: set foo in user_defined_command_test
PASS: gdb.base/commands.exp: define mycommand in user_defined_command_test
PASS: gdb.base/commands.exp: enter commands in user_defined_command_test
PASS: gdb.base/commands.exp: execute user defined command in user_defined_command_test
PASS: gdb.base/commands.exp: display user command in user_defined_command_test
PASS: gdb.base/commands.exp: set args in watchpoint_command_test
PASS: gdb.base/commands.exp: watch local_var
PASS: gdb.base/commands.exp: begin commands on watch
PASS: gdb.base/commands.exp: add print command to watch
PASS: gdb.base/commands.exp: add continue command to watch
PASS: gdb.base/commands.exp: end commands on watch
PASS: gdb.base/commands.exp: continue with watch
PASS: gdb.base/commands.exp: break factorial #3
PASS: gdb.base/commands.exp: set value to 5 in test_command_prompt_position
PASS: gdb.base/commands.exp: if test in test_command_prompt_position
PASS: gdb.base/commands.exp: > OK in test_command_prompt_position
PASS: gdb.base/commands.exp: tried to deprecate non-existing command
PASS: gdb.base/commands.exp: maintenance deprecate p "new_p" /1/
PASS: gdb.base/commands.exp: p deprecated warning, with replacement
PASS: gdb.base/commands.exp: Deprecated warning goes away /1/
PASS: gdb.base/commands.exp: maintenance deprecate p "new_p" /2/
PASS: gdb.base/commands.exp: maintenance deprecate print "new_print"
PASS: gdb.base/commands.exp: both alias and command are deprecated
PASS: gdb.base/commands.exp: Deprecated warning goes away /2/
PASS: gdb.base/commands.exp: deprecate long command /1/
PASS: gdb.base/commands.exp: long command deprecated /1/
PASS: gdb.base/commands.exp: deprecate long command /2/
PASS: gdb.base/commands.exp: long command deprecated with no alternative /2/
PASS: gdb.base/commands.exp: deprecate with no arguments
PASS: gdb.base/commands.exp: set args in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: breakpoint in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: begin commands in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: add silent command
PASS: gdb.base/commands.exp: add clear command
PASS: gdb.base/commands.exp: add printf command
PASS: gdb.base/commands.exp: add cont command
PASS: gdb.base/commands.exp: end commands
PASS: gdb.base/commands.exp: run factorial until breakpoint
PASS: gdb.base/commands.exp: set args in temporary_breakpoint_commands
PASS: gdb.base/commands.exp: breakpoint in temporary_breakpoint_commands
PASS: gdb.base/commands.exp: begin commands in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: add silent tbreak command
PASS: gdb.base/commands.exp: add printf tbreak command
PASS: gdb.base/commands.exp: add cont tbreak command
PASS: gdb.base/commands.exp: end tbreak commands
PASS: gdb.base/commands.exp: run factorial until temporary breakpoint
PASS: gdb.base/commands.exp: stray_arg0_test #1
PASS: gdb.base/commands.exp: stray_arg0_test #2
PASS: gdb.base/commands.exp: stray_arg0_test #3
PASS: gdb.base/commands.exp: stray_arg0_test #4
PASS: gdb.base/commands.exp: source file with indented comment
PASS: gdb.base/commands.exp: recursive source test
PASS: gdb.base/commands.exp: set $tem in if_commands_test
PASS: gdb.base/commands.exp: if $tem == 2 - if_commands_test 1
PASS: gdb.base/commands.exp: break main - if_commands_test 1
PASS: gdb.base/commands.exp: else - if_commands_test 1
PASS: gdb.base/commands.exp: break factorial - if_commands_test 1
PASS: gdb.base/commands.exp: commands - if_commands_test 1
PASS: gdb.base/commands.exp: silent - if_commands_test 1
PASS: gdb.base/commands.exp: set $tem = 3 - if_commands_test 1
PASS: gdb.base/commands.exp: continue - if_commands_test 1
PASS: gdb.base/commands.exp: first end - if_commands_test 1
PASS: gdb.base/commands.exp: second end - if_commands_test 1
PASS: gdb.base/commands.exp: if $tem == 1 - if_commands_test 2
PASS: gdb.base/commands.exp: break main - if_commands_test 2
PASS: gdb.base/commands.exp: else - if_commands_test 2
PASS: gdb.base/commands.exp: break factorial - if_commands_test 2
PASS: gdb.base/commands.exp: commands - if_commands_test 2
PASS: gdb.base/commands.exp: silent - if_commands_test 2
PASS: gdb.base/commands.exp: set $tem = 3 - if_commands_test 2
PASS: gdb.base/commands.exp: continue - if_commands_test 2
PASS: gdb.base/commands.exp: first end - if_commands_test 2
PASS: gdb.base/commands.exp: second end - if_commands_test 2
PASS: gdb.base/commands.exp: hook-stop 1
PASS: gdb.base/commands.exp: hook-stop 1a
PASS: gdb.base/commands.exp: hook-stop 1b
PASS: gdb.base/commands.exp: main commands 1
PASS: gdb.base/commands.exp: main commands 1a
PASS: gdb.base/commands.exp: main commands 1b
PASS: gdb.base/commands.exp: main commands 1c
PASS: gdb.base/commands.exp: main commands 2
PASS: gdb.base/commands.exp: main commands 2a
PASS: gdb.base/commands.exp: main commands 2b
PASS: gdb.base/commands.exp: main commands 2c
PASS: gdb.base/commands.exp: cmd1 error
PASS: gdb.base/commands.exp: no cmd2
PASS: gdb.base/commands.exp: define one
PASS: gdb.base/commands.exp: define hook-one
PASS: gdb.base/commands.exp: define one in redefine_hook_test
PASS: gdb.base/commands.exp: enter commands for one redefinition in redefine_hook_test
PASS: gdb.base/commands.exp: execute one command in redefine_hook_test
PASS: gdb.base/commands.exp: define backtrace
PASS: gdb.base/commands.exp: expect response to define backtrace
PASS: gdb.base/commands.exp: enter commands in redefine_backtrace_test
PASS: gdb.base/commands.exp: execute backtrace command in redefine_backtrace_test
PASS: gdb.base/commands.exp: execute bt command in redefine_backtrace_test
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/define.exp ...
PASS: gdb.base/define.exp: define user command: nextwhere
PASS: gdb.base/define.exp: use user command: nextwhere
PASS: gdb.base/define.exp: define user command: nextwh
PASS: gdb.base/define.exp: redefine user command aborted: nextwhere
PASS: gdb.base/define.exp: redefine user command: nextwhere
PASS: gdb.base/define.exp: redocumenting builtin command disallowed
PASS: gdb.base/define.exp: document user command: nextwhere
PASS: gdb.base/define.exp: re-document user command: nextwhere
PASS: gdb.base/define.exp: help user command: nextwhere
PASS: gdb.base/define.exp: set up whitespace in help string
PASS: gdb.base/define.exp: preserve whitespace in help string
PASS: gdb.base/define.exp: define user command: ifnospace
PASS: gdb.base/define.exp: test ifnospace is parsed correctly
PASS: gdb.base/define.exp: define user command: whilenospace
PASS: gdb.base/define.exp: test whilenospace is parsed correctly
PASS: gdb.base/define.exp: define user command: user-bt
PASS: gdb.base/define.exp: define hook-stop command
PASS: gdb.base/define.exp: use hook-stop command
PASS: gdb.base/define.exp: define hook undefined command aborted: bar
PASS: gdb.base/define.exp: define hook undefined command: bar
PASS: gdb.base/define.exp: define target testsuite
PASS: gdb.base/define.exp: document target testsuite
PASS: gdb.base/define.exp: help target
PASS: gdb.base/define.exp: target testsuite
PASS: gdb.base/define.exp: show user target testsuite
PASS: gdb.base/define.exp: define target hook-testsuite
PASS: gdb.base/define.exp: define target hookpost-testsuite
PASS: gdb.base/define.exp: target testsuite with hooks
PASS: gdb.base/define.exp: set gdb_prompt
PASS: gdb.base/define.exp: reset gdb_prompt
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/callfuncs.exp ...
PASS: gdb.base/callfuncs.exp: set print sevenbit-strings
PASS: gdb.base/callfuncs.exp: set print address off
PASS: gdb.base/callfuncs.exp: set width 0
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: set unwindonsignal on
PASS: gdb.base/callfuncs.exp: p t_char_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_char_values('a','b')
PASS: gdb.base/callfuncs.exp: p t_char_values(char_val1,char_val2)
PASS: gdb.base/callfuncs.exp: p t_char_values('a',char_val2)
PASS: gdb.base/callfuncs.exp: p t_char_values(char_val1,'b')
PASS: gdb.base/callfuncs.exp: p t_short_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_short_values(10,-23)
PASS: gdb.base/callfuncs.exp: p t_short_values(short_val1,short_val2)
PASS: gdb.base/callfuncs.exp: p t_short_values(10,short_val2)
PASS: gdb.base/callfuncs.exp: p t_short_values(short_val1,-23)
PASS: gdb.base/callfuncs.exp: p t_int_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_int_values(87,-26)
PASS: gdb.base/callfuncs.exp: p t_int_values(int_val1,int_val2)
PASS: gdb.base/callfuncs.exp: p t_int_values(87,int_val2)
PASS: gdb.base/callfuncs.exp: p t_int_values(int_val1,-26)
PASS: gdb.base/callfuncs.exp: p t_long_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_long_values(789,-321)
PASS: gdb.base/callfuncs.exp: p t_long_values(long_val1,long_val2)
PASS: gdb.base/callfuncs.exp: p t_long_values(789,long_val2)
PASS: gdb.base/callfuncs.exp: p t_long_values(long_val1,-321)
PASS: gdb.base/callfuncs.exp: p t_float_values(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_float_values(3.14159,-2.3765)
PASS: gdb.base/callfuncs.exp: p t_float_values(float_val1,float_val2)
PASS: gdb.base/callfuncs.exp: p t_float_values(3.14159,float_val2)
PASS: gdb.base/callfuncs.exp: p t_float_values(float_val1,-2.3765)
PASS: gdb.base/callfuncs.exp: p t_float_values2(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_float_values2(3.14159,float_val2)
PASS: gdb.base/callfuncs.exp: Call function with many float arguments.
PASS: gdb.base/callfuncs.exp: p t_small_values(1,2,3,4,5,6,7,8,9,10)
PASS: gdb.base/callfuncs.exp: p t_double_values(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_double_values(45.654,-67.66)
PASS: gdb.base/callfuncs.exp: p t_double_values(double_val1,double_val2)
PASS: gdb.base/callfuncs.exp: p t_double_values(45.654,double_val2)
PASS: gdb.base/callfuncs.exp: p t_double_values(double_val1,-67.66)
PASS: gdb.base/callfuncs.exp: Call function with many double arguments.
PASS: gdb.base/callfuncs.exp: p t_double_int(99.0, 1)
PASS: gdb.base/callfuncs.exp: p t_double_int(99.0, 99)
PASS: gdb.base/callfuncs.exp: p t_int_double(99, 1.0)
PASS: gdb.base/callfuncs.exp: p t_int_double(99, 99.0)
PASS: gdb.base/callfuncs.exp: p t_float_complex_values(fc1, fc2)
PASS: gdb.base/callfuncs.exp: p t_float_complex_values(fc3, fc4)
PASS: gdb.base/callfuncs.exp: p t_float_complex_many_args(fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4)
PASS: gdb.base/callfuncs.exp: p t_float_complex_many_args(fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1)
PASS: gdb.base/callfuncs.exp: p t_double_complex_values(dc1, dc2)
PASS: gdb.base/callfuncs.exp: p t_double_complex_values(dc3, dc4)
PASS: gdb.base/callfuncs.exp: p t_double_complex_many_args(dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4)
PASS: gdb.base/callfuncs.exp: p t_double_complex_many_args(dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_values(ldc1, ldc2)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_values(ldc3, ldc4)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_many_args(ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_many_args(ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1,ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val2,string_val1)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val1,string_val2)
PASS: gdb.base/callfuncs.exp: p t_string_values("string 1","string 2")
PASS: gdb.base/callfuncs.exp: p t_string_values("string 1",string_val2)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val1,"string 2")
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val2,char_array_val1)
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val1,char_array_val2)
PASS: gdb.base/callfuncs.exp: p t_char_array_values("carray 1","carray 2")
PASS: gdb.base/callfuncs.exp: p t_char_array_values("carray 1",char_array_val2)
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val1,"carray 2")
PASS: gdb.base/callfuncs.exp: p doubleit(4)
PASS: gdb.base/callfuncs.exp: p add(4,5)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val2,func_val1)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val1,func_val2)
PASS: gdb.base/callfuncs.exp: p function_struct.func(5)
PASS: gdb.base/callfuncs.exp: p function_struct_ptr->func(10)
PASS: gdb.base/callfuncs.exp: p t_func_values(add,func_val2)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val1,doubleit)
PASS: gdb.base/callfuncs.exp: p t_call_add(add,3,4)
PASS: gdb.base/callfuncs.exp: p t_call_add(func_val1,3,4)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enumval1)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enum_val1)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enum_val2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enumval2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enum_val2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enum_val1)
PASS: gdb.base/callfuncs.exp: p sum_args(1,{2})
PASS: gdb.base/callfuncs.exp: p sum_args(2,{2,3})
PASS: gdb.base/callfuncs.exp: p sum_args(3,{2,3,4})
PASS: gdb.base/callfuncs.exp: p sum_args(4,{2,3,4,5})
PASS: gdb.base/callfuncs.exp: p sum10 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
PASS: gdb.base/callfuncs.exp: p cmp10 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns char
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns short
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns int
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns long
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns float
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns double
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns float _Complex
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns double _Complex
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns long double _Complex
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns char *
PASS: gdb.base/callfuncs.exp: set unwindonsignal off
PASS: gdb.base/callfuncs.exp: register contents after gdb function calls
PASS: gdb.base/callfuncs.exp: gdb function calls preserve register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: stop at breakpoint in call dummy function
PASS: gdb.base/callfuncs.exp: continue from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: bt after continuing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after stop in call dummy
PASS: gdb.base/callfuncs.exp: continue after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: call function causing a breakpoint then do a finish
PASS: gdb.base/callfuncs.exp: finish from call dummy breakpoint returns correct value
PASS: gdb.base/callfuncs.exp: bt after finishing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after finish in call dummy
PASS: gdb.base/callfuncs.exp: finish after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: call function causing a breakpoint and then do a return
PASS: gdb.base/callfuncs.exp: back at main after return from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after return in call dummy
PASS: gdb.base/callfuncs.exp: return after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: stop at nested call level 1
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 1
PASS: gdb.base/callfuncs.exp: stop at nested call level 2
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 2
PASS: gdb.base/callfuncs.exp: stop at nested call level 3
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 3
PASS: gdb.base/callfuncs.exp: stop at nested call level 4
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 4
PASS: gdb.base/callfuncs.exp: Finish from nested call level 4
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 4
PASS: gdb.base/callfuncs.exp: Finish from nested call level 3
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 3
PASS: gdb.base/callfuncs.exp: Finish from nested call level 2
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 2
PASS: gdb.base/callfuncs.exp: Finish from nested call level 1
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 1
PASS: gdb.base/callfuncs.exp: register contents after nested call dummies
PASS: gdb.base/callfuncs.exp: nested call dummies preserve register contents
PASS: gdb.base/callfuncs.exp: set $old_sp = $sp
PASS: gdb.base/callfuncs.exp: set $sp = 0
PASS: gdb.base/callfuncs.exp: sp == 0: call doubleit (1)
PASS: gdb.base/callfuncs.exp: set $sp = -1
PASS: gdb.base/callfuncs.exp: sp == -1: call doubleit (1)
PASS: gdb.base/callfuncs.exp: set $sp = $old_sp
PASS: gdb.base/callfuncs.exp: print callfunc (Lcallfunc, 5)
PASS: gdb.base/callfuncs.exp: print *((int *(*) (void)) voidfunc)()
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/catch-syscall.exp ...
PASS: gdb.base/catch-syscall.exp: help catch syscall
PASS: gdb.base/catch-syscall.exp: catch syscall to a nonsense syscall is prohibited
PASS: gdb.base/catch-syscall.exp: complete catch syscall with multiple words
PASS: gdb.base/catch-syscall.exp: setting catch syscall without arguments
PASS: gdb.base/catch-syscall.exp: catch syscall appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called close
PASS: gdb.base/catch-syscall.exp: syscall close has returned
PASS: gdb.base/catch-syscall.exp: program has called chroot
PASS: gdb.base/catch-syscall.exp: syscall chroot has returned
PASS: gdb.base/catch-syscall.exp: program has called exit_group
PASS: gdb.base/catch-syscall.exp: continue until exit
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments (close)
PASS: gdb.base/catch-syscall.exp: syscall(s) close appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called close
PASS: gdb.base/catch-syscall.exp: syscall close has returned
PASS: gdb.base/catch-syscall.exp: continue until exit
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments ('close' [] 'chroot' [])
PASS: gdb.base/catch-syscall.exp: syscalls close, chroot appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called close
PASS: gdb.base/catch-syscall.exp: syscall close has returned
PASS: gdb.base/catch-syscall.exp: program has called chroot
PASS: gdb.base/catch-syscall.exp: syscall chroot has returned
PASS: gdb.base/catch-syscall.exp: continue until exit
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments (mlock)
PASS: gdb.base/catch-syscall.exp: syscall(s) mlock appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: continue until exit at catch syscall with unused syscall (mlock)
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments (chroot)
PASS: gdb.base/catch-syscall.exp: syscall(s) chroot appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called chroot
PASS: gdb.base/catch-syscall.exp: rerun to main
PASS: gdb.base/catch-syscall.exp: program has called chroot
PASS: gdb.base/catch-syscall.exp: syscall chroot has returned
PASS: gdb.base/catch-syscall.exp: continue until exit
PASS: gdb.base/catch-syscall.exp: set data-directory /the/path/to/nowhere
PASS: gdb.base/catch-syscall.exp: Catch syscall displays a warning when there is no XML support (no datadir set)
PASS: gdb.base/catch-syscall.exp: catch syscall appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: set data-directory /the/path/to/nowhere
PASS: gdb.base/catch-syscall.exp: catch syscall
PASS: gdb.base/catch-syscall.exp: program has called [0-9]*
PASS: gdb.base/catch-syscall.exp: syscall [0-9]* has returned
PASS: gdb.base/catch-syscall.exp: program has called [0-9]*
PASS: gdb.base/catch-syscall.exp: syscall [0-9]* has returned
PASS: gdb.base/catch-syscall.exp: program has called [0-9]*
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments (6)
PASS: gdb.base/catch-syscall.exp: syscall(s) 6 appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called 6
PASS: gdb.base/catch-syscall.exp: syscall 6 has returned
PASS: gdb.base/catch-syscall.exp: Catch a nonsense syscall without XML support
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/foll-fork.exp ...
PASS: gdb.base/foll-fork.exp: set verbose
PASS: gdb.base/foll-fork.exp: help set follow-fork
PASS: gdb.base/foll-fork.exp: set follow-fork ch
PASS: gdb.base/foll-fork.exp: set follow-fork, using abbreviations
PASS: gdb.base/foll-fork.exp: set follow-fork to nonsense is prohibited
PASS: gdb.base/foll-fork.exp: reset parent
PASS: gdb.base/foll-fork.exp: insert first fork catchpoint
PASS: gdb.base/foll-fork.exp: continue to first fork catchpoint
PASS: gdb.base/foll-fork.exp: default show parent follow, no catchpoints
PASS: gdb.base/foll-fork.exp: default parent follow, no catchpoints
PASS: gdb.base/foll-fork.exp: set follow-fork parent
PASS: gdb.base/foll-fork.exp: explicit show parent follow, no catchpoints
PASS: gdb.base/foll-fork.exp: explicit parent follow, no catchpoints
PASS: gdb.base/foll-fork.exp: set follow-fork child
PASS: gdb.base/foll-fork.exp: explicit show child follow, no catchpoints
PASS: gdb.base/foll-fork.exp: explicit child follow, no catchpoints
PASS: gdb.base/foll-fork.exp: explicit child follow, set catch fork
PASS: gdb.base/foll-fork.exp: info shows catchpoint without pid
PASS: gdb.base/foll-fork.exp: explicit child follow, catch fork
PASS: gdb.base/foll-fork.exp: info shows catchpoint without pid
PASS: gdb.base/foll-fork.exp: set follow-fork child
PASS: gdb.base/foll-fork.exp: set follow-fork child, tbreak
PASS: gdb.base/foll-fork.exp: set follow-fork child, hit tbreak
PASS: gdb.base/foll-fork.exp: set follow-fork child, cleanup
PASS: gdb.base/foll-fork.exp: unpatch child, break at callee
PASS: gdb.base/foll-fork.exp: unpatch child, set catch fork
PASS: gdb.base/foll-fork.exp: unpatch child, catch fork
PASS: gdb.base/foll-fork.exp: unpatch child, breakpoint at exit call
PASS: gdb.base/foll-fork.exp: unpatch child, set follow-fork child
PASS: gdb.base/foll-fork.exp: unpatch child, unpatched parent breakpoints from child
PASS: gdb.base/foll-fork.exp: explicit parent follow, set tcatch fork
PASS: gdb.base/foll-fork.exp: explicit parent follow, tcatch fork
PASS: gdb.base/foll-fork.exp: set follow-fork parent
PASS: gdb.base/foll-fork.exp: set follow-fork parent, tbreak
PASS: gdb.base/foll-fork.exp: set follow-fork parent, hit tbreak
PASS: gdb.base/foll-fork.exp: set follow-fork parent, cleanup
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/auxv.exp ...
PASS: gdb.base/auxv.exp: set print sevenbit-strings
PASS: gdb.base/auxv.exp: set width 0
PASS: gdb.base/auxv.exp: cd to temporary directory for core dumps
PASS: gdb.base/auxv.exp: tbreak 79
PASS: gdb.base/auxv.exp: continue
PASS: gdb.base/auxv.exp: info auxv on live process
PASS: gdb.base/auxv.exp: gcore
PASS: gdb.base/auxv.exp: continue
PASS: gdb.base/auxv.exp: continue
PASS: gdb.base/auxv.exp: generate native core dump
PASS: gdb.base/auxv.exp: load core file for info auxv on native core dump
PASS: gdb.base/auxv.exp: info auxv on native core dump
PASS: gdb.base/auxv.exp: matching auxv data from live and core
PASS: gdb.base/auxv.exp: load core file for info auxv on gcore-created dump
PASS: gdb.base/auxv.exp: info auxv on gcore-created dump
PASS: gdb.base/auxv.exp: matching auxv data from live and gcore
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/interrupt.exp ...
PASS: gdb.base/interrupt.exp: set interrupt character in interrupt.exp
PASS: gdb.base/interrupt.exp: child process is alive
PASS: gdb.base/interrupt.exp: child process ate our char
PASS: gdb.base/interrupt.exp: send_gdb control C
PASS: gdb.base/interrupt.exp: call function when asleep
PASS: gdb.base/interrupt.exp: call function a second time
PASS: gdb.base/interrupt.exp: continue
PASS: gdb.base/interrupt.exp: echo data
PASS: gdb.base/interrupt.exp: Send Control-C, second time
PASS: gdb.base/interrupt.exp: signal SIGINT
PASS: gdb.base/interrupt.exp: echo more data
PASS: gdb.base/interrupt.exp: send end of file
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/a2-run.exp ...
PASS: gdb.base/a2-run.exp: run "a2-run" with no args
PASS: gdb.base/a2-run.exp: no spurious messages at program exit
PASS: gdb.base/a2-run.exp: run "a2-run" with arg
PASS: gdb.base/a2-run.exp: run "a2-run" again with same args
PASS: gdb.base/a2-run.exp: set args
PASS: gdb.base/a2-run.exp: run after setting args to nil
PASS: gdb.base/a2-run.exp: set args 6
PASS: gdb.base/a2-run.exp: run "a2-run" again after setting args
PASS: gdb.base/a2-run.exp: run "a2-run" with shell
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/call-signal-resume.exp ...
PASS: gdb.base/call-signal-resume.exp: break stop_one
PASS: gdb.base/call-signal-resume.exp: continue to breakpoint at stop_one
PASS: gdb.base/call-signal-resume.exp: inferior function call signaled
PASS: gdb.base/call-signal-resume.exp: dummy stack frame number
PASS: gdb.base/call-signal-resume.exp: frame 3
PASS: gdb.base/call-signal-resume.exp: set confirm off
PASS: gdb.base/call-signal-resume.exp: return
PASS: gdb.base/call-signal-resume.exp: maintenance print dummy-frames
PASS: gdb.base/call-signal-resume.exp: maintenance info breakpoints
PASS: gdb.base/call-signal-resume.exp: break stop_two
PASS: gdb.base/call-signal-resume.exp: continue to breakpoint at stop_two
PASS: gdb.base/call-signal-resume.exp: continue to receipt of signal
PASS: gdb.base/call-signal-resume.exp: break null_hand_call
PASS: gdb.base/call-signal-resume.exp: null_hand_call
PASS: gdb.base/call-signal-resume.exp: dummy stack frame number
PASS: gdb.base/call-signal-resume.exp: frame 1
PASS: gdb.base/call-signal-resume.exp: set confirm off
PASS: gdb.base/call-signal-resume.exp: return
PASS: gdb.base/call-signal-resume.exp: break handle_signal
PASS: gdb.base/call-signal-resume.exp: continue to breakpoint at handle_signal
PASS: gdb.base/call-signal-resume.exp: continue to program exit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/hashline2.exp ...
PASS: gdb.base/hashline2.exp: set breakpoint
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/async.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/callexit.exp ...
PASS: gdb.base/callexit.exp: inferior function call terminated program
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/break-on-linker-gcd-function.exp ...
PASS: gdb.base/break-on-linker-gcd-function.exp: b 25
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/freebpcmd.exp ...
PASS: gdb.base/freebpcmd.exp: set breakpoint
PASS: gdb.base/freebpcmd.exp: send breakpoint commands
PASS: gdb.base/freebpcmd.exp: run program with breakpoint commands
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/find-unmapped.exp ...
PASS: gdb.base/find-unmapped.exp: x/5w global_var_1
PASS: gdb.base/find-unmapped.exp: x/5w global_var_2
PASS: gdb.base/find-unmapped.exp: find global_var_0, global_var_2, 0xff
PASS: gdb.base/find-unmapped.exp: find global_var_1, global_var_2, 0xff
PASS: gdb.base/find-unmapped.exp: find global_var_2, (global_var_2 + 16), 0xff
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/inferior-died.exp ...
PASS: gdb.base/inferior-died.exp: set detach-on-fork off
PASS: gdb.base/inferior-died.exp: set target-async on
PASS: gdb.base/inferior-died.exp: set non-stop on
PASS: gdb.base/inferior-died.exp: continue to breakpoint: breakpoint
PASS: gdb.base/inferior-died.exp: inferior 2
PASS: gdb.base/inferior-died.exp: continue
PASS: gdb.base/inferior-died.exp: p 1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/corefile.exp ...
PASS: gdb.base/corefile.exp: args: -core=coremaker.core (with bad program name)
PASS: gdb.base/corefile.exp: args: execfile -core=coremaker.core (with bad program name)
PASS: gdb.base/corefile.exp: core-file command (with bad program name)
PASS: gdb.base/corefile.exp: print coremaker_data
PASS: gdb.base/corefile.exp: print coremaker_bss
PASS: gdb.base/corefile.exp: print coremaker_ro
PASS: gdb.base/corefile.exp: print func2::coremaker_local
PASS: gdb.base/corefile.exp: backtrace in corefile.exp
PASS: gdb.base/corefile.exp: up in corefile.exp
PASS: gdb.base/corefile.exp: accessing original mmap data in core file
PASS: gdb.base/corefile.exp: accessing mmapped data in core file
PASS: gdb.base/corefile.exp: up in corefile.exp (reinit)
PASS: gdb.base/corefile.exp: core
PASS: gdb.base/corefile.exp: run: load core again
PASS: gdb.base/corefile.exp: run: sanity check we see the core file
PASS: gdb.base/corefile.exp: run: with core
PASS: gdb.base/corefile.exp: run: core file is cleared
PASS: gdb.base/corefile.exp: quit with a process
PASS: gdb.base/corefile.exp: quit with processes: n
PASS: gdb.base/corefile.exp: no question: load core
PASS: gdb.base/corefile.exp: quit with a core file
PASS: gdb.base/corefile.exp: attach: load core again
PASS: gdb.base/corefile.exp: attach: sanity check we see the core file
PASS: gdb.base/corefile.exp: attach: with core
PASS: gdb.base/corefile.exp: attach: core file is cleared
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/duplicate-bp.exp ...
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: delete $bp_num_1
PASS: gdb.base/duplicate-bp.exp: del_1_stop_2: delete #1, stop at #2
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: delete $bp_num_2
PASS: gdb.base/duplicate-bp.exp: del_2_stop_1: delete #2, stop at #1
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: disable $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: step
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: delete $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_1_del_2_stop_3: disable #1, delete #2, stop at #3
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: disable $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: step
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: delete $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_2_del_1_stop_3: disable #2, delete #1, stop at #3
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: disable $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: step
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: delete $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_1_del_3_stop_1: disable #1, delete #3, stop at #2
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: disable $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: step
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: delete $bp_num_1
PASS: gdb.base/duplicate-bp.exp: dis_3_del_1_stop_2: disable #3, delete #1, stop at #2
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: disable $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: step
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: delete $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_2_del_3_stop_1: disable #2, delete #3, stop at #1
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: set $bp_num_1 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: set $bp_num_2 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: set $bp_num_3 = $bpnum
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: step to place breakpoints
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: disable $bp_num_3
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: step
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: delete $bp_num_2
PASS: gdb.base/duplicate-bp.exp: dis_3_del_2_stop_1: disable #3, delete #2, stop at #1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/debug-expr.exp ...
PASS: gdb.base/debug-expr.exp: set variable array[0] = 0
PASS: gdb.base/debug-expr.exp: set variable array[1] = 1
PASS: gdb.base/debug-expr.exp: set variable array[2] = 2
PASS: gdb.base/debug-expr.exp: set variable array[3] = 3
PASS: gdb.base/debug-expr.exp: set debug expression 1
PASS: gdb.base/debug-expr.exp: print /x {char[4]} array
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/hook-stop-frame.exp ...
PASS: gdb.base/hook-stop-frame.exp: breakpoint line number
PASS: gdb.base/hook-stop-frame.exp: define hook-stop command
PASS: gdb.base/hook-stop-frame.exp: hook-stop runs before frame print
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/info-proc.exp ...
PASS: gdb.base/info-proc.exp: help info proc
PASS: gdb.base/info-proc.exp: info proc without a process
PASS: gdb.base/info-proc.exp: info proc with process
PASS: gdb.base/info-proc.exp: info proc mapping
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/longest-types.exp ...
UNTESTED: gdb.base/longest-types.exp: longest-types.exp
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/linespecs.exp ...
PASS: gdb.base/linespecs.exp: list c:/foo/bar/baz.c:1
PASS: gdb.base/linespecs.exp: list c:/foo/bar/baz.c
PASS: gdb.base/linespecs.exp: list fooc:/foo/bar/baz.c:1
PASS: gdb.base/linespecs.exp: list fooc:/foo/bar/baz.c
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/kill-after-signal.exp ...
PASS: gdb.base/kill-after-signal.exp: handle SIGUSR1 stop print pass
PASS: gdb.base/kill-after-signal.exp: continue
PASS: gdb.base/kill-after-signal.exp: stepi
PASS: gdb.base/kill-after-signal.exp: kill
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/info-macros.exp ...
PASS: gdb.base/info-macros.exp: info macro -- -all
PASS: gdb.base/info-macros.exp: info macro  -- -all
PASS: gdb.base/info-macros.exp: info macro -all --
PASS: gdb.base/info-macros.exp: info macro -all  --
PASS: gdb.base/info-macros.exp: info macro  -all  --
PASS: gdb.base/info-macros.exp: info macro --
PASS: gdb.base/info-macros.exp: 'info macro -- '
PASS: gdb.base/info-macros.exp: 'info macro  -- '
PASS: gdb.base/info-macros.exp: info macro -invalid-option 1
PASS: gdb.base/info-macros.exp: info macro  -invalid-option
PASS: gdb.base/info-macros.exp: info macro -invalid-option FOO
PASS: gdb.base/info-macros.exp: info macro  -invalid-option FOO
PASS: gdb.base/info-macros.exp: info macro -- FOO
PASS: gdb.base/info-macros.exp: info macro  -- FOO
PASS: gdb.base/info-macros.exp: info macro --  FOO
PASS: gdb.base/info-macros.exp: info macro FOO
PASS: gdb.base/info-macros.exp: info macro  FOO
PASS: gdb.base/info-macros.exp: info macro -a FOO 1
PASS: gdb.base/info-macros.exp: info macro -a -- FOO 1
PASS: gdb.base/info-macros.exp: info macro -all -- FOO 1
PASS: gdb.base/info-macros.exp: info macro -a  --  FOO
PASS: gdb.base/info-macros.exp: info macro  -a  --  FOO
PASS: gdb.base/info-macros.exp: info macros 2
PASS: gdb.base/info-macros.exp: info macros 3
PASS: gdb.base/info-macros.exp: info macros 4
PASS: gdb.base/info-macros.exp: info macros *$pc
PASS: gdb.base/info-macros.exp: info macros 5
PASS: gdb.base/info-macros.exp: info macros 6
PASS: gdb.base/info-macros.exp: info macros 7
KFAIL: gdb.base/info-macros.exp: info macros info-macros.c:42 (PRMS: gdb/NNNN)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/disabled-location.exp ...
PASS: gdb.base/disabled-location.exp: setting breakpoint on function
PASS: gdb.base/disabled-location.exp: disable location
PASS: gdb.base/disabled-location.exp: step doesn't trip on disabled location
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/arithmet.exp ...
PASS: gdb.base/arithmet.exp: set variable x=14
PASS: gdb.base/arithmet.exp: set variable y=2
PASS: gdb.base/arithmet.exp: set variable z=2
PASS: gdb.base/arithmet.exp: set variable w=3
PASS: gdb.base/arithmet.exp: print x
PASS: gdb.base/arithmet.exp: print y
PASS: gdb.base/arithmet.exp: print z
PASS: gdb.base/arithmet.exp: print w
PASS: gdb.base/arithmet.exp: print x+y
PASS: gdb.base/arithmet.exp: print x-y
PASS: gdb.base/arithmet.exp: print x*y
PASS: gdb.base/arithmet.exp: print x/y
PASS: gdb.base/arithmet.exp: print x%y
PASS: gdb.base/arithmet.exp: print x+y+z
PASS: gdb.base/arithmet.exp: print x-y-z
PASS: gdb.base/arithmet.exp: print x*y*z
PASS: gdb.base/arithmet.exp: print x/y/z
PASS: gdb.base/arithmet.exp: print x%y%z
PASS: gdb.base/arithmet.exp: set variable x=10
PASS: gdb.base/arithmet.exp: set variable y=4
PASS: gdb.base/arithmet.exp: print x+y-z
PASS: gdb.base/arithmet.exp: print x+y*z
PASS: gdb.base/arithmet.exp: print x+y%w
PASS: gdb.base/arithmet.exp: print x+y/w
PASS: gdb.base/arithmet.exp: print x-y*z
PASS: gdb.base/arithmet.exp: print x-y%z
PASS: gdb.base/arithmet.exp: print x-y/z
PASS: gdb.base/arithmet.exp: print x*y/z
PASS: gdb.base/arithmet.exp: print x*y%w
PASS: gdb.base/arithmet.exp: print x/y%w
PASS: gdb.base/arithmet.exp: print x-(y+w)
PASS: gdb.base/arithmet.exp: print x/(y*w)
PASS: gdb.base/arithmet.exp: print x-(y/w)
PASS: gdb.base/arithmet.exp: print (x+y)*w
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/attach-twice.exp ...
PASS: gdb.base/attach-twice.exp: attach
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/call-sc.exp ...
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tc (char)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tc char
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tc
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tc
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tc
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tc
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tc
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tc
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tc
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tc
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tc
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tc
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tc
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tc
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-ts (short int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-ts short int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-ts
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-ts
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-ts
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-ts
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-ts
PASS: gdb.base/call-sc.exp: return foo; return call-sc-ts
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-ts
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-ts
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-ts
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-ts
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-ts
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-ts
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-ti (int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-ti int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-ti
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-ti
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-ti
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-ti
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-ti
PASS: gdb.base/call-sc.exp: return foo; return call-sc-ti
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-ti
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-ti
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-ti
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-ti
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-ti
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-ti
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tl (long int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tl long int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tl
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tl
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tl
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tl
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tl
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tl
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tl
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tl
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tl
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tl
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tl
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tl
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tll (long long int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tll long long int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tll
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tll
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tll
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tll
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tll
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tll
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tll
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tll
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tll
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tll
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tll
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tll
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tf (float)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tf float
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tf
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tf
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tf
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tf
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tf
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tf
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tf
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tf
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tf
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tf
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tf
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tf
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-td (double)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-td double
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-td
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-td
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-td
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-td
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-td
PASS: gdb.base/call-sc.exp: return foo; return call-sc-td
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-td
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-td
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-td
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-td
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-td
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-td
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tld (long double)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tld long double
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tld
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tld
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tld
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tld
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tld
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tld
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tld
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tld
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tld
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tld
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tld
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tld
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-te (enum {e = 49})
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-te enum {e = 49}
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-te
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-te
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-te
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-te
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-te
PASS: gdb.base/call-sc.exp: return foo; return call-sc-te
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-te
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-te
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-te
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-te
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-te
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-te
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/info-target.exp ...
PASS: gdb.base/info-target.exp: info target
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/expand-psymtabs.exp ...
PASS: gdb.base/expand-psymtabs.exp: Expand psymtabs
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/consecutive.exp ...
PASS: gdb.base/consecutive.exp: continue to breakpoint in foo
PASS: gdb.base/consecutive.exp: get breakpoint address for foo
PASS: gdb.base/consecutive.exp: set bp, 2nd instr
PASS: gdb.base/consecutive.exp: stopped at bp, 2nd instr
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/cond-expr.exp ...
PASS: gdb.base/cond-expr.exp: print value of cond expr (const true)
PASS: gdb.base/cond-expr.exp: print value of cond expr (const false)
PASS: gdb.base/cond-expr.exp: set variable x=14
PASS: gdb.base/cond-expr.exp: set variable y=2
PASS: gdb.base/cond-expr.exp: set variable z=3
PASS: gdb.base/cond-expr.exp: print value of cond expr (var true)
PASS: gdb.base/cond-expr.exp: set variable x=0
PASS: gdb.base/cond-expr.exp: print value of cond expr (var false)
PASS: gdb.base/cond-expr.exp: print whatis of cond expr
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/checkpoint.exp ...
PASS: gdb.base/checkpoint.exp: break1 start
PASS: gdb.base/checkpoint.exp: break1 two
PASS: gdb.base/checkpoint.exp: break1 three
PASS: gdb.base/checkpoint.exp: break1 four
PASS: gdb.base/checkpoint.exp: break1 five
PASS: gdb.base/checkpoint.exp: break1 six
PASS: gdb.base/checkpoint.exp: break1 seven
PASS: gdb.base/checkpoint.exp: break1 eight
PASS: gdb.base/checkpoint.exp: break1 nine
PASS: gdb.base/checkpoint.exp: break1 ten
PASS: gdb.base/checkpoint.exp: info checkpoints one
PASS: gdb.base/checkpoint.exp: break2 one
PASS: gdb.base/checkpoint.exp: restart 1 one
PASS: gdb.base/checkpoint.exp: verify i 1 one
PASS: gdb.base/checkpoint.exp: step in 1 one
PASS: gdb.base/checkpoint.exp: verify lines 1 one
PASS: gdb.base/checkpoint.exp: restart 2 one
PASS: gdb.base/checkpoint.exp: step in 2 one
PASS: gdb.base/checkpoint.exp: verify i 2 one
PASS: gdb.base/checkpoint.exp: verify lines 2 one
PASS: gdb.base/checkpoint.exp: restart 3 one
PASS: gdb.base/checkpoint.exp: step in 3 one
PASS: gdb.base/checkpoint.exp: verify i 3 one
PASS: gdb.base/checkpoint.exp: verify lines 3 one
PASS: gdb.base/checkpoint.exp: restart 4 one
PASS: gdb.base/checkpoint.exp: step in 4 one
PASS: gdb.base/checkpoint.exp: verify i 4 one
PASS: gdb.base/checkpoint.exp: verify lines 4 one
PASS: gdb.base/checkpoint.exp: restart 5 one
PASS: gdb.base/checkpoint.exp: step in 5 one
PASS: gdb.base/checkpoint.exp: verify i 5 one
PASS: gdb.base/checkpoint.exp: verify lines 5 one
PASS: gdb.base/checkpoint.exp: restart 6 one
PASS: gdb.base/checkpoint.exp: step in 6 one
PASS: gdb.base/checkpoint.exp: verify i 6 one
PASS: gdb.base/checkpoint.exp: verify lines 6 one
PASS: gdb.base/checkpoint.exp: restart 7 one
PASS: gdb.base/checkpoint.exp: step in 7 one
PASS: gdb.base/checkpoint.exp: verify i 7 one
PASS: gdb.base/checkpoint.exp: verify lines 7 one
PASS: gdb.base/checkpoint.exp: restart 8 one
PASS: gdb.base/checkpoint.exp: step in 8 one
PASS: gdb.base/checkpoint.exp: verify i 8 one
PASS: gdb.base/checkpoint.exp: verify lines 8 one
PASS: gdb.base/checkpoint.exp: restart 9 one
PASS: gdb.base/checkpoint.exp: step in 9 one
PASS: gdb.base/checkpoint.exp: verify i 9 one
PASS: gdb.base/checkpoint.exp: verify lines 9 one
PASS: gdb.base/checkpoint.exp: restart 10 one
PASS: gdb.base/checkpoint.exp: step in 10 one
PASS: gdb.base/checkpoint.exp: verify i 10 one
PASS: gdb.base/checkpoint.exp: verify lines 10 one
PASS: gdb.base/checkpoint.exp: restart 0 one
PASS: gdb.base/checkpoint.exp: break3 one
PASS: gdb.base/checkpoint.exp: Diff input and output one
PASS: gdb.base/checkpoint.exp: restart 1 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 1 one
PASS: gdb.base/checkpoint.exp: step in 1 two
PASS: gdb.base/checkpoint.exp: verify lines 1 two
PASS: gdb.base/checkpoint.exp: restart 2 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 2 one
PASS: gdb.base/checkpoint.exp: step in 2 two
PASS: gdb.base/checkpoint.exp: verify lines 2 two
PASS: gdb.base/checkpoint.exp: restart 3 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 3 one
PASS: gdb.base/checkpoint.exp: step in 3 two
PASS: gdb.base/checkpoint.exp: verify lines 3 two
PASS: gdb.base/checkpoint.exp: restart 4 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 4 one
PASS: gdb.base/checkpoint.exp: step in 4 two
PASS: gdb.base/checkpoint.exp: verify lines 4 two
PASS: gdb.base/checkpoint.exp: restart 5 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 5 one
PASS: gdb.base/checkpoint.exp: step in 5 two
PASS: gdb.base/checkpoint.exp: verify lines 5 two
PASS: gdb.base/checkpoint.exp: restart 6 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 6 one
PASS: gdb.base/checkpoint.exp: step in 6 two
PASS: gdb.base/checkpoint.exp: verify lines 5 two
PASS: gdb.base/checkpoint.exp: restart 7 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 7 one
PASS: gdb.base/checkpoint.exp: step in 7 two
PASS: gdb.base/checkpoint.exp: verify lines 7 two
PASS: gdb.base/checkpoint.exp: Diff input and output two
PASS: gdb.base/checkpoint.exp: restart 0 one
PASS: gdb.base/checkpoint.exp: break4 one
PASS: gdb.base/checkpoint.exp: delete copy1
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 1 one
PASS: gdb.base/checkpoint.exp: outfile still open 1
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 2 one
PASS: gdb.base/checkpoint.exp: outfile still open 2
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 3 one
PASS: gdb.base/checkpoint.exp: outfile still open 3
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 4 one
PASS: gdb.base/checkpoint.exp: outfile still open 4
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 5 one
PASS: gdb.base/checkpoint.exp: outfile still open 5
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 6 one
PASS: gdb.base/checkpoint.exp: outfile still open 6
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 7 one
PASS: gdb.base/checkpoint.exp: outfile still open 7
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 8 one
PASS: gdb.base/checkpoint.exp: outfile still open 8
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 9 one
PASS: gdb.base/checkpoint.exp: outfile still open 9
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 10 one
PASS: gdb.base/checkpoint.exp: outfile still open 10
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork one
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork two
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork three
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork four
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork five
PASS: gdb.base/checkpoint.exp: info checkpoints two
PASS: gdb.base/checkpoint.exp: kill all one
PASS: gdb.base/checkpoint.exp: no more checkpoint 0
PASS: gdb.base/checkpoint.exp: no more checkpoint 1
PASS: gdb.base/checkpoint.exp: no more checkpoint 2
PASS: gdb.base/checkpoint.exp: no more checkpoint 3
PASS: gdb.base/checkpoint.exp: no more checkpoint 4
PASS: gdb.base/checkpoint.exp: no more checkpoint 5
PASS: gdb.base/checkpoint.exp: no more checkpoint 6
PASS: gdb.base/checkpoint.exp: no more checkpoint 7
PASS: gdb.base/checkpoint.exp: no more checkpoint 8
PASS: gdb.base/checkpoint.exp: no more checkpoint 9
PASS: gdb.base/checkpoint.exp: no more checkpoint 10
PASS: gdb.base/checkpoint.exp: set checkpoint breakpoint
PASS: gdb.base/checkpoint.exp: break2 with many checkpoints
PASS: gdb.base/checkpoint.exp: info checkpoints with at least 600 checkpoints
PASS: gdb.base/checkpoint.exp: kill all one with many checkpoints
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/help.exp ...
PASS: gdb.base/help.exp: disable pagination
PASS: gdb.base/help.exp: help aliases
PASS: gdb.base/help.exp: help breakpoints
PASS: gdb.base/help.exp: help data
PASS: gdb.base/help.exp: help files
PASS: gdb.base/help.exp: help internals
PASS: gdb.base/help.exp: help obscure
PASS: gdb.base/help.exp: help running
PASS: gdb.base/help.exp: help stack
PASS: gdb.base/help.exp: help status
PASS: gdb.base/help.exp: help support
PASS: gdb.base/help.exp: help tracepoints
PASS: gdb.base/help.exp: help user-defined
PASS: gdb.base/help.exp: help breakpoint "b" abbreviation
PASS: gdb.base/help.exp: help breakpoint "br" abbreviation
PASS: gdb.base/help.exp: help breakpoint "bre" abbreviation
PASS: gdb.base/help.exp: help breakpoint "brea" abbreviation
PASS: gdb.base/help.exp: help breakpoint "break" abbreviation
PASS: gdb.base/help.exp: help backtrace "bt" abbreviation
PASS: gdb.base/help.exp: help backtrace
PASS: gdb.base/help.exp: help commands
PASS: gdb.base/help.exp: help delete "d" abbreviation
PASS: gdb.base/help.exp: help delete
PASS: gdb.base/help.exp: help help "h" abbreviation
PASS: gdb.base/help.exp: help help
PASS: gdb.base/help.exp: help show copying
PASS: gdb.base/help.exp: help show warranty
PASS: gdb.base/help.exp: help show commands
PASS: gdb.base/help.exp: help show confirm
PASS: gdb.base/help.exp: help info bogus-gdb-command
PASS: gdb.base/help.exp: help gotcha
PASS: gdb.base/help.exp: apropos \(print[^ bsiedf\".-]\)
PASS: gdb.base/help.exp: apropos handle signal
PASS: gdb.base/help.exp: apropos apropos
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/finish.exp ...
PASS: gdb.base/finish.exp: set break on void_func
PASS: gdb.base/finish.exp: continue to void_func
PASS: gdb.base/finish.exp: finish from void_func
PASS: gdb.base/finish.exp: set break on char_func
PASS: gdb.base/finish.exp: continue to char_func
PASS: gdb.base/finish.exp: finish from char_func
PASS: gdb.base/finish.exp: set break on short_func
PASS: gdb.base/finish.exp: continue to short_func
PASS: gdb.base/finish.exp: finish from short_func
PASS: gdb.base/finish.exp: set break on int_func
PASS: gdb.base/finish.exp: continue to int_func
PASS: gdb.base/finish.exp: finish from int_func
PASS: gdb.base/finish.exp: set break on long_func
PASS: gdb.base/finish.exp: continue to long_func
PASS: gdb.base/finish.exp: finish from long_func
PASS: gdb.base/finish.exp: set break on long_long_func
PASS: gdb.base/finish.exp: continue to long_long_func
PASS: gdb.base/finish.exp: finish from long_long_func
PASS: gdb.base/finish.exp: set break on float_func
PASS: gdb.base/finish.exp: continue to float_func
PASS: gdb.base/finish.exp: finish from float_func
PASS: gdb.base/finish.exp: set break on double_func
PASS: gdb.base/finish.exp: continue to double_func
PASS: gdb.base/finish.exp: finish from double_func
PASS: gdb.base/finish.exp: Testing the "fin" abbreviation for "finish"
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/code_elim.exp ...
PASS: gdb.base/code_elim.exp: symbol-file code_elim1
PASS: gdb.base/code_elim.exp: single psymtabs: test eliminated var my_global_symbol
PASS: gdb.base/code_elim.exp: single psymtabs: test eliminated var my_static_symbol
PASS: gdb.base/code_elim.exp: single psymtabs: test eliminated var my_global_func
PASS: gdb.base/code_elim.exp: single psymtabs: get address of main
PASS: gdb.base/code_elim.exp: single symtabs: test eliminated var my_global_symbol
PASS: gdb.base/code_elim.exp: single symtabs: test eliminated var my_static_symbol
PASS: gdb.base/code_elim.exp: single symtabs: test eliminated var my_global_func
PASS: gdb.base/code_elim.exp: single symtabs: get address of main
PASS: gdb.base/code_elim.exp: order1: add-symbol-file code_elim1 0x100000
PASS: gdb.base/code_elim.exp: order1: add-symbol-file code_elim2 0x200000
PASS: gdb.base/code_elim.exp: order1: get address of my_global_symbol
PASS: gdb.base/code_elim.exp: order1: get address of my_static_symbol
PASS: gdb.base/code_elim.exp: order1: get address of my_global_func
PASS: gdb.base/code_elim.exp: order1: get address of main
PASS: gdb.base/code_elim.exp: order2: add-symbol-file code_elim2 0x200000
PASS: gdb.base/code_elim.exp: order2: add-symbol-file code_elim1 0x100000
PASS: gdb.base/code_elim.exp: order2: get address of my_global_symbol
PASS: gdb.base/code_elim.exp: order2: get address of my_static_symbol
PASS: gdb.base/code_elim.exp: order2: get address of my_global_func
PASS: gdb.base/code_elim.exp: order2: get address of main
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/lineinc.exp ...
PASS: gdb.base/lineinc.exp: tolerate macro info with multiple #inclusions per line
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/disasm-end-cu.exp ...
PASS: gdb.base/disasm-end-cu.exp: get hexadecimal valueof "&main"
PASS: gdb.base/disasm-end-cu.exp: get hexadecimal valueof "&dummy_3"
PASS: gdb.base/disasm-end-cu.exp: disassemble command returned some output
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/annota1.exp ...
PASS: gdb.base/annota1.exp: set height 0
PASS: gdb.base/annota1.exp: breakpoint main
PASS: gdb.base/annota1.exp: annotation set at level 2
PASS: gdb.base/annota1.exp: breakpoint info
PASS: gdb.base/annota1.exp: run until main breakpoint
PASS: gdb.base/annota1.exp: go after array init line
PASS: gdb.base/annota1.exp: print array
PASS: gdb.base/annota1.exp: print non_existent_value
PASS: gdb.base/annota1.exp: break handle_USR1
PASS: gdb.base/annota1.exp: break printf
PASS: gdb.base/annota1.exp: continue to printf
PASS: gdb.base/annota1.exp: backtrace from shlibrary
PASS: gdb.base/annota1.exp: send SIGUSR1
PASS: gdb.base/annota1.exp: backtrace @ signal handler
PASS: gdb.base/annota1.exp: delete bp 1
PASS: gdb.base/annota1.exp: delete bp 2
PASS: gdb.base/annota1.exp: delete bp 3
PASS: gdb.base/annota1.exp: break at main
PASS: gdb.base/annota1.exp: set up display
PASS: gdb.base/annota1.exp: re-run
PASS: gdb.base/annota1.exp: break at value++
PASS: gdb.base/annota1.exp: ignore 5 4
PASS: gdb.base/annota1.exp: annotate ignore count change
PASS: gdb.base/annota1.exp: breakpoint ignore count
PASS: gdb.base/annota1.exp: get inferior pid
PASS: gdb.base/annota1.exp: signal sent
PASS: gdb.base/annota1.exp: cleanup core file (not dumped)
PASS: gdb.base/annota1.exp: successfully compiled posix threads test case
PASS: gdb.base/annota1.exp: new thread
PASS: gdb.base/annota1.exp: thread switch
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/break-caller-line.exp ...
PASS: gdb.base/break-caller-line.exp: up
PASS: gdb.base/break-caller-line.exp: info line *$pc
PASS: gdb.base/break-caller-line.exp: break
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/logical.exp ...
PASS: gdb.base/logical.exp: evaluate x; variables x = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x; variables x = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !!x; variables x = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x; variables x = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x; variables x = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !!x; variables x = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 1, y = 2, w = 3, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 1, y = 2, w = 3, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 1, y = 2, w = 3, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 1, y = 2, w = 1, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 1, y = 2, w = 1, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 1, y = 2, w = 1, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 2, y = 2, w = 2, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 2, y = 2, w = 2, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 2, y = 2, w = 2, z = 3; expecting 1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/async-shell.exp ...
PASS: gdb.base/async-shell.exp: set target-async on
PASS: gdb.base/async-shell.exp: set non-stop on
PASS: gdb.base/async-shell.exp: run &
PASS: gdb.base/async-shell.exp: shell echo foo
PASS: gdb.base/async-shell.exp: interrupt
PASS: gdb.base/async-shell.exp: process stopped
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/infoline.exp ...
PASS: gdb.base/infoline.exp: info line infoline.c:18
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/fixsection.exp ...
PASS: gdb.base/fixsection.exp: breakpoint at static_fun
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/annota3.exp ...
PASS: gdb.base/annota3.exp: set height 0
PASS: gdb.base/annota3.exp: breakpoint main
PASS: gdb.base/annota3.exp: annotation set at level 3
PASS: gdb.base/annota3.exp: start if construct
PASS: gdb.base/annota3.exp: end if construct
PASS: gdb.base/annota3.exp: breakpoint info
PASS: gdb.base/annota3.exp: run until main breakpoint
PASS: gdb.base/annota3.exp: go after array init line
PASS: gdb.base/annota3.exp: print array
PASS: gdb.base/annota3.exp: print non_existent_value
PASS: gdb.base/annota3.exp: breakpoint handle_USR1
PASS: gdb.base/annota3.exp: breakpoint printf
PASS: gdb.base/annota3.exp: continue to printf
PASS: gdb.base/annota3.exp: backtrace from shlibrary
PASS: gdb.base/annota3.exp: send SIGUSR1
PASS: gdb.base/annota3.exp: backtrace @ signal handler
PASS: gdb.base/annota3.exp: delete bp 1
PASS: gdb.base/annota3.exp: delete bp 2
PASS: gdb.base/annota3.exp: delete bp 3
PASS: gdb.base/annota3.exp: break at main
PASS: gdb.base/annota3.exp: set up display
PASS: gdb.base/annota3.exp: re-run
PASS: gdb.base/annota3.exp: break at value++
PASS: gdb.base/annota3.exp: ignore 5 4
PASS: gdb.base/annota3.exp: annotate ignore count change
PASS: gdb.base/annota3.exp: next to exit loop
PASS: gdb.base/annota3.exp: breakpoint ignore count
PASS: gdb.base/annota3.exp: get inferior pid
PASS: gdb.base/annota3.exp: signal sent
PASS: gdb.base/annota3.exp: cleanup core file (not dumped)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/break-entry.exp ...
PASS: gdb.base/break-entry.exp: info files
PASS: gdb.base/break-entry.exp: p/x $pc
PASS: gdb.base/break-entry.exp: continue to breakpoint: main
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/break-interp.exp ...
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: copy ld-2.13.so to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: unprelink break-interp-LDprelinkNOdebugNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: strip break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: unprelink break-interp-LDprelinkNOdebugNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: set args OBJDIR/gdb.base/break-interp-test
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: ld.so exit
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: copy break-interp-LDprelinkNOdebugNO to break-interp-LDprelinkNOdebugNO-saved
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: ldd break-interp-BINprelinkNOdebugNOpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: ldd break-interp-BINprelinkNOdebugNOpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: unprelink break-interp-BINprelinkNOdebugNOpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: info files
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: break at entry point
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: entry point reached
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: ldd break-interp-BINprelinkNOdebugNOpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: ldd break-interp-BINprelinkNOdebugNOpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: unprelink break-interp-BINprelinkNOdebugNOpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: info files
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: break at entry point
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: entry point reached
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: ldd break-interp-BINprelinkNOdebugNOpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: ldd break-interp-BINprelinkNOdebugNOpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: prelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: ldd break-interp-BINprelinkNOdebugINpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: ldd break-interp-BINprelinkNOdebugINpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: unprelink break-interp-BINprelinkNOdebugINpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: ldd break-interp-BINprelinkNOdebugINpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: ldd break-interp-BINprelinkNOdebugINpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: unprelink break-interp-BINprelinkNOdebugINpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: ldd break-interp-BINprelinkNOdebugINpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: ldd break-interp-BINprelinkNOdebugINpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: prelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: ldd break-interp-BINprelinkNOdebugSEPpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: ldd break-interp-BINprelinkNOdebugSEPpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: unprelink break-interp-BINprelinkNOdebugSEPpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: ldd break-interp-BINprelinkNOdebugSEPpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: ldd break-interp-BINprelinkNOdebugSEPpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: unprelink break-interp-BINprelinkNOdebugSEPpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: ldd break-interp-BINprelinkNOdebugSEPpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: ldd break-interp-BINprelinkNOdebugSEPpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: prelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: ldd break-interp-BINprelinkYESdebugNOpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: ldd break-interp-BINprelinkYESdebugNOpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: unprelink break-interp-BINprelinkYESdebugNOpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: prelink break-interp-BINprelinkYESdebugNOpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: ldd break-interp-BINprelinkYESdebugNOpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: ldd break-interp-BINprelinkYESdebugNOpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: unprelink break-interp-BINprelinkYESdebugNOpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: prelink break-interp-BINprelinkYESdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: ldd break-interp-BINprelinkYESdebugINpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: ldd break-interp-BINprelinkYESdebugINpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: unprelink break-interp-BINprelinkYESdebugINpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: prelink break-interp-BINprelinkYESdebugINpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: ldd break-interp-BINprelinkYESdebugINpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: ldd break-interp-BINprelinkYESdebugINpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: unprelink break-interp-BINprelinkYESdebugINpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: prelink break-interp-BINprelinkYESdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: ldd break-interp-BINprelinkYESdebugSEPpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: ldd break-interp-BINprelinkYESdebugSEPpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: unprelink break-interp-BINprelinkYESdebugSEPpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: prelink break-interp-BINprelinkYESdebugSEPpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: ldd break-interp-BINprelinkYESdebugSEPpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: ldd break-interp-BINprelinkYESdebugSEPpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: unprelink break-interp-BINprelinkYESdebugSEPpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: prelink break-interp-BINprelinkYESdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: copy ld-2.13.so to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: unprelink break-interp-LDprelinkNOdebugIN (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: set args OBJDIR/gdb.base/break-interp-test
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: copy break-interp-LDprelinkNOdebugIN to break-interp-LDprelinkNOdebugIN-saved
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: ldd break-interp-BINprelinkNOdebugNOpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: ldd break-interp-BINprelinkNOdebugNOpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: unprelink break-interp-BINprelinkNOdebugNOpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: info files
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: break at entry point
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: entry point reached
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: ldd break-interp-BINprelinkNOdebugNOpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: ldd break-interp-BINprelinkNOdebugNOpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: unprelink break-interp-BINprelinkNOdebugNOpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: info files
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: break at entry point
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: entry point reached
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: ldd break-interp-BINprelinkNOdebugNOpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: ldd break-interp-BINprelinkNOdebugNOpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: prelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: ldd break-interp-BINprelinkNOdebugINpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: ldd break-interp-BINprelinkNOdebugINpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: unprelink break-interp-BINprelinkNOdebugINpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: ldd break-interp-BINprelinkNOdebugINpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: ldd break-interp-BINprelinkNOdebugINpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: unprelink break-interp-BINprelinkNOdebugINpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: ldd break-interp-BINprelinkNOdebugINpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: ldd break-interp-BINprelinkNOdebugINpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: prelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: ldd break-interp-BINprelinkNOdebugSEPpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: ldd break-interp-BINprelinkNOdebugSEPpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: unprelink break-interp-BINprelinkNOdebugSEPpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: ldd break-interp-BINprelinkNOdebugSEPpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: ldd break-interp-BINprelinkNOdebugSEPpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: unprelink break-interp-BINprelinkNOdebugSEPpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: ldd break-interp-BINprelinkNOdebugSEPpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: ldd break-interp-BINprelinkNOdebugSEPpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: prelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: ldd break-interp-BINprelinkYESdebugNOpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: ldd break-interp-BINprelinkYESdebugNOpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: unprelink break-interp-BINprelinkYESdebugNOpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: prelink break-interp-BINprelinkYESdebugNOpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: ldd break-interp-BINprelinkYESdebugNOpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: ldd break-interp-BINprelinkYESdebugNOpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: unprelink break-interp-BINprelinkYESdebugNOpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: prelink break-interp-BINprelinkYESdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: ldd break-interp-BINprelinkYESdebugINpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: ldd break-interp-BINprelinkYESdebugINpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: unprelink break-interp-BINprelinkYESdebugINpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: prelink break-interp-BINprelinkYESdebugINpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: ldd break-interp-BINprelinkYESdebugINpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: ldd break-interp-BINprelinkYESdebugINpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: unprelink break-interp-BINprelinkYESdebugINpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: prelink break-interp-BINprelinkYESdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: ldd break-interp-BINprelinkYESdebugSEPpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: ldd break-interp-BINprelinkYESdebugSEPpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: unprelink break-interp-BINprelinkYESdebugSEPpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: prelink break-interp-BINprelinkYESdebugSEPpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: ldd break-interp-BINprelinkYESdebugSEPpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: ldd break-interp-BINprelinkYESdebugSEPpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: unprelink break-interp-BINprelinkYESdebugSEPpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: prelink break-interp-BINprelinkYESdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugNO: copy ld-2.13.so to break-interp-LDprelinkYESdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugNO: unprelink break-interp-LDprelinkYESdebugNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugNO: strip break-interp-LDprelinkYESdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugNO: unprelink break-interp-LDprelinkYESdebugNO pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkYESdebugNO: prelink break-interp-LDprelinkYESdebugNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugIN: copy ld-2.13.so to break-interp-LDprelinkYESdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugIN: unprelink break-interp-LDprelinkYESdebugIN pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkYESdebugIN: prelink break-interp-LDprelinkYESdebugIN (missing /usr/sbin/prelink)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/args.exp ...
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for basic
PASS: gdb.base/args.exp: argc for basic
PASS: gdb.base/args.exp: argv[1] for basic
PASS: gdb.base/args.exp: argv[2] for basic
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one empty
PASS: gdb.base/args.exp: argc for one empty
PASS: gdb.base/args.exp: argv[1] for one empty
PASS: gdb.base/args.exp: argv[2] for one empty
PASS: gdb.base/args.exp: argv[3] for one empty
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two empty
PASS: gdb.base/args.exp: argc for two empty
PASS: gdb.base/args.exp: argv[1] for two empty
PASS: gdb.base/args.exp: argv[2] for two empty
PASS: gdb.base/args.exp: argv[3] for two empty
PASS: gdb.base/args.exp: argv[4] for two empty
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one empty (with single quotes)
PASS: gdb.base/args.exp: argc for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[1] for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[2] for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[3] for one empty (with single quotes)
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two empty (with single quotes)
PASS: gdb.base/args.exp: argc for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[1] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[2] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[3] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[4] for two empty (with single quotes)
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one newline
PASS: gdb.base/args.exp: argc for one newline
PASS: gdb.base/args.exp: argv[1] for one newline
PASS: gdb.base/args.exp: argv[2] for one newline
PASS: gdb.base/args.exp: argv[3] for one newline
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two newlines
PASS: gdb.base/args.exp: argc for two newlines
PASS: gdb.base/args.exp: argv[1] for two newlines
PASS: gdb.base/args.exp: argv[2] for two newlines
PASS: gdb.base/args.exp: argv[3] for two newlines
PASS: gdb.base/args.exp: argv[4] for two newlines
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/jit-simple.exp ...
PASS: gdb.base/jit-simple.exp: blah 1
PASS: gdb.base/jit-simple.exp: recompile jit-simple.c
PASS: gdb.base/jit-simple.exp: blah 1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/hook-stop-continue.exp ...
PASS: gdb.base/hook-stop-continue.exp: breakpoint line number
PASS: gdb.base/hook-stop-continue.exp: print $do_continue = 1
PASS: gdb.base/hook-stop-continue.exp: define hook-stop command
PASS: gdb.base/hook-stop-continue.exp: next triggering hook-stop
PASS: gdb.base/hook-stop-continue.exp: next no hook-stop
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/display.exp ...
PASS: gdb.base/display.exp: kill
PASS: gdb.base/display.exp: detach
PASS: gdb.base/display.exp: run
PASS: gdb.base/display.exp: kill again
PASS: gdb.base/display.exp: detach again
PASS: gdb.base/display.exp: break  do_loops
PASS: gdb.base/display.exp: get to do_loops
PASS: gdb.base/display.exp: set watch
PASS: gdb.base/display.exp: break loop end
PASS: gdb.base/display.exp: inf disp
PASS: gdb.base/display.exp: display i
PASS: gdb.base/display.exp: display j
PASS: gdb.base/display.exp: display &k
PASS: gdb.base/display.exp: display/f f
PASS: gdb.base/display.exp: display/s &sum
PASS: gdb.base/display.exp: first disp
PASS: gdb.base/display.exp: second disp
PASS: gdb.base/display.exp: catch err
PASS: gdb.base/display.exp: disab disp 1
PASS: gdb.base/display.exp: disab disp 2
PASS: gdb.base/display.exp: re-enab
PASS: gdb.base/display.exp: re-enab of enab
PASS: gdb.base/display.exp: undisp
PASS: gdb.base/display.exp: info disp
PASS: gdb.base/display.exp: next hit
PASS: gdb.base/display.exp: undisp all
PASS: gdb.base/display.exp: disp *p_i
PASS: gdb.base/display.exp: p p_i = 0x0
PASS: gdb.base/display.exp: display bad address
PASS: gdb.base/display.exp: p p_i = &i
PASS: gdb.base/display.exp: display good address
PASS: gdb.base/display.exp: undisp all again
PASS: gdb.base/display.exp: disab 3
PASS: gdb.base/display.exp: watch off
PASS: gdb.base/display.exp: finish
PASS: gdb.base/display.exp: step
PASS: gdb.base/display.exp: tbreak in do_vars
PASS: gdb.base/display.exp: cont
PASS: gdb.base/display.exp: printf
PASS: gdb.base/display.exp: printf %d
PASS: gdb.base/display.exp: printf "%d
PASS: gdb.base/display.exp: printf "%d%d",i
PASS: gdb.base/display.exp: printf "\\!\a\f\r\t\v\b\n"
PASS: gdb.base/display.exp: re-set term
PASS: gdb.base/display.exp: printf "\w"
PASS: gdb.base/display.exp: printf "%d" j
PASS: gdb.base/display.exp: printf "%p\n", 0
PASS: gdb.base/display.exp: printf "%p\n", 1
PASS: gdb.base/display.exp: print/z j
PASS: gdb.base/display.exp: debug test output 1
PASS: gdb.base/display.exp: debug test output 1a
PASS: gdb.base/display.exp: debug test output 2
PASS: gdb.base/display.exp: debug test output 2a
PASS: gdb.base/display.exp: debug test output 3
PASS: gdb.base/display.exp: x/0 j
PASS: gdb.base/display.exp: print/0 j
PASS: gdb.base/display.exp: ignored s
PASS: gdb.base/display.exp: no i
PASS: gdb.base/display.exp: print/a &sum
PASS: gdb.base/display.exp: print/a main+4
PASS: gdb.base/display.exp: print/a $pc
PASS: gdb.base/display.exp: print/a &&j
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/ifelse.exp ...
PASS: gdb.base/ifelse.exp: if 1 with empty body
PASS: gdb.base/ifelse.exp: if 0 with empty body
PASS: gdb.base/ifelse.exp: if true else false #1
PASS: gdb.base/ifelse.exp: if 1 .. else with empty body
PASS: gdb.base/ifelse.exp: if true else false #2
PASS: gdb.base/ifelse.exp: if 0 .. else with empty body
PASS: gdb.base/ifelse.exp: if true else false #3
PASS: gdb.base/ifelse.exp: create define with empty else
PASS: gdb.base/ifelse.exp: call original define
PASS: gdb.base/ifelse.exp: replace define with if .. else with empty body
PASS: gdb.base/ifelse.exp: call replacement define
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdb11531.exp ...
PASS: gdb.base/gdb11531.exp: Set watchpoint
PASS: gdb.base/gdb11531.exp: watchpoint variable triggers at next
PASS: gdb.base/gdb11531.exp: watchpoint variable triggers at continue
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/catch-load.exp ...
PASS: gdb.base/catch-load.exp: plain load: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: plain load: set stop-on-solib-events 0
PASS: gdb.base/catch-load.exp: plain load: catch load
PASS: gdb.base/catch-load.exp: plain load: continue
PASS: gdb.base/catch-load.exp: plain load with stop-on-solib-events: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: plain load with stop-on-solib-events: set stop-on-solib-events 1
PASS: gdb.base/catch-load.exp: plain load with stop-on-solib-events: catch load
PASS: gdb.base/catch-load.exp: plain load with stop-on-solib-events: continue
PASS: gdb.base/catch-load.exp: rx load: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: rx load: set stop-on-solib-events 0
PASS: gdb.base/catch-load.exp: rx load: catch load catch-load-so
PASS: gdb.base/catch-load.exp: rx load: continue
PASS: gdb.base/catch-load.exp: rx load with stop-on-solib-events: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: rx load with stop-on-solib-events: set stop-on-solib-events 1
PASS: gdb.base/catch-load.exp: rx load with stop-on-solib-events: catch load catch-load-so
PASS: gdb.base/catch-load.exp: rx load with stop-on-solib-events: continue
PASS: gdb.base/catch-load.exp: non-matching load: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: non-matching load: set stop-on-solib-events 0
PASS: gdb.base/catch-load.exp: non-matching load: catch load zardoz
PASS: gdb.base/catch-load.exp: non-matching load: continue
PASS: gdb.base/catch-load.exp: non-matching load with stop-on-solib-events: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: non-matching load with stop-on-solib-events: set stop-on-solib-events 1
PASS: gdb.base/catch-load.exp: non-matching load with stop-on-solib-events: catch load zardoz
PASS: gdb.base/catch-load.exp: non-matching load with stop-on-solib-events: continue
PASS: gdb.base/catch-load.exp: plain unload: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: plain unload: set stop-on-solib-events 0
PASS: gdb.base/catch-load.exp: plain unload: catch unload
PASS: gdb.base/catch-load.exp: plain unload: continue
PASS: gdb.base/catch-load.exp: plain unload with stop-on-solib-events: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: plain unload with stop-on-solib-events: set stop-on-solib-events 1
PASS: gdb.base/catch-load.exp: plain unload with stop-on-solib-events: catch unload
PASS: gdb.base/catch-load.exp: plain unload with stop-on-solib-events: continue
PASS: gdb.base/catch-load.exp: rx unload: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: rx unload: set stop-on-solib-events 0
PASS: gdb.base/catch-load.exp: rx unload: catch unload catch-load-so
PASS: gdb.base/catch-load.exp: rx unload: continue
PASS: gdb.base/catch-load.exp: rx unload with stop-on-solib-events: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: rx unload with stop-on-solib-events: set stop-on-solib-events 1
PASS: gdb.base/catch-load.exp: rx unload with stop-on-solib-events: catch unload catch-load-so
PASS: gdb.base/catch-load.exp: rx unload with stop-on-solib-events: continue
PASS: gdb.base/catch-load.exp: non-matching unload: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: non-matching unload: set stop-on-solib-events 0
PASS: gdb.base/catch-load.exp: non-matching unload: catch unload zardoz
PASS: gdb.base/catch-load.exp: non-matching unload: continue
PASS: gdb.base/catch-load.exp: non-matching unload with stop-on-solib-events: set var libname = "catch-load-so.so"
PASS: gdb.base/catch-load.exp: non-matching unload with stop-on-solib-events: set stop-on-solib-events 1
PASS: gdb.base/catch-load.exp: non-matching unload with stop-on-solib-events: catch unload zardoz
PASS: gdb.base/catch-load.exp: non-matching unload with stop-on-solib-events: continue
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdb1056.exp ...
PASS: gdb.base/gdb1056.exp: print 1/0
PASS: gdb.base/gdb1056.exp: Test unsigned division by zero
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/bitops.exp ...
PASS: gdb.base/bitops.exp: print value of !1
PASS: gdb.base/bitops.exp: print value of !0
PASS: gdb.base/bitops.exp: print value of !100
PASS: gdb.base/bitops.exp: print value of !1000
PASS: gdb.base/bitops.exp: print value of !10
PASS: gdb.base/bitops.exp: print value of !2
PASS: gdb.base/bitops.exp: print value of 10 | 5
PASS: gdb.base/bitops.exp: print value of 10 & 5
PASS: gdb.base/bitops.exp: print value of 10 ^ 5
PASS: gdb.base/bitops.exp: print value of -!0
PASS: gdb.base/bitops.exp: print value of ~-!0
PASS: gdb.base/bitops.exp: print value of 3 * 2 / 4.0 * 2.0
PASS: gdb.base/bitops.exp: print value of 8 << 2 >> 4
PASS: gdb.base/bitops.exp: print value of -1 < 0 > 1
PASS: gdb.base/bitops.exp: print value of 15 ^ 10 ^ 5 ^ 7
PASS: gdb.base/bitops.exp: print value of 3.5 < 4.0
PASS: gdb.base/bitops.exp: print value of 3.5 < -4.0
PASS: gdb.base/bitops.exp: print value of 2 > -3
PASS: gdb.base/bitops.exp: print value of -3>4
PASS: gdb.base/bitops.exp: print value of (-3 > 4)
PASS: gdb.base/bitops.exp: print value of 3>=2.5
PASS: gdb.base/bitops.exp: print value of 3>=4.5
PASS: gdb.base/bitops.exp: print value of 3==3.0
PASS: gdb.base/bitops.exp: print value of 3==4.0
PASS: gdb.base/bitops.exp: print value of 3!=3.0
PASS: gdb.base/bitops.exp: print value of 3!=5.0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8 > 128 >>1 +2 *2
PASS: gdb.base/bitops.exp: print value of 1.0 || 0
PASS: gdb.base/bitops.exp: print value of 0.0 || 1.0
PASS: gdb.base/bitops.exp: print value of 0.0 || 0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8
PASS: gdb.base/bitops.exp: print value of 0 == 8 > 128 >> 1 + 2 * 2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/memattr.exp ...
PASS: gdb.base/memattr.exp: create mem region 1
PASS: gdb.base/memattr.exp: create mem region 2
PASS: gdb.base/memattr.exp: create mem region 3
PASS: gdb.base/memattr.exp: create mem region 4
PASS: gdb.base/memattr.exp: create mem region 5
PASS: gdb.base/memattr.exp: info mem (1)
PASS: gdb.base/memattr.exp: mem1 cannot be read
PASS: gdb.base/memattr.exp: mem1 can be written
PASS: gdb.base/memattr.exp: mem2 cannot be written
PASS: gdb.base/memattr.exp: mem2 can be read
PASS: gdb.base/memattr.exp: disable mem 1
PASS: gdb.base/memattr.exp: mem 1 was disabled
PASS: gdb.base/memattr.exp: enable mem 1
PASS: gdb.base/memattr.exp: mem 1 was enabled
PASS: gdb.base/memattr.exp: disable mem 2 4
PASS: gdb.base/memattr.exp: mem 2 and 4 were disabled
PASS: gdb.base/memattr.exp: enable mem 2-4
PASS: gdb.base/memattr.exp: mem 2-4 were enabled
PASS: gdb.base/memattr.exp: disable mem
PASS: gdb.base/memattr.exp: mem 1 to 5 were disabled
PASS: gdb.base/memattr.exp: enable mem
PASS: gdb.base/memattr.exp: mem 1 to 5 were enabled
PASS: gdb.base/memattr.exp: disable non-existant regions
PASS: gdb.base/memattr.exp: delete mem 1
PASS: gdb.base/memattr.exp: mem 1 was deleted
PASS: gdb.base/memattr.exp: delete mem 2 4
PASS: gdb.base/memattr.exp: mem 2 and 4 were deleted
PASS: gdb.base/memattr.exp: delete mem 2-4
PASS: gdb.base/memattr.exp: mem 2-4 were deleted
PASS: gdb.base/memattr.exp: delete non-existant region
PASS: gdb.base/memattr.exp: mem 0x30 0x60 ro
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x40: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x40: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x40 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x50 0x60: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x50 0x70: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x60: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x70: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x30 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x40 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x20 0x30: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x60 0x70: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x60: 0x80 0x0: no-overlap
PASS: gdb.base/memattr.exp: mem 0x30 0x0 ro
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x30 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x40 0x50: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x30 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x40 0x0: overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x20 0x30: no-overlap
PASS: gdb.base/memattr.exp: 0x30 0x0: 0x00 0x10: no-overlap
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/dmsym.exp ...
PASS: gdb.base/dmsym.exp: set lang ada
PASS: gdb.base/dmsym.exp: break pck__foo__bar__minsym
PASS: gdb.base/dmsym.exp: info line pck__foo__bar__minsym
PASS: gdb.base/dmsym.exp: set lang auto
PASS: gdb.base/dmsym.exp: Run until breakpoint at BREAK
PASS: gdb.base/dmsym.exp: continue
PASS: gdb.base/dmsym.exp: print val
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/completion.exp ...
PASS: gdb.base/completion.exp: complete 'hfgfh'
PASS: gdb.base/completion.exp: complete 'show output'
PASS: gdb.base/completion.exp: complete 'show output-'
PASS: gdb.base/completion.exp: complete 'p'
PASS: gdb.base/completion.exp: complete 'p '
PASS: gdb.base/completion.exp: complete 'info t foo'
PASS: gdb.base/completion.exp: complete 'info t'
PASS: gdb.base/completion.exp: complete 'info t '
PASS: gdb.base/completion.exp: complete 'info asdfgh'
PASS: gdb.base/completion.exp: complete 'info asdfgh '
PASS: gdb.base/completion.exp: complete 'info'
PASS: gdb.base/completion.exp: complete 'info '
PASS: gdb.base/completion.exp: complete (2) 'info '
PASS: gdb.base/completion.exp: complete 'help info wat'
PASS: gdb.base/completion.exp: complete 'p "break1'
XFAIL: gdb.base/completion.exp: complete 'p "break1.'
PASS: gdb.base/completion.exp: complete 'p 'arg'
PASS: gdb.base/completion.exp: complete (2) 'p 'arg'
PASS: gdb.base/completion.exp: complete 'handle signal'
PASS: gdb.base/completion.exp: complete 'handle keyword'
PASS: gdb.base/completion.exp: complete help aliases
PASS: gdb.base/completion.exp: complete 'p no_var_named_this-arg'
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-arg'
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-' (eat prompt)
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-'
PASS: gdb.base/completion.exp: complete 'p values[0].a'
PASS: gdb.base/completion.exp: complete 'p values[0] . a'
PASS: gdb.base/completion.exp: complete 'p &values[0] -> a'
PASS: gdb.base/completion.exp: completion of field in anonymous union
PASS: gdb.base/completion.exp: ptype completion of field in anonymous union
PASS: gdb.base/completion.exp: whatis completion of field in anonymous union
PASS: gdb.base/completion.exp: cd to ${srcdir}
PASS: gdb.base/completion.exp: directory completion
PASS: gdb.base/completion.exp: directory completion 2
PASS: gdb.base/completion.exp: Glob remaining of directory test
PASS: gdb.base/completion.exp: complete-command 'file ./gdb.base/compl'
PASS: gdb.base/completion.exp: complete 'file ./gdb.base/complet'
PASS: gdb.base/completion.exp: complete 'info func marke'
PASS: gdb.base/completion.exp: complete 'set follow-fork-mode'
PASS: gdb.base/completion.exp: field completion with invalid field
PASS: gdb.base/completion.exp: test non-deprecated completion
PASS: gdb.base/completion.exp: test deprecated completion
PASS: gdb.base/completion.exp: complete ptype struct some_
PASS: gdb.base/completion.exp: complete ptype enum some_
PASS: gdb.base/completion.exp: complete ptype union some_
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/list.exp ...
PASS: gdb.base/list.exp: set width 0
PASS: gdb.base/list.exp: show default list size
PASS: gdb.base/list.exp: list default lines around main
PASS: gdb.base/list.exp: setting listsize to 1 #1
PASS: gdb.base/list.exp: show listsize 1 #1
PASS: gdb.base/list.exp: list line 1 with listsize 1
PASS: gdb.base/list.exp: list line 2 with listsize 1
PASS: gdb.base/list.exp: setting listsize to 2 #2
PASS: gdb.base/list.exp: show listsize 2 #2
PASS: gdb.base/list.exp: list line 1 with listsize 2
PASS: gdb.base/list.exp: list line 2 with listsize 2
PASS: gdb.base/list.exp: list line 3 with listsize 2
PASS: gdb.base/list.exp: setting listsize to 3 #3
PASS: gdb.base/list.exp: show listsize 3 #3
PASS: gdb.base/list.exp: list line 1 with listsize 3
PASS: gdb.base/list.exp: list line 2 with listsize 3
PASS: gdb.base/list.exp: list line 3 with listsize 3
PASS: gdb.base/list.exp: setting listsize to 4 #4
PASS: gdb.base/list.exp: show listsize 4 #4
PASS: gdb.base/list.exp: list line 1 with listsize 4
PASS: gdb.base/list.exp: list line 2 with listsize 4
PASS: gdb.base/list.exp: list line 3 with listsize 4
PASS: gdb.base/list.exp: list line 4 with listsize 4
PASS: gdb.base/list.exp: setting listsize to 100 #5
PASS: gdb.base/list.exp: show listsize 100 #5
PASS: gdb.base/list.exp: list line 1 with listsize 100
PASS: gdb.base/list.exp: list line 10 with listsize 100
PASS: gdb.base/list.exp: setting listsize to 0 #6
PASS: gdb.base/list.exp: show listsize 0 #6
PASS: gdb.base/list.exp: listsize of 0 suppresses output
PASS: gdb.base/list.exp: setting listsize to -1 #7
PASS: gdb.base/list.exp: show listsize unlimited #7
XFAIL: gdb.base/list.exp: list line 1 with unlimited listsize
PASS: gdb.base/list.exp: setting listsize to 10 #8
PASS: gdb.base/list.exp: show listsize 10 #8
PASS: gdb.base/list.exp: list line 1 in include file
PASS: gdb.base/list.exp: list message for lines past EOF
PASS: gdb.base/list.exp: list filename:number (4 tests)
PASS: gdb.base/list.exp: list function in source file 1
PASS: gdb.base/list.exp: list function in source file 2
PASS: gdb.base/list.exp: list function in include file
PASS: gdb.base/list.exp: successive list commands to page forward (4 tests)
PASS: gdb.base/list.exp: 4 successive "list -" commands to page backwards
PASS: gdb.base/list.exp: repeat list commands to page forward using 'return' (4 tests)
PASS: gdb.base/list.exp: list range; filename:line1,filename:line2
PASS: gdb.base/list.exp: list range; line1,line2
PASS: gdb.base/list.exp: list range; upper bound past EOF
PASS: gdb.base/list.exp: list range; both bounds past EOF
PASS: gdb.base/list.exp: list range, must be same files
PASS: gdb.base/list.exp: list filename:function (5 tests)
PASS: gdb.base/list.exp: list 'list0.c:main'
XFAIL: gdb.base/list.exp: list filename:function; wrong filename rejected
PASS: gdb.base/list.exp: list filename:function; nonexistant file
PASS: gdb.base/list.exp: list filename:function; nonexistant function
PASS: gdb.base/list.exp: set listsize 4
PASS: gdb.base/list.exp: list long_line
PASS: gdb.base/list.exp: search 4321
PASS: gdb.base/list.exp: search 6789
PASS: gdb.base/list.exp: search extremely long line (> 5000 chars)
PASS: gdb.base/list.exp: set listsize 2
PASS: gdb.base/list.exp: list 1
PASS: gdb.base/list.exp: list ,5
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/dup-sect.exp ...
PASS: gdb.base/dup-sect.exp: rename section
PASS: gdb.base/dup-sect.exp: split
PASS: gdb.base/dup-sect.exp: strip
PASS: gdb.base/dup-sect.exp: var1 after strip
PASS: gdb.base/dup-sect.exp: var2 after strip
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/long_long.exp ...
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (char)" (1)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (short)" (2)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long long)" (8)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (void *)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (double)" (8)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long double)" (12)
PASS: gdb.base/long_long.exp: continue to breakpoint: Stop here and look
PASS: gdb.base/long_long.exp: hex print p/x
PASS: gdb.base/long_long.exp: decimal print p/x
PASS: gdb.base/long_long.exp: default print val.dec
PASS: gdb.base/long_long.exp: default print val.bin
PASS: gdb.base/long_long.exp: default print val.oct
PASS: gdb.base/long_long.exp: default print hex
PASS: gdb.base/long_long.exp: decimal print p/u
PASS: gdb.base/long_long.exp: binary print
PASS: gdb.base/long_long.exp: octal print
PASS: gdb.base/long_long.exp: print +ve long long
PASS: gdb.base/long_long.exp: decimal print p/d
PASS: gdb.base/long_long.exp: p/d val.oct
PASS: gdb.base/long_long.exp: p/u val.oct
PASS: gdb.base/long_long.exp: p/o val.oct
PASS: gdb.base/long_long.exp: p/t val.oct
PASS: gdb.base/long_long.exp: p/a val.oct
PASS: gdb.base/long_long.exp: p/c val.oct
PASS: gdb.base/long_long.exp: p/f val.oct
PASS: gdb.base/long_long.exp: p/x *(char *)c
PASS: gdb.base/long_long.exp: p/d *(char *)c
PASS: gdb.base/long_long.exp: p/u *(char *)c
PASS: gdb.base/long_long.exp: p/o *(char *)c
PASS: gdb.base/long_long.exp: p/t *(char *)c
PASS: gdb.base/long_long.exp: p/a *(char *)c
PASS: gdb.base/long_long.exp: p/f *(char *)c
PASS: gdb.base/long_long.exp: p/c *(char *)c
PASS: gdb.base/long_long.exp: p/x *(short *)s
PASS: gdb.base/long_long.exp: p/d *(short *)s
PASS: gdb.base/long_long.exp: p/u *(short *)s
PASS: gdb.base/long_long.exp: p/o *(short *)s
PASS: gdb.base/long_long.exp: p/t *(short *)s
PASS: gdb.base/long_long.exp: p/a *(short *)s
PASS: gdb.base/long_long.exp: p/f *(short *)s
PASS: gdb.base/long_long.exp: p/c *(short *)s
PASS: gdb.base/long_long.exp: p/x *(int *)i
PASS: gdb.base/long_long.exp: p/d *(int *)i
PASS: gdb.base/long_long.exp: p/u *(int *)i
PASS: gdb.base/long_long.exp: p/o *(int *)i
PASS: gdb.base/long_long.exp: p/t *(int *)i
PASS: gdb.base/long_long.exp: p/a *(int *)i
PASS: gdb.base/long_long.exp: p/f *(int *)i
PASS: gdb.base/long_long.exp: p/c *(int *)i
PASS: gdb.base/long_long.exp: p/x *(long *)l
PASS: gdb.base/long_long.exp: p/d *(long *)l
PASS: gdb.base/long_long.exp: p/u *(long *)l
PASS: gdb.base/long_long.exp: p/o *(long *)l
PASS: gdb.base/long_long.exp: p/t *(long *)l
PASS: gdb.base/long_long.exp: p/a *(long *)l
PASS: gdb.base/long_long.exp: p/f *(long *)l
PASS: gdb.base/long_long.exp: p/c *(long *)l
PASS: gdb.base/long_long.exp: p/x *(long long *)ll
PASS: gdb.base/long_long.exp: p/d *(long long *)ll
PASS: gdb.base/long_long.exp: p/u *(long long *)ll
PASS: gdb.base/long_long.exp: p/o *(long long *)ll
PASS: gdb.base/long_long.exp: p/t *(long long *)ll
PASS: gdb.base/long_long.exp: p/a *(long long *)ll
PASS: gdb.base/long_long.exp: p/f *(long long *)ll
PASS: gdb.base/long_long.exp: p/c *(long long *)ll
PASS: gdb.base/long_long.exp: set examine size to w
PASS: gdb.base/long_long.exp: x/x w
PASS: gdb.base/long_long.exp: x/d w
PASS: gdb.base/long_long.exp: x/u w
PASS: gdb.base/long_long.exp: x/o w
PASS: gdb.base/long_long.exp: x/t w
PASS: gdb.base/long_long.exp: x/a
PASS: gdb.base/long_long.exp: x/c b
PASS: gdb.base/long_long.exp: x/f &val.oct
PASS: gdb.base/long_long.exp: set examine size to g
PASS: gdb.base/long_long.exp: x/2x g
PASS: gdb.base/long_long.exp: x/2d g
PASS: gdb.base/long_long.exp: x/2u g
PASS: gdb.base/long_long.exp: x/2o g
PASS: gdb.base/long_long.exp: x/2t g
PASS: gdb.base/long_long.exp: x/2a
PASS: gdb.base/long_long.exp: x/2c b
PASS: gdb.base/long_long.exp: x/2f &val.oct
PASS: gdb.base/long_long.exp: x/2bx b
PASS: gdb.base/long_long.exp: x/2bd b
PASS: gdb.base/long_long.exp: x/2bu b
PASS: gdb.base/long_long.exp: x/2bo b
PASS: gdb.base/long_long.exp: x/2bt b
PASS: gdb.base/long_long.exp: x/2ba b
PASS: gdb.base/long_long.exp: x/2bc b
PASS: gdb.base/long_long.exp: x/2bf b
PASS: gdb.base/long_long.exp: x/2hx h
PASS: gdb.base/long_long.exp: x/2hd h
PASS: gdb.base/long_long.exp: x/2hu h
PASS: gdb.base/long_long.exp: x/2ho h
PASS: gdb.base/long_long.exp: x/2ht h
PASS: gdb.base/long_long.exp: x/2ha h
PASS: gdb.base/long_long.exp: x/2hc h
PASS: gdb.base/long_long.exp: x/2hf h
PASS: gdb.base/long_long.exp: x/2wx w
PASS: gdb.base/long_long.exp: x/2wd w
PASS: gdb.base/long_long.exp: x/2wu w
PASS: gdb.base/long_long.exp: x/2wo w
PASS: gdb.base/long_long.exp: x/2wt w
PASS: gdb.base/long_long.exp: x/2wa w
PASS: gdb.base/long_long.exp: x/2wc w
PASS: gdb.base/long_long.exp: x/2wf w
PASS: gdb.base/long_long.exp: x/2gx g
PASS: gdb.base/long_long.exp: x/2gd g
PASS: gdb.base/long_long.exp: x/2gu g
PASS: gdb.base/long_long.exp: x/2go g
PASS: gdb.base/long_long.exp: x/2gt g
PASS: gdb.base/long_long.exp: x/2ga g
PASS: gdb.base/long_long.exp: x/2gc g
PASS: gdb.base/long_long.exp: x/2gf g
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdbindex-stabs.exp ...
PASS: gdb.base/gdbindex-stabs.exp: list stabs_function
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/label.exp ...
PASS: gdb.base/label.exp: breakpoint here
PASS: gdb.base/label.exp: breakpoint there
PASS: gdb.base/label.exp: continue to 'there'
PASS: gdb.base/label.exp: continue to 'here'
PASS: gdb.base/label.exp: rerun to main
PASS: gdb.base/label.exp: continue to 'there' after re-run
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/eval.exp ...
PASS: gdb.base/eval.exp: Initialize $a.
PASS: gdb.base/eval.exp: First eval.
PASS: gdb.base/eval.exp: Second eval.
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/bang.exp ...
PASS: gdb.base/bang.exp: run program
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/morestack.exp ...
PASS: gdb.base/morestack.exp: continue
PASS: gdb.base/morestack.exp: up 3000
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/mips_pro.exp ...
PASS: gdb.base/mips_pro.exp: backtrace
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/dfp-exprs.exp ...
PASS: gdb.base/dfp-exprs.exp: p 1.2df
PASS: gdb.base/dfp-exprs.exp: p -1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.234567df
PASS: gdb.base/dfp-exprs.exp: p -1.234567df
PASS: gdb.base/dfp-exprs.exp: p 1234567.df
PASS: gdb.base/dfp-exprs.exp: p -1234567.df
PASS: gdb.base/dfp-exprs.exp: p 1.2E1df
PASS: gdb.base/dfp-exprs.exp: p 1.2E10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E96df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd
PASS: gdb.base/dfp-exprs.exp: p -1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E384dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl
PASS: gdb.base/dfp-exprs.exp: p -1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E6144dl
PASS: gdb.base/dfp-exprs.exp: p 1.4df + 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df - 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df * 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df / 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4dd + 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd - 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd * 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd / 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dl + 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl - 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl * 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl / 1.2dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.df
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.dl + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 2.1df + 2.7dd
PASS: gdb.base/dfp-exprs.exp: p 2.1dd + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.6df + 2.7dl
PASS: gdb.base/dfp-exprs.exp: p 2.6dl + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.3dd + 2.2dl
PASS: gdb.base/dfp-exprs.exp: p 2.3dl + 2.2dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: p 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: p 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: ptype 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: ptype 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: ptype 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 2ll
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1.2f
PASS: gdb.base/dfp-exprs.exp: p !0.df
PASS: gdb.base/dfp-exprs.exp: p !0.dd
PASS: gdb.base/dfp-exprs.exp: p !0.dl
PASS: gdb.base/dfp-exprs.exp: p !0.5df
PASS: gdb.base/dfp-exprs.exp: p !0.5dd
PASS: gdb.base/dfp-exprs.exp: p !0.5dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p +1.2df
PASS: gdb.base/dfp-exprs.exp: p +1.2dd
PASS: gdb.base/dfp-exprs.exp: p +1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df > 1
PASS: gdb.base/dfp-exprs.exp: p 1.2dl > 2
PASS: gdb.base/dfp-exprs.exp: p 2 > 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 2 > 3.1dl
PASS: gdb.base/dfp-exprs.exp: p (float) -0.1df
PASS: gdb.base/dfp-exprs.exp: p (int) 8.3dd
PASS: gdb.base/dfp-exprs.exp: p (_Decimal64) 3.1
PASS: gdb.base/dfp-exprs.exp: p (_Decimal128) 3.7df
PASS: gdb.base/dfp-exprs.exp: p (_Decimal32) 4
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/interp.exp ...
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
PASS: gdb.base/interp.exp: interpreter-exec console "show version"
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
PASS: gdb.base/interp.exp: interpreter-exec mi "-stack-info-frame"
PASS: gdb.base/interp.exp: interpreter-exec mi1 "-break-insert main"
PASS: gdb.base/interp.exp: interpreter-exec mi2 "-break-insert main"
PASS: gdb.base/interp.exp: interpreter-exec mi3 "-break-insert main"
PASS: gdb.base/interp.exp: can list sources
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/exprs.exp ...
PASS: gdb.base/exprs.exp: print char == (setup)
PASS: gdb.base/exprs.exp: print char == (print v_char == 0)
PASS: gdb.base/exprs.exp: print char == (print v_char == 127)
PASS: gdb.base/exprs.exp: print char != (setup)
PASS: gdb.base/exprs.exp: print char != (print v_char != 0)
PASS: gdb.base/exprs.exp: print char != (print v_char != 127)
PASS: gdb.base/exprs.exp: print char < (setup)
PASS: gdb.base/exprs.exp: print char < (print v_char < 0)
PASS: gdb.base/exprs.exp: print char < (print v_char < 127)
PASS: gdb.base/exprs.exp: print char > (setup)
PASS: gdb.base/exprs.exp: print char > (print v_char > 0)
PASS: gdb.base/exprs.exp: print char > (print v_char > 127)
PASS: gdb.base/exprs.exp: print signed char == (setup)
PASS: gdb.base/exprs.exp: print signed char == (print v_signed_char == 0)
PASS: gdb.base/exprs.exp: print signed char == (print v_signed_char == 127)
PASS: gdb.base/exprs.exp: print signed char != (setup)
PASS: gdb.base/exprs.exp: print signed char != (print v_signed_char != 0)
PASS: gdb.base/exprs.exp: print signed char != (print v_signed_char != 127)
PASS: gdb.base/exprs.exp: print signed char < (setup)
PASS: gdb.base/exprs.exp: print signed char < (print v_signed_char < 0)
PASS: gdb.base/exprs.exp: print signed char < (print v_signed_char < 127)
PASS: gdb.base/exprs.exp: print signed char > (setup)
PASS: gdb.base/exprs.exp: print signed char > (print v_signed_char > 0)
PASS: gdb.base/exprs.exp: print signed char > (print v_signed_char > 127)
PASS: gdb.base/exprs.exp: print signed char == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char == (minus) (print v_signed_char == 0)
PASS: gdb.base/exprs.exp: print signed char == (minus) (print v_signed_char == -1)
PASS: gdb.base/exprs.exp: print signed char != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char != (minus) (print v_signed_char != 0)
PASS: gdb.base/exprs.exp: print signed char != (minus) (print v_signed_char != -1)
PASS: gdb.base/exprs.exp: print signed char < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char < (minus) (print v_signed_char < 0)
PASS: gdb.base/exprs.exp: print signed char < (minus) (print v_signed_char < 127)
PASS: gdb.base/exprs.exp: print signed char > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char > (minus) (print v_signed_char > 0)
PASS: gdb.base/exprs.exp: print signed char > (minus) (print v_signed_char > 127)
PASS: gdb.base/exprs.exp: print unsigned char == (setup)
PASS: gdb.base/exprs.exp: print unsigned char == (print v_unsigned_char == 0)
PASS: gdb.base/exprs.exp: print unsigned char == (print v_unsigned_char == 127)
PASS: gdb.base/exprs.exp: print unsigned char != (setup)
PASS: gdb.base/exprs.exp: print unsigned char != (print v_unsigned_char != 0)
PASS: gdb.base/exprs.exp: print unsigned char != (print v_unsigned_char != 127)
PASS: gdb.base/exprs.exp: print unsigned char < (setup)
PASS: gdb.base/exprs.exp: print unsigned char < (print v_unsigned_char < 0)
PASS: gdb.base/exprs.exp: print unsigned char < (print v_unsigned_char < 127)
PASS: gdb.base/exprs.exp: print unsigned char > (setup)
PASS: gdb.base/exprs.exp: print unsigned char > (print v_unsigned_char > 0)
PASS: gdb.base/exprs.exp: print unsigned char > (print v_unsigned_char > 127)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == 0)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == ~0)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == (unsigned char)~0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != 0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != (unsigned char)~0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != ~0)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (print v_unsigned_char < 0)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (print v_unsigned_char < 127)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (print v_unsigned_char > 0)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (print v_unsigned_char > 127)
PASS: gdb.base/exprs.exp: print signed short == (setup)
PASS: gdb.base/exprs.exp: print signed short == (print v_short == 0)
PASS: gdb.base/exprs.exp: print signed short == (print v_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short != (setup)
PASS: gdb.base/exprs.exp: print signed short != (print v_short != 0)
PASS: gdb.base/exprs.exp: print signed short != (print v_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short < (setup)
PASS: gdb.base/exprs.exp: print signed short < (print v_short < 0)
PASS: gdb.base/exprs.exp: print signed short < (print v_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short > (setup)
PASS: gdb.base/exprs.exp: print signed short > (print v_short > 0)
PASS: gdb.base/exprs.exp: print signed short > (print v_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short == (minus) (print v_short == 0)
PASS: gdb.base/exprs.exp: print signed short == (minus) (print v_short == -1)
PASS: gdb.base/exprs.exp: print signed short != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short != (minus) (print v_short != 0)
PASS: gdb.base/exprs.exp: print signed short != (minus) (print v_short != -1)
PASS: gdb.base/exprs.exp: print signed short < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short < (minus) (print v_short < 0)
PASS: gdb.base/exprs.exp: print signed short < (minus) (print v_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short > (minus) (print v_short > 0)
PASS: gdb.base/exprs.exp: print signed short > (minus) (print v_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short == (setup)
PASS: gdb.base/exprs.exp: print signed signed short == (print v_signed_short == 0)
PASS: gdb.base/exprs.exp: print signed signed short == (print v_signed_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short != (setup)
PASS: gdb.base/exprs.exp: print signed signed short != (print v_signed_short != 0)
PASS: gdb.base/exprs.exp: print signed signed short != (print v_signed_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short < (setup)
PASS: gdb.base/exprs.exp: print signed signed short < (print v_signed_short < 0)
PASS: gdb.base/exprs.exp: print signed signed short < (print v_signed_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short > (setup)
PASS: gdb.base/exprs.exp: print signed signed short > (print v_signed_short > 0)
PASS: gdb.base/exprs.exp: print signed signed short > (print v_signed_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (print v_signed_short == 0)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (print v_signed_short == -1)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (print v_signed_short != 0)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (print v_signed_short != -1)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (print v_signed_short < 0)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (print v_signed_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (print v_signed_short > 0)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (print v_signed_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short == (setup)
PASS: gdb.base/exprs.exp: print unsigned short == (print v_unsigned_short == 0)
PASS: gdb.base/exprs.exp: print unsigned short == (print v_unsigned_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short != (setup)
PASS: gdb.base/exprs.exp: print unsigned short != (print v_unsigned_short != 0)
PASS: gdb.base/exprs.exp: print unsigned short != (print v_unsigned_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short < (setup)
PASS: gdb.base/exprs.exp: print unsigned short < (print v_unsigned_short < 0)
PASS: gdb.base/exprs.exp: print unsigned short < (print v_unsigned_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short > (setup)
PASS: gdb.base/exprs.exp: print unsigned short > (print v_unsigned_short > 0)
PASS: gdb.base/exprs.exp: print unsigned short > (print v_unsigned_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print v_unsigned_short == 0)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print sizeof (v_unsigned_short) < sizeof (~0) && v_unsigned_short == ~0)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print v_unsigned_short == (unsigned short)~0)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (print v_unsigned_short != 0)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (print v_unsigned_short != (unsigned short)~0)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (print v_unsigned_short < 0)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (print v_unsigned_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (print v_unsigned_short > 0)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (print v_unsigned_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int == (setup)
PASS: gdb.base/exprs.exp: print signed int == (print v_int == 0)
PASS: gdb.base/exprs.exp: print signed int == (print v_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int != (setup)
PASS: gdb.base/exprs.exp: print signed int != (print v_int != 0)
PASS: gdb.base/exprs.exp: print signed int != (print v_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int < (setup)
PASS: gdb.base/exprs.exp: print signed int < (print v_int < 0)
PASS: gdb.base/exprs.exp: print signed int < (print v_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int > (setup)
PASS: gdb.base/exprs.exp: print signed int > (print v_int > 0)
PASS: gdb.base/exprs.exp: print signed int > (print v_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int == (minus) (print v_int == 0)
PASS: gdb.base/exprs.exp: print signed int == (minus) (print v_int == -1)
PASS: gdb.base/exprs.exp: print signed int != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int != (minus) (print v_int != 0)
PASS: gdb.base/exprs.exp: print signed int != (minus) (print v_int != -1)
PASS: gdb.base/exprs.exp: print signed int < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int < (minus) (print v_int < 0)
PASS: gdb.base/exprs.exp: print signed int < (minus) (print v_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int > (minus) (print v_int > 0)
PASS: gdb.base/exprs.exp: print signed int > (minus) (print v_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int == (setup)
PASS: gdb.base/exprs.exp: print signed signed int == (print v_signed_int == 0)
PASS: gdb.base/exprs.exp: print signed signed int == (print v_signed_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int != (setup)
PASS: gdb.base/exprs.exp: print signed signed int != (print v_signed_int != 0)
PASS: gdb.base/exprs.exp: print signed signed int != (print v_signed_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int < (setup)
PASS: gdb.base/exprs.exp: print signed signed int < (print v_signed_int < 0)
PASS: gdb.base/exprs.exp: print signed signed int < (print v_signed_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int > (setup)
PASS: gdb.base/exprs.exp: print signed signed int > (print v_signed_int > 0)
PASS: gdb.base/exprs.exp: print signed signed int > (print v_signed_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (print v_signed_int == 0)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (print v_signed_int == -1)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (print v_signed_int != 0)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (print v_signed_int != -1)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (print v_signed_int < 0)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (print v_signed_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (print v_signed_int > 0)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (print v_signed_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int == (setup)
PASS: gdb.base/exprs.exp: print unsigned int == (print v_unsigned_int == 0)
PASS: gdb.base/exprs.exp: print unsigned int == (print v_unsigned_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int != (setup)
PASS: gdb.base/exprs.exp: print unsigned int != (print v_unsigned_int != 0)
PASS: gdb.base/exprs.exp: print unsigned int != (print v_unsigned_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int < (setup)
PASS: gdb.base/exprs.exp: print unsigned int < (print v_unsigned_int < 0)
PASS: gdb.base/exprs.exp: print unsigned int < (print v_unsigned_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int > (setup)
PASS: gdb.base/exprs.exp: print unsigned int > (print v_unsigned_int > 0)
PASS: gdb.base/exprs.exp: print unsigned int > (print v_unsigned_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == 0)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == ~0)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == (unsigned int)~0)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (print v_unsigned_int != 0)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (print v_unsigned_int != (unsigned int)~0)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (print v_unsigned_int < 0)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (print v_unsigned_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (print v_unsigned_int > 0)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (print v_unsigned_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long == (setup)
PASS: gdb.base/exprs.exp: print signed long == (print v_long == 0)
PASS: gdb.base/exprs.exp: print signed long == (print v_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long != (setup)
PASS: gdb.base/exprs.exp: print signed long != (print v_long != 0)
PASS: gdb.base/exprs.exp: print signed long != (print v_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long < (setup)
PASS: gdb.base/exprs.exp: print signed long < (print v_long < 0)
PASS: gdb.base/exprs.exp: print signed long < (print v_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long > (setup)
PASS: gdb.base/exprs.exp: print signed long > (print v_long > 0)
PASS: gdb.base/exprs.exp: print signed long > (print v_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long == (minus) (print v_long == 0)
PASS: gdb.base/exprs.exp: print signed long == (minus) (print v_long == -1)
PASS: gdb.base/exprs.exp: print signed long != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long != (minus) (print v_long != 0)
PASS: gdb.base/exprs.exp: print signed long != (minus) (print v_long != -1)
PASS: gdb.base/exprs.exp: print signed long < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long < (minus) (print v_long < 0)
PASS: gdb.base/exprs.exp: print signed long < (minus) (print v_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long > (minus) (print v_long > 0)
PASS: gdb.base/exprs.exp: print signed long > (minus) (print v_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long == (setup)
PASS: gdb.base/exprs.exp: print signed signed long == (print v_signed_long == 0)
PASS: gdb.base/exprs.exp: print signed signed long == (print v_signed_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long != (setup)
PASS: gdb.base/exprs.exp: print signed signed long != (print v_signed_long != 0)
PASS: gdb.base/exprs.exp: print signed signed long != (print v_signed_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long < (setup)
PASS: gdb.base/exprs.exp: print signed signed long < (print v_signed_long < 0)
PASS: gdb.base/exprs.exp: print signed signed long < (print v_signed_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long > (setup)
PASS: gdb.base/exprs.exp: print signed signed long > (print v_signed_long > 0)
PASS: gdb.base/exprs.exp: print signed signed long > (print v_signed_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (print v_signed_long == 0)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (print v_signed_long == -1)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (print v_signed_long != 0)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (print v_signed_long != -1)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (print v_signed_long < 0)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (print v_signed_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (print v_signed_long > 0)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (print v_signed_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long == (setup)
PASS: gdb.base/exprs.exp: print unsigned long == (print v_unsigned_long == 0)
PASS: gdb.base/exprs.exp: print unsigned long == (print v_unsigned_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long != (setup)
PASS: gdb.base/exprs.exp: print unsigned long != (print v_unsigned_long != 0)
PASS: gdb.base/exprs.exp: print unsigned long != (print v_unsigned_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long < (setup)
PASS: gdb.base/exprs.exp: print unsigned long < (print v_unsigned_long < 0)
PASS: gdb.base/exprs.exp: print unsigned long < (print v_unsigned_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long > (setup)
PASS: gdb.base/exprs.exp: print unsigned long > (print v_unsigned_long > 0)
PASS: gdb.base/exprs.exp: print unsigned long > (print v_unsigned_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == 0)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == ~0)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == (unsigned long)~0)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (print v_unsigned_long != 0)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (print v_unsigned_long != (unsigned long)~0)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (print v_unsigned_long < 0)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (print v_unsigned_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (print v_unsigned_long > 0)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (print v_unsigned_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print (void*)v_signed_char (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_char (print (void*)v_signed_char)
PASS: gdb.base/exprs.exp: print (void*)v_signed_short (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_short (print (void*)v_signed_short)
PASS: gdb.base/exprs.exp: print (void*)v_signed_int (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_int (print (void*)v_signed_int)
PASS: gdb.base/exprs.exp: print (void*)v_signed_long (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_long (print (void*)v_signed_long)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_char (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_char (print (void*)v_unsigned_char)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_short (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_short (print (void*)v_unsigned_short)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_int (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_int (print (void*)v_unsigned_int)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_long (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_long (print (void*)v_unsigned_long)
PASS: gdb.base/exprs.exp: sizeof (long long) > sizeof (long) (true)
PASS: gdb.base/exprs.exp: truncate (void*) 0x00000000ffffffff + 1
PASS: gdb.base/exprs.exp: truncate (void*) 0xffffffff00000000 - 1
PASS: gdb.base/exprs.exp: \$[0-9]* = "xy" (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = "xyz" (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = red (setup)
PASS: gdb.base/exprs.exp: set output-radix 8
PASS: gdb.base/exprs.exp: \$[0-9]* = red (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = 0 (setup)
PASS: gdb.base/exprs.exp: set output-radix 10
PASS: gdb.base/exprs.exp: set variable v_int = 1
PASS: gdb.base/exprs.exp: print v_int++
PASS: gdb.base/exprs.exp: print ++v_int
PASS: gdb.base/exprs.exp: print v_int--
PASS: gdb.base/exprs.exp: print --v_int
PASS: gdb.base/exprs.exp: print v_int++ = 5
PASS: gdb.base/exprs.exp: print v_int-- = 5
PASS: gdb.base/exprs.exp: print v_int_array_init
PASS: gdb.base/exprs.exp: print *v_int_array_init@1
PASS: gdb.base/exprs.exp: print *v_int_array_init@2
PASS: gdb.base/exprs.exp: print v_int_array_init[0]@1
PASS: gdb.base/exprs.exp: print v_int_array_init[0]@2
PASS: gdb.base/exprs.exp: print v_int_array_init[1]@1
PASS: gdb.base/exprs.exp: set variable v_short_array[0] = 42
PASS: gdb.base/exprs.exp: print {short} v_short_array
PASS: gdb.base/exprs.exp: print (void) v_int_pointer
PASS: gdb.base/exprs.exp: print & (void) v_char
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/ena-dis-br.exp ...
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: enable break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
PASS: gdb.base/ena-dis-br.exp: continue to break marker1
PASS: gdb.base/ena-dis-br.exp: delete break marker1
PASS: gdb.base/ena-dis-br.exp: break marker2
PASS: gdb.base/ena-dis-br.exp: enable once break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: continue to auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: break marker3
PASS: gdb.base/ena-dis-br.exp: enable del break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker2
PASS: gdb.base/ena-dis-br.exp: continue to auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: break marker4
PASS: gdb.base/ena-dis-br.exp: disable break marker4
PASS: gdb.base/ena-dis-br.exp: info break marker4
PASS: gdb.base/ena-dis-br.exp: break 114
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: disable break with count
PASS: gdb.base/ena-dis-br.exp: continue from enable count, first time
PASS: gdb.base/ena-dis-br.exp: continue from enable count, second time
PASS: gdb.base/ena-dis-br.exp: continue through enable count, now disabled
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore non-existent break
PASS: gdb.base/ena-dis-br.exp: ignore break with missing ignore count
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 -1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 0
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: info ignored break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue to break marker1, 2nd time
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: enable del break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & auto-deleted break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue to ignored & auto-deleted break marker1
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: disable break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & disabled break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: info ignored & disabled break marker1
PASS: gdb.base/ena-dis-br.exp: prepare to continue with ignore count
PASS: gdb.base/ena-dis-br.exp: continue with ignore count
PASS: gdb.base/ena-dis-br.exp: step
PASS: gdb.base/ena-dis-br.exp: continue with ignore count, not stopped at bpt
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/alias.exp ...
PASS: gdb.base/alias.exp: alias -a set2=set
PASS: gdb.base/alias.exp: set2 print elements 42
PASS: gdb.base/alias.exp: verify set2
PASS: gdb.base/alias.exp: abbrev set2 not present in help command list
PASS: gdb.base/alias.exp: alias -a set3= set
PASS: gdb.base/alias.exp: set3 print elements 43
PASS: gdb.base/alias.exp: verify set3
PASS: gdb.base/alias.exp: abbrev set3 not present in help command list
PASS: gdb.base/alias.exp: alias -a set4 =set
PASS: gdb.base/alias.exp: set4 print elements 44
PASS: gdb.base/alias.exp: verify set4
PASS: gdb.base/alias.exp: abbrev set4 not present in help command list
PASS: gdb.base/alias.exp: alias -a set5 = set
PASS: gdb.base/alias.exp: set5 print elements 45
PASS: gdb.base/alias.exp: verify set5
PASS: gdb.base/alias.exp: abbrev set5 not present in help command list
PASS: gdb.base/alias.exp: alias -a -- set6 = set
PASS: gdb.base/alias.exp: set6 print elements 46
PASS: gdb.base/alias.exp: verify set6
PASS: gdb.base/alias.exp: abbrev set6 not present in help command list
PASS: gdb.base/alias.exp: alias -a -- -a = set
PASS: gdb.base/alias.exp: -a print elements 47
PASS: gdb.base/alias.exp: verify -a
PASS: gdb.base/alias.exp: abbrev -a not present in help command list
PASS: gdb.base/alias.exp: alias set2=set
PASS: gdb.base/alias.exp: alias foo=bar
PASS: gdb.base/alias.exp: alias spe = set p elem
PASS: gdb.base/alias.exp: spe 50
PASS: gdb.base/alias.exp: verify spe
PASS: gdb.base/alias.exp: alias set pr elms = set p elem
PASS: gdb.base/alias.exp: set pr elms 51
PASS: gdb.base/alias.exp: verify set pr elms
PASS: gdb.base/alias.exp: help set print
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/attach-pie-misread.exp ...
PASS: gdb.base/attach-pie-misread.exp: ldd attach-pie-misread
PASS: gdb.base/attach-pie-misread.exp: ldd attach-pie-misread output contains libs
PASS: gdb.base/attach-pie-misread.exp: copy ld-2.13.so to ld-linux.so.2
PASS: gdb.base/attach-pie-misread.exp: copy libm-2.13.so to libm.so.6
PASS: gdb.base/attach-pie-misread.exp: copy libc-2.13.so to libc.so.6
PASS: gdb.base/attach-pie-misread.exp: readelf initial scan
PASS: gdb.base/attach-pie-misread.exp: generate stub
PASS: gdb.base/attach-pie-misread.exp: ldd attach-pie-misread
PASS: gdb.base/attach-pie-misread.exp: ldd attach-pie-misread output contains libs
PASS: gdb.base/attach-pie-misread.exp: copy ld-2.13.so to ld-linux.so.2
PASS: gdb.base/attach-pie-misread.exp: copy libm-2.13.so to libm.so.6
PASS: gdb.base/attach-pie-misread.exp: copy libc-2.13.so to libc.so.6
PASS: gdb.base/attach-pie-misread.exp: readelf rebuilt with stub_size
PASS: gdb.base/attach-pie-misread.exp: unprelink libc.so.6 pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/attach-pie-misread.exp: prelink libc.so.6 (missing /usr/sbin/prelink)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gnu-ifunc.exp ...
PASS: gdb.base/gnu-ifunc.exp: continue to breakpoint: break-at-call
PASS: gdb.base/gnu-ifunc.exp: p gnu_ifunc (3)
FAIL: gdb.base/gnu-ifunc.exp: step
PASS: gdb.base/gnu-ifunc.exp: continue to break-at-nextcall
PASS: gdb.base/gnu-ifunc.exp: continue to breakpoint: nextcall gnu_ifunc
PASS: gdb.base/gnu-ifunc.exp: nextcall gnu_ifunc skipped
PASS: gdb.base/gnu-ifunc.exp: p gnu_ifunc executing
PASS: gdb.base/gnu-ifunc.exp: info sym gnu_ifunc executing
PASS: gdb.base/gnu-ifunc.exp: info addr gnu_ifunc
PASS: gdb.base/gnu-ifunc.exp: info sym <gnu_ifunc-address>
PASS: gdb.base/gnu-ifunc.exp: static gnu_ifunc
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/ldbl_e308.exp ...
PASS: gdb.base/ldbl_e308.exp: set variable ldbl_308 = 1.6e+308l
PASS: gdb.base/ldbl_e308.exp: print ldbl_308
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/langs.exp ...
PASS: gdb.base/langs.exp: break on nonexistent function in langs.exp
PASS: gdb.base/langs.exp: show language at csub in langs.exp
PASS: gdb.base/langs.exp: backtrace in langs.exp
PASS: gdb.base/langs.exp: up to foo in langs.exp
PASS: gdb.base/langs.exp: show language at foo in langs.exp
PASS: gdb.base/langs.exp: up to cppsub_ in langs.exp
PASS: gdb.base/langs.exp: show language at cppsub_ in langs.exp
PASS: gdb.base/langs.exp: up to fsub in langs.exp
PASS: gdb.base/langs.exp: show language at fsub in langs.exp
PASS: gdb.base/langs.exp: up to langs0__2do in langs.exp
PASS: gdb.base/langs.exp: show language at langs0__2do in langs.exp
PASS: gdb.base/langs.exp: up to main in langs.exp
PASS: gdb.base/langs.exp: show language at main in langs.exp
PASS: gdb.base/langs.exp: continue until exit at langs.exp
PASS: gdb.base/langs.exp: set lang to minimal
PASS: gdb.base/langs.exp: print parameter value
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/hashline1.exp ...
PASS: gdb.base/hashline1.exp: set breakpoint
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/default.exp ...
PASS: gdb.base/default.exp: add-symbol-file
PASS: gdb.base/default.exp: append
PASS: gdb.base/default.exp: append binary
PASS: gdb.base/default.exp: append memory
PASS: gdb.base/default.exp: append value
PASS: gdb.base/default.exp: append binary memory
PASS: gdb.base/default.exp: append binary value
PASS: gdb.base/default.exp: attach
PASS: gdb.base/default.exp: break
PASS: gdb.base/default.exp: break "b" abbreviation
PASS: gdb.base/default.exp: break "br" abbreviation
PASS: gdb.base/default.exp: break "bre" abbreviation
PASS: gdb.base/default.exp: break "brea" abbreviation
PASS: gdb.base/default.exp: backtrace
PASS: gdb.base/default.exp: backtrace "bt" abbreviation
PASS: gdb.base/default.exp: backtrace "ba" abbreviation
PASS: gdb.base/default.exp: backtrace "bac" abbreviation
PASS: gdb.base/default.exp: continue
PASS: gdb.base/default.exp: continue "c" abbreviation
PASS: gdb.base/default.exp: call
PASS: gdb.base/default.exp: catch
FAIL: gdb.base/default.exp: cd
PASS: gdb.base/default.exp: clear
PASS: gdb.base/default.exp: commands
PASS: gdb.base/default.exp: condition
PASS: gdb.base/default.exp: core-file
PASS: gdb.base/default.exp: delete "d" abbreviation
PASS: gdb.base/default.exp: delete
PASS: gdb.base/default.exp: define
PASS: gdb.base/default.exp: delete breakpoints
PASS: gdb.base/default.exp: delete display prompt
PASS: gdb.base/default.exp: detach
PASS: gdb.base/default.exp: directory prompt
PASS: gdb.base/default.exp: disable "dis" abbreviation
PASS: gdb.base/default.exp: disable "disa" abbreviation
PASS: gdb.base/default.exp: disable
PASS: gdb.base/default.exp: disable breakpoints
PASS: gdb.base/default.exp: disable display
PASS: gdb.base/default.exp: disassemble
PASS: gdb.base/default.exp: display
PASS: gdb.base/default.exp: do
PASS: gdb.base/default.exp: document
PASS: gdb.base/default.exp: down
PASS: gdb.base/default.exp: down-silently
PASS: gdb.base/default.exp: dump
PASS: gdb.base/default.exp: dump binary
PASS: gdb.base/default.exp: dump ihex
PASS: gdb.base/default.exp: dump memory
PASS: gdb.base/default.exp: dump srec
PASS: gdb.base/default.exp: dump tekhex
PASS: gdb.base/default.exp: dump value
PASS: gdb.base/default.exp: dump binary memory
PASS: gdb.base/default.exp: dump binary value
PASS: gdb.base/default.exp: dump ihex memory
PASS: gdb.base/default.exp: dump ihex value
PASS: gdb.base/default.exp: dump srec memory
PASS: gdb.base/default.exp: dump srec value
PASS: gdb.base/default.exp: dump tekhex memory
PASS: gdb.base/default.exp: dump tekhex value
PASS: gdb.base/default.exp: echo
PASS: gdb.base/default.exp: enable breakpoints delete
PASS: gdb.base/default.exp: enable breakpoints once
PASS: gdb.base/default.exp: enable breakpoints
PASS: gdb.base/default.exp: enable delete
PASS: gdb.base/default.exp: enable display
PASS: gdb.base/default.exp: enable once
PASS: gdb.base/default.exp: enable
PASS: gdb.base/default.exp: exec-file
PASS: gdb.base/default.exp: frame "f" abbreviation
PASS: gdb.base/default.exp: frame
PASS: gdb.base/default.exp: fg
PASS: gdb.base/default.exp: file
PASS: gdb.base/default.exp: finish
PASS: gdb.base/default.exp: forward-search
PASS: gdb.base/default.exp: gcore
PASS: gdb.base/default.exp: generate-core-file
PASS: gdb.base/default.exp: help "h" abbreviation
PASS: gdb.base/default.exp: help
PASS: gdb.base/default.exp: handle
PASS: gdb.base/default.exp: info "i" abbreviation
PASS: gdb.base/default.exp: info
PASS: gdb.base/default.exp: ignore
PASS: gdb.base/default.exp: info address
PASS: gdb.base/default.exp: info all-registers
PASS: gdb.base/default.exp: info args
PASS: gdb.base/default.exp: info bogus-gdb-command
PASS: gdb.base/default.exp: info breakpoints
PASS: gdb.base/default.exp: info copying
PASS: gdb.base/default.exp: info display
PASS: gdb.base/default.exp: info frame "f" abbreviation
PASS: gdb.base/default.exp: info frame
PASS: gdb.base/default.exp: info files
PASS: gdb.base/default.exp: info float
PASS: gdb.base/default.exp: info functions
PASS: gdb.base/default.exp: info locals
PASS: gdb.base/default.exp: info program
PASS: gdb.base/default.exp: info registers
PASS: gdb.base/default.exp: info stack "s" abbreviation
PASS: gdb.base/default.exp: info stack
PASS: gdb.base/default.exp: info set
PASS: gdb.base/default.exp: info symbol
PASS: gdb.base/default.exp: info source
PASS: gdb.base/default.exp: info sources
PASS: gdb.base/default.exp: info target
PASS: gdb.base/default.exp: info terminal
PASS: gdb.base/default.exp: info threads
PASS: gdb.base/default.exp: info types
PASS: gdb.base/default.exp: info variables
PASS: gdb.base/default.exp: info vector
PASS: gdb.base/default.exp: info warranty
PASS: gdb.base/default.exp: info watchpoints
PASS: gdb.base/default.exp: inspect
PASS: gdb.base/default.exp: jump
PASS: gdb.base/default.exp: kill
PASS: gdb.base/default.exp: list "l" abbreviation
PASS: gdb.base/default.exp: list
PASS: gdb.base/default.exp: load
PASS: gdb.base/default.exp: next "n" abbreviation
PASS: gdb.base/default.exp: next
PASS: gdb.base/default.exp: nexti "ni" abbreviation
PASS: gdb.base/default.exp: nexti
PASS: gdb.base/default.exp: output
PASS: gdb.base/default.exp: overlay
PASS: gdb.base/default.exp: overlay on
PASS: gdb.base/default.exp: overlay manual #1
PASS: gdb.base/default.exp: overlay auto
PASS: gdb.base/default.exp: overlay off
PASS: gdb.base/default.exp: overlay list
PASS: gdb.base/default.exp: overlay map #1
PASS: gdb.base/default.exp: overlay unmap #1
PASS: gdb.base/default.exp: overlay manual #2
PASS: gdb.base/default.exp: overlay map #2
PASS: gdb.base/default.exp: overlay unmap #2
PASS: gdb.base/default.exp: print "p" abbreviation
PASS: gdb.base/default.exp: print
PASS: gdb.base/default.exp: printf
PASS: gdb.base/default.exp: ptype
PASS: gdb.base/default.exp: pwd
PASS: gdb.base/default.exp: run "r" abbreviation
PASS: gdb.base/default.exp: run
PASS: gdb.base/default.exp: rbreak
PASS: gdb.base/default.exp: restore
PASS: gdb.base/default.exp: return
PASS: gdb.base/default.exp: reverse-search
PASS: gdb.base/default.exp: step "s" abbreviation #1
PASS: gdb.base/default.exp: step #1
PASS: gdb.base/default.exp: search
PASS: gdb.base/default.exp: section
PASS: gdb.base/default.exp: set annotate
PASS: gdb.base/default.exp: set args
PASS: gdb.base/default.exp: set check "c" abbreviation
PASS: gdb.base/default.exp: set check "ch" abbreviation
PASS: gdb.base/default.exp: set check "check" abbreviation
PASS: gdb.base/default.exp: set check range
PASS: gdb.base/default.exp: set check type
PASS: gdb.base/default.exp: set complaints
PASS: gdb.base/default.exp: set confirm
PASS: gdb.base/default.exp: set environment
PASS: gdb.base/default.exp: set height
PASS: gdb.base/default.exp: set history expansion
PASS: gdb.base/default.exp: set history filename
PASS: gdb.base/default.exp: set history save
PASS: gdb.base/default.exp: set history size
PASS: gdb.base/default.exp: set history
PASS: gdb.base/default.exp: set language
PASS: gdb.base/default.exp: set listsize
PASS: gdb.base/default.exp: set print "p" abbreviation
PASS: gdb.base/default.exp: set print "pr" abbreviation
PASS: gdb.base/default.exp: set print
PASS: gdb.base/default.exp: set print address
PASS: gdb.base/default.exp: set print array
PASS: gdb.base/default.exp: set print asm-demangle
PASS: gdb.base/default.exp: set print demangle
PASS: gdb.base/default.exp: set print elements
PASS: gdb.base/default.exp: set print object
PASS: gdb.base/default.exp: set print pretty
PASS: gdb.base/default.exp: set print sevenbit-strings
PASS: gdb.base/default.exp: set print union
PASS: gdb.base/default.exp: set print vtbl
PASS: gdb.base/default.exp: set radix
PASS: gdb.base/default.exp: set variable
PASS: gdb.base/default.exp: set verbose
PASS: gdb.base/default.exp: set width
PASS: gdb.base/default.exp: set write
PASS: gdb.base/default.exp: set
PASS: gdb.base/default.exp: shell echo Hi dad!
PASS: gdb.base/default.exp: show annotate
PASS: gdb.base/default.exp: show args
PASS: gdb.base/default.exp: show check "c" abbreviation
PASS: gdb.base/default.exp: show check "ch" abbreviation
PASS: gdb.base/default.exp: show check "check" abbreviation
PASS: gdb.base/default.exp: show check range
PASS: gdb.base/default.exp: show check type
PASS: gdb.base/default.exp: show commands
PASS: gdb.base/default.exp: show complaints
PASS: gdb.base/default.exp: show confirm
PASS: gdb.base/default.exp: show convenience
PASS: gdb.base/default.exp: show directories
PASS: gdb.base/default.exp: show editing
PASS: gdb.base/default.exp: show height
PASS: gdb.base/default.exp: show history expansion
PASS: gdb.base/default.exp: show history filename
PASS: gdb.base/default.exp: show history save
PASS: gdb.base/default.exp: show history size
PASS: gdb.base/default.exp: show history
PASS: gdb.base/default.exp: show language
PASS: gdb.base/default.exp: show listsize
PASS: gdb.base/default.exp: show p
PASS: gdb.base/default.exp: show pr
PASS: gdb.base/default.exp: show print
PASS: gdb.base/default.exp: show paths
PASS: gdb.base/default.exp: show print address
PASS: gdb.base/default.exp: show print array
PASS: gdb.base/default.exp: show print asm-demangle
PASS: gdb.base/default.exp: show print demangle
PASS: gdb.base/default.exp: show print elements
PASS: gdb.base/default.exp: show print object
PASS: gdb.base/default.exp: show print pretty
PASS: gdb.base/default.exp: show print sevenbit-strings
PASS: gdb.base/default.exp: show print union
PASS: gdb.base/default.exp: show print vtbl
PASS: gdb.base/default.exp: show prompt
PASS: gdb.base/default.exp: show radix
PASS: gdb.base/default.exp: show user
PASS: gdb.base/default.exp: show values
PASS: gdb.base/default.exp: show verbose
PASS: gdb.base/default.exp: show version
PASS: gdb.base/default.exp: show width
PASS: gdb.base/default.exp: show write
PASS: gdb.base/default.exp: show
PASS: gdb.base/default.exp: stepi "si" abbreviation
PASS: gdb.base/default.exp: stepi
PASS: gdb.base/default.exp: signal
PASS: gdb.base/default.exp: source
PASS: gdb.base/default.exp: step "s" abbreviation #2
PASS: gdb.base/default.exp: step #2
PASS: gdb.base/default.exp: symbol-file
PASS: gdb.base/default.exp: target child
PASS: gdb.base/default.exp: target procfs
PASS: gdb.base/default.exp: target core
PASS: gdb.base/default.exp: target exec
PASS: gdb.base/default.exp: target remote
PASS: gdb.base/default.exp: target
PASS: gdb.base/default.exp: tbreak
PASS: gdb.base/default.exp: thread
PASS: gdb.base/default.exp: thread apply
PASS: gdb.base/default.exp: thread find
PASS: gdb.base/default.exp: thread name
PASS: gdb.base/default.exp: tty
PASS: gdb.base/default.exp: until "u" abbreviation
PASS: gdb.base/default.exp: until
PASS: gdb.base/default.exp: undisplay prompt
PASS: gdb.base/default.exp: unset environment prompt
PASS: gdb.base/default.exp: unset
PASS: gdb.base/default.exp: up-silently
PASS: gdb.base/default.exp: watch
PASS: gdb.base/default.exp: whatis
PASS: gdb.base/default.exp: where
PASS: gdb.base/default.exp: x
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/assign.exp ...
PASS: gdb.base/assign.exp: continuing after dummy()
PASS: gdb.base/assign.exp: v_int=57
PASS: gdb.base/assign.exp: set v_int to 6
PASS: gdb.base/assign.exp: v_int+=57
PASS: gdb.base/assign.exp: set v_int to 6 (2)
PASS: gdb.base/assign.exp: v_int-=57
PASS: gdb.base/assign.exp: set v_int to 6 (3)
PASS: gdb.base/assign.exp: v_int*=5
PASS: gdb.base/assign.exp: set v_int to 6 (4)
PASS: gdb.base/assign.exp: v_int/=4
PASS: gdb.base/assign.exp: set v_int to 6 (5)
PASS: gdb.base/assign.exp: v_int%=4
PASS: gdb.base/assign.exp: set v_int to 6 (6)
PASS: gdb.base/assign.exp: v_int+=char
PASS: gdb.base/assign.exp: set v_int to 6 (7)
PASS: gdb.base/assign.exp: v_int+=signed_char
PASS: gdb.base/assign.exp: set v_int to 6 (8)
PASS: gdb.base/assign.exp: v_int+=unsigned_char
PASS: gdb.base/assign.exp: set v_int to 6 (9)
PASS: gdb.base/assign.exp: v_int+=short
PASS: gdb.base/assign.exp: set v_int to 6 (10)
PASS: gdb.base/assign.exp: v_int+=signed_short
PASS: gdb.base/assign.exp: set v_int to 6 (11)
PASS: gdb.base/assign.exp: v_int=+unsigned_short
PASS: gdb.base/assign.exp: set v_int to 6 (12)
PASS: gdb.base/assign.exp: v_int+=signed_int
PASS: gdb.base/assign.exp: set v_int to 6 (13)
PASS: gdb.base/assign.exp: v_int+=unsigned_int
PASS: gdb.base/assign.exp: set v_int to 6 (14)
PASS: gdb.base/assign.exp: v_int+=long
PASS: gdb.base/assign.exp: set v_int to 6 (15)
PASS: gdb.base/assign.exp: v_int+=signed_long
PASS: gdb.base/assign.exp: set v_int to 6 (16)
PASS: gdb.base/assign.exp: v_int+=unsigned_long
PASS: gdb.base/assign.exp: set v_int to 6 (17)
PASS: gdb.base/assign.exp: v_int+=v_float
PASS: gdb.base/assign.exp: set v_int to 6 (18)
PASS: gdb.base/assign.exp: v_int+=double
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/call-strs.exp ...
PASS: gdb.base/call-strs.exp: set print sevenbit-strings
PASS: gdb.base/call-strs.exp: set print address off
PASS: gdb.base/call-strs.exp: set print symbol off
PASS: gdb.base/call-strs.exp: set width 0
PASS: gdb.base/call-strs.exp: step after assignment to s
PASS: gdb.base/call-strs.exp: next over strcpy
PASS: gdb.base/call-strs.exp: print buf
PASS: gdb.base/call-strs.exp: print s
PASS: gdb.base/call-strs.exp: print str_func1(s)
PASS: gdb.base/call-strs.exp: print str_func1("test string")
PASS: gdb.base/call-strs.exp: call str_func1(s)
PASS: gdb.base/call-strs.exp: call str_func1("test string")
PASS: gdb.base/call-strs.exp: print str_func1(buf)
PASS: gdb.base/call-strs.exp: call str_func1(buf)
PASS: gdb.base/call-strs.exp: print str_func("a","b","c","d","e","f","g")
PASS: gdb.base/call-strs.exp: call str_func("a","b","c","d","e","f","g")
PASS: gdb.base/call-strs.exp: print str_func(s,s,s,s,s,s,s)
PASS: gdb.base/call-strs.exp: call str_func(s,s,s,s,s,s,s)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/dump.exp ...
PASS: gdb.base/dump.exp: inaccessible memory is reported
PASS: gdb.base/dump.exp: endianness: little
PASS: gdb.base/dump.exp: dump array as value, default
PASS: gdb.base/dump.exp: dump struct as value, default
PASS: gdb.base/dump.exp: dump array as value, binary
PASS: gdb.base/dump.exp: dump struct as value, binary
PASS: gdb.base/dump.exp: dump array as value, srec
PASS: gdb.base/dump.exp: dump struct as value, srec
PASS: gdb.base/dump.exp: dump array as value, intel hex
PASS: gdb.base/dump.exp: dump struct as value, intel hex
PASS: gdb.base/dump.exp: dump array as value, tekhex
PASS: gdb.base/dump.exp: dump struct as value, tekhex
PASS: gdb.base/dump.exp: capture /x &intarray[0]
PASS: gdb.base/dump.exp: capture /x &intarray[32]
PASS: gdb.base/dump.exp: capture /x &intstruct
PASS: gdb.base/dump.exp: capture /x &intstruct + 1
PASS: gdb.base/dump.exp: capture intarray
PASS: gdb.base/dump.exp: capture intstruct
PASS: gdb.base/dump.exp: capture type of pointer &intarray
PASS: gdb.base/dump.exp: capture type of pointer &intstruct
PASS: gdb.base/dump.exp: dump array as memory, default
PASS: gdb.base/dump.exp: dump struct as memory, default
PASS: gdb.base/dump.exp: dump array as memory, binary
PASS: gdb.base/dump.exp: dump struct as memory, binary
PASS: gdb.base/dump.exp: dump array as memory, srec
PASS: gdb.base/dump.exp: dump struct as memory, srec
PASS: gdb.base/dump.exp: dump array as memory, ihex
PASS: gdb.base/dump.exp: dump struct as memory, ihex
PASS: gdb.base/dump.exp: dump array as memory, tekhex
PASS: gdb.base/dump.exp: dump struct as memory, tekhex
PASS: gdb.base/dump.exp: dump array as mem, srec, expressions
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, srec; file restored ok
PASS: gdb.base/dump.exp: array as value, srec; capture intarray
PASS: gdb.base/dump.exp: array as value, srec; value restored ok
PASS: gdb.base/dump.exp: struct as value, srec; file restored ok
PASS: gdb.base/dump.exp: struct as value, srec; capture intstruct
PASS: gdb.base/dump.exp: struct as value, srec; value restored ok
PASS: gdb.base/dump.exp: zero all
PASS: gdb.base/dump.exp: array as memory, srec; file restored ok
PASS: gdb.base/dump.exp: array as memory, srec; capture intarray
PASS: gdb.base/dump.exp: array as memory, srec; value restored ok
PASS: gdb.base/dump.exp: struct as memory, srec; file restored ok
PASS: gdb.base/dump.exp: struct as memory, srec; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, srec; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, ihex; file restored ok
PASS: gdb.base/dump.exp: array as value, ihex; capture intarray
PASS: gdb.base/dump.exp: array as value, ihex; value restored ok
PASS: gdb.base/dump.exp: struct as value, ihex; file restored ok
PASS: gdb.base/dump.exp: struct as value, ihex; capture intstruct
PASS: gdb.base/dump.exp: struct as value, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, ihex; file restored ok
PASS: gdb.base/dump.exp: array as memory, ihex; capture intarray
PASS: gdb.base/dump.exp: array as memory, ihex; value restored ok
PASS: gdb.base/dump.exp: struct as memory, ihex; file restored ok
PASS: gdb.base/dump.exp: struct as memory, ihex; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, tekhex; file restored ok
PASS: gdb.base/dump.exp: array as value, tekhex; capture intarray
PASS: gdb.base/dump.exp: array as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct as value, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct as value, tekhex; capture intstruct
PASS: gdb.base/dump.exp: struct as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, tekhex; file restored ok
PASS: gdb.base/dump.exp: array as memory, tekhex; capture intarray
PASS: gdb.base/dump.exp: array as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct as memory, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct as memory, tekhex; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, binary; file restored ok
PASS: gdb.base/dump.exp: array as value, binary; capture intarray
PASS: gdb.base/dump.exp: array as value, binary; value restored ok
PASS: gdb.base/dump.exp: struct as value, binary; file restored ok
PASS: gdb.base/dump.exp: struct as value, binary; capture intstruct
PASS: gdb.base/dump.exp: struct as value, binary; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, binary; file restored ok
PASS: gdb.base/dump.exp: array as memory, binary; capture intarray
PASS: gdb.base/dump.exp: array as memory, binary; value restored ok
PASS: gdb.base/dump.exp: struct as memory, binary; file restored ok
PASS: gdb.base/dump.exp: struct as memory, binary; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, binary; value restored ok
PASS: gdb.base/dump.exp: capture /x &intarray2[0]
PASS: gdb.base/dump.exp: capture /x &intstruct2
PASS: gdb.base/dump.exp: capture (char *) &intarray2 - (char *) &intarray
PASS: gdb.base/dump.exp: capture (char *) &intstruct2 - (char *) &intstruct
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, srec; file restored ok
PASS: gdb.base/dump.exp: array copy, srec; capture intarray2
PASS: gdb.base/dump.exp: array copy, srec; value restored ok
PASS: gdb.base/dump.exp: struct copy, srec; file restored ok
PASS: gdb.base/dump.exp: struct copy, srec; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, srec; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, ihex; file restored ok
PASS: gdb.base/dump.exp: array copy, ihex; capture intarray2
PASS: gdb.base/dump.exp: array copy, ihex; value restored ok
PASS: gdb.base/dump.exp: struct copy, ihex; file restored ok
PASS: gdb.base/dump.exp: struct copy, ihex; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, tekhex; file restored ok
PASS: gdb.base/dump.exp: array copy, tekhex; capture intarray2
PASS: gdb.base/dump.exp: array copy, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct copy, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct copy, tekhex; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, binary; file restored ok
PASS: gdb.base/dump.exp: array copy, binary; capture intarray2
PASS: gdb.base/dump.exp: array copy, binary; value restored ok
PASS: gdb.base/dump.exp: struct copy, binary; file restored ok
PASS: gdb.base/dump.exp: struct copy, binary; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, binary; value restored ok
PASS: gdb.base/dump.exp: capture /x &intarray[3]
PASS: gdb.base/dump.exp: capture /x &intarray[4]
PASS: gdb.base/dump.exp: capture /x (char *) &intarray[3] - (char *) &intarray[0]
PASS: gdb.base/dump.exp: capture /x (char *) &intarray[4] - (char *) &intarray[0]
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, srec; file restored ok
PASS: gdb.base/dump.exp: array partial, srec; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, srec; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 1
PASS: gdb.base/dump.exp: element 4 not changed - 1
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, ihex; file restored ok
PASS: gdb.base/dump.exp: array partial, ihex; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, ihex; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 2
PASS: gdb.base/dump.exp: element 4 not changed - 2
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, tekhex; file restored ok
PASS: gdb.base/dump.exp: array partial, tekhex; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, tekhex; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 3
PASS: gdb.base/dump.exp: element 4 not changed - 3
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, binary; file restored ok
PASS: gdb.base/dump.exp: array partial, binary; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, binary; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 4
PASS: gdb.base/dump.exp: element 4 not changed - 4
PASS: gdb.base/dump.exp: array partial with expressions; file restored ok
PASS: gdb.base/dump.exp: array partial with expressions; capture intarray2[3]
PASS: gdb.base/dump.exp: array partial with expressions; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed, == 4
PASS: gdb.base/dump.exp: element 4 not changed, == 4
PASS: gdb.base/dump.exp: setting little endianness
PASS: gdb.base/dump.exp: file binfile; capture intarray
PASS: gdb.base/dump.exp: start with intarray un-initialized
PASS: gdb.base/dump.exp: file binfile; capture intstruct
PASS: gdb.base/dump.exp: start with intstruct un-initialized
PASS: gdb.base/dump.exp: reload array as value, srec; capture * (int (*)[32]) 0x80498c0
PASS: gdb.base/dump.exp: reload array as value, srec; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, srec; capture * (struct teststruct *) 0x8049800
PASS: gdb.base/dump.exp: reload struct as value, srec; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, srec; capture * (int (*)[32]) 0x80498c0
PASS: gdb.base/dump.exp: reload array as memory, srec; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, srec; capture * (struct teststruct *) 0x8049800
PASS: gdb.base/dump.exp: reload struct as memory, srec; value restored ok
PASS: gdb.base/dump.exp: reload array as value, intel hex; capture * (int (*)[32]) 0x80498c0
PASS: gdb.base/dump.exp: reload array as value, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, intel hex; capture * (struct teststruct *) 0x8049800
PASS: gdb.base/dump.exp: reload struct as value, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, intel hex; capture * (int (*)[32]) 0x80498c0
PASS: gdb.base/dump.exp: reload array as memory, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, intel hex; capture * (struct teststruct *) 0x8049800
PASS: gdb.base/dump.exp: reload struct as memory, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload array as value, tekhex; capture * (int (*)[32]) 0x80498c0
PASS: gdb.base/dump.exp: reload array as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, tekhex; capture * (struct teststruct *) 0x8049800
PASS: gdb.base/dump.exp: reload struct as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, tekhex; capture * (int (*)[32]) 0x80498c0
PASS: gdb.base/dump.exp: reload array as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, tekhex; capture * (struct teststruct *) 0x8049800
PASS: gdb.base/dump.exp: reload struct as memory, tekhex; value restored ok
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/hashline3.exp ...
PASS: gdb.base/hashline3.exp: set breakpoint
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/foll-exec.exp ...
PASS: gdb.base/foll-exec.exp: insert first exec catchpoint
PASS: gdb.base/foll-exec.exp: continue to first exec catchpoint
PASS: gdb.base/foll-exec.exp: step to exec call
PASS: gdb.base/foll-exec.exp: print follow-exec/global_i
PASS: gdb.base/foll-exec.exp: print follow-exec/local_j
PASS: gdb.base/foll-exec.exp: print follow-exec/local_k
PASS: gdb.base/foll-exec.exp: step through execlp call
PASS: gdb.base/foll-exec.exp: step after execlp call
PASS: gdb.base/foll-exec.exp: print execd-program/global_i (after execlp)
PASS: gdb.base/foll-exec.exp: print execd-program/local_j (after execlp)
PASS: gdb.base/foll-exec.exp: print follow-exec/local_k (after execlp)
PASS: gdb.base/foll-exec.exp: set catch exec
PASS: gdb.base/foll-exec.exp: info shows catchpoint without exec pathname
PASS: gdb.base/foll-exec.exp: hit catch exec
PASS: gdb.base/foll-exec.exp: sync up after possible failure 1
PASS: gdb.base/foll-exec.exp: sync up after possible failure 2
PASS: gdb.base/foll-exec.exp: info shows catchpoint exec pathname
PASS: gdb.base/foll-exec.exp: continue after hit catch exec
PASS: gdb.base/foll-exec.exp: prepare to jump to execl call
PASS: gdb.base/foll-exec.exp: jump to execl call
PASS: gdb.base/foll-exec.exp: step through execl call
PASS: gdb.base/foll-exec.exp: step after execl call
PASS: gdb.base/foll-exec.exp: print execd-program/local_j (after execl)
PASS: gdb.base/foll-exec.exp: prepare to jump to execv call
PASS: gdb.base/foll-exec.exp: jump to execv call
PASS: gdb.base/foll-exec.exp: step through execv call
PASS: gdb.base/foll-exec.exp: step after execv call
PASS: gdb.base/foll-exec.exp: print execd-program/local_j (after execv)
PASS: gdb.base/foll-exec.exp: continue through exec
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/ending-run.exp ...
PASS: gdb.base/ending-run.exp: bpt at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:14, one
PASS: gdb.base/ending-run.exp: b ending-run.c:31
PASS: gdb.base/ending-run.exp: run
PASS: gdb.base/ending-run.exp: clear worked
PASS: gdb.base/ending-run.exp: cleared bp at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:1
PASS: gdb.base/ending-run.exp: b ending-run.c:14, two
PASS: gdb.base/ending-run.exp: Cleared 2 by line
PASS: gdb.base/ending-run.exp: b ending-run.c:14
PASS: gdb.base/ending-run.exp: Breakpoint 7 at *ending-run.c:14
PASS: gdb.base/ending-run.exp: Clear 2 by default
PASS: gdb.base/ending-run.exp: all set to continue
PASS: gdb.base/ending-run.exp: cont
PASS: gdb.base/ending-run.exp: Step to return
PASS: gdb.base/ending-run.exp: step out of main
PASS: gdb.base/ending-run.exp: step to end of run
UNSUPPORTED: gdb.base/ending-run.exp: continue after exit
PASS: gdb.base/ending-run.exp: don't step after run
PASS: gdb.base/ending-run.exp: ls: core (No core dumped on quit)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/dfp-test.exp ...
PASS: gdb.base/dfp-test.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/dfp-test.exp: next after initializing d32
PASS: gdb.base/dfp-test.exp: d32 is initialized to 1.2345
PASS: gdb.base/dfp-test.exp: next after assigning builtin infinity to d32
PASS: gdb.base/dfp-test.exp: d32 is positive Infinity
PASS: gdb.base/dfp-test.exp: next after assigning negative builtin infinity to d32
PASS: gdb.base/dfp-test.exp: d32 is negative Infinity
PASS: gdb.base/dfp-test.exp: next after assigning builtin NaN to d32
PASS: gdb.base/dfp-test.exp: d32 is NaN
PASS: gdb.base/dfp-test.exp: p d32=123.45df
PASS: gdb.base/dfp-test.exp: p d32=12345.df
PASS: gdb.base/dfp-test.exp: p d32=12345.67df
PASS: gdb.base/dfp-test.exp: p d32=1234567.df
PASS: gdb.base/dfp-test.exp: p d32=1.234567E0df
PASS: gdb.base/dfp-test.exp: p d32=1.234567E10df
PASS: gdb.base/dfp-test.exp: p d32=1.234567E+96df
PASS: gdb.base/dfp-test.exp: p d32=9.999999E96df
PASS: gdb.base/dfp-test.exp: p d32=1.0E-95df
PASS: gdb.base/dfp-test.exp: p d32=1.E-101df
PASS: gdb.base/dfp-test.exp: p d32=0.000001E-95df
PASS: gdb.base/dfp-test.exp: 1.2345678 is rounded to 1.234568
PASS: gdb.base/dfp-test.exp: 1.0E-101 is rounded to 1E-101
PASS: gdb.base/dfp-test.exp: 1.234567E+97 is Infinity
PASS: gdb.base/dfp-test.exp: 12345. is a valid number
PASS: gdb.base/dfp-test.exp: 12345 is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E45A is an invalid number
PASS: gdb.base/dfp-test.exp: next after initializing d64
PASS: gdb.base/dfp-test.exp: d64 is initialized to 1.2345
PASS: gdb.base/dfp-test.exp: next after assigning builtin infinity to d64
PASS: gdb.base/dfp-test.exp: d64 is positive Infinity
PASS: gdb.base/dfp-test.exp: next after assigning negative builtin infinity to d64
PASS: gdb.base/dfp-test.exp: d64 is negative Infinity
PASS: gdb.base/dfp-test.exp: next after assigning builtin NaN to d64
PASS: gdb.base/dfp-test.exp: d64 is NaN
PASS: gdb.base/dfp-test.exp: p d64=123.45dd
PASS: gdb.base/dfp-test.exp: p d64=12345.dd
PASS: gdb.base/dfp-test.exp: p d64=12345.67dd
PASS: gdb.base/dfp-test.exp: p d64=1.234567890123456dd
PASS: gdb.base/dfp-test.exp: p d64=1.234567890123456E10dd
PASS: gdb.base/dfp-test.exp: p d64=1.234567890123456E100dd
PASS: gdb.base/dfp-test.exp: p d64=1.234567890123456E384dd
PASS: gdb.base/dfp-test.exp: p d64=9.999999999999999E384dd
PASS: gdb.base/dfp-test.exp: p d64=1.E-383dd
PASS: gdb.base/dfp-test.exp: p d64=1.E-398dd
PASS: gdb.base/dfp-test.exp: p d64=0.000000000000001E-383dd
PASS: gdb.base/dfp-test.exp: 1.2345678901234567 is rounded to 1.234567890123457
PASS: gdb.base/dfp-test.exp: d64=9.9999999999999999E384 is Infinity
PASS: gdb.base/dfp-test.exp: d64=1.234567890123456E385 is Infinity
PASS: gdb.base/dfp-test.exp: 12345dd is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E45A is an invalid number
PASS: gdb.base/dfp-test.exp: next after initializing d128
PASS: gdb.base/dfp-test.exp: d128 is initialized to 1.2345
PASS: gdb.base/dfp-test.exp: p d128=123.45dl
PASS: gdb.base/dfp-test.exp: p d128=12345.dl
PASS: gdb.base/dfp-test.exp: p d128=12345.67dl
PASS: gdb.base/dfp-test.exp: p d128=1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-test.exp: p d128=1.234567890123456E10dl
PASS: gdb.base/dfp-test.exp: p d128=1.234567890123456E100dl
PASS: gdb.base/dfp-test.exp: p d128=1.234567890123456E1000dl
PASS: gdb.base/dfp-test.exp: p d128=9.999999999999999999999999999999999E6144dl
PASS: gdb.base/dfp-test.exp: p d128=1.E-6143dl
PASS: gdb.base/dfp-test.exp: p d128=1.E-6176dl
PASS: gdb.base/dfp-test.exp: p d128=0.000000000000000000000000000000001E-6143dl
PASS: gdb.base/dfp-test.exp: 1.2345678901234567890123456789012345 is rounded to 1.234567890123456789012345678901234
PASS: gdb.base/dfp-test.exp: d128=1.234567890123456E6145 is Infinity
PASS: gdb.base/dfp-test.exp: 12345dl is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E45A is an invalid number
PASS: gdb.base/dfp-test.exp: next after assigning builtin infinity to d128
PASS: gdb.base/dfp-test.exp: d128 is positive Infinity
PASS: gdb.base/dfp-test.exp: next after assigning negative builtin infinity to d128
PASS: gdb.base/dfp-test.exp: d128 is negative Infinity
PASS: gdb.base/dfp-test.exp: next after assigning builtin NaN to d128
PASS: gdb.base/dfp-test.exp: d128 is NaN
PASS: gdb.base/dfp-test.exp: continue to breakpoint: entry to arg0_32
PASS: gdb.base/dfp-test.exp: backtrace at arg0_32
PASS: gdb.base/dfp-test.exp: continue to breakpoint: entry to arg0_64
PASS: gdb.base/dfp-test.exp: backtrace at arg0_64
PASS: gdb.base/dfp-test.exp: continue to breakpoint: entry to arg0_128
PASS: gdb.base/dfp-test.exp: backtrace at arg0_128
PASS: gdb.base/dfp-test.exp: Call function with correct _Decimal32 arguments.
PASS: gdb.base/dfp-test.exp: Backtrace function with correct _Decimal32 arguments.
PASS: gdb.base/dfp-test.exp: Correct _Decimal32 return value from called function.
PASS: gdb.base/dfp-test.exp: Call function with correct _Decimal64 arguments.
PASS: gdb.base/dfp-test.exp: Backtrace function with correct _Decimal64 arguments.
PASS: gdb.base/dfp-test.exp: Correct _Decimal64 return value from called function.
PASS: gdb.base/dfp-test.exp: Call function with correct _Decimal128 arguments.
PASS: gdb.base/dfp-test.exp: Backtrace function with correct _Decimal128 arguments.
PASS: gdb.base/dfp-test.exp: Correct _Decimal128 return value from called function.
PASS: gdb.base/dfp-test.exp: Call function with mixed decimal float arguments TEST.
PASS: gdb.base/dfp-test.exp: Call function with mixed decimal float arguments.
PASS: gdb.base/dfp-test.exp: Call function with many _Decimal32 arguments.
PASS: gdb.base/dfp-test.exp: Call function with many _Decimal64 arguments.
PASS: gdb.base/dfp-test.exp: Call function with many _Decimal128 arguments.
PASS: gdb.base/dfp-test.exp: Call function with many mixed decimal float arguments.
PASS: gdb.base/dfp-test.exp: continue to breakpoint: Setting a decimal struct
PASS: gdb.base/dfp-test.exp: print ds.dec32
PASS: gdb.base/dfp-test.exp: print ds.dec64
PASS: gdb.base/dfp-test.exp: print ds.dec128
PASS: gdb.base/dfp-test.exp: print d32 + ds.dec32
PASS: gdb.base/dfp-test.exp: print d64 + ds.dec64
PASS: gdb.base/dfp-test.exp: print d128 + ds.dec128
PASS: gdb.base/dfp-test.exp: ptype d64 + ds.dec32
PASS: gdb.base/dfp-test.exp: ptype d128 + ds.dec32
PASS: gdb.base/dfp-test.exp: ptype d128 + ds.dec64
PASS: gdb.base/dfp-test.exp: p d32 + 1
PASS: gdb.base/dfp-test.exp: p 2 + d64
PASS: gdb.base/dfp-test.exp: p ds.int4 + d128
PASS: gdb.base/dfp-test.exp: ptype d32 + 1
PASS: gdb.base/dfp-test.exp: ptype ds.int4 + d128
PASS: gdb.base/dfp-test.exp: p !d32
PASS: gdb.base/dfp-test.exp: p !d64
PASS: gdb.base/dfp-test.exp: p !d128
PASS: gdb.base/dfp-test.exp: p +d32
PASS: gdb.base/dfp-test.exp: p +d64
PASS: gdb.base/dfp-test.exp: p +d128
PASS: gdb.base/dfp-test.exp: p d64 == d128
PASS: gdb.base/dfp-test.exp: p d128 == ds.dec32
PASS: gdb.base/dfp-test.exp: p d128 == d32
PASS: gdb.base/dfp-test.exp: p ds.dec32 == ds.dec64
PASS: gdb.base/dfp-test.exp: p d32 < ds.dec32
PASS: gdb.base/dfp-test.exp: p d64 < ds.dec64
PASS: gdb.base/dfp-test.exp: p d128 < ds.dec128
PASS: gdb.base/dfp-test.exp: p ds.dec32 < d32
PASS: gdb.base/dfp-test.exp: p d64 > ds.dec64
PASS: gdb.base/dfp-test.exp: p ds.dec128 > d128
PASS: gdb.base/dfp-test.exp: p d32 < ds.int4
PASS: gdb.base/dfp-test.exp: p ds.int4 > d32
PASS: gdb.base/dfp-test.exp: p ds.dec32 < ds.int4
PASS: gdb.base/dfp-test.exp: p ds.int4 > ds.dec64
PASS: gdb.base/dfp-test.exp: p ds.dec128 > ds.int4
PASS: gdb.base/dfp-test.exp: p d64 + ds.float4
PASS: gdb.base/dfp-test.exp: p ds.double8 + d128
PASS: gdb.base/dfp-test.exp: print ds.dec32=d32
PASS: gdb.base/dfp-test.exp: print ds.dec64=d64
PASS: gdb.base/dfp-test.exp: print ds.dec128=d128
PASS: gdb.base/dfp-test.exp: print ds.dec32 = -d32
PASS: gdb.base/dfp-test.exp: print ds.dec64 = -d64
PASS: gdb.base/dfp-test.exp: print ds.dec128 = -d128
PASS: gdb.base/dfp-test.exp: print ds.double8 = ds.dec64
PASS: gdb.base/dfp-test.exp: print ds.dec64 = ds.float4
PASS: gdb.base/dfp-test.exp: print ds.dec128 = -ds.double8
PASS: gdb.base/dfp-test.exp: print ds.dec128 = ds.dec32
PASS: gdb.base/dfp-test.exp: print ds.dec32 = ds.int4
PASS: gdb.base/dfp-test.exp: print ds.int4 = 7.3dl
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gcore-buffer-overflow.exp ...
PASS: gdb.base/gcore-buffer-overflow.exp: help gcore
PASS: gdb.base/gcore-buffer-overflow.exp: Set buffer exceeding arguments
PASS: gdb.base/gcore-buffer-overflow.exp: save a corefile
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/fileio.exp ...
PASS: gdb.base/fileio.exp: set print sevenbit-strings
PASS: gdb.base/fileio.exp: set print address off
PASS: gdb.base/fileio.exp: set width 0
PASS: gdb.base/fileio.exp: break stop
PASS: gdb.base/fileio.exp: Open a file
PASS: gdb.base/fileio.exp: Creating already existing file returns EEXIST
PASS: gdb.base/fileio.exp: Open directory for writing returns EISDIR
PASS: gdb.base/fileio.exp: Opening nonexistant file returns ENOENT
PASS: gdb.base/fileio.exp: Open for write but no write permission returns EACCES
PASS: gdb.base/fileio.exp: Writing to a file
PASS: gdb.base/fileio.exp: Write using invalid file descriptor returns EBADF
PASS: gdb.base/fileio.exp: Writing to a read-only file returns EBADF
PASS: gdb.base/fileio.exp: Reading from a file
PASS: gdb.base/fileio.exp: Read using invalid file descriptor returns EBADF
PASS: gdb.base/fileio.exp: Lseeking CUR a file
PASS: gdb.base/fileio.exp: Lseeking END a file
PASS: gdb.base/fileio.exp: Lseeking SET a file
PASS: gdb.base/fileio.exp: Closing a file
PASS: gdb.base/fileio.exp: Closing an invalid file descriptor returns EBADF
PASS: gdb.base/fileio.exp: Stat a file
PASS: gdb.base/fileio.exp: Stat a NULL pathname returns ENOENT or EFAULT
PASS: gdb.base/fileio.exp: Stat an empty pathname returns ENOENT
PASS: gdb.base/fileio.exp: Stat a nonexistant file returns ENOENT
PASS: gdb.base/fileio.exp: Fstat an open file
PASS: gdb.base/fileio.exp: Fstat an invalid file descriptor returns EBADF
PASS: gdb.base/fileio.exp: Isatty (stdin)
PASS: gdb.base/fileio.exp: Isatty (stdout)
PASS: gdb.base/fileio.exp: Isatty (stderr)
PASS: gdb.base/fileio.exp: Isatty (invalid fd)
PASS: gdb.base/fileio.exp: Isatty (open file)
PASS: gdb.base/fileio.exp: System says shell is available
PASS: gdb.base/fileio.exp: set remote system-call-allowed 1
PASS: gdb.base/fileio.exp: System(3) call
PASS: gdb.base/fileio.exp: System with invalid command returns 127
PASS: gdb.base/fileio.exp: Rename a file
PASS: gdb.base/fileio.exp: Renaming a file to existing directory returns EISDIR
PASS: gdb.base/fileio.exp: Renaming a directory to a non-empty directory returns ENOTEMPTY or EEXIST
PASS: gdb.base/fileio.exp: Renaming a directory to a subdir of itself returns EINVAL
PASS: gdb.base/fileio.exp: Renaming a nonexistant file returns ENOENT
PASS: gdb.base/fileio.exp: Unlink a file
PASS: gdb.base/fileio.exp: Unlinking a file in a directory w/o write access returns EACCES
PASS: gdb.base/fileio.exp: Unlinking a nonexistant file returns ENOENT
PASS: gdb.base/fileio.exp: Time(2) call returns the same value as in parameter
PASS: gdb.base/fileio.exp: Time(2) returns feasible values
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/enumval.exp ...
PASS: gdb.base/enumval.exp: print e
PASS: gdb.base/enumval.exp: print f
PASS: gdb.base/enumval.exp: print J
PASS: gdb.base/enumval.exp: print K
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/enum_cond.exp ...
PASS: gdb.base/enum_cond.exp: break call_me if param.e == 1
PASS: gdb.base/enum_cond.exp: continue to conditional breakpoint in call_me
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/huge.exp ...
PASS: gdb.base/huge.exp: print a very large data object
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gcore-relro.exp ...
PASS: gdb.base/gcore-relro.exp: help gcore
PASS: gdb.base/gcore-relro.exp: save a corefile
PASS: gdb.base/gcore-relro.exp: re-load generated corefile
PASS: gdb.base/gcore-relro.exp: library got loaded
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/find.exp ...
PASS: gdb.base/find.exp: breakpoint function in file
PASS: gdb.base/find.exp: run until function breakpoint
PASS: gdb.base/find.exp: find string pattern
PASS: gdb.base/find.exp: pattern not found at end of range
PASS: gdb.base/find.exp: pattern found at end of range
PASS: gdb.base/find.exp: max-count
PASS: gdb.base/find.exp: $_
PASS: gdb.base/find.exp: $numfound
PASS: gdb.base/find.exp: size,max-count, /1b
PASS: gdb.base/find.exp: size,max-count, /b1
PASS: gdb.base/find.exp: size,max-count, /b/1
PASS: gdb.base/find.exp: size,max-count, /1/b
PASS: gdb.base/find.exp: find byte pattern with end address
PASS: gdb.base/find.exp: find 16-bit pattern
PASS: gdb.base/find.exp: find 16-bit pattern
PASS: gdb.base/find.exp: find 32-bit pattern
PASS: gdb.base/find.exp: find 32-bit pattern
PASS: gdb.base/find.exp: find 64-bit pattern
PASS: gdb.base/find.exp: find 64-bit pattern
PASS: gdb.base/find.exp: find mixed-sized pattern
PASS: gdb.base/find.exp: search spanning large range
PASS: gdb.base/find.exp: find pattern straddling chunk boundary
PASS: gdb.base/find.exp: find int64_search_buf, +64/8*100, int64_search_buf
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/ctxobj.exp ...
PASS: gdb.base/ctxobj.exp: break in get_version functions
PASS: gdb.base/ctxobj.exp: continue to get_version_1
PASS: gdb.base/ctxobj.exp: print libctxobj1's this_version_num from partial symtab
PASS: gdb.base/ctxobj.exp: print libctxobj1's this_version_num from symtab
PASS: gdb.base/ctxobj.exp: continue to get_version_2
PASS: gdb.base/ctxobj.exp: print libctxobj2's this_version_num from partial symtab
PASS: gdb.base/ctxobj.exp: print libctxobj2's this_version_num from symtab
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/cond-eval-mode.exp ...
PASS: gdb.base/cond-eval-mode.exp: set breakpoint condition-evaluation host
PASS: gdb.base/cond-eval-mode.exp: set breakpoint condition-evaluation auto
UNSUPPORTED: gdb.base/cond-eval-mode.exp: set breakpoint condition-evaluation target
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/eval-skip.exp ...
PASS: gdb.base/eval-skip.exp: set variable x=14
PASS: gdb.base/eval-skip.exp: set variable y=2
PASS: gdb.base/eval-skip.exp: set variable z=2
PASS: gdb.base/eval-skip.exp: set variable w=3
PASS: gdb.base/eval-skip.exp: print value of (0 && (x+y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x-y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x*y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x/y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x%y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x&&y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x||y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x&y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x|y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x^y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x < y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x <= y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>=y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x==y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x!=y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x<<31))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>>31))
PASS: gdb.base/eval-skip.exp: print value of (0 && (!x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (~x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (-x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x++))
PASS: gdb.base/eval-skip.exp: print value of (0 && (++x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x--))
PASS: gdb.base/eval-skip.exp: print value of (0 && (--x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x+=7))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x=y))
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/arrayidx.exp ...
PASS: gdb.base/arrayidx.exp: Set print array-indexes to off
PASS: gdb.base/arrayidx.exp: Print array with array-indexes off
PASS: gdb.base/arrayidx.exp: Set print array-indexes to on
PASS: gdb.base/arrayidx.exp: Print array with array-indexes on
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdb1555.exp ...
PASS: gdb.base/gdb1555.exp: Step into shared lib function
PASS: gdb.base/gdb1555.exp: Next while in a shared lib function
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/del.exp ...
PASS: gdb.base/del.exp: Remove all breakpoints (del)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (del)
PASS: gdb.base/del.exp: Remove last breakpoint (del)
PASS: gdb.base/del.exp: info break after removing break on main (del)
PASS: gdb.base/del.exp: Remove all breakpoints (d)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (d)
PASS: gdb.base/del.exp: Remove last breakpoint (d)
PASS: gdb.base/del.exp: info break after removing break on main (d)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/attach.exp ...
PASS: gdb.base/attach.exp: attach to nonsense is prohibited
PASS: gdb.base/attach.exp: attach to digits-starting nonsense is prohibited
PASS: gdb.base/attach.exp: attach to nonexistent process is prohibited
PASS: gdb.base/attach.exp: set file, before attach1 (re-read)
PASS: gdb.base/attach.exp: attach1, after setting file
PASS: gdb.base/attach.exp: after attach1, print should_exit
PASS: gdb.base/attach.exp: attach1 detach
PASS: gdb.base/attach.exp: attach1, purging symbols after detach
PASS: gdb.base/attach.exp: attach2, with no file
PASS: gdb.base/attach.exp: after attach2, set should_exit
PASS: gdb.base/attach.exp: after attach2, set tbreak postloop
PASS: gdb.base/attach.exp: after attach2, reach tbreak postloop
PASS: gdb.base/attach.exp: continue until exit at after attach2, exit
PASS: gdb.base/attach.exp: set source path
PASS: gdb.base/attach.exp: cd away from process working directory
PASS: gdb.base/attach.exp: before attach3, flush symbols
PASS: gdb.base/attach.exp: before attach3, flush exec
PASS: gdb.base/attach.exp: attach when process' a.out not in cwd
PASS: gdb.base/attach.exp: after attach3, exit
PASS: gdb.base/attach.exp: force switch to gdb64, if necessary
PASS: gdb.base/attach.exp: attach call
PASS: gdb.base/attach.exp: info other register
PASS: gdb.base/attach.exp: p should_exit = 1
PASS: gdb.base/attach.exp: continue until exit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/break.exp ...
PASS: gdb.base/break.exp: Delete all breakpoints when none
PASS: gdb.base/break.exp: breakpoint function
PASS: gdb.base/break.exp: breakpoint quoted function
PASS: gdb.base/break.exp: breakpoint function in file
PASS: gdb.base/break.exp: use `list' to establish default source file
PASS: gdb.base/break.exp: breakpoint line number
PASS: gdb.base/break.exp: breakpoint duplicate
PASS: gdb.base/break.exp: breakpoint line number in file
PASS: gdb.base/break.exp: breakpoint at start of multi line if conditional
PASS: gdb.base/break.exp: breakpoint at start of multi line while conditional
PASS: gdb.base/break.exp: breakpoint info
PASS: gdb.base/break.exp: info break 2 4 6
PASS: gdb.base/break.exp: info break 3-5
PASS: gdb.base/break.exp: disable using history values
PASS: gdb.base/break.exp: check disable with history values
PASS: gdb.base/break.exp: disable with convenience values
PASS: gdb.base/break.exp: check disable with convenience values
PASS: gdb.base/break.exp: disable non-existent breakpoint 10
PASS: gdb.base/break.exp: set $baz 1.234
PASS: gdb.base/break.exp: disable with non-integer convenience var
PASS: gdb.base/break.exp: disable with non-existent convenience var
PASS: gdb.base/break.exp: disable with non-existent history value
PASS: gdb.base/break.exp: disable with badly formed history value
PASS: gdb.base/break.exp: run until function breakpoint
PASS: gdb.base/break.exp: list marker1
PASS: gdb.base/break.exp: break lineno
PASS: gdb.base/break.exp: delete $bpnum
PASS: gdb.base/break.exp: run until breakpoint set at a line number
PASS: gdb.base/break.exp: run until file:function(6) breakpoint
PASS: gdb.base/break.exp: run until file:function(5) breakpoint
PASS: gdb.base/break.exp: run until file:function(4) breakpoint
PASS: gdb.base/break.exp: run until file:function(3) breakpoint
PASS: gdb.base/break.exp: run until file:function(2) breakpoint
PASS: gdb.base/break.exp: run until file:function(1) breakpoint
PASS: gdb.base/break.exp: run until quoted breakpoint
PASS: gdb.base/break.exp: run until file:linenum breakpoint
PASS: gdb.base/break.exp: breakpoint offset +1
PASS: gdb.base/break.exp: step onto breakpoint
PASS: gdb.base/break.exp: setting breakpoint at }
PASS: gdb.base/break.exp: continue to breakpoint at }
PASS: gdb.base/break.exp: Temporary breakpoint function
PASS: gdb.base/break.exp: Temporary breakpoint function in file
PASS: gdb.base/break.exp: Temporary breakpoint line number #1
PASS: gdb.base/break.exp: Temporary breakpoint line number #2
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #1
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #2
PASS: gdb.base/break.exp: Temporary breakpoint info
PASS: gdb.base/break.exp: catch requires an event name
PASS: gdb.base/break.exp: set catch fork, never expected to trigger
PASS: gdb.base/break.exp: set catch vfork, never expected to trigger
PASS: gdb.base/break.exp: set catch exec, never expected to trigger
PASS: gdb.base/break.exp: set breakpoint pending off
PASS: gdb.base/break.exp: break on non-existent source line
PASS: gdb.base/break.exp: until bp_location1
PASS: gdb.base/break.exp: break on default location, 1st time
PASS: gdb.base/break.exp: break on default location, 2nd time
PASS: gdb.base/break.exp: break on default location, 3rd time
PASS: gdb.base/break.exp: break on default location, 4th time
PASS: gdb.base/break.exp: set to-be-silent break bp_location1
PASS: gdb.base/break.exp: set silent break bp_location1
PASS: gdb.base/break.exp: info silent break bp_location1
PASS: gdb.base/break.exp: hit silent break bp_location1
PASS: gdb.base/break.exp: stopped for silent break bp_location1
PASS: gdb.base/break.exp: thread-specific breakpoint on non-existent thread disallowed
PASS: gdb.base/break.exp: thread-specific breakpoint on bogus thread ID disallowed
PASS: gdb.base/break.exp: breakpoint with trailing garbage disallowed
PASS: gdb.base/break.exp: step over breakpoint
PASS: gdb.base/break.exp: clear line has no breakpoint disallowed
PASS: gdb.base/break.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/break.exp: break marker3 #1
PASS: gdb.base/break.exp: break marker3 #2
PASS: gdb.base/break.exp: clear marker3
PASS: gdb.base/break.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/break.exp: set breakpoint via convenience variable
PASS: gdb.base/break.exp: set convenience variable $foo to 81.5
PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/break.exp: set breakpoint on to-be-called function
PASS: gdb.base/break.exp: hit breakpoint on called function
PASS: gdb.base/break.exp: backtrace while in called function
PASS: gdb.base/break.exp: finish from called function
PASS: gdb.base/break.exp: finish with arguments disallowed
PASS: gdb.base/break.exp: finish from outermost frame disallowed
PASS: gdb.base/break.exp: kill program
PASS: gdb.base/break.exp: break at factorial
PASS: gdb.base/break.exp: continue to factorial(5)
PASS: gdb.base/break.exp: backtrace from factorial(5)
PASS: gdb.base/break.exp: next to recursive call
PASS: gdb.base/break.exp: next over recursive call
PASS: gdb.base/break.exp: backtrace from factorial(5.1)
PASS: gdb.base/break.exp: continue until exit at recursive next test
PASS: gdb.base/break.exp: breakpoint function, optimized file
PASS: gdb.base/break.exp: breakpoint small function, optimized file
PASS: gdb.base/break.exp: run until function breakpoint, optimized file (code motion)
PASS: gdb.base/break.exp: run until breakpoint set at small function, optimized file
PASS: gdb.base/break.exp: rbreak junk pending setup
PASS: gdb.base/break.exp: rbreak junk set breakpoint
PASS: gdb.base/break.exp: rbreak junk
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/miscexprs.exp ...
PASS: gdb.base/miscexprs.exp: continue to marker1
PASS: gdb.base/miscexprs.exp: up from marker1
PASS: gdb.base/miscexprs.exp: print value of &ibig.i[0]
PASS: gdb.base/miscexprs.exp: print value of &cbig.c[0]
PASS: gdb.base/miscexprs.exp: print value of &fbig.f[0]
PASS: gdb.base/miscexprs.exp: print value of &dbig.d[0]
PASS: gdb.base/miscexprs.exp: print value of &sbig.s[0]
PASS: gdb.base/miscexprs.exp: print value of &lbig.l[0]
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] | 1
PASS: gdb.base/miscexprs.exp: print value of sbig.s[90] & 127
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !sbig.s[90]
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !sbig.s[90] * 10
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] * sbig.s[90]
PASS: gdb.base/miscexprs.exp: print value of fbig.f[100] * dbig.d[202]
PASS: gdb.base/miscexprs.exp: print value of !(sbig.s[90] * 2)
PASS: gdb.base/miscexprs.exp: print value of sizeof sbig
PASS: gdb.base/miscexprs.exp: print value of sizeof cbig
PASS: gdb.base/miscexprs.exp: print value of sizeof lbig / sizeof long
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] << 2
PASS: gdb.base/miscexprs.exp: print value of sbig.s[90] >> 4
PASS: gdb.base/miscexprs.exp: print value of lbig.l[333] >> 6
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/float.exp ...
PASS: gdb.base/float.exp: info float
PASS: gdb.base/float.exp: step
PASS: gdb.base/float.exp: finish
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/longjmp.exp ...
PASS: gdb.base/longjmp.exp: breakpoint at pattern 1 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 1 start
PASS: gdb.base/longjmp.exp: breakpoint at miss_step_1
PASS: gdb.base/longjmp.exp: next over setjmp (1)
PASS: gdb.base/longjmp.exp: next to longjmp (1)
FAIL: gdb.base/longjmp.exp: next over longjmp(1)
PASS: gdb.base/longjmp.exp: breakpoint at pattern 2 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 2 start
PASS: gdb.base/longjmp.exp: breakpoint at miss_step_2
PASS: gdb.base/longjmp.exp: next over setjmp (2)
FAIL: gdb.base/longjmp.exp: next over call_longjmp (2)
PASS: gdb.base/longjmp.exp: breakpoint at pattern 3 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 3 start
FAIL: gdb.base/longjmp.exp: next over patt3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/code-expr.exp ...
PASS: gdb.base/code-expr.exp: set print sevenbit-strings
PASS: gdb.base/code-expr.exp: set print address off
PASS: gdb.base/code-expr.exp: set width 0
PASS: gdb.base/code-expr.exp: (@code char)
PASS: gdb.base/code-expr.exp: (@code signed char)
PASS: gdb.base/code-expr.exp: (@code unsigned char)
PASS: gdb.base/code-expr.exp: (@code short)
PASS: gdb.base/code-expr.exp: (@code signed short)
PASS: gdb.base/code-expr.exp: (@code unsigned short)
PASS: gdb.base/code-expr.exp: (@code int)
PASS: gdb.base/code-expr.exp: (@code signed int)
PASS: gdb.base/code-expr.exp: (@code unsigned int)
PASS: gdb.base/code-expr.exp: (@code long)
PASS: gdb.base/code-expr.exp: (@code signed long)
PASS: gdb.base/code-expr.exp: (@code unsigned long)
PASS: gdb.base/code-expr.exp: (@code long long)
PASS: gdb.base/code-expr.exp: (@code signed long long)
PASS: gdb.base/code-expr.exp: (@code unsigned long long)
PASS: gdb.base/code-expr.exp: (@code float)
PASS: gdb.base/code-expr.exp: (@code double)
PASS: gdb.base/code-expr.exp: (@data char)
PASS: gdb.base/code-expr.exp: (@data signed char)
PASS: gdb.base/code-expr.exp: (@data unsigned char)
PASS: gdb.base/code-expr.exp: (@data short)
PASS: gdb.base/code-expr.exp: (@data signed short)
PASS: gdb.base/code-expr.exp: (@data unsigned short)
PASS: gdb.base/code-expr.exp: (@data int)
PASS: gdb.base/code-expr.exp: (@data signed int)
PASS: gdb.base/code-expr.exp: (@data unsigned int)
PASS: gdb.base/code-expr.exp: (@data long)
PASS: gdb.base/code-expr.exp: (@data signed long)
PASS: gdb.base/code-expr.exp: (@data unsigned long)
PASS: gdb.base/code-expr.exp: (@data long long)
PASS: gdb.base/code-expr.exp: (@data signed long long)
PASS: gdb.base/code-expr.exp: (@data unsigned long long)
PASS: gdb.base/code-expr.exp: (@data float)
PASS: gdb.base/code-expr.exp: (@data double)
PASS: gdb.base/code-expr.exp: (char @code)
PASS: gdb.base/code-expr.exp: (signed char @code)
PASS: gdb.base/code-expr.exp: (unsigned char @code)
PASS: gdb.base/code-expr.exp: (short @code)
PASS: gdb.base/code-expr.exp: (signed short @code)
PASS: gdb.base/code-expr.exp: (unsigned short @code)
PASS: gdb.base/code-expr.exp: (int @code)
PASS: gdb.base/code-expr.exp: (signed int @code)
PASS: gdb.base/code-expr.exp: (unsigned int @code)
PASS: gdb.base/code-expr.exp: (long @code)
PASS: gdb.base/code-expr.exp: (signed long @code)
PASS: gdb.base/code-expr.exp: (unsigned long @code)
PASS: gdb.base/code-expr.exp: (long long @code)
PASS: gdb.base/code-expr.exp: (signed long long @code)
PASS: gdb.base/code-expr.exp: (unsigned long long @code)
PASS: gdb.base/code-expr.exp: (float @code)
PASS: gdb.base/code-expr.exp: (double @code)
PASS: gdb.base/code-expr.exp: (char @data)
PASS: gdb.base/code-expr.exp: (signed char @data)
PASS: gdb.base/code-expr.exp: (unsigned char @data)
PASS: gdb.base/code-expr.exp: (short @data)
PASS: gdb.base/code-expr.exp: (signed short @data)
PASS: gdb.base/code-expr.exp: (unsigned short @data)
PASS: gdb.base/code-expr.exp: (int @data)
PASS: gdb.base/code-expr.exp: (signed int @data)
PASS: gdb.base/code-expr.exp: (unsigned int @data)
PASS: gdb.base/code-expr.exp: (long @data)
PASS: gdb.base/code-expr.exp: (signed long @data)
PASS: gdb.base/code-expr.exp: (unsigned long @data)
PASS: gdb.base/code-expr.exp: (long long @data)
PASS: gdb.base/code-expr.exp: (signed long long @data)
PASS: gdb.base/code-expr.exp: (unsigned long long @data)
PASS: gdb.base/code-expr.exp: (float @data)
PASS: gdb.base/code-expr.exp: (double @data)
PASS: gdb.base/code-expr.exp: (@code enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @code)
PASS: gdb.base/code-expr.exp: (@data enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @data)
PASS: gdb.base/code-expr.exp: (@code int *)
PASS: gdb.base/code-expr.exp: (int @code *)
PASS: gdb.base/code-expr.exp: (int * @code)
PASS: gdb.base/code-expr.exp: (@code int * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code)
PASS: gdb.base/code-expr.exp: (@code int **)
PASS: gdb.base/code-expr.exp: (int @code **)
PASS: gdb.base/code-expr.exp: (int ** @code)
PASS: gdb.base/code-expr.exp: (@code int * @code *)
PASS: gdb.base/code-expr.exp: (int @code * @code *)
PASS: gdb.base/code-expr.exp: (@code int * @code * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct)
PASS: gdb.base/code-expr.exp: (@code union t_union)
PASS: gdb.base/code-expr.exp: (struct t_struct @code)
PASS: gdb.base/code-expr.exp: (union t_union @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct *)
PASS: gdb.base/code-expr.exp: (@code union t_union *)
PASS: gdb.base/code-expr.exp: (struct t_struct @code *)
PASS: gdb.base/code-expr.exp: (union t_union @code *)
PASS: gdb.base/code-expr.exp: (struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (union t_union * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (@code union t_union * @code)
PASS: gdb.base/code-expr.exp: (struct t_struct @code * @code)
PASS: gdb.base/code-expr.exp: (union t_union @code * @code)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/included.exp ...
PASS: gdb.base/included.exp: set listsize 1
PASS: gdb.base/included.exp: list main
PASS: gdb.base/included.exp: list integer
PASS: gdb.base/included.exp: ptype integer
PASS: gdb.base/included.exp: info variables integer
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gnu-debugdata.exp ...
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke nm
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke awk
PASS: gdb.base/gnu-debugdata.exp: nm -D - invoke sort
PASS: gdb.base/gnu-debugdata.exp: nm - invoke nm
PASS: gdb.base/gnu-debugdata.exp: nm - invoke awk
PASS: gdb.base/gnu-debugdata.exp: nm - invoke sort
PASS: gdb.base/gnu-debugdata.exp: comm
PASS: gdb.base/gnu-debugdata.exp: objcopy 1
PASS: gdb.base/gnu-debugdata.exp: strip
PASS: gdb.base/gnu-debugdata.exp: xz
PASS: gdb.base/gnu-debugdata.exp: objcopy 2
PASS: gdb.base/gnu-debugdata.exp: no symtab
PASS: gdb.base/gnu-debugdata.exp: have symtab
PASS: gdb.base/gnu-debugdata.exp: unload MiniDebugInfo
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/cvexpr.exp ...
PASS: gdb.base/cvexpr.exp: set print sevenbit-strings
PASS: gdb.base/cvexpr.exp: set print address off
PASS: gdb.base/cvexpr.exp: set width 0
PASS: gdb.base/cvexpr.exp: (const char)
PASS: gdb.base/cvexpr.exp: (const signed char)
PASS: gdb.base/cvexpr.exp: (const unsigned char)
PASS: gdb.base/cvexpr.exp: (const short)
PASS: gdb.base/cvexpr.exp: (const signed short)
PASS: gdb.base/cvexpr.exp: (const unsigned short)
PASS: gdb.base/cvexpr.exp: (const int)
PASS: gdb.base/cvexpr.exp: (const signed int)
PASS: gdb.base/cvexpr.exp: (const unsigned int)
PASS: gdb.base/cvexpr.exp: (const long)
PASS: gdb.base/cvexpr.exp: (const signed long)
PASS: gdb.base/cvexpr.exp: (const unsigned long)
PASS: gdb.base/cvexpr.exp: (const long long)
PASS: gdb.base/cvexpr.exp: (const signed long long)
PASS: gdb.base/cvexpr.exp: (const unsigned long long)
PASS: gdb.base/cvexpr.exp: (const float)
PASS: gdb.base/cvexpr.exp: (const double)
PASS: gdb.base/cvexpr.exp: (volatile char)
PASS: gdb.base/cvexpr.exp: (volatile signed char)
PASS: gdb.base/cvexpr.exp: (volatile unsigned char)
PASS: gdb.base/cvexpr.exp: (volatile short)
PASS: gdb.base/cvexpr.exp: (volatile signed short)
PASS: gdb.base/cvexpr.exp: (volatile unsigned short)
PASS: gdb.base/cvexpr.exp: (volatile int)
PASS: gdb.base/cvexpr.exp: (volatile signed int)
PASS: gdb.base/cvexpr.exp: (volatile unsigned int)
PASS: gdb.base/cvexpr.exp: (volatile long)
PASS: gdb.base/cvexpr.exp: (volatile signed long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long)
PASS: gdb.base/cvexpr.exp: (volatile long long)
PASS: gdb.base/cvexpr.exp: (volatile signed long long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long long)
PASS: gdb.base/cvexpr.exp: (volatile float)
PASS: gdb.base/cvexpr.exp: (volatile double)
PASS: gdb.base/cvexpr.exp: (const volatile int)
PASS: gdb.base/cvexpr.exp: (volatile const int)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const)
PASS: gdb.base/cvexpr.exp: (int const volatile)
PASS: gdb.base/cvexpr.exp: (int volatile const)
PASS: gdb.base/cvexpr.exp: (const volatile int *)
PASS: gdb.base/cvexpr.exp: (volatile const int *)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const *)
PASS: gdb.base/cvexpr.exp: (int const volatile *)
PASS: gdb.base/cvexpr.exp: (int volatile const *)
PASS: gdb.base/cvexpr.exp: (int * const volatile)
PASS: gdb.base/cvexpr.exp: (int * volatile const)
PASS: gdb.base/cvexpr.exp: (char const)
PASS: gdb.base/cvexpr.exp: (signed char const)
PASS: gdb.base/cvexpr.exp: (unsigned char const)
PASS: gdb.base/cvexpr.exp: (short const)
PASS: gdb.base/cvexpr.exp: (signed short const)
PASS: gdb.base/cvexpr.exp: (unsigned short const)
PASS: gdb.base/cvexpr.exp: (int const)
PASS: gdb.base/cvexpr.exp: (signed int const)
PASS: gdb.base/cvexpr.exp: (unsigned int const)
PASS: gdb.base/cvexpr.exp: (long const)
PASS: gdb.base/cvexpr.exp: (signed long const)
PASS: gdb.base/cvexpr.exp: (unsigned long const)
PASS: gdb.base/cvexpr.exp: (long long const)
PASS: gdb.base/cvexpr.exp: (signed long long const)
PASS: gdb.base/cvexpr.exp: (unsigned long long const)
PASS: gdb.base/cvexpr.exp: (float const)
PASS: gdb.base/cvexpr.exp: (double const)
PASS: gdb.base/cvexpr.exp: (char volatile)
PASS: gdb.base/cvexpr.exp: (signed char volatile)
PASS: gdb.base/cvexpr.exp: (unsigned char volatile)
PASS: gdb.base/cvexpr.exp: (short volatile)
PASS: gdb.base/cvexpr.exp: (signed short volatile)
PASS: gdb.base/cvexpr.exp: (unsigned short volatile)
PASS: gdb.base/cvexpr.exp: (int volatile)
PASS: gdb.base/cvexpr.exp: (signed int volatile)
PASS: gdb.base/cvexpr.exp: (unsigned int volatile)
PASS: gdb.base/cvexpr.exp: (long volatile)
PASS: gdb.base/cvexpr.exp: (signed long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long volatile)
PASS: gdb.base/cvexpr.exp: (long long volatile)
PASS: gdb.base/cvexpr.exp: (signed long long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long long volatile)
PASS: gdb.base/cvexpr.exp: (float volatile)
PASS: gdb.base/cvexpr.exp: (double volatile)
PASS: gdb.base/cvexpr.exp: (const enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered const)
PASS: gdb.base/cvexpr.exp: (volatile enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered volatile)
PASS: gdb.base/cvexpr.exp: (const int *)
PASS: gdb.base/cvexpr.exp: (int const *)
PASS: gdb.base/cvexpr.exp: (int * const)
PASS: gdb.base/cvexpr.exp: (const int * const)
PASS: gdb.base/cvexpr.exp: (int const * const)
PASS: gdb.base/cvexpr.exp: (const int **)
PASS: gdb.base/cvexpr.exp: (int const **)
PASS: gdb.base/cvexpr.exp: (int ** const)
PASS: gdb.base/cvexpr.exp: (const int * const *)
PASS: gdb.base/cvexpr.exp: (int const * const *)
PASS: gdb.base/cvexpr.exp: (const int * const * const)
PASS: gdb.base/cvexpr.exp: (int const * const * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct)
PASS: gdb.base/cvexpr.exp: (const union t_union)
PASS: gdb.base/cvexpr.exp: (struct t_struct const)
PASS: gdb.base/cvexpr.exp: (union t_union const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct *)
PASS: gdb.base/cvexpr.exp: (const union t_union *)
PASS: gdb.base/cvexpr.exp: (struct t_struct const *)
PASS: gdb.base/cvexpr.exp: (union t_union const *)
PASS: gdb.base/cvexpr.exp: (struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (union t_union * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (const union t_union * const)
PASS: gdb.base/cvexpr.exp: (struct t_struct const * const)
PASS: gdb.base/cvexpr.exp: (union t_union const * const)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/comprdebug.exp ...
PASS: gdb.base/comprdebug.exp: file comprdebug0.o
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/call-ar-st.exp ...
PASS: gdb.base/call-ar-st.exp: set print sevenbit-strings
PASS: gdb.base/call-ar-st.exp: set print address off
PASS: gdb.base/call-ar-st.exp: set width 0
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1209
PASS: gdb.base/call-ar-st.exp: run until breakpoint set at a line
PASS: gdb.base/call-ar-st.exp: print print_double_array(double_array)
PASS: gdb.base/call-ar-st.exp: print print_char_array(char_array)
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1216
PASS: gdb.base/call-ar-st.exp: continue to 1216
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1220
PASS: gdb.base/call-ar-st.exp: continuing to breakpoint 1220
PASS: gdb.base/call-ar-st.exp: step inside print_all_arrays
PASS: gdb.base/call-ar-st.exp: next over print_int_array in print-all_arrays
PASS: gdb.base/call-ar-st.exp: print print_double_array(array_d)
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1236
PASS: gdb.base/call-ar-st.exp: continuing to 1236
PASS: gdb.base/call-ar-st.exp: print sum_array_print(10, *list1, *list2, *list3, *list4)
PASS: gdb.base/call-ar-st.exp: next to 1237
PASS: gdb.base/call-ar-st.exp: print print_array_rep(*list1, *list2, *list3)
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1241
PASS: gdb.base/call-ar-st.exp: continue to 1241
PASS: gdb.base/call-ar-st.exp: set breakpoint in sum_array_print
PASS: gdb.base/call-ar-st.exp: set print frame-arguments all
PASS: gdb.base/call-ar-st.exp: check args of sum_array_print
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1281
PASS: gdb.base/call-ar-st.exp: continue to 1281
PASS: gdb.base/call-ar-st.exp: print print_small_structs
PASS: gdb.base/call-ar-st.exp: print compute_with_small_structs(20)
PASS: gdb.base/call-ar-st.exp: print print_ten_doubles
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1286
PASS: gdb.base/call-ar-st.exp: continue to 1286
PASS: gdb.base/call-ar-st.exp: tbreak in print_long_arg_list after stepping into memcpy
PASS: gdb.base/call-ar-st.exp: step into print_long_arg_list
PASS: gdb.base/call-ar-st.exp: print print_small_structs from print_long_arg_list
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1300
PASS: gdb.base/call-ar-st.exp: continue to 1300
PASS: gdb.base/call-ar-st.exp: step into init_bit_flags_combo
PASS: gdb.base/call-ar-st.exp: print print_bit_flags_combo from init_bit_flags_combo
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1305
PASS: gdb.base/call-ar-st.exp: continue to 1305
PASS: gdb.base/call-ar-st.exp: print print_long_arg_list
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1311
PASS: gdb.base/call-ar-st.exp: continue to 1311
PASS: gdb.base/call-ar-st.exp: print sum_struct_print(10, *struct1, *struct2, *struct3, *struct4)
PASS: gdb.base/call-ar-st.exp: print print_struct_rep(*struct1, *struct2, *struct3)
PASS: gdb.base/call-ar-st.exp: print print_one_large_struct(*list1)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/maint.exp ...
PASS: gdb.base/maint.exp: set height 0
PASS: gdb.base/maint.exp: maint print registers
PASS: gdb.base/maint.exp: maint check-symtabs
PASS: gdb.base/maint.exp: maint space
PASS: gdb.base/maint.exp: maint space 1
PASS: gdb.base/maint.exp: maint time
PASS: gdb.base/maint.exp: maint time 1
PASS: gdb.base/maint.exp: maint time 0
PASS: gdb.base/maint.exp: maint space 0
PASS: gdb.base/maint.exp: maint demangle
PASS: gdb.base/maint.exp: maint demangle main
PASS: gdb.base/maint.exp: maint print statistics
PASS: gdb.base/maint.exp: maint print dummy-frames
PASS: gdb.base/maint.exp: maint print objfiles: header
PASS: gdb.base/maint.exp: maint print objfiles: psymtabs
PASS: gdb.base/maint.exp: maint print objfiles: symtabs
PASS: gdb.base/maint.exp: maint print psymbols w/o args
PASS: gdb.base/maint.exp: maint print psymbols 1
PASS: gdb.base/maint.exp: shell rm -f psymbols_output
PASS: gdb.base/maint.exp: maint print msymbols w/o args
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output
PASS: gdb.base/maint.exp: cd to objdir
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output2
PASS: gdb.base/maint.exp: cd to mydir
PASS: gdb.base/maint.exp: maint print symbols w/o args
PASS: gdb.base/maint.exp: maint print symbols
PASS: gdb.base/maint.exp: shell rm -f symbols_output
PASS: gdb.base/maint.exp: maint print type
PASS: gdb.base/maint.exp: maint info sections
PASS: gdb.base/maint.exp: maint info sections .text
PASS: gdb.base/maint.exp: maint info sections CODE
PASS: gdb.base/maint.exp: maint info sections DATA
PASS: gdb.base/maint.exp: maint info breakpoints
PASS: gdb.base/maint.exp: maint print w/o args
PASS: gdb.base/maint.exp: maint info w/o args
PASS: gdb.base/maint.exp: maint w/o args
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: help maint check-symtabs
PASS: gdb.base/maint.exp: help maint space
PASS: gdb.base/maint.exp: help maint time
PASS: gdb.base/maint.exp: help maint demangle
PASS: gdb.base/maint.exp: help maint dump-me
PASS: gdb.base/maint.exp: help maint internal-error
PASS: gdb.base/maint.exp: help maint internal-warning
PASS: gdb.base/maint.exp: help maint print statistics
PASS: gdb.base/maint.exp: help maint print dummy-frames
PASS: gdb.base/maint.exp: help maint print objfiles
PASS: gdb.base/maint.exp: help maint print psymbols
PASS: gdb.base/maint.exp: help maint print msymbols
PASS: gdb.base/maint.exp: help maint print symbols
PASS: gdb.base/maint.exp: help maint print type
PASS: gdb.base/maint.exp: help maint info sections
PASS: gdb.base/maint.exp: help maint info breakpoints
PASS: gdb.base/maint.exp: help maint info
PASS: gdb.base/maint.exp: help maint print
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: maint dump-me
PASS: gdb.base/maint.exp: maint internal-error
PASS: gdb.base/maint.exp: internal-error resync
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/funcargs.exp ...
PASS: gdb.base/funcargs.exp: set print frame-arguments all
PASS: gdb.base/funcargs.exp: run to call0a
PASS: gdb.base/funcargs.exp: print c after run to call0a
PASS: gdb.base/funcargs.exp: print s after run to call0a
PASS: gdb.base/funcargs.exp: print i after run to call0a
PASS: gdb.base/funcargs.exp: print l after run to call0a
PASS: gdb.base/funcargs.exp: continue to call0b
PASS: gdb.base/funcargs.exp: continue to call0c
PASS: gdb.base/funcargs.exp: continue to call0d
PASS: gdb.base/funcargs.exp: continue to call0e
PASS: gdb.base/funcargs.exp: run to call1a
PASS: gdb.base/funcargs.exp: print uc
PASS: gdb.base/funcargs.exp: print us
PASS: gdb.base/funcargs.exp: print ui
PASS: gdb.base/funcargs.exp: print ul
PASS: gdb.base/funcargs.exp: continue to call1b
PASS: gdb.base/funcargs.exp: continue to call1c
PASS: gdb.base/funcargs.exp: continue to call1d
PASS: gdb.base/funcargs.exp: continue to call1e
PASS: gdb.base/funcargs.exp: run to call2a
PASS: gdb.base/funcargs.exp: print c after run to call2a
PASS: gdb.base/funcargs.exp: print f1 after run to call2a
PASS: gdb.base/funcargs.exp: print s after run to call2a
PASS: gdb.base/funcargs.exp: print d1 after run to call2a
PASS: gdb.base/funcargs.exp: print i after run to call2a
PASS: gdb.base/funcargs.exp: print f2 after run to call2a
PASS: gdb.base/funcargs.exp: print l after run to call2a
PASS: gdb.base/funcargs.exp: print d2 after run to call2a
PASS: gdb.base/funcargs.exp: continue to call2b
PASS: gdb.base/funcargs.exp: continue to call2c
PASS: gdb.base/funcargs.exp: continue to call2d
PASS: gdb.base/funcargs.exp: continue to call2e
PASS: gdb.base/funcargs.exp: continue to call2f
PASS: gdb.base/funcargs.exp: continue to call2g
PASS: gdb.base/funcargs.exp: continue to call2h
PASS: gdb.base/funcargs.exp: continue to call2i
PASS: gdb.base/funcargs.exp: run to call2a
PASS: gdb.base/funcargs.exp: continue to callcb
PASS: gdb.base/funcargs.exp: continue to callcc
PASS: gdb.base/funcargs.exp: continue to callcd
PASS: gdb.base/funcargs.exp: continue to callce
PASS: gdb.base/funcargs.exp: continue to callcf
PASS: gdb.base/funcargs.exp: run to callc1a
PASS: gdb.base/funcargs.exp: continue to callc1b
PASS: gdb.base/funcargs.exp: run to callc2a
PASS: gdb.base/funcargs.exp: continue to callc2b
PASS: gdb.base/funcargs.exp: run to call3a
PASS: gdb.base/funcargs.exp: print *cp
PASS: gdb.base/funcargs.exp: print *sp
PASS: gdb.base/funcargs.exp: print *ip
PASS: gdb.base/funcargs.exp: print *lp
PASS: gdb.base/funcargs.exp: continue to call3b
PASS: gdb.base/funcargs.exp: print *ucp
PASS: gdb.base/funcargs.exp: print *usp
PASS: gdb.base/funcargs.exp: print *uip
PASS: gdb.base/funcargs.exp: print *ulp
PASS: gdb.base/funcargs.exp: continue to call3c
PASS: gdb.base/funcargs.exp: print *fp
PASS: gdb.base/funcargs.exp: print *dp
PASS: gdb.base/funcargs.exp: run to call4a
PASS: gdb.base/funcargs.exp: print *stp
PASS: gdb.base/funcargs.exp: continue to call4b
PASS: gdb.base/funcargs.exp: print *unp (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: locate actual args, structs/unions passed by reference
PASS: gdb.base/funcargs.exp: run to call5a
PASS: gdb.base/funcargs.exp: print st
PASS: gdb.base/funcargs.exp: continue to call5b (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: print un (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: run to call6a
PASS: gdb.base/funcargs.exp: backtrace from call6a
PASS: gdb.base/funcargs.exp: continue to call6b
PASS: gdb.base/funcargs.exp: backtrace from call6b
PASS: gdb.base/funcargs.exp: continue to call6c
PASS: gdb.base/funcargs.exp: backtrace from call6c
PASS: gdb.base/funcargs.exp: continue to call6d
PASS: gdb.base/funcargs.exp: backtrace from call6d
PASS: gdb.base/funcargs.exp: continue to call6e
PASS: gdb.base/funcargs.exp: backtrace from call6e
PASS: gdb.base/funcargs.exp: continue to call6f
PASS: gdb.base/funcargs.exp: backtrace from call6f
PASS: gdb.base/funcargs.exp: continue to call6g
PASS: gdb.base/funcargs.exp: backtrace from call6g
PASS: gdb.base/funcargs.exp: continue to call6h
PASS: gdb.base/funcargs.exp: backtrace from call6h
PASS: gdb.base/funcargs.exp: continue to call6i
PASS: gdb.base/funcargs.exp: backtrace from call6i
PASS: gdb.base/funcargs.exp: continue to call6j
PASS: gdb.base/funcargs.exp: backtrace from call6j
PASS: gdb.base/funcargs.exp: continue to call6k
PASS: gdb.base/funcargs.exp: backtrace from call6k
PASS: gdb.base/funcargs.exp: run to call7a
PASS: gdb.base/funcargs.exp: backtrace from call7a
PASS: gdb.base/funcargs.exp: continue to call7b
PASS: gdb.base/funcargs.exp: backtrace from call7b
PASS: gdb.base/funcargs.exp: continue to call7c
PASS: gdb.base/funcargs.exp: backtrace from call7c
PASS: gdb.base/funcargs.exp: continue to call7d
PASS: gdb.base/funcargs.exp: backtrace from call7d
PASS: gdb.base/funcargs.exp: continue to call7e
PASS: gdb.base/funcargs.exp: backtrace from call7e
PASS: gdb.base/funcargs.exp: continue to call7f
PASS: gdb.base/funcargs.exp: backtrace from call7f
PASS: gdb.base/funcargs.exp: continue to call7g
PASS: gdb.base/funcargs.exp: backtrace from call7g
PASS: gdb.base/funcargs.exp: continue to call7h
PASS: gdb.base/funcargs.exp: backtrace from call7h
PASS: gdb.base/funcargs.exp: continue to call7i
PASS: gdb.base/funcargs.exp: backtrace from call7i
PASS: gdb.base/funcargs.exp: continue to call7j
PASS: gdb.base/funcargs.exp: backtrace from call7j
PASS: gdb.base/funcargs.exp: continue to call7k
PASS: gdb.base/funcargs.exp: backtrace from call7k
PASS: gdb.base/funcargs.exp: run to hitbottom
PASS: gdb.base/funcargs.exp: recursive passing of structs by value
PASS: gdb.base/funcargs.exp: print c after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print s after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print i after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print l after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: next in localvars_after_alloca()
PASS: gdb.base/funcargs.exp: print c in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print s in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print i in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print l in localvars_after_alloca
PASS: gdb.base/funcargs.exp: backtrace after alloca
PASS: gdb.base/funcargs.exp: print c in call_after_alloca
PASS: gdb.base/funcargs.exp: print s in call_after_alloca
PASS: gdb.base/funcargs.exp: print i in call_after_alloca
PASS: gdb.base/funcargs.exp: print l in call_after_alloca
PASS: gdb.base/funcargs.exp: backtrace from call_after_alloca_subr
PASS: gdb.base/funcargs.exp: continue to call0a
PASS: gdb.base/funcargs.exp: print c in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print s in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print i in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print l in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: backtrace in indirectly called function
PASS: gdb.base/funcargs.exp: finish from indirectly called function
PASS: gdb.base/funcargs.exp: stepping into indirectly called function
PASS: gdb.base/funcargs.exp: finish from marker_call_with_trampolines
PASS: gdb.base/funcargs.exp: stepping into function called with trampolines
PASS: gdb.base/funcargs.exp: backtrace through call with trampolines
PASS: gdb.base/funcargs.exp: stepping back to main from function called with trampolines
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/chng-syms.exp ...
PASS: gdb.base/chng-syms.exp: setting conditional breakpoint on function
PASS: gdb.base/chng-syms.exp: continue until exit at breakpoint first time through
PASS: gdb.base/chng-syms.exp: running with invalidated bpt condition after executable changes
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/foll-vfork.exp ...
PASS: gdb.base/foll-vfork.exp: check vfork support: set verbose
PASS: gdb.base/foll-vfork.exp: check vfork support: insert first vfork catchpoint
PASS: gdb.base/foll-vfork.exp: check vfork support: continue to first vfork catchpoint
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, through step: set verbose
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, through step: set follow-fork parent
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, through step: step
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, to bp: set verbose
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, to bp: set follow-fork parent
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, to bp: break, vfork to bp
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, to bp: continue to bp
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, finish after tcatch vfork: set verbose
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, finish after tcatch vfork: set follow-fork parent
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, finish after tcatch vfork: tcatch vfork
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, finish after tcatch vfork: continue to vfork
PASS: gdb.base/foll-vfork.exp: exec: vfork parent follow, finish after tcatch vfork: finish
PASS: gdb.base/foll-vfork.exp: exec: vfork and exec child follow, to main bp: set verbose
PASS: gdb.base/foll-vfork.exp: exec: vfork and exec child follow, to main bp: set follow-fork child
PASS: gdb.base/foll-vfork.exp: exec: vfork and exec child follow, to main bp: continue to bp
PASS: gdb.base/foll-vfork.exp: exec: vfork and exec child follow, through step: set verbose
PASS: gdb.base/foll-vfork.exp: exec: vfork and exec child follow, through step: set follow-fork child
PASS: gdb.base/foll-vfork.exp: exec: vfork and exec child follow, through step: step over vfork
PASS: gdb.base/foll-vfork.exp: exec: vfork child follow, finish after tcatch vfork: set verbose
PASS: gdb.base/foll-vfork.exp: exec: vfork child follow, finish after tcatch vfork: set follow-fork child
PASS: gdb.base/foll-vfork.exp: exec: vfork child follow, finish after tcatch vfork: tcatch vfork
PASS: gdb.base/foll-vfork.exp: exec: vfork child follow, finish after tcatch vfork: continue to vfork
PASS: gdb.base/foll-vfork.exp: exec: vfork child follow, finish after tcatch vfork: finish (followed exec)
PASS: gdb.base/foll-vfork.exp: exec: vfork relations in info inferiors: set verbose
PASS: gdb.base/foll-vfork.exp: exec: vfork relations in info inferiors: set follow-fork child
PASS: gdb.base/foll-vfork.exp: exec: vfork relations in info inferiors: step over vfork
PASS: gdb.base/foll-vfork.exp: exec: vfork relations in info inferiors: info inferiors shows vfork parent/child relation
PASS: gdb.base/foll-vfork.exp: exec: vfork relations in info inferiors: continue to bp
PASS: gdb.base/foll-vfork.exp: exec: vfork relations in info inferiors: vfork relation no longer appears in info inferiors
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, through step: set verbose
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, through step: set follow-fork parent
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, through step: step
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, to bp: set verbose
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, to bp: set follow-fork parent
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, to bp: break, vfork to bp
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, to bp: continue to bp
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, finish after tcatch vfork: set verbose
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, finish after tcatch vfork: set follow-fork parent
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, finish after tcatch vfork: tcatch vfork
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, finish after tcatch vfork: continue to vfork
PASS: gdb.base/foll-vfork.exp: exit: vfork parent follow, finish after tcatch vfork: finish
PASS: gdb.base/foll-vfork.exp: exit: vfork child follow, to exit: set verbose
PASS: gdb.base/foll-vfork.exp: exit: vfork child follow, to exit: set follow-fork child
PASS: gdb.base/foll-vfork.exp: exit: vfork child follow, to exit: continue to child exit
PASS: gdb.base/foll-vfork.exp: exit: vfork child follow, finish after tcatch vfork: set verbose
PASS: gdb.base/foll-vfork.exp: exit: vfork child follow, finish after tcatch vfork: set follow-fork child
PASS: gdb.base/foll-vfork.exp: exit: vfork child follow, finish after tcatch vfork: tcatch vfork
PASS: gdb.base/foll-vfork.exp: exit: vfork child follow, finish after tcatch vfork: continue to vfork
KFAIL: gdb.base/foll-vfork.exp: exit: vfork child follow, finish after tcatch vfork: finish (PRMS: gdb/14762)
PASS: gdb.base/foll-vfork.exp: exit: vfork relations in info inferiors: set verbose
PASS: gdb.base/foll-vfork.exp: exit: vfork relations in info inferiors: set follow-fork child
PASS: gdb.base/foll-vfork.exp: exit: vfork relations in info inferiors: step over vfork
PASS: gdb.base/foll-vfork.exp: exit: vfork relations in info inferiors: info inferiors shows vfork parent/child relation
PASS: gdb.base/foll-vfork.exp: exit: vfork relations in info inferiors: continue to child exit
PASS: gdb.base/foll-vfork.exp: exit: vfork relations in info inferiors: vfork relation no longer appears in info inferiors
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/cursal.exp ...
PASS: gdb.base/cursal.exp: set listsize 1
PASS: gdb.base/cursal.exp: list before run
PASS: gdb.base/cursal.exp: list in main
PASS: gdb.base/cursal.exp: list in func2
PASS: gdb.base/cursal.exp: backtrace
PASS: gdb.base/cursal.exp: list after backtrace
PASS: gdb.base/cursal.exp: set listsize 3
PASS: gdb.base/cursal.exp: list size 3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/charset.exp ...
PASS: gdb.base/charset.exp: show charset
PASS: gdb.base/charset.exp: show target-charset
PASS: gdb.base/charset.exp: check `show target-charset' against `show charset'
PASS: gdb.base/charset.exp: show host-charset
PASS: gdb.base/charset.exp: check `show host-charset' against `show charset'
PASS: gdb.base/charset.exp: try malformed `set charset'
PASS: gdb.base/charset.exp: try `set host-charset' with invalid charset
PASS: gdb.base/charset.exp: try `set target-charset' with invalid charset
PASS: gdb.base/charset.exp: capture valid host charsets
PASS: gdb.base/charset.exp: capture valid target charsets
PASS: gdb.base/charset.exp: try `set host-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set host-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set host-charset IBM1047'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: set breakpoint after all strings have been initialized
PASS: gdb.base/charset.exp: run until all strings have been initialized
PASS: gdb.base/charset.exp: get integer valueof "sizeof (wchar_t)" (4)
PASS: gdb.base/charset.exp: set host-charset ASCII
PASS: gdb.base/charset.exp: set target-charset ASCII
PASS: gdb.base/charset.exp: print the null character in ASCII
PASS: gdb.base/charset.exp: print string in ASCII
PASS: gdb.base/charset.exp: parse character literal in ASCII
PASS: gdb.base/charset.exp: check value of parsed character literal in ASCII
PASS: gdb.base/charset.exp: parse string literal in ASCII
PASS: gdb.base/charset.exp: check value of parsed string literal in ASCII
PASS: gdb.base/charset.exp: try printing '\a' in ASCII
PASS: gdb.base/charset.exp: check value of '\a' in ASCII
PASS: gdb.base/charset.exp: check value of "\a" in ASCII
PASS: gdb.base/charset.exp: try printing '\b' in ASCII
PASS: gdb.base/charset.exp: check value of '\b' in ASCII
PASS: gdb.base/charset.exp: check value of "\b" in ASCII
PASS: gdb.base/charset.exp: try printing '\f' in ASCII
PASS: gdb.base/charset.exp: check value of '\f' in ASCII
PASS: gdb.base/charset.exp: check value of "\f" in ASCII
PASS: gdb.base/charset.exp: try printing '\n' in ASCII
PASS: gdb.base/charset.exp: check value of '\n' in ASCII
PASS: gdb.base/charset.exp: check value of "\n" in ASCII
PASS: gdb.base/charset.exp: try printing '\r' in ASCII
PASS: gdb.base/charset.exp: check value of '\r' in ASCII
PASS: gdb.base/charset.exp: check value of "\r" in ASCII
PASS: gdb.base/charset.exp: try printing '\t' in ASCII
PASS: gdb.base/charset.exp: check value of '\t' in ASCII
PASS: gdb.base/charset.exp: check value of "\t" in ASCII
PASS: gdb.base/charset.exp: try printing '\v' in ASCII
PASS: gdb.base/charset.exp: check value of '\v' in ASCII
PASS: gdb.base/charset.exp: check value of "\v" in ASCII
PASS: gdb.base/charset.exp: print escape that doesn't exist in ASCII
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in ASCII
PASS: gdb.base/charset.exp: set target-charset ISO-8859-1
PASS: gdb.base/charset.exp: print the null character in ISO-8859-1
PASS: gdb.base/charset.exp: print string in ISO-8859-1
PASS: gdb.base/charset.exp: parse character literal in ISO-8859-1
PASS: gdb.base/charset.exp: check value of parsed character literal in ISO-8859-1
PASS: gdb.base/charset.exp: parse string literal in ISO-8859-1
PASS: gdb.base/charset.exp: check value of parsed string literal in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\a' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\a' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\a" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\b' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\b' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\b" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\f' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\f' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\f" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\n' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\n' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\n" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\r' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\r' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\r" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\t' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\t' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\t" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\v' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\v' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\v" in ISO-8859-1
PASS: gdb.base/charset.exp: print escape that doesn't exist in ISO-8859-1
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in ISO-8859-1
PASS: gdb.base/charset.exp: set target-charset EBCDIC-US
PASS: gdb.base/charset.exp: print the null character in EBCDIC-US
PASS: gdb.base/charset.exp: print string in EBCDIC-US
PASS: gdb.base/charset.exp: parse character literal in EBCDIC-US
PASS: gdb.base/charset.exp: check value of parsed character literal in EBCDIC-US
PASS: gdb.base/charset.exp: parse string literal in EBCDIC-US
PASS: gdb.base/charset.exp: check value of parsed string literal in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\a' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\a' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\a" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\b' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\b' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\b" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\f' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\f' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\f" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\n' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\n' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\n" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\r' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\r' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\r" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\t' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\t' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\t" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\v' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\v' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\v" in EBCDIC-US
PASS: gdb.base/charset.exp: print escape that doesn't exist in EBCDIC-US
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in EBCDIC-US
PASS: gdb.base/charset.exp: set target-charset IBM1047
PASS: gdb.base/charset.exp: print the null character in IBM1047
PASS: gdb.base/charset.exp: print string in IBM1047
PASS: gdb.base/charset.exp: parse character literal in IBM1047
PASS: gdb.base/charset.exp: check value of parsed character literal in IBM1047
PASS: gdb.base/charset.exp: parse string literal in IBM1047
PASS: gdb.base/charset.exp: check value of parsed string literal in IBM1047
PASS: gdb.base/charset.exp: try printing '\a' in IBM1047
PASS: gdb.base/charset.exp: check value of '\a' in IBM1047
PASS: gdb.base/charset.exp: check value of "\a" in IBM1047
PASS: gdb.base/charset.exp: try printing '\b' in IBM1047
PASS: gdb.base/charset.exp: check value of '\b' in IBM1047
PASS: gdb.base/charset.exp: check value of "\b" in IBM1047
PASS: gdb.base/charset.exp: try printing '\f' in IBM1047
PASS: gdb.base/charset.exp: check value of '\f' in IBM1047
PASS: gdb.base/charset.exp: check value of "\f" in IBM1047
PASS: gdb.base/charset.exp: try printing '\n' in IBM1047
PASS: gdb.base/charset.exp: check value of '\n' in IBM1047
PASS: gdb.base/charset.exp: check value of "\n" in IBM1047
PASS: gdb.base/charset.exp: try printing '\r' in IBM1047
PASS: gdb.base/charset.exp: check value of '\r' in IBM1047
PASS: gdb.base/charset.exp: check value of "\r" in IBM1047
PASS: gdb.base/charset.exp: try printing '\t' in IBM1047
PASS: gdb.base/charset.exp: check value of '\t' in IBM1047
PASS: gdb.base/charset.exp: check value of "\t" in IBM1047
PASS: gdb.base/charset.exp: try printing '\v' in IBM1047
PASS: gdb.base/charset.exp: check value of '\v' in IBM1047
PASS: gdb.base/charset.exp: check value of "\v" in IBM1047
PASS: gdb.base/charset.exp: print escape that doesn't exist in IBM1047
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in IBM1047
PASS: gdb.base/charset.exp: set target-wide-charset UTF-32
PASS: gdb.base/charset.exp: print the null character in UTF-32
PASS: gdb.base/charset.exp: print string in UTF-32
PASS: gdb.base/charset.exp: parse character literal in UTF-32
PASS: gdb.base/charset.exp: check value of parsed character literal in UTF-32
PASS: gdb.base/charset.exp: parse string literal in UTF-32
PASS: gdb.base/charset.exp: check value of parsed string literal in UTF-32
PASS: gdb.base/charset.exp: try printing '\a' in UTF-32
PASS: gdb.base/charset.exp: check value of '\a' in UTF-32
PASS: gdb.base/charset.exp: check value of "\a" in UTF-32
PASS: gdb.base/charset.exp: try printing '\b' in UTF-32
PASS: gdb.base/charset.exp: check value of '\b' in UTF-32
PASS: gdb.base/charset.exp: check value of "\b" in UTF-32
PASS: gdb.base/charset.exp: try printing '\f' in UTF-32
PASS: gdb.base/charset.exp: check value of '\f' in UTF-32
PASS: gdb.base/charset.exp: check value of "\f" in UTF-32
PASS: gdb.base/charset.exp: try printing '\n' in UTF-32
PASS: gdb.base/charset.exp: check value of '\n' in UTF-32
PASS: gdb.base/charset.exp: check value of "\n" in UTF-32
PASS: gdb.base/charset.exp: try printing '\r' in UTF-32
PASS: gdb.base/charset.exp: check value of '\r' in UTF-32
PASS: gdb.base/charset.exp: check value of "\r" in UTF-32
PASS: gdb.base/charset.exp: try printing '\t' in UTF-32
PASS: gdb.base/charset.exp: check value of '\t' in UTF-32
PASS: gdb.base/charset.exp: check value of "\t" in UTF-32
PASS: gdb.base/charset.exp: try printing '\v' in UTF-32
PASS: gdb.base/charset.exp: check value of '\v' in UTF-32
PASS: gdb.base/charset.exp: check value of "\v" in UTF-32
PASS: gdb.base/charset.exp: print escape that doesn't exist in UTF-32
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in UTF-32
PASS: gdb.base/charset.exp: set target-charset UTF-8
PASS: gdb.base/charset.exp: non-representable target character
PASS: gdb.base/charset.exp: print '\x'
PASS: gdb.base/charset.exp: print '\u'
PASS: gdb.base/charset.exp: print '\9'
PASS: gdb.base/charset.exp: print "\1011"
PASS: gdb.base/charset.exp: basic wide string concatenation
PASS: gdb.base/charset.exp: narrow and wide string concatenation
PASS: gdb.base/charset.exp: wide and narrow string concatenation
PASS: gdb.base/charset.exp: wide string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty wide string
PASS: gdb.base/charset.exp: basic wide character
PASS: gdb.base/charset.exp: get integer valueof "sizeof (char16_t)" (2)
PASS: gdb.base/charset.exp: basic UTF-16 string concatenation
PASS: gdb.base/charset.exp: narrow and UTF-16 string concatenation
PASS: gdb.base/charset.exp: UTF-16 and narrow string concatenation
PASS: gdb.base/charset.exp: UTF-16 string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty UTF-16 string
PASS: gdb.base/charset.exp: basic UTF-16 character
PASS: gdb.base/charset.exp: get integer valueof "sizeof (char32_t)" (4)
PASS: gdb.base/charset.exp: basic UTF-32 string concatenation
PASS: gdb.base/charset.exp: narrow and UTF-32 string concatenation
PASS: gdb.base/charset.exp: UTF-32 and narrow string concatenation
PASS: gdb.base/charset.exp: UTF-32 string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty UTF-32 string
PASS: gdb.base/charset.exp: basic UTF-32 character
PASS: gdb.base/charset.exp: undefined concatenation of wide and UTF-16
PASS: gdb.base/charset.exp: undefined concatenation of wide and UTF-32
PASS: gdb.base/charset.exp: typedef to wchar_t
PASS: gdb.base/charset.exp: undefined concatenation of UTF-16 and UTF-32
PASS: gdb.base/charset.exp: set up for python printing of utf-16 string
PASS: gdb.base/charset.exp: extract utf-16 string using python
PASS: gdb.base/charset.exp: EVAL_SKIP cleanup handling regression test
PASS: gdb.base/charset.exp: Assign String16 with prefix u
PASS: gdb.base/charset.exp: Display String String16 with x/hs
PASS: gdb.base/charset.exp: Assign String32 with prefix U
PASS: gdb.base/charset.exp: Display String String32 with x/ws
PASS: gdb.base/charset.exp: Assign String32 with prefix L
PASS: gdb.base/charset.exp: Display String String32 with x/ws
PASS: gdb.base/charset.exp: assign string to short array
PASS: gdb.base/charset.exp: assign string to int array
PASS: gdb.base/charset.exp: assign string to long array
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/fortran-sym-case.exp ...
PASS: gdb.base/fortran-sym-case.exp: set language fortran
PASS: gdb.base/fortran-sym-case.exp: frame
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/constvars.exp ...
PASS: gdb.base/constvars.exp: break marker1
PASS: gdb.base/constvars.exp: continue to marker1
PASS: gdb.base/constvars.exp: up from marker1
PASS: gdb.base/constvars.exp: ptype qux1
PASS: gdb.base/constvars.exp: print lave
PASS: gdb.base/constvars.exp: ptype lave
PASS: gdb.base/constvars.exp: print lavish
PASS: gdb.base/constvars.exp: ptype lavish
PASS: gdb.base/constvars.exp: print lax
PASS: gdb.base/constvars.exp: ptype lax
PASS: gdb.base/constvars.exp: print lecherous
PASS: gdb.base/constvars.exp: ptype lecherous
PASS: gdb.base/constvars.exp: print lechery
PASS: gdb.base/constvars.exp: ptype lechery
PASS: gdb.base/constvars.exp: print lectern
PASS: gdb.base/constvars.exp: ptype lectern
PASS: gdb.base/constvars.exp: print leeway
PASS: gdb.base/constvars.exp: ptype leeway
PASS: gdb.base/constvars.exp: print legacy
PASS: gdb.base/constvars.exp: ptype legacy
PASS: gdb.base/constvars.exp: print laconic
PASS: gdb.base/constvars.exp: ptype laconic
PASS: gdb.base/constvars.exp: print laggard
PASS: gdb.base/constvars.exp: ptype laggard
PASS: gdb.base/constvars.exp: print lagoon
PASS: gdb.base/constvars.exp: ptype lagoon
PASS: gdb.base/constvars.exp: print laity
PASS: gdb.base/constvars.exp: ptype laity
PASS: gdb.base/constvars.exp: print lambent
PASS: gdb.base/constvars.exp: ptype lambent
PASS: gdb.base/constvars.exp: print laminated
PASS: gdb.base/constvars.exp: ptype laminated
PASS: gdb.base/constvars.exp: print lampoon
PASS: gdb.base/constvars.exp: ptype lampoon
PASS: gdb.base/constvars.exp: print languid
PASS: gdb.base/constvars.exp: ptype languid
PASS: gdb.base/constvars.exp: print *legend
PASS: gdb.base/constvars.exp: ptype legend
PASS: gdb.base/constvars.exp: print *legerdemain
PASS: gdb.base/constvars.exp: ptype legerdemain
PASS: gdb.base/constvars.exp: print *leniency
PASS: gdb.base/constvars.exp: ptype leniency
PASS: gdb.base/constvars.exp: print *leonine
PASS: gdb.base/constvars.exp: ptype leonine
PASS: gdb.base/constvars.exp: print *lesion
PASS: gdb.base/constvars.exp: ptype lesion
PASS: gdb.base/constvars.exp: print *lethal
PASS: gdb.base/constvars.exp: ptype lethal
PASS: gdb.base/constvars.exp: print *lethargic
PASS: gdb.base/constvars.exp: ptype lethargic
PASS: gdb.base/constvars.exp: print *levity
PASS: gdb.base/constvars.exp: ptype levity
PASS: gdb.base/constvars.exp: print *lewd
PASS: gdb.base/constvars.exp: ptype lewd
PASS: gdb.base/constvars.exp: print *lexicographer
PASS: gdb.base/constvars.exp: ptype lexicographer
PASS: gdb.base/constvars.exp: print *lexicon
PASS: gdb.base/constvars.exp: ptype lexicon
PASS: gdb.base/constvars.exp: print *liaison
PASS: gdb.base/constvars.exp: ptype liaison
PASS: gdb.base/constvars.exp: print *libation
PASS: gdb.base/constvars.exp: ptype libation
PASS: gdb.base/constvars.exp: print *libelous
PASS: gdb.base/constvars.exp: ptype libelous
PASS: gdb.base/constvars.exp: print *libertine
PASS: gdb.base/constvars.exp: ptype libertine
PASS: gdb.base/constvars.exp: print *libidinous
PASS: gdb.base/constvars.exp: ptype libidinous
PASS: gdb.base/constvars.exp: print *languish
PASS: gdb.base/constvars.exp: ptype languish
PASS: gdb.base/constvars.exp: print *languor
PASS: gdb.base/constvars.exp: ptype languor
PASS: gdb.base/constvars.exp: print *lank
PASS: gdb.base/constvars.exp: ptype lank
PASS: gdb.base/constvars.exp: print *lapidary
PASS: gdb.base/constvars.exp: ptype lapidary
PASS: gdb.base/constvars.exp: print *larceny
PASS: gdb.base/constvars.exp: ptype larceny
PASS: gdb.base/constvars.exp: print *largess
PASS: gdb.base/constvars.exp: ptype largess
PASS: gdb.base/constvars.exp: print *lascivious
PASS: gdb.base/constvars.exp: ptype lascivious
PASS: gdb.base/constvars.exp: print *lassitude
PASS: gdb.base/constvars.exp: ptype lassitude
PASS: gdb.base/constvars.exp: print *lamprey
PASS: gdb.base/constvars.exp: ptype lamprey
PASS: gdb.base/constvars.exp: print *lariat
PASS: gdb.base/constvars.exp: ptype lariat
PASS: gdb.base/constvars.exp: print *laudanum
PASS: gdb.base/constvars.exp: ptype laudanum
PASS: gdb.base/constvars.exp: print *lecithin
PASS: gdb.base/constvars.exp: ptype lecithin
PASS: gdb.base/constvars.exp: print *leviathan
PASS: gdb.base/constvars.exp: ptype leviathan
PASS: gdb.base/constvars.exp: print *libretto
PASS: gdb.base/constvars.exp: ptype libretto
PASS: gdb.base/constvars.exp: print *lissome
PASS: gdb.base/constvars.exp: ptype lissome
PASS: gdb.base/constvars.exp: print *locust
PASS: gdb.base/constvars.exp: ptype locust
PASS: gdb.base/constvars.exp: ptype logical
PASS: gdb.base/constvars.exp: ptype lugged
PASS: gdb.base/constvars.exp: ptype luck
PASS: gdb.base/constvars.exp: ptype lunar
PASS: gdb.base/constvars.exp: ptype lumen
PASS: gdb.base/constvars.exp: ptype lurk
PASS: gdb.base/constvars.exp: ptype lush
PASS: gdb.base/constvars.exp: ptype lynx
PASS: gdb.base/constvars.exp: ptype crass
PASS: gdb.base/constvars.exp: ptype crisp
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/break-always.exp ...
PASS: gdb.base/break-always.exp: set breakpoint always-inserted on
PASS: gdb.base/break-always.exp: confirm breakpoint always-inserted
PASS: gdb.base/break-always.exp: set breakpoint on bar
PASS: gdb.base/break-always.exp: set 2nd breakpoint on bar
PASS: gdb.base/break-always.exp: set 3rd breakpoint on bar
PASS: gdb.base/break-always.exp: set 4th breakpoint on bar
PASS: gdb.base/break-always.exp: initial check breakpoint state
PASS: gdb.base/break-always.exp: initial disable all breakpoints
PASS: gdb.base/break-always.exp: initial enable all breakpoints
PASS: gdb.base/break-always.exp: re-disable all breakpoints
PASS: gdb.base/break-always.exp: enable 3.A
PASS: gdb.base/break-always.exp: disable 3.B
PASS: gdb.base/break-always.exp: enable 3.C
PASS: gdb.base/break-always.exp: enable 2.D
PASS: gdb.base/break-always.exp: disable 2.E
PASS: gdb.base/break-always.exp: disable 3.F
PASS: gdb.base/break-always.exp: enable 3.G
PASS: gdb.base/break-always.exp: enable 2.H
PASS: gdb.base/break-always.exp: disable 2.I
PASS: gdb.base/break-always.exp: before re-enable check breakpoint state
PASS: gdb.base/break-always.exp: re-enable all breakpoints
PASS: gdb.base/break-always.exp: set breakpoint on bar 2
PASS: gdb.base/break-always.exp: save shadow
PASS: gdb.base/break-always.exp: write 0 to breakpoint's address
PASS: gdb.base/break-always.exp: read back 0 from the breakpoint's address
PASS: gdb.base/break-always.exp: write 1 to breakpoint's address
PASS: gdb.base/break-always.exp: read back 1 from the breakpoint's address
PASS: gdb.base/break-always.exp: p /x *(char *) 0x804841f = $shadow
PASS: gdb.base/break-always.exp: continue to breakpoint: bar
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/call-rt-st.exp ...
PASS: gdb.base/call-rt-st.exp: set print sevenbit-strings
PASS: gdb.base/call-rt-st.exp: set print address off
PASS: gdb.base/call-rt-st.exp: set width 0
PASS: gdb.base/call-rt-st.exp: breakpoint loop_count
PASS: gdb.base/call-rt-st.exp: continue to loop_count
PASS: gdb.base/call-rt-st.exp: finish out from loop_count (line 777)
PASS: gdb.base/call-rt-st.exp: print print_struct_rep(*struct1)
PASS: gdb.base/call-rt-st.exp: print print_one_large_struct(*list1)
PASS: gdb.base/call-rt-st.exp: print print_one_double(*d1)
PASS: gdb.base/call-rt-st.exp: print print_two_floats(*f3)
PASS: gdb.base/call-rt-st.exp: print print_bit_flags_char(*cflags)
PASS: gdb.base/call-rt-st.exp: print print_bit_flags_short(*sflags)
PASS: gdb.base/call-rt-st.exp: print print_bit_flags(*flags)
PASS: gdb.base/call-rt-st.exp: print print_bit_flags_combo(*flags_combo)
PASS: gdb.base/call-rt-st.exp: print print_three_chars(*three_char)
PASS: gdb.base/call-rt-st.exp: print print_five_chars(*five_char)
PASS: gdb.base/call-rt-st.exp: print print_int_char_combo(*int_char_combo)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gnu_vector.exp ...
PASS: gdb.base/gnu_vector.exp: print c4
PASS: gdb.base/gnu_vector.exp: print c4[2]
PASS: gdb.base/gnu_vector.exp: print i4a
PASS: gdb.base/gnu_vector.exp: print i4b
PASS: gdb.base/gnu_vector.exp: print i4a + i4b
PASS: gdb.base/gnu_vector.exp: print i4a - i4b
PASS: gdb.base/gnu_vector.exp: print i4a * i4b
PASS: gdb.base/gnu_vector.exp: print i4a / i4b
PASS: gdb.base/gnu_vector.exp: print i4a % i4b
PASS: gdb.base/gnu_vector.exp: print i4a++
PASS: gdb.base/gnu_vector.exp: print ++i4a
PASS: gdb.base/gnu_vector.exp: print i4a--
PASS: gdb.base/gnu_vector.exp: print --i4a
PASS: gdb.base/gnu_vector.exp: print +i4a
PASS: gdb.base/gnu_vector.exp: print -i4a
PASS: gdb.base/gnu_vector.exp: print i4a & i4b
PASS: gdb.base/gnu_vector.exp: print i4a | i4b
PASS: gdb.base/gnu_vector.exp: print i4a ^ i4b
PASS: gdb.base/gnu_vector.exp: print ~i4a
PASS: gdb.base/gnu_vector.exp: print i4a << i4b
PASS: gdb.base/gnu_vector.exp: print i4a >> i4b
PASS: gdb.base/gnu_vector.exp: print f4a
PASS: gdb.base/gnu_vector.exp: print f4b
PASS: gdb.base/gnu_vector.exp: print f4a + f4b
PASS: gdb.base/gnu_vector.exp: print f4a - f4b
PASS: gdb.base/gnu_vector.exp: print f4a * f4b
PASS: gdb.base/gnu_vector.exp: print f4a / f4b
PASS: gdb.base/gnu_vector.exp: print +f4a
PASS: gdb.base/gnu_vector.exp: print -f4a
PASS: gdb.base/gnu_vector.exp: print (int2) 1
PASS: gdb.base/gnu_vector.exp: print (longlong2) 2
PASS: gdb.base/gnu_vector.exp: print (float2) 3
PASS: gdb.base/gnu_vector.exp: print (double2) 4
PASS: gdb.base/gnu_vector.exp: print (char4) 12
PASS: gdb.base/gnu_vector.exp: print (uint4) ia
PASS: gdb.base/gnu_vector.exp: print (int4) -3
PASS: gdb.base/gnu_vector.exp: print (float4) 4
PASS: gdb.base/gnu_vector.exp: print i4a + ib
PASS: gdb.base/gnu_vector.exp: print fa - f4b
PASS: gdb.base/gnu_vector.exp: print f4a * fb
PASS: gdb.base/gnu_vector.exp: print ia / i4b
PASS: gdb.base/gnu_vector.exp: print i4a % ib
PASS: gdb.base/gnu_vector.exp: print ia & i4b
PASS: gdb.base/gnu_vector.exp: print i4a | ib
PASS: gdb.base/gnu_vector.exp: print ia ^ i4b
PASS: gdb.base/gnu_vector.exp: print i4a << ib
PASS: gdb.base/gnu_vector.exp: print i4a >> ib
PASS: gdb.base/gnu_vector.exp: print i4b = ia
PASS: gdb.base/gnu_vector.exp: print i4a = 3
PASS: gdb.base/gnu_vector.exp: print f4a = fb
PASS: gdb.base/gnu_vector.exp: print f4b = 2
PASS: gdb.base/gnu_vector.exp: print i4a = {2, 4, 8, 16}
PASS: gdb.base/gnu_vector.exp: print i4a <<= ib
PASS: gdb.base/gnu_vector.exp: print i4a + d2
PASS: gdb.base/gnu_vector.exp: print d2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + f4a
PASS: gdb.base/gnu_vector.exp: print i2 + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + i2
PASS: gdb.base/gnu_vector.exp: print i4a + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + d2
PASS: gdb.base/gnu_vector.exp: print d2 + f4a
PASS: gdb.base/gnu_vector.exp: print ui4 + i4a
PASS: gdb.base/gnu_vector.exp: print i4a + ui4
PASS: gdb.base/gnu_vector.exp: print i4a + i2
PASS: gdb.base/gnu_vector.exp: print i2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + f2
PASS: gdb.base/gnu_vector.exp: print f2 + f4a
PASS: gdb.base/gnu_vector.exp: ptype c4
PASS: gdb.base/gnu_vector.exp: ptype char4
PASS: gdb.base/gnu_vector.exp: ptype i4a
PASS: gdb.base/gnu_vector.exp: ptype int4
PASS: gdb.base/gnu_vector.exp: ptype f4b
PASS: gdb.base/gnu_vector.exp: ptype float4
PASS: gdb.base/gnu_vector.exp: ptype union_with_vector_1
PASS: gdb.base/gnu_vector.exp: ptype struct_with_vector_1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/fullname.exp ...
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint at main - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint at main - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built other
PASS: gdb.base/fullname.exp: set breakpoint at main - built other
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built other
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/anon.exp ...
PASS: gdb.base/anon.exp: set breakpoint in anon.c
PASS: gdb.base/anon.exp: continue to breakpoint: continue to breakpoint in anon.c
PASS: gdb.base/anon.exp: print val.data.six
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdb1250.exp ...
PASS: gdb.base/gdb1250.exp: backtrace from abort
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/bfp-test.exp ...
PASS: gdb.base/bfp-test.exp: continue to breakpoint: return
PASS: gdb.base/bfp-test.exp: The original value of b32 is 1.5
PASS: gdb.base/bfp-test.exp: The original value of b64 is 2.25
PASS: gdb.base/bfp-test.exp: The original value of b128 is 3.375
PASS: gdb.base/bfp-test.exp: Try to change b32 to -1.5 with 'print b32=-1.5f'
PASS: gdb.base/bfp-test.exp: Try to change b64 to -2.25 with 'print b64=-2.25f'
PASS: gdb.base/bfp-test.exp: Try to change b128 to -3.375 with 'print b128=-3.375l'
PASS: gdb.base/bfp-test.exp: set variable b32 = 10.5f
PASS: gdb.base/bfp-test.exp: set variable b64 = 20.25f
PASS: gdb.base/bfp-test.exp: set variable b128 = 30.375l
PASS: gdb.base/bfp-test.exp: The value of b32 is changed to 10.5
PASS: gdb.base/bfp-test.exp: The value of b64 is changed to 20.25
PASS: gdb.base/bfp-test.exp: The value of b128 is changed to 30.375
PASS: gdb.base/bfp-test.exp: set variable b32 = 100.5a
PASS: gdb.base/bfp-test.exp: set variable b64 = 200.25x
PASS: gdb.base/bfp-test.exp: set variable b128 = 300.375fl
PASS: gdb.base/bfp-test.exp: set variable b128 = 300.375fff
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/jit-so.exp ...
PASS: gdb.base/jit-so.exp: one_jit_test-1: continue to breakpoint: break here before-dlopen
PASS: gdb.base/jit-so.exp: one_jit_test-1: set var jit_libname = "jit-main.so"
PASS: gdb.base/jit-so.exp: one_jit_test-1: continue to breakpoint: break here after-dlopen
PASS: gdb.base/jit-so.exp: one_jit_test-1: continue to breakpoint: break here 0
PASS: gdb.base/jit-so.exp: one_jit_test-1: set var argc = 2
PASS: gdb.base/jit-so.exp: one_jit_test-1: set var libname = "SHLIBDIR/jit-solib.so"
PASS: gdb.base/jit-so.exp: one_jit_test-1: set var count = 1
PASS: gdb.base/jit-so.exp: one_jit_test-1: continue to breakpoint: break here 1
PASS: gdb.base/jit-so.exp: one_jit_test-1: info function jit_function
PASS: gdb.base/jit-so.exp: one_jit_test-1: continue to breakpoint: break here 2
PASS: gdb.base/jit-so.exp: one_jit_test-1: info function jit_function
PASS: gdb.base/jit-so.exp: one_jit_test-2: continue to breakpoint: break here before-dlopen
PASS: gdb.base/jit-so.exp: one_jit_test-2: set var jit_libname = "jit-main.so"
PASS: gdb.base/jit-so.exp: one_jit_test-2: continue to breakpoint: break here after-dlopen
PASS: gdb.base/jit-so.exp: one_jit_test-2: continue to breakpoint: break here 0
PASS: gdb.base/jit-so.exp: one_jit_test-2: set var argc = 2
PASS: gdb.base/jit-so.exp: one_jit_test-2: set var libname = "SHLIBDIR/jit-solib.so"
PASS: gdb.base/jit-so.exp: one_jit_test-2: set var count = 2
PASS: gdb.base/jit-so.exp: one_jit_test-2: continue to breakpoint: break here 1
PASS: gdb.base/jit-so.exp: one_jit_test-2: info function jit_function
PASS: gdb.base/jit-so.exp: one_jit_test-2: continue to breakpoint: break here 2
PASS: gdb.base/jit-so.exp: one_jit_test-2: info function jit_function
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/bitfields.exp ...
PASS: gdb.base/bitfields.exp: set print sevenbit-strings
PASS: gdb.base/bitfields.exp: print flags
PASS: gdb.base/bitfields.exp: continuing to break1 #1
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s1)
PASS: gdb.base/bitfields.exp: continuing to break1 #2
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u1)
PASS: gdb.base/bitfields.exp: continuing to break1 #3
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s2)
PASS: gdb.base/bitfields.exp: continuing to break1 #4
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u2)
PASS: gdb.base/bitfields.exp: continuing to break1 #5
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s3)
PASS: gdb.base/bitfields.exp: continuing to break1 #6
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u3)
PASS: gdb.base/bitfields.exp: continuing to break1 #7
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s9)
PASS: gdb.base/bitfields.exp: continuing to break1 #8
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u9)
PASS: gdb.base/bitfields.exp: continuing to break1 #9
PASS: gdb.base/bitfields.exp: bitfield uniqueness (sc)
PASS: gdb.base/bitfields.exp: bitfield containment #1
PASS: gdb.base/bitfields.exp: continuing to break2
PASS: gdb.base/bitfields.exp: bitfield containment #2
PASS: gdb.base/bitfields.exp: unsigned bitfield ranges
PASS: gdb.base/bitfields.exp: signed bitfields, max positive values
PASS: gdb.base/bitfields.exp: continuing to break4 #1
PASS: gdb.base/bitfields.exp: determining signed-ness of bitfields
PASS: gdb.base/bitfields.exp: signed bitfields, max negative values
PASS: gdb.base/bitfields.exp: continuing to break4 #2
PASS: gdb.base/bitfields.exp: signed bitfields with -1
PASS: gdb.base/bitfields.exp: continuing to break5
PASS: gdb.base/bitfields.exp: distinct bitfields in container
PASS: gdb.base/bitfields.exp: print container.one.u3
PASS: gdb.base/bitfields.exp: print container.two.u3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/macscp.exp ...
PASS: gdb.base/macscp.exp: list main for support check
PASS: gdb.base/macscp.exp: list main for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list main'
PASS: gdb.base/macscp.exp: list macscp2_2 for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp2_2'
PASS: gdb.base/macscp.exp: list macscp3_2 for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp3_2'
PASS: gdb.base/macscp.exp: info macro FROM_COMMANDLINE
PASS: gdb.base/macscp.exp: info macro __FILE__ before running
PASS: gdb.base/macscp.exp: info macro __LINE__ before running
PASS: gdb.base/macscp.exp: list macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp_4_2_from_macscp2'
PASS: gdb.base/macscp.exp: list macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE after `list macscp_4_2_from_macscp3' (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: break macscp1_1
PASS: gdb.base/macscp.exp: break macscp2_1
PASS: gdb.base/macscp.exp: break macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: break macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: break macscp2_2
PASS: gdb.base/macscp.exp: break macscp1_2
PASS: gdb.base/macscp.exp: break macscp3_1
PASS: gdb.base/macscp.exp: break macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: break macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: break macscp3_2
PASS: gdb.base/macscp.exp: break macscp1_3
PASS: gdb.base/macscp.exp: continue to macscp1_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: continue to macscp2_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: continue to macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: continue to macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: continue to macscp2_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: continue to macscp1_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: continue to macscp3_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: continue to macscp4_1_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_1_from_macscp3 (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: continue to macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_2_from_macscp3 (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: continue to macscp3_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: continue to macscp1_3
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: breakpoint macscp_expr
PASS: gdb.base/macscp.exp: macro MACRO_TO_EXPAND not in scope at breakpoint
PASS: gdb.base/macscp.exp: breakpoint macscp_expr using MACRO_TO_EXPAND
PASS: gdb.base/macscp.exp: continue to macsp_expr
PASS: gdb.base/macscp.exp: print address.addr
PASS: gdb.base/macscp.exp: print expression with macro before define.
PASS: gdb.base/macscp.exp: next to definition 1
PASS: gdb.base/macscp.exp: print expression with macro in scope.
PASS: gdb.base/macscp.exp: user macro override
PASS: gdb.base/macscp.exp: choose user macro
PASS: gdb.base/macscp.exp: remove user override
PASS: gdb.base/macscp.exp: print expression with macro after removing override
PASS: gdb.base/macscp.exp: next to definition 2
PASS: gdb.base/macscp.exp: print expression with macro after undef.
PASS: gdb.base/macscp.exp: basic macro define
PASS: gdb.base/macscp.exp: expansion of defined macro
PASS: gdb.base/macscp.exp: basic macro list
PASS: gdb.base/macscp.exp: basic redefine, macro with args
PASS: gdb.base/macscp.exp: expansion of macro with arguments
PASS: gdb.base/macscp.exp: basic macro undef
PASS: gdb.base/macscp.exp: print expression with macro after user undef.
PASS: gdb.base/macscp.exp: macro define with no arguments
PASS: gdb.base/macscp.exp: macro undef with no arguments
PASS: gdb.base/macscp.exp: complete 'p FIFTY_SEVEN'
PASS: gdb.base/macscp.exp: complete 'p TWENTY_'
PASS: gdb.base/macscp.exp: complete 'p FORTY_'
PASS: gdb.base/macscp.exp: defining TWENTY_THREE
PASS: gdb.base/macscp.exp: complete 'p TWENTY_THREE'
PASS: gdb.base/macscp.exp: basic macro splicing
PASS: gdb.base/macscp.exp: define splice helper
PASS: gdb.base/macscp.exp: splicing plus expansion
PASS: gdb.base/macscp.exp: define first varargs helper
PASS: gdb.base/macscp.exp: define second varargs helper
PASS: gdb.base/macscp.exp: define third varargs helper
PASS: gdb.base/macscp.exp: define fourth varargs helper
PASS: gdb.base/macscp.exp: c99 varargs expansion
PASS: gdb.base/macscp.exp: c99 varargs expansion without an argument
PASS: gdb.base/macscp.exp: c99 varargs expansion, multiple formal arguments
PASS: gdb.base/macscp.exp: gnu varargs expansion
PASS: gdb.base/macscp.exp: gnu varargs expansion without an argument
PASS: gdb.base/macscp.exp: gnu varargs expansion special splicing without an argument
PASS: gdb.base/macscp.exp: define stringification macro
PASS: gdb.base/macscp.exp: define first stringification helper
PASS: gdb.base/macscp.exp: define second stringification helper
PASS: gdb.base/macscp.exp: simple stringify
PASS: gdb.base/macscp.exp: stringify with one space
PASS: gdb.base/macscp.exp: stringify with many spaces
PASS: gdb.base/macscp.exp: stringify with quotes
PASS: gdb.base/macscp.exp: stringify with backslashes
PASS: gdb.base/macscp.exp: stringify without substitution
PASS: gdb.base/macscp.exp: stringify with substitution
PASS: gdb.base/macscp.exp: define si_addr macro
PASS: gdb.base/macscp.exp: macro expand siginfo.si_addr
PASS: gdb.base/macscp.exp: print __FILE__
PASS: gdb.base/macscp.exp: print __LINE__
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdb11530.exp ...
PASS: gdb.base/gdb11530.exp: print a.i
PASS: gdb.base/gdb11530.exp: print sizeof (a.i)
PASS: gdb.base/gdb11530.exp: print sizeof (a.i) == sizeof (int)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/gdb1090.exp ...
PASS: gdb.base/gdb1090.exp: continue to breakpoint: break-here
PASS: gdb.base/gdb1090.exp: print s24

		=== gdb Summary ===

# of expected passes		5921
# of unexpected failures	5
# of expected failures		26
# of known failures		21
# of untested testcases		1
# of unsupported tests		2
[...]/tschwinge/Ferry_Tagscherer.build/gdb/testsuite/../../gdb/gdb version  7.5.50.20121210-cvs -nw -nx -data-directory [...]/tschwinge/Ferry_Tagscherer.build/gdb/testsuite/../data-directory 

