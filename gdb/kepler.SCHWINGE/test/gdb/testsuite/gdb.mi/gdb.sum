Test Run By thomas on Tue Nov  6 14:14:00 2012
Native configuration is i686-pc-linux-gnu

		=== gdb tests ===

Schedule of variations:
    unix

Running target unix
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/dw2-ref-missing-frame.exp ...
PASS: gdb.mi/dw2-ref-missing-frame.exp: breakpoint at func_nofb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: mi runto func_nofb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: test func_nofb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: breakpoint at func_loopfb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: mi runto func_loopfb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: test func_loopfb_var
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/gdb2549.exp ...
PASS: gdb.mi/gdb2549.exp: wrong arguments
PASS: gdb.mi/gdb2549.exp: no executable
PASS: gdb.mi/gdb2549.exp: breakpoint at main
PASS: gdb.mi/gdb2549.exp: mi runto main
PASS: gdb.mi/gdb2549.exp: register values x
PASS: gdb.mi/gdb2549.exp: register values f
PASS: gdb.mi/gdb2549.exp: register values d
PASS: gdb.mi/gdb2549.exp: register values o
PASS: gdb.mi/gdb2549.exp: register values t
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/gdb669.exp ...
PASS: gdb.mi/gdb669.exp: successfully compiled posix threads test case
PASS: gdb.mi/gdb669.exp: breakpoint at main
PASS: gdb.mi/gdb669.exp: mi runto main
PASS: gdb.mi/gdb669.exp: -thread-list-ids (at main)
PASS: gdb.mi/gdb669.exp: info threads (at main)
PASS: gdb.mi/gdb669.exp: finding MI result string (at main)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (at main)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (at main)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (at main)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (at main)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (at main)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (at main)
PASS: gdb.mi/gdb669.exp: next, try 0
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 0)
PASS: gdb.mi/gdb669.exp: info threads (try 0)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 0)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 0)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 0)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 0)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 0)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 0)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 0)
PASS: gdb.mi/gdb669.exp: next, try 1
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 1)
PASS: gdb.mi/gdb669.exp: info threads (try 1)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 1)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 1)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 1)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 1)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 1)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 1)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 1)
PASS: gdb.mi/gdb669.exp: next, try 2
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 2)
PASS: gdb.mi/gdb669.exp: info threads (try 2)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 2)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 2)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 2)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 2)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 2)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 2)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 2)
PASS: gdb.mi/gdb669.exp: next, try 3
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 3)
PASS: gdb.mi/gdb669.exp: info threads (try 3)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 3)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 3)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 3)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 3)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 3)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 3)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 3)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/gdb680.exp ...
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 0
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 1
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 2
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 3
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 4
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/gdb701.exp ...
PASS: gdb.mi/gdb701.exp: breakpoint at main
PASS: gdb.mi/gdb701.exp: mi runto main
PASS: gdb.mi/gdb701.exp: step over "foo = 0"
PASS: gdb.mi/gdb701.exp: create fooPtr
PASS: gdb.mi/gdb701.exp: list children of fooPtr
PASS: gdb.mi/gdb701.exp: list children of fooPtr.x
PASS: gdb.mi/gdb701.exp: list children of fooPtr.y
PASS: gdb.mi/gdb701.exp: list children of fooPtr.z
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/gdb792.exp ...
PASS: gdb.mi/gdb792.exp: breakpoint at main
PASS: gdb.mi/gdb792.exp: mi runto main
PASS: gdb.mi/gdb792.exp: create var for class A
PASS: gdb.mi/gdb792.exp: list children of class A
PASS: gdb.mi/gdb792.exp: list children of A.public
PASS: gdb.mi/gdb792.exp: list children of A.private
PASS: gdb.mi/gdb792.exp: list children of A.protected
PASS: gdb.mi/gdb792.exp: list children of A.protected.b
PASS: gdb.mi/gdb792.exp: list children of A.protected.b.public
PASS: gdb.mi/gdb792.exp: list children of A.protected.b.private
PASS: gdb.mi/gdb792.exp: create var for class C which has baseclass A
PASS: gdb.mi/gdb792.exp: list children of class C
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-async.exp ...
PASS: gdb.mi/mi-async.exp: start: stop
PASS: gdb.mi/mi-async.exp: CLI next: stop
PASS: gdb.mi/mi-async.exp: restart: stop
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-basics.exp ...
PASS: gdb.mi/mi-basics.exp: acceptance of MI operations
PASS: gdb.mi/mi-basics.exp: file-exec-and-symbols operation
PASS: gdb.mi/mi-basics.exp: file-exec-file operation
PASS: gdb.mi/mi-basics.exp: file-symbol-file operation
PASS: gdb.mi/mi-basics.exp: break-delete (all) operation
PASS: gdb.mi/mi-basics.exp: all breakpoints removed
PASS: gdb.mi/mi-basics.exp: environment-directory arg operation
PASS: gdb.mi/mi-basics.exp: environment-directory empty-string operation
PASS: gdb.mi/mi-basics.exp: environment-directory operation
PASS: gdb.mi/mi-basics.exp: environment-cd arg operation
PASS: gdb.mi/mi-basics.exp: environment-pwd operation
PASS: gdb.mi/mi-basics.exp: environment-path
PASS: gdb.mi/mi-basics.exp: environment-path no-args operation
PASS: gdb.mi/mi-basics.exp: environment-path dir1 dir2 operation
PASS: gdb.mi/mi-basics.exp: environment-path -r dir operation
PASS: gdb.mi/mi-basics.exp: environment-path -r operation
PASS: gdb.mi/mi-basics.exp: initial tty is mi_inferior_tty_name
PASS: gdb.mi/mi-basics.exp: set tty to /dev/pts/1
PASS: gdb.mi/mi-basics.exp: tty was set correctly
PASS: gdb.mi/mi-basics.exp: set tty to the empty string
PASS: gdb.mi/mi-basics.exp: make sure tty is empty
PASS: gdb.mi/mi-basics.exp: set tty to mi_inferior_tty_name (the way it was)
PASS: gdb.mi/mi-basics.exp: verify tty is correct
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-break.exp ...
PASS: gdb.mi/mi-break.exp: break-insert -t operation
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-break.exp: list of breakpoints
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
XFAIL: gdb.mi/mi-break.exp: break-insert -r operation
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp callee2
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp callee
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp .*llee
XFAIL: gdb.mi/mi-break.exp: list of breakpoints
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
PASS: gdb.mi/mi-break.exp: insert breakpoint with ignore count at callme
PASS: gdb.mi/mi-break.exp: run to breakpoint with ignore count
PASS: gdb.mi/mi-break.exp: breakpoint at nonexistent function
PASS: gdb.mi/mi-break.exp: create varobj for function call
PASS: gdb.mi/mi-break.exp: update varobj for function call
PASS: gdb.mi/mi-break.exp: test disabled creation
PASS: gdb.mi/mi-break.exp: test disabled creation: cleanup
PASS: gdb.mi/mi-break.exp: breakpoint commands: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: breakpoint commands: set commands
PASS: gdb.mi/mi-break.exp: breakpoint commands: check that commands are set
PASS: gdb.mi/mi-break.exp: breakpoint commands: clear commands
PASS: gdb.mi/mi-break.exp: breakpoint commands: check that commands are cleared
PASS: gdb.mi/mi-break.exp: breakpoint at main
PASS: gdb.mi/mi-break.exp: mi runto main
PASS: gdb.mi/mi-break.exp: breakpoint commands: insert breakpoint at basics.c:callee2, again
PASS: gdb.mi/mi-break.exp: breakpoint commands: set commands
PASS: gdb.mi/mi-break.exp: intermediate stop and continue
PASS: gdb.mi/mi-break.exp: test hitting breakpoint with commands
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-cli.exp ...
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with no arguments
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with one argument
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with bogus interpreter
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console bogus
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "file $binfile"
PASS: gdb.mi/mi-cli.exp: breakpoint at main
PASS: gdb.mi/mi-cli.exp: mi runto main
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set args foobar"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "show args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "break callee4"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "info break"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set listsize 1"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list"
PASS: gdb.mi/mi-cli.exp: continue to callee4
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "delete 2"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "up"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "down"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "frame 2"
PASS: gdb.mi/mi-cli.exp: -stack-select-frame 0
PASS: gdb.mi/mi-cli.exp: check *stopped from CLI command
PASS: gdb.mi/mi-cli.exp: -break-insert -t basics.c:$line_main_hello
PASS: gdb.mi/mi-cli.exp: -exec-continue to line 66
PASS: gdb.mi/mi-cli.exp: 34 next: run
PASS: gdb.mi/mi-cli.exp: 34 next: stop
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_return
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "help set args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set $pc=0x0"
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-console.exp ...
PASS: gdb.mi/mi-console.exp: breakpoint at main
PASS: gdb.mi/mi-console.exp: mi runto main
PASS: gdb.mi/mi-console.exp: Testing console output
PASS: gdb.mi/mi-console.exp: Testing console output inferior output
PASS: gdb.mi/mi-console.exp: finished step over hello
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-disassemble.exp ...
PASS: gdb.mi/mi-disassemble.exp: breakpoint at main
PASS: gdb.mi/mi-disassemble.exp: mi runto main
PASS: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus filename
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus address
PASS: gdb.mi/mi-disassemble.exp: data-disassemble mix different args
PASS: gdb.mi/mi-disassemble.exp: data-disassemble wrong mode arg
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly mixed
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-eval.exp ...
PASS: gdb.mi/mi-eval.exp: breakpoint at callee4
PASS: gdb.mi/mi-eval.exp: mi runto callee4
PASS: gdb.mi/mi-eval.exp: next at callee4
PASS: gdb.mi/mi-eval.exp: eval A
PASS: gdb.mi/mi-eval.exp: eval &A
PASS: gdb.mi/mi-eval.exp: eval A+3
PASS: gdb.mi/mi-eval.exp: eval A + 3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-file-transfer.exp ...
PASS: gdb.mi/mi-file-transfer.exp: put binary file
PASS: gdb.mi/mi-file-transfer.exp: get binary file
PASS: gdb.mi/mi-file-transfer.exp: compare intermediate binary file
PASS: gdb.mi/mi-file-transfer.exp: compare binary file
PASS: gdb.mi/mi-file-transfer.exp: deleted binary file
PASS: gdb.mi/mi-file-transfer.exp: verified deleted binary file
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-file.exp ...
PASS: gdb.mi/mi-file.exp: request path info of current source file (basics.c)
PASS: gdb.mi/mi-file.exp: Getting a list of source files.
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-hack-cli.exp ...
PASS: gdb.mi/mi-hack-cli.exp: show architecture
PASS: gdb.mi/mi-hack-cli.exp: 47show architecture
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-inheritance-syntax-error.exp ...
PASS: gdb.mi/mi-inheritance-syntax-error.exp: breakpoint at C::testLocation
PASS: gdb.mi/mi-inheritance-syntax-error.exp: mi runto C::testLocation
PASS: gdb.mi/mi-inheritance-syntax-error.exp: create var for THIS
PASS: gdb.mi/mi-inheritance-syntax-error.exp: list children of THIS
PASS: gdb.mi/mi-inheritance-syntax-error.exp: -var-info-path-expression var1.A
PASS: gdb.mi/mi-inheritance-syntax-error.exp: -data-evaluate-expression (*(class A*) this)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-nonstop-exit.exp ...
PASS: gdb.mi/mi-nonstop-exit.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nonstop-exit.exp: breakpoint at main
PASS: gdb.mi/mi-nonstop-exit.exp: mi runto main
PASS: gdb.mi/mi-nonstop-exit.exp: finished exec continue
PASS: gdb.mi/mi-nonstop-exit.exp: breakpoint at main
PASS: gdb.mi/mi-nonstop-exit.exp: mi runto main
PASS: gdb.mi/mi-nonstop-exit.exp: finished exec continue (2)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-nonstop.exp ...
PASS: gdb.mi/mi-nonstop.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nonstop.exp: breakpoint at main
PASS: gdb.mi/mi-nonstop.exp: mi runto main
FAIL: gdb.mi/mi-nonstop.exp: breakpoint at marker
PASS: gdb.mi/mi-nonstop.exp: w0,i0 stop
PASS: gdb.mi/mi-nonstop.exp: w1,i0 stop
PASS: gdb.mi/mi-nonstop.exp: thread state, stop 1
PASS: gdb.mi/mi-nonstop.exp: select thread 2
PASS: gdb.mi/mi-nonstop.exp: create varobj in first thread
PASS: gdb.mi/mi-nonstop.exp: select thread 3
PASS: gdb.mi/mi-nonstop.exp: create varobj in second thread
PASS: gdb.mi/mi-nonstop.exp: thread state, resume 1
PASS: gdb.mi/mi-nonstop.exp: w0,i1 stop
PASS: gdb.mi/mi-nonstop.exp: thread state, stop 2
PASS: gdb.mi/mi-nonstop.exp: thread state, resume 2
PASS: gdb.mi/mi-nonstop.exp: w1,i1 stop
PASS: gdb.mi/mi-nonstop.exp: thread state, stop 3
PASS: gdb.mi/mi-nonstop.exp: update varobj, 1
PASS: gdb.mi/mi-nonstop.exp: check varobj, w0, 1
PASS: gdb.mi/mi-nonstop.exp: check varobj, w1, 1
PASS: gdb.mi/mi-nonstop.exp: interrupted
PASS: gdb.mi/mi-nonstop.exp: got interrupt
PASS: gdb.mi/mi-nonstop.exp: thread state, stop 4
PASS: gdb.mi/mi-nonstop.exp: resume all
PASS: gdb.mi/mi-nonstop.exp: w0,i2 stop
PASS: gdb.mi/mi-nonstop.exp: w1,i2 stop
PASS: gdb.mi/mi-nonstop.exp: set condition, 1
PASS: gdb.mi/mi-nonstop.exp: w0,i3 stop
PASS: gdb.mi/mi-nonstop.exp: thread state, stop on cond breakpoint
PASS: gdb.mi/mi-nonstop.exp: update varobj, 2
PASS: gdb.mi/mi-nonstop.exp: check varobj, w1, 1
PASS: gdb.mi/mi-nonstop.exp: stacktrace of running thread
PASS: gdb.mi/mi-nonstop.exp: stacktrace of stopped thread
PASS: gdb.mi/mi-nonstop.exp: select first worker thread
PASS: gdb.mi/mi-nonstop.exp: ask the second thread to exit
PASS: gdb.mi/mi-nonstop.exp: wait for thread exit
PASS: gdb.mi/mi-nonstop.exp: stacktrace of stopped thread
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-ns-stale-regcache.exp ...
PASS: gdb.mi/mi-ns-stale-regcache.exp: breakpoint at main
PASS: gdb.mi/mi-ns-stale-regcache.exp: mi runto main
PASS: gdb.mi/mi-ns-stale-regcache.exp: no stale register cache of resumed thread
PASS: gdb.mi/mi-ns-stale-regcache.exp: no stale frame info of resumed thread
PASS: gdb.mi/mi-ns-stale-regcache.exp: main thread still running
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-nsintrall.exp ...
PASS: gdb.mi/mi-nsintrall.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nsintrall.exp: breakpoint at main
PASS: gdb.mi/mi-nsintrall.exp: mi runto main
FAIL: gdb.mi/mi-nsintrall.exp: breakpoint at thread_function
PASS: gdb.mi/mi-nsintrall.exp: stop 0
PASS: gdb.mi/mi-nsintrall.exp: stop 1
PASS: gdb.mi/mi-nsintrall.exp: stop 2
PASS: gdb.mi/mi-nsintrall.exp: stop 3
PASS: gdb.mi/mi-nsintrall.exp: stop 4
PASS: gdb.mi/mi-nsintrall.exp: stop 5
PASS: gdb.mi/mi-nsintrall.exp: thread state, all stopped
PASS: gdb.mi/mi-nsintrall.exp: resume all, no breakpoint
PASS: gdb.mi/mi-nsintrall.exp: thread state, resume all
PASS: gdb.mi/mi-nsintrall.exp: interrupt all threads
PASS: gdb.mi/mi-nsintrall.exp: interrupt 0
PASS: gdb.mi/mi-nsintrall.exp: interrupt 1
PASS: gdb.mi/mi-nsintrall.exp: interrupt 2
PASS: gdb.mi/mi-nsintrall.exp: interrupt 3
PASS: gdb.mi/mi-nsintrall.exp: interrupt 4
PASS: gdb.mi/mi-nsintrall.exp: interrupt 5
PASS: gdb.mi/mi-nsintrall.exp: thread state, all interrupted
PASS: gdb.mi/mi-nsintrall.exp: resume all after interrupting
PASS: gdb.mi/mi-nsintrall.exp: thread state, resume all after interrupting
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-nsmoribund.exp ...
PASS: gdb.mi/mi-nsmoribund.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nsmoribund.exp: breakpoint at main
PASS: gdb.mi/mi-nsmoribund.exp: mi runto main
FAIL: gdb.mi/mi-nsmoribund.exp: breakpoint at thread_function
PASS: gdb.mi/mi-nsmoribund.exp: stop 0
PASS: gdb.mi/mi-nsmoribund.exp: stop 1
PASS: gdb.mi/mi-nsmoribund.exp: stop 2
PASS: gdb.mi/mi-nsmoribund.exp: stop 3
PASS: gdb.mi/mi-nsmoribund.exp: stop 4
PASS: gdb.mi/mi-nsmoribund.exp: stop 5
PASS: gdb.mi/mi-nsmoribund.exp: stop 6
PASS: gdb.mi/mi-nsmoribund.exp: stop 7
PASS: gdb.mi/mi-nsmoribund.exp: stop 8
PASS: gdb.mi/mi-nsmoribund.exp: stop 9
PASS: gdb.mi/mi-nsmoribund.exp: thread state: all stopped except the main thread
PASS: gdb.mi/mi-nsmoribund.exp: select thread 5
PASS: gdb.mi/mi-nsmoribund.exp: thread specific breakpoint at thread_function
PASS: gdb.mi/mi-nsmoribund.exp: resume all, thread specific breakpoint
PASS: gdb.mi/mi-nsmoribund.exp: hit thread specific breakpoint
PASS: gdb.mi/mi-nsmoribund.exp: thread state: all running except the breakpoint thread
PASS: gdb.mi/mi-nsmoribund.exp: resume all, program exited normally
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-nsthrexec.exp ...
PASS: gdb.mi/mi-nsthrexec.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nsthrexec.exp: breakpoint at main
PASS: gdb.mi/mi-nsthrexec.exp: mi runto main
FAIL: gdb.mi/mi-nsthrexec.exp: breakpoint at thread_execler
PASS: gdb.mi/mi-nsthrexec.exp: stop at thread_execler
PASS: gdb.mi/mi-nsthrexec.exp: thread state, execler stopped, main running
PASS: gdb.mi/mi-nsthrexec.exp: interrupt main thread
PASS: gdb.mi/mi-nsthrexec.exp: main thread interrupted
PASS: gdb.mi/mi-nsthrexec.exp: thread state, all stopped
PASS: gdb.mi/mi-nsthrexec.exp: breakpoint at main
PASS: gdb.mi/mi-nsthrexec.exp: stop at main after exec
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-pending.exp ...
PASS: gdb.mi/mi-pending.exp: MI pending breakpoint on pendfunc1
PASS: gdb.mi/mi-pending.exp: Run till MI pending breakpoint on pendfunc1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-pthreads.exp ...
PASS: gdb.mi/mi-pthreads.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-pthreads.exp: breakpoint at done_making_threads
PASS: gdb.mi/mi-pthreads.exp: mi runto done_making_threads
PASS: gdb.mi/mi-pthreads.exp: -thread_list_ids (in check_mi_thread_command_set)
PASS: gdb.mi/mi-pthreads.exp: finding threads in MI output (in check_mi_thread_command_set)
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 123456789
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 6
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 5
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 4
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 3
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 2
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 1
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 6
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 5
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 4
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 3
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 2
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-read-memory.exp ...
PASS: gdb.mi/mi-read-memory.exp: breakpoint at main
PASS: gdb.mi/mi-read-memory.exp: mi runto main
PASS: gdb.mi/mi-read-memory.exp: next at main
PASS: gdb.mi/mi-read-memory.exp: no arguments
PASS: gdb.mi/mi-read-memory.exp: 3x2, one byte
PASS: gdb.mi/mi-read-memory.exp: 3x2, one byte offset by -6
PASS: gdb.mi/mi-read-memory.exp: expression in quotes
PASS: gdb.mi/mi-read-memory.exp: ascii and data
PASS: gdb.mi/mi-read-memory.exp: decimal
PASS: gdb.mi/mi-read-memory.exp: octal
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-regs.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-return.exp ...
PASS: gdb.mi/mi-return.exp: breakpoint at callee4
PASS: gdb.mi/mi-return.exp: mi runto callee4
PASS: gdb.mi/mi-return.exp: delete all breakpoints
PASS: gdb.mi/mi-return.exp: return from callee4 now
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-reverse.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-simplerun.exp ...
PASS: gdb.mi/mi-simplerun.exp: break-insert operation
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints
PASS: gdb.mi/mi-simplerun.exp: disabling of breakpoints
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints, 16 disabled
PASS: gdb.mi/mi-simplerun.exp: run to main
PASS: gdb.mi/mi-simplerun.exp: next at main
PASS: gdb.mi/mi-simplerun.exp: step at main
PASS: gdb.mi/mi-simplerun.exp: step to callee4
PASS: gdb.mi/mi-simplerun.exp: exec-finish
PASS: gdb.mi/mi-simplerun.exp: continue to end
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-stack.exp ...
PASS: gdb.mi/mi-stack.exp: breakpoint at callee4
PASS: gdb.mi/mi-stack.exp: mi runto callee4
PASS: gdb.mi/mi-stack.exp: stack frame listing
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 1
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 3
PASS: gdb.mi/mi-stack.exp: stack frame listing wrong
PASS: gdb.mi/mi-stack.exp: selected frame listing
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 300
PASS: gdb.mi/mi-stack.exp: stack args listing 0
PASS: gdb.mi/mi-stack.exp: stack args listing 0 1 1
PASS: gdb.mi/mi-stack.exp: stack args listing 0 1 3
PASS: gdb.mi/mi-stack.exp: stack args listing 1
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 1
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 3
PASS: gdb.mi/mi-stack.exp: stack args listing wrong
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 300
PASS: gdb.mi/mi-stack.exp: stack locals listing of names
PASS: gdb.mi/mi-stack.exp: next's in callee4
PASS: gdb.mi/mi-stack.exp: stack locals listing of names and values
PASS: gdb.mi/mi-stack.exp: stack locals listing, simple types: names and values, complex type: names and types
PASS: gdb.mi/mi-stack.exp: stack locals listing wrong
PASS: gdb.mi/mi-stack.exp: stack select frame 1
PASS: gdb.mi/mi-stack.exp: stack locals listing for new frame
PASS: gdb.mi/mi-stack.exp: stack locals for same frame (level 1)
PASS: gdb.mi/mi-stack.exp: stack info-depth
PASS: gdb.mi/mi-stack.exp: stack info-depth 3
PASS: gdb.mi/mi-stack.exp: stack info-depth 99
PASS: gdb.mi/mi-stack.exp: stack info-depth wrong usage
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-stepi.exp ...
PASS: gdb.mi/mi-stepi.exp: breakpoint at main
PASS: gdb.mi/mi-stepi.exp: mi runto main
PASS: gdb.mi/mi-stepi.exp: step-instruction at main
PASS: gdb.mi/mi-stepi.exp: step-instruction at main (line check)
PASS: gdb.mi/mi-stepi.exp: next-instruction at main
PASS: gdb.mi/mi-stepi.exp: next-instruction at main (line check)
PASS: gdb.mi/mi-stepi.exp: next-instruction at main 2
PASS: gdb.mi/mi-stepi.exp: next-instruction at main 2 (line check)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-syn-frame.exp ...
PASS: gdb.mi/mi-syn-frame.exp: breakpoint at main
PASS: gdb.mi/mi-syn-frame.exp: mi runto main
PASS: gdb.mi/mi-syn-frame.exp: insert breakpoint foo
PASS: gdb.mi/mi-syn-frame.exp: call inferior's function with a breakpoint set in it
PASS: gdb.mi/mi-syn-frame.exp: backtrace from inferior function stopped at bp, showing gdb dummy frame
PASS: gdb.mi/mi-syn-frame.exp: finished exec continue
PASS: gdb.mi/mi-syn-frame.exp: list stack frames
PASS: gdb.mi/mi-syn-frame.exp: insert breakpoint subroutine
PASS: gdb.mi/mi-syn-frame.exp: data evaluate expression
PASS: gdb.mi/mi-syn-frame.exp: list stack frames
PASS: gdb.mi/mi-syn-frame.exp: finished exec continue
PASS: gdb.mi/mi-syn-frame.exp: list stack frames
PASS: gdb.mi/mi-syn-frame.exp: call inferior function which raises exception
PASS: gdb.mi/mi-syn-frame.exp: backtrace from inferior function at exception
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-until.exp ...
PASS: gdb.mi/mi-until.exp: break-insert operation
PASS: gdb.mi/mi-until.exp: run to main
PASS: gdb.mi/mi-until.exp: break-delete 1
KFAIL: gdb.mi/mi-until.exp: until after while loop (stopped at wrong place) (PRMS: gdb/2104)
PASS: gdb.mi/mi-until.exp: until line number
PASS: gdb.mi/mi-until.exp: until line number:file
PASS: gdb.mi/mi-until.exp: until after current function
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-var-block.exp ...
PASS: gdb.mi/mi-var-block.exp: breakpoint at do_block_tests
PASS: gdb.mi/mi-var-block.exp: mi runto do_block_tests
PASS: gdb.mi/mi-var-block.exp: create local variable cb
PASS: gdb.mi/mi-var-block.exp: try to create local variable foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: delete var foo
PASS: gdb.mi/mi-var-block.exp: create local variable foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: update all vars: cb foo changed
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: create local variable inner_foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: create local variable foo2
XFAIL: gdb.mi/mi-var-block.exp: update inner_foo: should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi-var-block.exp: evaluate inner_foo: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: update foo: did not change
PASS: gdb.mi/mi-var-block.exp: delete var inner_foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi-var-block.exp: update foo2: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi-var-block.exp: update foo2 should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi-var-block.exp: update foo should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: update cb
PASS: gdb.mi/mi-var-block.exp: delete var foo
PASS: gdb.mi/mi-var-block.exp: delete var foo2
PASS: gdb.mi/mi-var-block.exp: delete var cb
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-var-child-f.exp ...
UNSUPPORTED: gdb.mi/mi-var-child-f.exp: compilation array.f
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-var-child.exp ...
PASS: gdb.mi/mi-var-child.exp: breakpoint at do_children_tests
PASS: gdb.mi/mi-var-child.exp: mi runto do_children_tests
PASS: gdb.mi/mi-var-child.exp: run to 216 (set breakpoint)
PASS: gdb.mi/mi-var-child.exp: create local variable struct_declarations
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.character
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.character
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_int
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_int
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.3
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.3
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.4
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.4
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.5
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.5
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.6
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.6
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.7
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.7
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.8
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.8
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.9
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.9
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.a
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.a
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.b
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.b
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.c
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.c
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.d
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.d
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.g
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.g
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.h
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.h
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.i
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.i
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: step to line $line_dct_123
PASS: gdb.mi/mi-var-child.exp: create local variable weird
PASS: gdb.mi/mi-var-child.exp: get children of weird
PASS: gdb.mi/mi-var-child.exp: get number of children of weird
PASS: gdb.mi/mi-var-child.exp: get children of weird.long_array
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.long_array
PASS: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: is weird editable
PASS: gdb.mi/mi-var-child.exp: is weird->int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.u1 editable
PASS: gdb.mi/mi-var-child.exp: is weird.s2 editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.a editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.b editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.c editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.long_array editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.long_array.0 editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations editable
PASS: gdb.mi/mi-var-child.exp: delete var weird
PASS: gdb.mi/mi-var-child.exp: update all vars. None changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 1
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 4
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 5
PASS: gdb.mi/mi-var-child.exp: update all vars int_ptr_ptr and children changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 6
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.0 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 7
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.1 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 8
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.2 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.3-9 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 1
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 2
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.10 changed, don't print values.
PASS: gdb.mi/mi-var-child.exp: step $line_dct_a0_0
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.11 changed, print values.
PASS: gdb.mi/mi-var-child.exp: listing of names and values of children
PASS: gdb.mi/mi-var-child.exp: listing of children, simple types: names, type and values, complex types: names and types
PASS: gdb.mi/mi-var-child.exp: delete var struct_declarations
PASS: gdb.mi/mi-var-child.exp: delete var weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 1
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 2
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 3
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 4
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 5
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 6
XFAIL: gdb.mi/mi-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 7
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: run to mi-var-child.c:324 (set breakpoint)
PASS: gdb.mi/mi-var-child.exp: create varobj for s
PASS: gdb.mi/mi-var-child.exp: list children of S
PASS: gdb.mi/mi-var-child.exp: delete S.a
PASS: gdb.mi/mi-var-child.exp: delete S.b
PASS: gdb.mi/mi-var-child.exp: delete S
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-var-cmd.exp ...
PASS: gdb.mi/mi-var-cmd.exp: create global variable
PASS: gdb.mi/mi-var-cmd.exp: create non-existent variable
PASS: gdb.mi/mi-var-cmd.exp: create out of scope variable
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: run to 131 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create local variable linteger
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpinteger
PASS: gdb.mi/mi-var-cmd.exp: create local variable lcharacter
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpcharacter
PASS: gdb.mi/mi-var-cmd.exp: create local variable llong
PASS: gdb.mi/mi-var-cmd.exp: create local variable lplong
PASS: gdb.mi/mi-var-cmd.exp: create local variable lfloat
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpfloat
PASS: gdb.mi/mi-var-cmd.exp: create local variable ldouble
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpdouble
PASS: gdb.mi/mi-var-cmd.exp: create local variable lsimple
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpsimple
PASS: gdb.mi/mi-var-cmd.exp: create local variable func
PASS: gdb.mi/mi-var-cmd.exp: create lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: create lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: create lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: create int
PASS: gdb.mi/mi-var-cmd.exp: update all vars
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_test
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (2)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (3)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lcharacter changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (4)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpcharacter changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (5)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: many changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (6)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: func and lpsimple changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (7)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lsimple and others changed
PASS: gdb.mi/mi-var-cmd.exp: assign to global_simple
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed after assign
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger again, same value
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger not changed after same assign
PASS: gdb.mi/mi-var-cmd.exp: eval linteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed after assign
PASS: gdb.mi/mi-var-cmd.exp: update all vars: no changes on second update
PASS: gdb.mi/mi-var-cmd.exp: eval lpinteger
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lcharacter
PASS: gdb.mi/mi-var-cmd.exp: eval lcharacter
PASS: gdb.mi/mi-var-cmd.exp: assign to llong
PASS: gdb.mi/mi-var-cmd.exp: eval llong
PASS: gdb.mi/mi-var-cmd.exp: assign to llong
PASS: gdb.mi/mi-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi-var-cmd.exp: eval lplong
PASS: gdb.mi/mi-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi-var-cmd.exp: eval lfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to lpfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to ldouble
PASS: gdb.mi/mi-var-cmd.exp: assign to func
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: var update
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func (update)
PASS: gdb.mi/mi-var-cmd.exp: create global variable array_ptr
PASS: gdb.mi/mi-var-cmd.exp: assign array to pointer
PASS: gdb.mi/mi-var-cmd.exp: assign array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at subroutine1
PASS: gdb.mi/mi-var-cmd.exp: mi runto subroutine1
PASS: gdb.mi/mi-var-cmd.exp: create i
PASS: gdb.mi/mi-var-cmd.exp: create l
PASS: gdb.mi/mi-var-cmd.exp: create linteger
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1
XFAIL: gdb.mi/mi-var-cmd.exp: update all vars: changed FIXME
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1 (2)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: i changed
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1 (3)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: llong changed
PASS: gdb.mi/mi-var-cmd.exp: next out of subroutine1
PASS: gdb.mi/mi-var-cmd.exp: update all vars: all now out of scope
PASS: gdb.mi/mi-var-cmd.exp: delete var
PASS: gdb.mi/mi-var-cmd.exp: delete var linteger
PASS: gdb.mi/mi-var-cmd.exp: delete var lpinteger
PASS: gdb.mi/mi-var-cmd.exp: delete var lcharacter
PASS: gdb.mi/mi-var-cmd.exp: delete var lpcharacter
PASS: gdb.mi/mi-var-cmd.exp: delete var llong
PASS: gdb.mi/mi-var-cmd.exp: delete var lplong
PASS: gdb.mi/mi-var-cmd.exp: delete var lfloat
PASS: gdb.mi/mi-var-cmd.exp: delete var lpfloat
PASS: gdb.mi/mi-var-cmd.exp: delete var ldouble
PASS: gdb.mi/mi-var-cmd.exp: delete var lpdouble
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple
PASS: gdb.mi/mi-var-cmd.exp: delete var lpsimple
PASS: gdb.mi/mi-var-cmd.exp: delete var func
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: delete var  lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: delete var i
PASS: gdb.mi/mi-var-cmd.exp: delete var l
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: create selected_a
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at incr_a
PASS: gdb.mi/mi-var-cmd.exp: mi runto incr_a
PASS: gdb.mi/mi-var-cmd.exp: update selected_a in incr_a
PASS: gdb.mi/mi-var-cmd.exp: step a line in incr_a
PASS: gdb.mi/mi-var-cmd.exp: return from incr_a to do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: update selected_a in do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: floating varobj invalidation
PASS: gdb.mi/mi-var-cmd.exp: delete selected_a
PASS: gdb.mi/mi-var-cmd.exp: delete array_ptr
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:334 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create varobj for v1
PASS: gdb.mi/mi-var-cmd.exp: create varobj for v2
PASS: gdb.mi/mi-var-cmd.exp: list children of v1
PASS: gdb.mi/mi-var-cmd.exp: list children of v1.nested
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 2
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: check V2: 4
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: V2 changed
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V2 1
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: nothing changed
PASS: gdb.mi/mi-var-cmd.exp: check V2: 5
PASS: gdb.mi/mi-var-cmd.exp: update V2 explicitly
PASS: gdb.mi/mi-var-cmd.exp: check V2: 6
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:368 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V1 1
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: nothing changed
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 2
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: update V1.nested.j
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: update V1.nested
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 9
PASS: gdb.mi/mi-var-cmd.exp: update V1.i
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 7
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:393 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V1 0
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 7
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 9
PASS: gdb.mi/mi-var-cmd.exp: update V1
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 10
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 11
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 12
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:493 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create varobj for Data
PASS: gdb.mi/mi-var-cmd.exp: list children of Data
PASS: gdb.mi/mi-var-cmd.exp: access bitfield
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:436 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create floating varobj
PASS: gdb.mi/mi-var-cmd.exp: update F (1)
PASS: gdb.mi/mi-var-cmd.exp: check F (1)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:447 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (2)
PASS: gdb.mi/mi-var-cmd.exp: check F (2)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:455 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (--all-values)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:461 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (3)
PASS: gdb.mi/mi-var-cmd.exp: check F (3)
PASS: gdb.mi/mi-var-cmd.exp: inside breakpoint inside callee
PASS: gdb.mi/mi-var-cmd.exp: continue to where i is initialized
PASS: gdb.mi/mi-var-cmd.exp: update F inside callee
PASS: gdb.mi/mi-var-cmd.exp: check F inside callee
PASS: gdb.mi/mi-var-cmd.exp: create null_ptr
PASS: gdb.mi/mi-var-cmd.exp: update null_ptr
PASS: gdb.mi/mi-var-cmd.exp: delete null_ptr
PASS: gdb.mi/mi-var-cmd.exp: kill program before endvar
PASS: gdb.mi/mi-var-cmd.exp: create endvar
PASS: gdb.mi/mi-var-cmd.exp: update endvar
PASS: gdb.mi/mi-var-cmd.exp: delete endvar
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: create varobj
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: check initial value
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at main
PASS: gdb.mi/mi-var-cmd.exp: mi runto main
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now, not changed
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now, not changed
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-var-cp.exp ...
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:20 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for rx
PASS: gdb.mi/mi-var-cp.exp: update RX (1)
PASS: gdb.mi/mi-var-cp.exp: check RX: expect 167
PASS: gdb.mi/mi-var-cp.exp: update RX (2)
PASS: gdb.mi/mi-var-cp.exp: check RX: expect 567
PASS: gdb.mi/mi-var-cp.exp: update RX (3)
PASS: gdb.mi/mi-var-cp.exp: delete RX
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:46 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for s2
PASS: gdb.mi/mi-var-cp.exp: list children of s2
PASS: gdb.mi/mi-var-cp.exp: list children of s2.s
PASS: gdb.mi/mi-var-cp.exp: list children of s2.s.public
PASS: gdb.mi/mi-var-cp.exp: check S2.S.public.i
PASS: gdb.mi/mi-var-cp.exp: check S2.S.public.j
PASS: gdb.mi/mi-var-cp.exp: delete S2
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:82 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for rptr_s
PASS: gdb.mi/mi-var-cp.exp: list public child of RPTR
PASS: gdb.mi/mi-var-cp.exp: list children of reference to pointer
PASS: gdb.mi/mi-var-cp.exp: check i member
PASS: gdb.mi/mi-var-cp.exp: check j member
PASS: gdb.mi/mi-var-cp.exp: delete RPTR
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:105 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for s
PASS: gdb.mi/mi-var-cp.exp: create varobj for s
PASS: gdb.mi/mi-var-cp.exp: check attributes of S
PASS: gdb.mi/mi-var-cp.exp: check attributes of R
PASS: gdb.mi/mi-var-cp.exp: -var-update should not list structure varobjs
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:145 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for ip
PASS: gdb.mi/mi-var-cp.exp: list children of IP
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression IP.*ip
PASS: gdb.mi/mi-var-cp.exp: create varobj for dp
PASS: gdb.mi/mi-var-cp.exp: list children of DP
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression DP.Base1
PASS: gdb.mi/mi-var-cp.exp: list children of DP.public
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression DP.public.i
PASS: gdb.mi/mi-var-cp.exp: list children of DP.Base1
PASS: gdb.mi/mi-var-cp.exp: list children of DP.Base1.public
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression DP.Base1.public.i
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression DP.public
PASS: gdb.mi/mi-var-cp.exp: create varobj for d
PASS: gdb.mi/mi-var-cp.exp: list children of D
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression D.Base1
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:192 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for array
PASS: gdb.mi/mi-var-cp.exp: list children of A
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression A.2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-var-display.exp ...
PASS: gdb.mi/mi-var-display.exp: break-insert operation
PASS: gdb.mi/mi-var-display.exp: run to main
PASS: gdb.mi/mi-var-display.exp: create local variable bar
PASS: gdb.mi/mi-var-display.exp: info type variable bar
PASS: gdb.mi/mi-var-display.exp: show format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar
PASS: gdb.mi/mi-var-display.exp: set format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar with new format
PASS: gdb.mi/mi-var-display.exp: assing to variable bar
PASS: gdb.mi/mi-var-display.exp: set format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar with new value
PASS: gdb.mi/mi-var-display.exp: delete var bar
PASS: gdb.mi/mi-var-display.exp: create local variable foo
PASS: gdb.mi/mi-var-display.exp: info type variable foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: set format variable foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: assing to variable foo
PASS: gdb.mi/mi-var-display.exp: set format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo in hex
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in hex
PASS: gdb.mi/mi-var-display.exp: eval variable foo in octal
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in octal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in decimal
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in decimal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in natural
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in natural
PASS: gdb.mi/mi-var-display.exp: eval variable foo in binary
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in binary
PASS: gdb.mi/mi-var-display.exp: delete var foo
PASS: gdb.mi/mi-var-display.exp: create local variable weird
PASS: gdb.mi/mi-var-display.exp: get children local variable weird
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird
PASS: gdb.mi/mi-var-display.exp: set format variable weird.integer
PASS: gdb.mi/mi-var-display.exp: set format variable weird.character
PASS: gdb.mi/mi-var-display.exp: set format variable weird.char_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.long_int
PASS: gdb.mi/mi-var-display.exp: set format variable weird.int_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.long_array
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_struct
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.u1
PASS: gdb.mi/mi-var-display.exp: set format variable weird.s2
PASS: gdb.mi/mi-var-display.exp: delete var weird
PASS: gdb.mi/mi-var-display.exp: break-insert operation 2
PASS: gdb.mi/mi-var-display.exp: continue to do_special_tests
PASS: gdb.mi/mi-var-display.exp: create local variable u
PASS: gdb.mi/mi-var-display.exp: eval variable u
PASS: gdb.mi/mi-var-display.exp: info type variable u
PASS: gdb.mi/mi-var-display.exp: is u editable
PASS: gdb.mi/mi-var-display.exp: get number of children of u
PASS: gdb.mi/mi-var-display.exp: get children of u
PASS: gdb.mi/mi-var-display.exp: create local variable anonu
PASS: gdb.mi/mi-var-display.exp: eval variable anonu
PASS: gdb.mi/mi-var-display.exp: info type variable anonu
PASS: gdb.mi/mi-var-display.exp: is anonu editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anonu
PASS: gdb.mi/mi-var-display.exp: get children of anonu
PASS: gdb.mi/mi-var-display.exp: create local variable s
PASS: gdb.mi/mi-var-display.exp: eval variable s
PASS: gdb.mi/mi-var-display.exp: info type variable s
PASS: gdb.mi/mi-var-display.exp: is s editable
PASS: gdb.mi/mi-var-display.exp: get number of children of s
PASS: gdb.mi/mi-var-display.exp: get children of s
PASS: gdb.mi/mi-var-display.exp: create local variable anons
PASS: gdb.mi/mi-var-display.exp: eval variable anons
PASS: gdb.mi/mi-var-display.exp: info type variable anons
PASS: gdb.mi/mi-var-display.exp: is anons editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anons
PASS: gdb.mi/mi-var-display.exp: get children of anons
PASS: gdb.mi/mi-var-display.exp: create local variable e
XFAIL: gdb.mi/mi-var-display.exp: eval variable e
PASS: gdb.mi/mi-var-display.exp: info type variable e
PASS: gdb.mi/mi-var-display.exp: is e editable
PASS: gdb.mi/mi-var-display.exp: get number of children of e
PASS: gdb.mi/mi-var-display.exp: get children of e
PASS: gdb.mi/mi-var-display.exp: create local variable anone
PASS: gdb.mi/mi-var-display.exp: eval variable anone
PASS: gdb.mi/mi-var-display.exp: create duplicate local variable anone
PASS: gdb.mi/mi-var-display.exp: info type variable anone
PASS: gdb.mi/mi-var-display.exp: is anone editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anone
PASS: gdb.mi/mi-var-display.exp: get children of anone
PASS: gdb.mi/mi-var-display.exp: print FP register
PASS: gdb.mi/mi-var-display.exp: breakpoint at incr_a
PASS: gdb.mi/mi-var-display.exp: mi runto incr_a
PASS: gdb.mi/mi-var-display.exp: create local variable a1
PASS: gdb.mi/mi-var-display.exp: create variable a2 in different scope
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-var-invalidate.exp ...
PASS: gdb.mi/mi-var-invalidate.exp: create global variable
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-invalidate.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-invalidate.exp: create local variable linteger
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at main
PASS: gdb.mi/mi-var-invalidate.exp: mi runto main
PASS: gdb.mi/mi-var-invalidate.exp: linteger not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (1)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple still alive
PASS: gdb.mi/mi-var-invalidate.exp: type simpleton for valid variable global_simple
PASS: gdb.mi/mi-var-invalidate.exp: linteger not valid anymore due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (2)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable global_simple
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi-watch.exp ...
PASS: gdb.mi/mi-watch.exp: hw watchpoints toggle (1)
PASS: gdb.mi/mi-watch.exp: sw: breakpoint at callee4
PASS: gdb.mi/mi-watch.exp: sw: mi runto callee4
PASS: gdb.mi/mi-watch.exp: sw: break-watch operation
PASS: gdb.mi/mi-watch.exp: sw: list of watchpoints
PASS: gdb.mi/mi-watch.exp: sw: watchpoint trigger
XPASS: gdb.mi/mi-watch.exp: sw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: hw watchpoints toggle (2)
PASS: gdb.mi/mi-watch.exp: hw: breakpoint at callee4
PASS: gdb.mi/mi-watch.exp: hw: mi runto callee4
PASS: gdb.mi/mi-watch.exp: hw: break-watch operation
PASS: gdb.mi/mi-watch.exp: hw: list of watchpoints
PASS: gdb.mi/mi-watch.exp: hw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: hw: watchpoint trigger
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-amd64-entry-value.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-basics.exp ...
PASS: gdb.mi/mi2-basics.exp: acceptance of MI operations
PASS: gdb.mi/mi2-basics.exp: file-exec-and-symbols operation
PASS: gdb.mi/mi2-basics.exp: file-exec-file operation
PASS: gdb.mi/mi2-basics.exp: file-symbol-file operation
PASS: gdb.mi/mi2-basics.exp: break-delete (all) operation
PASS: gdb.mi/mi2-basics.exp: all breakpoints removed
PASS: gdb.mi/mi2-basics.exp: environment-directory arg operation
PASS: gdb.mi/mi2-basics.exp: environment-directory empty-string operation
PASS: gdb.mi/mi2-basics.exp: environment-directory operation
PASS: gdb.mi/mi2-basics.exp: environment-cd arg operation
PASS: gdb.mi/mi2-basics.exp: environment-pwd operation
PASS: gdb.mi/mi2-basics.exp: -environment-path
PASS: gdb.mi/mi2-basics.exp: environment-path no-args operation
PASS: gdb.mi/mi2-basics.exp: environment-path dir1 dir2 operation
PASS: gdb.mi/mi2-basics.exp: environment-path -r dir operation
PASS: gdb.mi/mi2-basics.exp: environment-path -r operation
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-break.exp ...
PASS: gdb.mi/mi2-break.exp: break-insert -t operation
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi2-break.exp: list of breakpoints
PASS: gdb.mi/mi2-break.exp: delete temp breakpoints
XFAIL: gdb.mi/mi2-break.exp: break-insert -r operation
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp callee2
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp callee
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp .*llee
XFAIL: gdb.mi/mi2-break.exp: list of breakpoints
PASS: gdb.mi/mi2-break.exp: delete temp breakpoints
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-cli.exp ...
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with no arguments
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with one argument
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with bogus interpreter
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console bogus
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "file $binfile"
PASS: gdb.mi/mi2-cli.exp: breakpoint at main
PASS: gdb.mi/mi2-cli.exp: mi runto main
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set args foobar"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "show args"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "break callee4"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "info break"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set listsize 1"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "list"
PASS: gdb.mi/mi2-cli.exp: continue to callee4
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "delete 2"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "up"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "down"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "frame 2"
PASS: gdb.mi/mi2-cli.exp: -stack-select-frame 0
PASS: gdb.mi/mi2-cli.exp: -break-insert -t basics.c:$line_main_hello
PASS: gdb.mi/mi2-cli.exp: -exec-continue to line 66
PASS: gdb.mi/mi2-cli.exp: -exec-next to line 68
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_return
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "help set args"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set $pc=0x0"
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-console.exp ...
PASS: gdb.mi/mi2-console.exp: breakpoint at main
PASS: gdb.mi/mi2-console.exp: mi runto main
PASS: gdb.mi/mi2-console.exp: Started step over hello
KFAIL: gdb.mi/mi2-console.exp: Hello message (PRMS: gdb/623)
PASS: gdb.mi/mi2-console.exp: finished step over hello
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-disassemble.exp ...
PASS: gdb.mi/mi2-disassemble.exp: breakpoint at main
PASS: gdb.mi/mi2-disassemble.exp: mi runto main
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble from pc to pc+12 assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file & line, assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble from pc to pc+12 assembly with opcodes
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file & line, assembly with opcodes
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble range assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line assembly mixed with opcodes
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble range assembly mixed with opcodes
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble bogus filename
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble bogus address
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble mix different args
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble wrong mode arg
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (zero lines) assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (zero lines) assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly mixed
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-eval.exp ...
PASS: gdb.mi/mi2-eval.exp: breakpoint at callee4
PASS: gdb.mi/mi2-eval.exp: mi runto callee4
PASS: gdb.mi/mi2-eval.exp: next at callee4
PASS: gdb.mi/mi2-eval.exp: eval A
PASS: gdb.mi/mi2-eval.exp: eval &A
PASS: gdb.mi/mi2-eval.exp: eval A+3
PASS: gdb.mi/mi2-eval.exp: eval A + 3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-file.exp ...
PASS: gdb.mi/mi2-file.exp: request path info of current source file (basics.c)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-hack-cli.exp ...
PASS: gdb.mi/mi2-hack-cli.exp: show architecture
PASS: gdb.mi/mi2-hack-cli.exp: 47show architecture
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-pthreads.exp ...
PASS: gdb.mi/mi2-pthreads.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi2-pthreads.exp: breakpoint at done_making_threads
PASS: gdb.mi/mi2-pthreads.exp: mi runto done_making_threads
PASS: gdb.mi/mi2-pthreads.exp: -thread_list_ids (in check_mi_thread_command_set)
PASS: gdb.mi/mi2-pthreads.exp: finding threads in MI output (in check_mi_thread_command_set)
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 123456789
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 6
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 5
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 4
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 3
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 2
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-read-memory.exp ...
PASS: gdb.mi/mi2-read-memory.exp: breakpoint at main
PASS: gdb.mi/mi2-read-memory.exp: mi runto main
PASS: gdb.mi/mi2-read-memory.exp: next at main
PASS: gdb.mi/mi2-read-memory.exp: no arguments
PASS: gdb.mi/mi2-read-memory.exp: 3x2, one byte
PASS: gdb.mi/mi2-read-memory.exp: 3x2, one byte offset by -6
PASS: gdb.mi/mi2-read-memory.exp: expression in quotes
PASS: gdb.mi/mi2-read-memory.exp: ascii and data
PASS: gdb.mi/mi2-read-memory.exp: decimal
PASS: gdb.mi/mi2-read-memory.exp: octal
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-regs.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-return.exp ...
PASS: gdb.mi/mi2-return.exp: breakpoint at callee4
PASS: gdb.mi/mi2-return.exp: mi runto callee4
PASS: gdb.mi/mi2-return.exp: delete all breakpoints
PASS: gdb.mi/mi2-return.exp: return from callee4 now
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-simplerun.exp ...
PASS: gdb.mi/mi2-simplerun.exp: break-insert operation
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi2-simplerun.exp: list of breakpoints
PASS: gdb.mi/mi2-simplerun.exp: disabling of breakpoints
PASS: gdb.mi/mi2-simplerun.exp: list of breakpoints, 16 disabled
PASS: gdb.mi/mi2-simplerun.exp: run to main
PASS: gdb.mi/mi2-simplerun.exp: next at main
PASS: gdb.mi/mi2-simplerun.exp: step at main
PASS: gdb.mi/mi2-simplerun.exp: step to callee4
PASS: gdb.mi/mi2-simplerun.exp: exec-finish
PASS: gdb.mi/mi2-simplerun.exp: continue to end
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-stack.exp ...
PASS: gdb.mi/mi2-stack.exp: breakpoint at callee4
PASS: gdb.mi/mi2-stack.exp: mi runto callee4
PASS: gdb.mi/mi2-stack.exp: stack frame listing
PASS: gdb.mi/mi2-stack.exp: stack frame listing 1 1
PASS: gdb.mi/mi2-stack.exp: stack frame listing 1 3
PASS: gdb.mi/mi2-stack.exp: stack frame listing wrong
PASS: gdb.mi/mi2-stack.exp: selected frame listing
PASS: gdb.mi/mi2-stack.exp: stack frame listing 1 300
PASS: gdb.mi/mi2-stack.exp: stack args listing 0
PASS: gdb.mi/mi2-stack.exp: stack args listing 0 1 1
PASS: gdb.mi/mi2-stack.exp: stack args listing 0 1 3
PASS: gdb.mi/mi2-stack.exp: stack args listing 1
PASS: gdb.mi/mi2-stack.exp: stack args listing 1 1 1
PASS: gdb.mi/mi2-stack.exp: stack args listing 1 1 3
PASS: gdb.mi/mi2-stack.exp: stack args listing wrong
PASS: gdb.mi/mi2-stack.exp: stack args listing 1 1 300
PASS: gdb.mi/mi2-stack.exp: stack locals listing of names
PASS: gdb.mi/mi2-stack.exp: next's in callee4
PASS: gdb.mi/mi2-stack.exp: stack locals listing of names and values
PASS: gdb.mi/mi2-stack.exp: stack locals listing, simple types: names and values, complex type: names and types
PASS: gdb.mi/mi2-stack.exp: stack locals listing wrong
PASS: gdb.mi/mi2-stack.exp: stack select frame 1
PASS: gdb.mi/mi2-stack.exp: stack locals listing for new frame
PASS: gdb.mi/mi2-stack.exp: stack locals for same frame (level 1)
PASS: gdb.mi/mi2-stack.exp: stack info-depth
PASS: gdb.mi/mi2-stack.exp: stack info-depth 3
PASS: gdb.mi/mi2-stack.exp: stack info-depth 99
PASS: gdb.mi/mi2-stack.exp: stack info-depth wrong usage
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-stepi.exp ...
PASS: gdb.mi/mi2-stepi.exp: breakpoint at main
PASS: gdb.mi/mi2-stepi.exp: mi runto main
PASS: gdb.mi/mi2-stepi.exp: step-instruction at main
PASS: gdb.mi/mi2-stepi.exp: step-instruction at main (line check)
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main (line check)
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main 2
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main 2 (line check)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-syn-frame.exp ...
PASS: gdb.mi/mi2-syn-frame.exp: breakpoint at main
PASS: gdb.mi/mi2-syn-frame.exp: mi runto main
PASS: gdb.mi/mi2-syn-frame.exp: insert breakpoint foo
PASS: gdb.mi/mi2-syn-frame.exp: call inferior's function with a breakpoint set in it
PASS: gdb.mi/mi2-syn-frame.exp: backtrace from inferior function stopped at bp, showing gdb dummy frame
PASS: gdb.mi/mi2-syn-frame.exp: finished exec continue
PASS: gdb.mi/mi2-syn-frame.exp: list stack frames
PASS: gdb.mi/mi2-syn-frame.exp: insert breakpoint subroutine
PASS: gdb.mi/mi2-syn-frame.exp: evaluate expression have_a_very_merry_interrupt
PASS: gdb.mi/mi2-syn-frame.exp: list stack frames
PASS: gdb.mi/mi2-syn-frame.exp: finished exec continue
PASS: gdb.mi/mi2-syn-frame.exp: list stack frames
PASS: gdb.mi/mi2-syn-frame.exp: call inferior function which raises exception
PASS: gdb.mi/mi2-syn-frame.exp: backtrace from inferior function at exception
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-until.exp ...
PASS: gdb.mi/mi2-until.exp: break-insert operation
PASS: gdb.mi/mi2-until.exp: run to main
PASS: gdb.mi/mi2-until.exp: break-delete 1
KFAIL: gdb.mi/mi2-until.exp: until after while loop (stopped at wrong place) (PRMS: gdb/2104)
PASS: gdb.mi/mi2-until.exp: until line number
PASS: gdb.mi/mi2-until.exp: until line number:file
PASS: gdb.mi/mi2-until.exp: until after current function
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-var-block.exp ...
PASS: gdb.mi/mi2-var-block.exp: breakpoint at do_block_tests
PASS: gdb.mi/mi2-var-block.exp: mi runto do_block_tests
PASS: gdb.mi/mi2-var-block.exp: create local variable cb
PASS: gdb.mi/mi2-var-block.exp: create local variable foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: delete var foo
PASS: gdb.mi/mi2-var-block.exp: create local variable foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: update all vars: cb foo changed
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: create local variable inner_foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: create local variable foo2
XFAIL: gdb.mi/mi2-var-block.exp: update inner_foo: should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi2-var-block.exp: evaluate inner_foo: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: update foo: did not change
PASS: gdb.mi/mi2-var-block.exp: delete var inner_foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi2-var-block.exp: update foo2: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi2-var-block.exp: update foo2 should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi2-var-block.exp: update foo should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: update cb
PASS: gdb.mi/mi2-var-block.exp: delete var foo
PASS: gdb.mi/mi2-var-block.exp: delete var foo2
PASS: gdb.mi/mi2-var-block.exp: delete var cb
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-var-child.exp ...
PASS: gdb.mi/mi2-var-child.exp: breakpoint at do_children_tests
PASS: gdb.mi/mi2-var-child.exp: mi runto do_children_tests
PASS: gdb.mi/mi2-var-child.exp: run to 220 (set breakpoint)
PASS: gdb.mi/mi2-var-child.exp: create local variable struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.character
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.character
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_int
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_int
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.3
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.3
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.4
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.4
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.5
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.5
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.6
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.6
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.7
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.7
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.8
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.8
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.9
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.9
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.a
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.a
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.b
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.b
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.c
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.c
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.d
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.d
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.g
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.g
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.h
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.h
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.i
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.i
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: step to line $line_dct_123
PASS: gdb.mi/mi2-var-child.exp: create local variable weird
PASS: gdb.mi/mi2-var-child.exp: get children of weird
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird
PASS: gdb.mi/mi2-var-child.exp: get children of weird.long_array
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.long_array
PASS: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: is weird editable
PASS: gdb.mi/mi2-var-child.exp: is weird->int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.u1 editable
PASS: gdb.mi/mi2-var-child.exp: is weird.s2 editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.a editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.b editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.c editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array.0 editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations editable
PASS: gdb.mi/mi2-var-child.exp: delete var weird
PASS: gdb.mi/mi2-var-child.exp: update all vars. None changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 1
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 4
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 5
PASS: gdb.mi/mi2-var-child.exp: update all vars int_ptr_ptr and children changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 6
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.0 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 7
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.1 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 8
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.2 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_nothing
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.3-9 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_a0_0
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.func_ptr changed
PASS: gdb.mi/mi2-var-child.exp: delete var struct_declarations
PASS: gdb.mi/mi2-var-child.exp: delete var weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 1
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 2
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 3
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 4
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 5
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 6
XFAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 7
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-var-cmd.exp ...
PASS: gdb.mi/mi2-var-cmd.exp: create global variable
PASS: gdb.mi/mi2-var-cmd.exp: create non-existent variable
PASS: gdb.mi/mi2-var-cmd.exp: create out of scope variable
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi2-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi2-var-cmd.exp: run to 131 (set breakpoint)
PASS: gdb.mi/mi2-var-cmd.exp: create local variable linteger
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpcharacter
PASS: gdb.mi/mi2-var-cmd.exp: create local variable llong
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lplong
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lfloat
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: create local variable ldouble
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpdouble
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lsimple
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpsimple
PASS: gdb.mi/mi2-var-cmd.exp: create local variable func
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: create int
PASS: gdb.mi/mi2-var-cmd.exp: update all vars
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_test
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (2)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpinteger changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (3)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lcharacter changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (4)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpcharacter changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (5)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: many changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (6)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: func and lpsimple changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (7)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lsimple and others changed
PASS: gdb.mi/mi2-var-cmd.exp: assign to global_simple
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger changed after assign
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger again, same value
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger not changed after same assign
PASS: gdb.mi/mi2-var-cmd.exp: eval linteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpinteger changed after assign
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: no changes on second update
PASS: gdb.mi/mi2-var-cmd.exp: eval lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: eval lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: assign to llong
PASS: gdb.mi/mi2-var-cmd.exp: eval llong
PASS: gdb.mi/mi2-var-cmd.exp: assign to llong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi2-var-cmd.exp: eval lplong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi2-var-cmd.exp: eval lfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to ldouble
PASS: gdb.mi/mi2-var-cmd.exp: assign to func
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: mi runto subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: create i
PASS: gdb.mi/mi2-var-cmd.exp: create l
PASS: gdb.mi/mi2-var-cmd.exp: create linteger
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1
XFAIL: gdb.mi/mi2-var-cmd.exp: update all vars: changed FIXME
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1 (2)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: i changed
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1 (3)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: llong changed
PASS: gdb.mi/mi2-var-cmd.exp: next out of subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: all now out of scope
PASS: gdb.mi/mi2-var-cmd.exp: delete var
PASS: gdb.mi/mi2-var-cmd.exp: delete var linteger
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: delete var lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpcharacter
PASS: gdb.mi/mi2-var-cmd.exp: delete var llong
PASS: gdb.mi/mi2-var-cmd.exp: delete var lplong
PASS: gdb.mi/mi2-var-cmd.exp: delete var lfloat
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: delete var ldouble
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpdouble
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpsimple
PASS: gdb.mi/mi2-var-cmd.exp: delete var func
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: delete var  lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: delete var i
PASS: gdb.mi/mi2-var-cmd.exp: delete var l
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: mi runto do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: create selected_a
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at incr_a
PASS: gdb.mi/mi2-var-cmd.exp: mi runto incr_a
PASS: gdb.mi/mi2-var-cmd.exp: update selected_a in incr_a
PASS: gdb.mi/mi2-var-cmd.exp: step a line in incr_a
PASS: gdb.mi/mi2-var-cmd.exp: return from incr_a to do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: update selected_a in do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: floating varobj invalidation
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-var-display.exp ...
PASS: gdb.mi/mi2-var-display.exp: break-insert operation
PASS: gdb.mi/mi2-var-display.exp: run to main
PASS: gdb.mi/mi2-var-display.exp: create local variable bar
PASS: gdb.mi/mi2-var-display.exp: info type variable bar
PASS: gdb.mi/mi2-var-display.exp: show format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar
PASS: gdb.mi/mi2-var-display.exp: set format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar with new format
PASS: gdb.mi/mi2-var-display.exp: assing to variable bar
PASS: gdb.mi/mi2-var-display.exp: set format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar with new value
PASS: gdb.mi/mi2-var-display.exp: delete var bar
PASS: gdb.mi/mi2-var-display.exp: create local variable foo
PASS: gdb.mi/mi2-var-display.exp: info type variable foo
PASS: gdb.mi/mi2-var-display.exp: show format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: set format variable foo
PASS: gdb.mi/mi2-var-display.exp: show format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: assing to variable foo
PASS: gdb.mi/mi2-var-display.exp: set format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in hex
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in hex
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in octal
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in octal
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in decimal
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in decimal
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in natural
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in natural
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in binary
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in binary
PASS: gdb.mi/mi2-var-display.exp: delete var foo
PASS: gdb.mi/mi2-var-display.exp: create local variable weird
PASS: gdb.mi/mi2-var-display.exp: get children local variable weird
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: show format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: show format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.integer
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.character
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.char_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.long_int
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.long_array
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_struct
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.u1
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.s2
PASS: gdb.mi/mi2-var-display.exp: delete var weird
PASS: gdb.mi/mi2-var-display.exp: break-insert operation 2
PASS: gdb.mi/mi2-var-display.exp: continue to do_special_tests
PASS: gdb.mi/mi2-var-display.exp: create local variable u
PASS: gdb.mi/mi2-var-display.exp: eval variable u
PASS: gdb.mi/mi2-var-display.exp: info type variable u
PASS: gdb.mi/mi2-var-display.exp: is u editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of u
PASS: gdb.mi/mi2-var-display.exp: get children of u
PASS: gdb.mi/mi2-var-display.exp: create local variable anonu
PASS: gdb.mi/mi2-var-display.exp: eval variable anonu
PASS: gdb.mi/mi2-var-display.exp: info type variable anonu
PASS: gdb.mi/mi2-var-display.exp: is anonu editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anonu
PASS: gdb.mi/mi2-var-display.exp: get children of anonu
PASS: gdb.mi/mi2-var-display.exp: create local variable s
PASS: gdb.mi/mi2-var-display.exp: eval variable s
PASS: gdb.mi/mi2-var-display.exp: info type variable s
PASS: gdb.mi/mi2-var-display.exp: is s editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of s
PASS: gdb.mi/mi2-var-display.exp: get children of s
PASS: gdb.mi/mi2-var-display.exp: create local variable anons
PASS: gdb.mi/mi2-var-display.exp: eval variable anons
PASS: gdb.mi/mi2-var-display.exp: info type variable anons
PASS: gdb.mi/mi2-var-display.exp: is anons editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anons
PASS: gdb.mi/mi2-var-display.exp: get children of anons
PASS: gdb.mi/mi2-var-display.exp: create local variable e
XFAIL: gdb.mi/mi2-var-display.exp: eval variable e
PASS: gdb.mi/mi2-var-display.exp: info type variable e
PASS: gdb.mi/mi2-var-display.exp: is e editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of e
PASS: gdb.mi/mi2-var-display.exp: get children of e
PASS: gdb.mi/mi2-var-display.exp: create local variable anone
PASS: gdb.mi/mi2-var-display.exp: eval variable anone
PASS: gdb.mi/mi2-var-display.exp: create duplicate local variable anone
PASS: gdb.mi/mi2-var-display.exp: info type variable anone
PASS: gdb.mi/mi2-var-display.exp: is anone editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anone
PASS: gdb.mi/mi2-var-display.exp: get children of anone
PASS: gdb.mi/mi2-var-display.exp: print FP register
PASS: gdb.mi/mi2-var-display.exp: breakpoint at incr_a
PASS: gdb.mi/mi2-var-display.exp: mi runto incr_a
PASS: gdb.mi/mi2-var-display.exp: create local variable a1
PASS: gdb.mi/mi2-var-display.exp: create variable a2 in different scope
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.mi/mi2-watch.exp ...
PASS: gdb.mi/mi2-watch.exp: hw watchpoints toggle (1)
PASS: gdb.mi/mi2-watch.exp: sw: breakpoint at callee4
PASS: gdb.mi/mi2-watch.exp: sw: mi runto callee4
PASS: gdb.mi/mi2-watch.exp: sw: break-watch operation
PASS: gdb.mi/mi2-watch.exp: sw: list of watchpoints
PASS: gdb.mi/mi2-watch.exp: sw: watchpoint trigger
XPASS: gdb.mi/mi2-watch.exp: sw: watchpoint trigger
PASS: gdb.mi/mi2-watch.exp: hw watchpoints toggle (2)
PASS: gdb.mi/mi2-watch.exp: hw: breakpoint at callee4
PASS: gdb.mi/mi2-watch.exp: hw: mi runto callee4
PASS: gdb.mi/mi2-watch.exp: hw: break-watch operation
PASS: gdb.mi/mi2-watch.exp: hw: list of watchpoints
PASS: gdb.mi/mi2-watch.exp: hw: watchpoint trigger
PASS: gdb.mi/mi2-watch.exp: hw: watchpoint trigger

		=== gdb Summary ===

# of expected passes		1610
# of unexpected failures	4
# of unexpected successes	2
# of expected failures		26
# of known failures		3
# of unsupported tests		1
[...]/tschwinge/Ferry_Tagscherer.build/gdb/testsuite/../../gdb/gdb version  7.3.50.20111016-cvs -nw -nx -data-directory [...]/tschwinge/Ferry_Tagscherer.build/gdb/testsuite/../data-directory 

