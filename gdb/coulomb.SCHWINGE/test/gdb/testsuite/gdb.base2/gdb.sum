Test Run By thomas on Fri Jun 14 11:53:14 2013
Native configuration is i686-unknown-gnu0.3

		=== gdb tests ===

Schedule of variations:
    unix

Running target unix
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watchpoint-cond-gone.exp ...
PASS: gdb.base/watchpoint-cond-gone.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-cond-gone.exp: continue to breakpoint: Place to set the watchpoint
PASS: gdb.base/watchpoint-cond-gone.exp: Place the watchpoint
PASS: gdb.base/watchpoint-cond-gone.exp: Catch the no longer valid watchpoint
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watch-read.exp ...
FAIL: gdb.base/watch-read.exp: set hardware read watchpoint on global variable
FAIL: gdb.base/watch-read.exp: read watchpoint triggers on first read (timeout)
FAIL: gdb.base/watch-read.exp: read watchpoint triggers on read after value changed (timeout)
FAIL: gdb.base/watch-read.exp: set write watchpoint on global variable (timeout)
FAIL: gdb.base/watch-read.exp: write watchpoint triggers (timeout)
FAIL: gdb.base/watch-read.exp: only write watchpoint triggers when value changes (timeout)
FAIL: gdb.base/watch-read.exp: read watchpoint triggers when value doesn't change, trapping reads and writes (timeout)
FAIL: gdb.base/watch-read.exp: only read watchpoint triggers when value doesn't change (timeout)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/radix.exp ...
PASS: gdb.base/radix.exp: initialize radix, input radix 2
PASS: gdb.base/radix.exp: set input-radix 2
PASS: gdb.base/radix.exp: show radix, input radix 2
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 2
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 2
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 2
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 2
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 2
PASS: gdb.base/radix.exp: print 10; expect 2; input radix 2
PASS: gdb.base/radix.exp: print 11; expect 3; input radix 2
PASS: gdb.base/radix.exp: print -10; expect -2; input radix 2
PASS: gdb.base/radix.exp: print -11; expect -3; input radix 2
PASS: gdb.base/radix.exp: print 100; expect 4; input radix 2
PASS: gdb.base/radix.exp: print 101; expect 5; input radix 2
PASS: gdb.base/radix.exp: print -100; expect -4; input radix 2
PASS: gdb.base/radix.exp: print -101; expect -5; input radix 2
PASS: gdb.base/radix.exp: print 10101; expect 21; input radix 2
PASS: gdb.base/radix.exp: print 4; expect Invalid number "4"\.; input radix 2
PASS: gdb.base/radix.exp: print -2; expect Invalid number "2"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 3
PASS: gdb.base/radix.exp: set input-radix 3
PASS: gdb.base/radix.exp: show radix, input radix 3
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 3
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 3
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 3
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 3
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 3
PASS: gdb.base/radix.exp: print 10; expect 3; input radix 3
PASS: gdb.base/radix.exp: print 11; expect 4; input radix 3
PASS: gdb.base/radix.exp: print -10; expect -3; input radix 3
PASS: gdb.base/radix.exp: print -11; expect -4; input radix 3
PASS: gdb.base/radix.exp: print 100; expect 9; input radix 3
PASS: gdb.base/radix.exp: print 101; expect 10; input radix 3
PASS: gdb.base/radix.exp: print -100; expect -9; input radix 3
PASS: gdb.base/radix.exp: print -101; expect -10; input radix 3
PASS: gdb.base/radix.exp: print 10101; expect 91; input radix 3
PASS: gdb.base/radix.exp: print 2; expect 2; input radix 3
PASS: gdb.base/radix.exp: print 20; expect 6; input radix 3
PASS: gdb.base/radix.exp: print 3; expect Invalid number "3"\.; input radix 3
PASS: gdb.base/radix.exp: print 30; expect Invalid number "30"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 8
PASS: gdb.base/radix.exp: set input-radix 8
PASS: gdb.base/radix.exp: show radix, input radix 8
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 8
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 8
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 8
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 8
PASS: gdb.base/radix.exp: print 10; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 11; expect 9; input radix 8
PASS: gdb.base/radix.exp: print -10; expect -8; input radix 8
PASS: gdb.base/radix.exp: print -11; expect -9; input radix 8
PASS: gdb.base/radix.exp: print 100; expect 64; input radix 8
PASS: gdb.base/radix.exp: print 101; expect 65; input radix 8
PASS: gdb.base/radix.exp: print -100; expect -64; input radix 8
PASS: gdb.base/radix.exp: print -101; expect -65; input radix 8
PASS: gdb.base/radix.exp: print 10101; expect 4161; input radix 8
PASS: gdb.base/radix.exp: print 20; expect 16; input radix 8
PASS: gdb.base/radix.exp: print -20; expect -16; input radix 8
PASS: gdb.base/radix.exp: print 8; expect Invalid number "8".; input radix 8
PASS: gdb.base/radix.exp: print -9; expect Invalid number "9".; input radix 8
PASS: gdb.base/radix.exp: initialize radix, input radix 10
PASS: gdb.base/radix.exp: set input-radix 10
PASS: gdb.base/radix.exp: show radix, input radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 10
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 10
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 10
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; input radix 10
PASS: gdb.base/radix.exp: print 11; expect 11; input radix 10
PASS: gdb.base/radix.exp: print -10; expect -10; input radix 10
PASS: gdb.base/radix.exp: print -11; expect -11; input radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; input radix 10
PASS: gdb.base/radix.exp: print 101; expect 101; input radix 10
PASS: gdb.base/radix.exp: print -100; expect -100; input radix 10
PASS: gdb.base/radix.exp: print -101; expect -101; input radix 10
PASS: gdb.base/radix.exp: print 10101; expect 10101; input radix 10
PASS: gdb.base/radix.exp: print -12; expect -12; input radix 10
PASS: gdb.base/radix.exp: initialize radix, input radix 16
PASS: gdb.base/radix.exp: set input-radix 16
PASS: gdb.base/radix.exp: show radix, input radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 16
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 16
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 16
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 16
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 16
PASS: gdb.base/radix.exp: print 10; expect 16; input radix 16
PASS: gdb.base/radix.exp: print 11; expect 17; input radix 16
PASS: gdb.base/radix.exp: print -10; expect -16; input radix 16
PASS: gdb.base/radix.exp: print -11; expect -17; input radix 16
PASS: gdb.base/radix.exp: print 100; expect 256; input radix 16
PASS: gdb.base/radix.exp: print 101; expect 257; input radix 16
PASS: gdb.base/radix.exp: print -100; expect -256; input radix 16
PASS: gdb.base/radix.exp: print -101; expect -257; input radix 16
PASS: gdb.base/radix.exp: print 10101; expect 65793; input radix 16
PASS: gdb.base/radix.exp: initialize radix, output radix 8
PASS: gdb.base/radix.exp: set output-radix 8
PASS: gdb.base/radix.exp: show radix, output radix 8
PASS: gdb.base/radix.exp: print 010; expect 010; output radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 17; output radix 8
PASS: gdb.base/radix.exp: print 10; expect 12; output radix 8
PASS: gdb.base/radix.exp: print 100; expect 144; output radix 8
KFAIL: gdb.base/radix.exp: print 20.; expect 24; output radix 8 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 24; output radix 8
PASS: gdb.base/radix.exp: initialize radix, output radix 10
PASS: gdb.base/radix.exp: set output-radix 10
PASS: gdb.base/radix.exp: show radix, output radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; output radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; output radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; output radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: initialize radix, output radix 16
PASS: gdb.base/radix.exp: set output-radix 16
PASS: gdb.base/radix.exp: show radix, output radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 16
PASS: gdb.base/radix.exp: print 0xf; expect f; output radix 16
PASS: gdb.base/radix.exp: print 10; expect a; output radix 16
PASS: gdb.base/radix.exp: print 100; expect 64; output radix 16
KFAIL: gdb.base/radix.exp: print 20.; expect 14; output radix 16 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 14; output radix 16
PASS: gdb.base/radix.exp: Reset radices
PASS: gdb.base/radix.exp: Reject input-radix 0
PASS: gdb.base/radix.exp: Input radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject input-radix 1
PASS: gdb.base/radix.exp: Input radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: Reject output-radix 0
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject output-radix 1
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: set radix 7 rejected
PASS: gdb.base/radix.exp: Output radix unchanged after rejection through set radix command
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/return.exp ...
PASS: gdb.base/return.exp: simple return
PASS: gdb.base/return.exp: break func2
PASS: gdb.base/return.exp: break func3
PASS: gdb.base/return.exp: continue to return of -5
PASS: gdb.base/return.exp: next over call to func2
PASS: gdb.base/return.exp: correct value returned (integer test)
PASS: gdb.base/return.exp: continue to return of -5.0
PASS: gdb.base/return.exp: next over call to func3
PASS: gdb.base/return.exp: correct value returned double test (known problem with sparc solaris)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watchpoint.exp ...
PASS: gdb.base/watchpoint.exp: disable fast watches
PASS: gdb.base/watchpoint.exp: show disable fast watches
PASS: gdb.base/watchpoint.exp: set slow conditional watch
PASS: gdb.base/watchpoint.exp: trigger slow conditional watch
PASS: gdb.base/watchpoint.exp: delete watch ival3
PASS: gdb.base/watchpoint.exp: set slow condition watch w/thread
PASS: gdb.base/watchpoint.exp: delete watch w/condition and thread
PASS: gdb.base/watchpoint.exp: rwatch disallowed when can-set-hw-watchpoints cleared
PASS: gdb.base/watchpoint.exp: set breakpoint at marker1
PASS: gdb.base/watchpoint.exp: set breakpoint at marker2
PASS: gdb.base/watchpoint.exp: info break in watchpoint.exp
PASS: gdb.base/watchpoint.exp: set watchpoint on ival3
PASS: gdb.base/watchpoint.exp: watchpoint found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: run to marker1 in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: enable watchpoint
PASS: gdb.base/watchpoint.exp: break func1
PASS: gdb.base/watchpoint.exp: set $func1_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: continue to breakpoint at func1
PASS: gdb.base/watchpoint.exp: watchpoint hit, first time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 1
PASS: gdb.base/watchpoint.exp: delete $func1_breakpoint_number
PASS: gdb.base/watchpoint.exp: watchpoint hit, second time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 2
PASS: gdb.base/watchpoint.exp: watchpoint hit, third time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 3
PASS: gdb.base/watchpoint.exp: watchpoint hit, fourth time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 4
PASS: gdb.base/watchpoint.exp: watchpoint hit, fifth time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 5
PASS: gdb.base/watchpoint.exp: continue to marker2
PASS: gdb.base/watchpoint.exp: watchpoint disabled
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: watchpoints found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: run to marker1 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watchpoint enabled
PASS: gdb.base/watchpoint.exp: watchpoint hit in test_disabling_watchpoints, first time
PASS: gdb.base/watchpoint.exp: watchpoint hit in test_disabling_watchpoints, second time
PASS: gdb.base/watchpoint.exp: disable watchpoint #2 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watchpoint disabled in table
PASS: gdb.base/watchpoint.exp: disabled watchpoint skipped
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watch ival2
PASS: gdb.base/watchpoint.exp: break func2 if 0
PASS: gdb.base/watchpoint.exp: p $func2_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: calling function with watchpoint enabled
PASS: gdb.base/watchpoint.exp: finish from marker1
PASS: gdb.base/watchpoint.exp: back at main from marker1
PASS: gdb.base/watchpoint.exp: next to `for' in watchpoint.exp
PASS: gdb.base/watchpoint.exp: until to ival1 assignment
PASS: gdb.base/watchpoint.exp: until to ival3 assignment
PASS: gdb.base/watchpoint.exp: until out of loop
PASS: gdb.base/watchpoint.exp: step to ival2 assignment
PASS: gdb.base/watchpoint.exp: watch ptr1->val
PASS: gdb.base/watchpoint.exp: break marker5
PASS: gdb.base/watchpoint.exp: Test complex watchpoint
PASS: gdb.base/watchpoint.exp: did not trigger wrong watchpoint
PASS: gdb.base/watchpoint.exp: disable in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: break marker6
PASS: gdb.base/watchpoint.exp: continue to marker6
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: set local watch
PASS: gdb.base/watchpoint.exp: trigger local watch
PASS: gdb.base/watchpoint.exp: self-delete local watch
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: set partially local watch
PASS: gdb.base/watchpoint.exp: trigger1 partially local watch
PASS: gdb.base/watchpoint.exp: trigger2 partially local watch
PASS: gdb.base/watchpoint.exp: self-delete partially local watch
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: set static local watch
PASS: gdb.base/watchpoint.exp: trigger static local watch
PASS: gdb.base/watchpoint.exp: continue after trigger static local watch
PASS: gdb.base/watchpoint.exp: static local watch did not self-delete
PASS: gdb.base/watchpoint.exp: tbreak recurser
PASS: gdb.base/watchpoint.exp: cont
PASS: gdb.base/watchpoint.exp: next past local_x initialization
PASS: gdb.base/watchpoint.exp: set local watch in recursive call
PASS: gdb.base/watchpoint.exp: trigger local watch in recursive call
PASS: gdb.base/watchpoint.exp: self-delete local watch in recursive call
PASS: gdb.base/watchpoint.exp: cont
PASS: gdb.base/watchpoint.exp: tbreak recurser
PASS: gdb.base/watchpoint.exp: cont
PASS: gdb.base/watchpoint.exp: next past local_x initialization
PASS: gdb.base/watchpoint.exp: set local watch in recursive call with explicit scope
PASS: gdb.base/watchpoint.exp: trigger local watch with explicit scope in recursive call
PASS: gdb.base/watchpoint.exp: self-delete local watch with explicit scope in recursive call (2)
PASS: gdb.base/watchpoint.exp: disable in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: watchpoint refused to insert on nonexistent struct member
PASS: gdb.base/watchpoint.exp: watch global_ptr
PASS: gdb.base/watchpoint.exp: watch *(int *) 0
PASS: gdb.base/watchpoint.exp: watch -location *global_ptr
PASS: gdb.base/watchpoint.exp: watch *global_ptr
PASS: gdb.base/watchpoint.exp: set $global_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: global_ptr next
PASS: gdb.base/watchpoint.exp: next over ptr init
PASS: gdb.base/watchpoint.exp: next over buffer set
PASS: gdb.base/watchpoint.exp: delete $global_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: watch **global_ptr_ptr
PASS: gdb.base/watchpoint.exp: set $global_ptr_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: global_ptr_ptr next
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr init
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr buffer set
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr pointer advance
PASS: gdb.base/watchpoint.exp: delete $global_ptr_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: continue to breakpoint: second x assignment
PASS: gdb.base/watchpoint.exp: watch x
PASS: gdb.base/watchpoint.exp: next after watch x
PASS: gdb.base/watchpoint.exp: delete watch x
PASS: gdb.base/watchpoint.exp: watch buf
PASS: gdb.base/watchpoint.exp: watchpoint on buf hit
PASS: gdb.base/watchpoint.exp: delete watch buf
PASS: gdb.base/watchpoint.exp: number is constant
PASS: gdb.base/watchpoint.exp: number with cast is constant
PASS: gdb.base/watchpoint.exp: marker1 is constant
PASS: gdb.base/watchpoint.exp: watch count + 6
PASS: gdb.base/watchpoint.exp: delete watchpoint `count + 6'
PASS: gdb.base/watchpoint.exp: watch 7 + count
PASS: gdb.base/watchpoint.exp: delete watchpoint `7 + count'
PASS: gdb.base/watchpoint.exp: watch $pc
PASS: gdb.base/watchpoint.exp: disable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: reenable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: watchpoint `$pc' is enabled
PASS: gdb.base/watchpoint.exp: delete watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func5 breakpoint here
PASS: gdb.base/watchpoint.exp: watch -location .x
PASS: gdb.base/watchpoint.exp: continue with watch -location
PASS: gdb.base/watchpoint.exp: delete watch -location
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func6 breakpoint here
FAIL: gdb.base/watchpoint.exp: watch foo2
FAIL: gdb.base/watchpoint.exp: continue with watch foo2
PASS: gdb.base/watchpoint.exp: delete watch foo2
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func7 breakpoint here
FAIL: gdb.base/watchpoint.exp: watch foo4
FAIL: gdb.base/watchpoint.exp: continue with watch foo4
PASS: gdb.base/watchpoint.exp: delete watch foo4
PASS: gdb.base/watchpoint.exp: no-hw: set breakpoint at marker1
PASS: gdb.base/watchpoint.exp: no-hw: set breakpoint at marker2
PASS: gdb.base/watchpoint.exp: no-hw: info break in watchpoint.exp
PASS: gdb.base/watchpoint.exp: no-hw: set watchpoint on ival3
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: run to marker1 in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: enable watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: break func1
PASS: gdb.base/watchpoint.exp: no-hw: set $func1_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint at func1
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, first time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 1
PASS: gdb.base/watchpoint.exp: no-hw: delete $func1_breakpoint_number
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, second time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 2
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, third time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 3
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, fourth time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 4
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit, fifth time
PASS: gdb.base/watchpoint.exp: no-hw: Watchpoint hit count is 5
PASS: gdb.base/watchpoint.exp: no-hw: continue to marker2
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint disabled
PASS: gdb.base/watchpoint.exp: no-hw: continue until exit at continue to exit in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: watchpoints found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: no-hw: run to marker1 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint enabled
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit in test_disabling_watchpoints, first time
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint hit in test_disabling_watchpoints, second time
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint #2 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint disabled in table
PASS: gdb.base/watchpoint.exp: no-hw: disabled watchpoint skipped
PASS: gdb.base/watchpoint.exp: no-hw: continue until exit at continue to exit in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: no-hw: watch ival2
PASS: gdb.base/watchpoint.exp: no-hw: break func2 if 0
PASS: gdb.base/watchpoint.exp: no-hw: p $func2_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: no-hw: calling function with watchpoint enabled
PASS: gdb.base/watchpoint.exp: no-hw: finish from marker1
PASS: gdb.base/watchpoint.exp: no-hw: back at main from marker1
PASS: gdb.base/watchpoint.exp: no-hw: next to `for' in watchpoint.exp
PASS: gdb.base/watchpoint.exp: no-hw: until to ival1 assignment
PASS: gdb.base/watchpoint.exp: no-hw: until to ival3 assignment
PASS: gdb.base/watchpoint.exp: no-hw: until out of loop
PASS: gdb.base/watchpoint.exp: no-hw: step to ival2 assignment
PASS: gdb.base/watchpoint.exp: no-hw: watch ptr1->val
PASS: gdb.base/watchpoint.exp: no-hw: break marker5
PASS: gdb.base/watchpoint.exp: no-hw: Test complex watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: did not trigger wrong watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: disable in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: break marker6
PASS: gdb.base/watchpoint.exp: no-hw: continue to marker6
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: set local watch
PASS: gdb.base/watchpoint.exp: no-hw: trigger local watch
PASS: gdb.base/watchpoint.exp: no-hw: self-delete local watch
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: set partially local watch
PASS: gdb.base/watchpoint.exp: no-hw: trigger1 partially local watch
PASS: gdb.base/watchpoint.exp: no-hw: trigger2 partially local watch
PASS: gdb.base/watchpoint.exp: no-hw: self-delete partially local watch
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func2 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: set static local watch
PASS: gdb.base/watchpoint.exp: no-hw: trigger static local watch
PASS: gdb.base/watchpoint.exp: no-hw: continue after trigger static local watch
PASS: gdb.base/watchpoint.exp: no-hw: static local watch did not self-delete
PASS: gdb.base/watchpoint.exp: no-hw: tbreak recurser
PASS: gdb.base/watchpoint.exp: no-hw: cont
PASS: gdb.base/watchpoint.exp: no-hw: next past local_x initialization
PASS: gdb.base/watchpoint.exp: no-hw: set local watch in recursive call
PASS: gdb.base/watchpoint.exp: no-hw: trigger local watch in recursive call
PASS: gdb.base/watchpoint.exp: no-hw: self-delete local watch in recursive call
PASS: gdb.base/watchpoint.exp: no-hw: cont
PASS: gdb.base/watchpoint.exp: no-hw: tbreak recurser
PASS: gdb.base/watchpoint.exp: no-hw: cont
PASS: gdb.base/watchpoint.exp: no-hw: next past local_x initialization
PASS: gdb.base/watchpoint.exp: no-hw: set local watch in recursive call with explicit scope
PASS: gdb.base/watchpoint.exp: no-hw: trigger local watch with explicit scope in recursive call
PASS: gdb.base/watchpoint.exp: no-hw: self-delete local watch with explicit scope in recursive call (2)
PASS: gdb.base/watchpoint.exp: no-hw: disable in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: continue until exit at continue to exit in test_complex_watchpoint
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint refused to insert on nonexistent struct member
PASS: gdb.base/watchpoint.exp: no-hw: watch global_ptr
PASS: gdb.base/watchpoint.exp: no-hw: watch *(int *) 0
PASS: gdb.base/watchpoint.exp: no-hw: watch -location *global_ptr
PASS: gdb.base/watchpoint.exp: no-hw: watch *global_ptr
PASS: gdb.base/watchpoint.exp: no-hw: set $global_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: no-hw: global_ptr next
PASS: gdb.base/watchpoint.exp: no-hw: next over ptr init
PASS: gdb.base/watchpoint.exp: no-hw: next over buffer set
PASS: gdb.base/watchpoint.exp: no-hw: delete $global_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: no-hw: watch **global_ptr_ptr
PASS: gdb.base/watchpoint.exp: no-hw: set $global_ptr_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: no-hw: global_ptr_ptr next
PASS: gdb.base/watchpoint.exp: no-hw: next over global_ptr_ptr init
PASS: gdb.base/watchpoint.exp: no-hw: next over global_ptr_ptr buffer set
PASS: gdb.base/watchpoint.exp: no-hw: next over global_ptr_ptr pointer advance
PASS: gdb.base/watchpoint.exp: no-hw: delete $global_ptr_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: second x assignment
PASS: gdb.base/watchpoint.exp: no-hw: watch x
PASS: gdb.base/watchpoint.exp: no-hw: next after watch x
PASS: gdb.base/watchpoint.exp: no-hw: delete watch x
PASS: gdb.base/watchpoint.exp: no-hw: watch buf
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint on buf hit
PASS: gdb.base/watchpoint.exp: no-hw: delete watch buf
PASS: gdb.base/watchpoint.exp: no-hw: number is constant
PASS: gdb.base/watchpoint.exp: no-hw: number with cast is constant
PASS: gdb.base/watchpoint.exp: no-hw: marker1 is constant
PASS: gdb.base/watchpoint.exp: no-hw: watch count + 6
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `count + 6'
PASS: gdb.base/watchpoint.exp: no-hw: watch 7 + count
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `7 + count'
PASS: gdb.base/watchpoint.exp: no-hw: watch $pc
PASS: gdb.base/watchpoint.exp: no-hw: disable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: no-hw: reenable watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: no-hw: watchpoint `$pc' is enabled
PASS: gdb.base/watchpoint.exp: no-hw: delete watchpoint `$pc'
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func5 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: watch -location .x
PASS: gdb.base/watchpoint.exp: no-hw: continue with watch -location
PASS: gdb.base/watchpoint.exp: no-hw: delete watch -location
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func6 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: watch foo2
PASS: gdb.base/watchpoint.exp: no-hw: continue with watch foo2
PASS: gdb.base/watchpoint.exp: no-hw: delete watch foo2
PASS: gdb.base/watchpoint.exp: no-hw: continue to breakpoint: func7 breakpoint here
PASS: gdb.base/watchpoint.exp: no-hw: watch foo4
PASS: gdb.base/watchpoint.exp: no-hw: continue with watch foo4
PASS: gdb.base/watchpoint.exp: no-hw: delete watch foo4
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/signals.exp ...
PASS: gdb.base/signals.exp: handle all print
PASS: gdb.base/signals.exp: set variable count = 0
PASS: gdb.base/signals.exp: break handler if 0
PASS: gdb.base/signals.exp: set $handler_breakpoint_number = $bpnum
PASS: gdb.base/signals.exp: next to signal
PASS: gdb.base/signals.exp: next to alarm #1
PASS: gdb.base/signals.exp: next to ++count #1
PASS: gdb.base/signals.exp: p func1 () #1
FAIL: gdb.base/signals.exp: p count #1
PASS: gdb.base/signals.exp: condition $handler_breakpoint_number
PASS: gdb.base/signals.exp: next to alarm #2
PASS: gdb.base/signals.exp: next to ++count #2
FAIL: gdb.base/signals.exp: p func1 () #2
FAIL: gdb.base/signals.exp: backtrace from handler when calling func1
FAIL: gdb.base/signals.exp: continue (the program exited)
FAIL: gdb.base/signals.exp: p count #2
PASS: gdb.base/signals.exp: info signals
PASS: gdb.base/signals.exp: info signal SIGTRAP
PASS: gdb.base/signals.exp: info signal 5
PASS: gdb.base/signals.exp: handle without arguments
PASS: gdb.base/signals.exp: handle with bogus SIG
PASS: gdb.base/signals.exp: handle SIG with bogus action
PASS: gdb.base/signals.exp: handle SIG with multiple conflicting actions
PASS: gdb.base/signals.exp: handle SIG parses all legal actions
PASS: gdb.base/signals.exp: handle multiple SIGs
PASS: gdb.base/signals.exp: override SIGTRAP
PASS: gdb.base/signals.exp: invalid signal number rejected
PASS: gdb.base/signals.exp: handle multiple SIGs via integer range
PASS: gdb.base/signals.exp: handle multiple SIGs via reverse integer range
PASS: gdb.base/signals.exp: override SIGINT
FAIL: gdb.base/signals.exp: signal without arguments disallowed (the program is no longer running)
FAIL: gdb.base/signals.exp: signal SIGUSR1 (the program is no longer running)
FAIL: gdb.base/signals.exp: backtrace for SIGUSR1
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/randomize.exp ...
UNTESTED: gdb.base/randomize.exp: Disabling randomization is not supported on this Linux GDB
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/return-nodebug.exp ...
PASS: gdb.base/return-nodebug.exp: signed-char: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: signed-char: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: signed-char: advance to marker
PASS: gdb.base/return-nodebug.exp: signed-char: full width of the returned result
PASS: gdb.base/return-nodebug.exp: short: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: short: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: short: advance to marker
PASS: gdb.base/return-nodebug.exp: short: full width of the returned result
PASS: gdb.base/return-nodebug.exp: int: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: int: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: int: advance to marker
PASS: gdb.base/return-nodebug.exp: int: full width of the returned result
PASS: gdb.base/return-nodebug.exp: long: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: long: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: long: advance to marker
PASS: gdb.base/return-nodebug.exp: long: full width of the returned result
PASS: gdb.base/return-nodebug.exp: long-long: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: long-long: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: long-long: advance to marker
PASS: gdb.base/return-nodebug.exp: long-long: full width of the returned result
PASS: gdb.base/return-nodebug.exp: float: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: float: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: float: advance to marker
PASS: gdb.base/return-nodebug.exp: float: full width of the returned result
PASS: gdb.base/return-nodebug.exp: double: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: double: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: double: advance to marker
PASS: gdb.base/return-nodebug.exp: double: full width of the returned result
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/set-lang-auto.exp ...
PASS: gdb.base/set-lang-auto.exp: show lang after loading binary
PASS: gdb.base/set-lang-auto.exp: forcing the language to ada
PASS: gdb.base/set-lang-auto.exp: show lang after switching language to ada
PASS: gdb.base/set-lang-auto.exp: switching the language back to auto
PASS: gdb.base/set-lang-auto.exp: show lang after having switched back to auto
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/structs2.exp ...
PASS: gdb.base/structs2.exp: set width 0
PASS: gdb.base/structs2.exp: structs2 sanity check
PASS: gdb.base/structs2.exp: structs2 breakpoint set
PASS: gdb.base/structs2.exp: structs2 continue1
PASS: gdb.base/structs2.exp: structs2 continue2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/opaque.exp ...
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 2
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watchpoints.exp ...
PASS: gdb.base/watchpoints.exp: watchpoint hit, first time
PASS: gdb.base/watchpoints.exp: watchpoint hit, first time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 1
PASS: gdb.base/watchpoints.exp: watchpoint ival1 hit, second time
PASS: gdb.base/watchpoints.exp: Watchpoint ival1 hit count is 2
PASS: gdb.base/watchpoints.exp: watchpoint hit, second time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 2
PASS: gdb.base/watchpoints.exp: watchpoint ival1 hit, third time
PASS: gdb.base/watchpoints.exp: Watchpoint ival1 hit count is 3
PASS: gdb.base/watchpoints.exp: watchpoint hit, third time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 3
PASS: gdb.base/watchpoints.exp: watchpoint hit, fourth time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 4
PASS: gdb.base/watchpoints.exp: watchpoint hit, fifth time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 5
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/printcmds.exp ...
PASS: gdb.base/printcmds.exp: print $pc
PASS: gdb.base/printcmds.exp: print "abc"
PASS: gdb.base/printcmds.exp: print sizeof ("abc")
PASS: gdb.base/printcmds.exp: ptype "abc"
PASS: gdb.base/printcmds.exp: print $cvar = "abc"
PASS: gdb.base/printcmds.exp: print sizeof ($cvar)
PASS: gdb.base/printcmds.exp: print $pc (with file)
PASS: gdb.base/printcmds.exp: set print sevenbit-strings
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set width 0
PASS: gdb.base/printcmds.exp: p ctable1[120] #1
PASS: gdb.base/printcmds.exp: p 123
PASS: gdb.base/printcmds.exp: p -123
PASS: gdb.base/printcmds.exp: p/d 123
PASS: gdb.base/printcmds.exp: p 0123
PASS: gdb.base/printcmds.exp: p 00123
PASS: gdb.base/printcmds.exp: p -0123
PASS: gdb.base/printcmds.exp: p/o 0123
PASS: gdb.base/printcmds.exp: p 0x123
PASS: gdb.base/printcmds.exp: p -0x123
PASS: gdb.base/printcmds.exp: p 0x0123
PASS: gdb.base/printcmds.exp: p -0x0123
PASS: gdb.base/printcmds.exp: p 0xABCDEF
PASS: gdb.base/printcmds.exp: p 0xabcdef
PASS: gdb.base/printcmds.exp: p 0xAbCdEf
PASS: gdb.base/printcmds.exp: p/x 0x123
PASS: gdb.base/printcmds.exp: p 0b0
PASS: gdb.base/printcmds.exp: p 0b1111
PASS: gdb.base/printcmds.exp: p 0B1111
PASS: gdb.base/printcmds.exp: p -0b1111
PASS: gdb.base/printcmds.exp: reject p 0x
PASS: gdb.base/printcmds.exp: reject p 0b
PASS: gdb.base/printcmds.exp: p ''
PASS: gdb.base/printcmds.exp: p '''
PASS: gdb.base/printcmds.exp: reject p '\'
PASS: gdb.base/printcmds.exp: reject p '\\\'
PASS: gdb.base/printcmds.exp: reject p DEADBEEF
PASS: gdb.base/printcmds.exp: reject p 09
PASS: gdb.base/printcmds.exp: reject p 079
PASS: gdb.base/printcmds.exp: reject p 0xG
PASS: gdb.base/printcmds.exp: reject p 0xAG
PASS: gdb.base/printcmds.exp: reject p 0b2
PASS: gdb.base/printcmds.exp: reject p 0b12
PASS: gdb.base/printcmds.exp: check for floating addition
PASS: gdb.base/printcmds.exp: p 1.
PASS: gdb.base/printcmds.exp: p 1.5
PASS: gdb.base/printcmds.exp: p 1.f
PASS: gdb.base/printcmds.exp: p 1.5f
PASS: gdb.base/printcmds.exp: p 1.l
PASS: gdb.base/printcmds.exp: p 1.5l
PASS: gdb.base/printcmds.exp: p 0x1.1
PASS: gdb.base/printcmds.exp: reject p 123DEADBEEF
PASS: gdb.base/printcmds.exp: reject p 123foobar.bazfoo3
PASS: gdb.base/printcmds.exp: reject p 123EEEEEEEEEEEEEEEEE33333k333
PASS: gdb.base/printcmds.exp: reject p 1.1x
PASS: gdb.base/printcmds.exp: reject p 1.1ff
PASS: gdb.base/printcmds.exp: reject p 1.1ll
PASS: gdb.base/printcmds.exp: p 'a'
PASS: gdb.base/printcmds.exp: p/c 'a'
PASS: gdb.base/printcmds.exp: p/x 'a'
PASS: gdb.base/printcmds.exp: p/d 'a'
PASS: gdb.base/printcmds.exp: p/t 'a'
PASS: gdb.base/printcmds.exp: p '\141'
PASS: gdb.base/printcmds.exp: p/x '\377'
PASS: gdb.base/printcmds.exp: p '\''
PASS: gdb.base/printcmds.exp: p '\\'
PASS: gdb.base/printcmds.exp: p ctable1[0]
PASS: gdb.base/printcmds.exp: p ctable1[1]
PASS: gdb.base/printcmds.exp: p ctable1[2]
PASS: gdb.base/printcmds.exp: p ctable1[3]
PASS: gdb.base/printcmds.exp: p ctable1[4]
PASS: gdb.base/printcmds.exp: p ctable1[5]
PASS: gdb.base/printcmds.exp: p ctable1[6]
PASS: gdb.base/printcmds.exp: p ctable1[7]
PASS: gdb.base/printcmds.exp: p ctable1[8]
PASS: gdb.base/printcmds.exp: p ctable1[9]
PASS: gdb.base/printcmds.exp: p ctable1[10]
PASS: gdb.base/printcmds.exp: p ctable1[11]
PASS: gdb.base/printcmds.exp: p ctable1[12]
PASS: gdb.base/printcmds.exp: p ctable1[13]
PASS: gdb.base/printcmds.exp: p ctable1[14]
PASS: gdb.base/printcmds.exp: p ctable1[15]
PASS: gdb.base/printcmds.exp: p ctable1[16]
PASS: gdb.base/printcmds.exp: p ctable1[17]
PASS: gdb.base/printcmds.exp: p ctable1[18]
PASS: gdb.base/printcmds.exp: p ctable1[19]
PASS: gdb.base/printcmds.exp: p ctable1[20]
PASS: gdb.base/printcmds.exp: p ctable1[21]
PASS: gdb.base/printcmds.exp: p ctable1[22]
PASS: gdb.base/printcmds.exp: p ctable1[23]
PASS: gdb.base/printcmds.exp: p ctable1[24]
PASS: gdb.base/printcmds.exp: p ctable1[25]
PASS: gdb.base/printcmds.exp: p ctable1[26]
PASS: gdb.base/printcmds.exp: p ctable1[27]
PASS: gdb.base/printcmds.exp: p ctable1[28]
PASS: gdb.base/printcmds.exp: p ctable1[29]
PASS: gdb.base/printcmds.exp: p ctable1[30]
PASS: gdb.base/printcmds.exp: p ctable1[31]
PASS: gdb.base/printcmds.exp: p ctable1[32]
PASS: gdb.base/printcmds.exp: p ctable1[33]
PASS: gdb.base/printcmds.exp: p ctable1[34]
PASS: gdb.base/printcmds.exp: p ctable1[35]
PASS: gdb.base/printcmds.exp: p ctable1[36]
PASS: gdb.base/printcmds.exp: p ctable1[37]
PASS: gdb.base/printcmds.exp: p ctable1[38]
PASS: gdb.base/printcmds.exp: p ctable1[39]
PASS: gdb.base/printcmds.exp: p ctable1[40]
PASS: gdb.base/printcmds.exp: p ctable1[41]
PASS: gdb.base/printcmds.exp: p ctable1[42]
PASS: gdb.base/printcmds.exp: p ctable1[43]
PASS: gdb.base/printcmds.exp: p ctable1[44]
PASS: gdb.base/printcmds.exp: p ctable1[45]
PASS: gdb.base/printcmds.exp: p ctable1[46]
PASS: gdb.base/printcmds.exp: p ctable1[47]
PASS: gdb.base/printcmds.exp: p ctable1[48]
PASS: gdb.base/printcmds.exp: p ctable1[49]
PASS: gdb.base/printcmds.exp: p ctable1[50]
PASS: gdb.base/printcmds.exp: p ctable1[51]
PASS: gdb.base/printcmds.exp: p ctable1[52]
PASS: gdb.base/printcmds.exp: p ctable1[53]
PASS: gdb.base/printcmds.exp: p ctable1[54]
PASS: gdb.base/printcmds.exp: p ctable1[55]
PASS: gdb.base/printcmds.exp: p ctable1[56]
PASS: gdb.base/printcmds.exp: p ctable1[57]
PASS: gdb.base/printcmds.exp: p ctable1[58]
PASS: gdb.base/printcmds.exp: p ctable1[59]
PASS: gdb.base/printcmds.exp: p ctable1[60]
PASS: gdb.base/printcmds.exp: p ctable1[61]
PASS: gdb.base/printcmds.exp: p ctable1[62]
PASS: gdb.base/printcmds.exp: p ctable1[63]
PASS: gdb.base/printcmds.exp: p ctable1[64]
PASS: gdb.base/printcmds.exp: p ctable1[65]
PASS: gdb.base/printcmds.exp: p ctable1[66]
PASS: gdb.base/printcmds.exp: p ctable1[67]
PASS: gdb.base/printcmds.exp: p ctable1[68]
PASS: gdb.base/printcmds.exp: p ctable1[69]
PASS: gdb.base/printcmds.exp: p ctable1[70]
PASS: gdb.base/printcmds.exp: p ctable1[71]
PASS: gdb.base/printcmds.exp: p ctable1[72]
PASS: gdb.base/printcmds.exp: p ctable1[73]
PASS: gdb.base/printcmds.exp: p ctable1[74]
PASS: gdb.base/printcmds.exp: p ctable1[75]
PASS: gdb.base/printcmds.exp: p ctable1[76]
PASS: gdb.base/printcmds.exp: p ctable1[77]
PASS: gdb.base/printcmds.exp: p ctable1[78]
PASS: gdb.base/printcmds.exp: p ctable1[79]
PASS: gdb.base/printcmds.exp: p ctable1[80]
PASS: gdb.base/printcmds.exp: p ctable1[81]
PASS: gdb.base/printcmds.exp: p ctable1[82]
PASS: gdb.base/printcmds.exp: p ctable1[83]
PASS: gdb.base/printcmds.exp: p ctable1[84]
PASS: gdb.base/printcmds.exp: p ctable1[85]
PASS: gdb.base/printcmds.exp: p ctable1[86]
PASS: gdb.base/printcmds.exp: p ctable1[87]
PASS: gdb.base/printcmds.exp: p ctable1[88]
PASS: gdb.base/printcmds.exp: p ctable1[89]
PASS: gdb.base/printcmds.exp: p ctable1[90]
PASS: gdb.base/printcmds.exp: p ctable1[91]
PASS: gdb.base/printcmds.exp: p ctable1[92]
PASS: gdb.base/printcmds.exp: p ctable1[93]
PASS: gdb.base/printcmds.exp: p ctable1[94]
PASS: gdb.base/printcmds.exp: p ctable1[95]
PASS: gdb.base/printcmds.exp: p ctable1[96]
PASS: gdb.base/printcmds.exp: p ctable1[97]
PASS: gdb.base/printcmds.exp: p ctable1[98]
PASS: gdb.base/printcmds.exp: p ctable1[99]
PASS: gdb.base/printcmds.exp: p ctable1[100]
PASS: gdb.base/printcmds.exp: p ctable1[101]
PASS: gdb.base/printcmds.exp: p ctable1[102]
PASS: gdb.base/printcmds.exp: p ctable1[103]
PASS: gdb.base/printcmds.exp: p ctable1[104]
PASS: gdb.base/printcmds.exp: p ctable1[105]
PASS: gdb.base/printcmds.exp: p ctable1[106]
PASS: gdb.base/printcmds.exp: p ctable1[107]
PASS: gdb.base/printcmds.exp: p ctable1[108]
PASS: gdb.base/printcmds.exp: p ctable1[109]
PASS: gdb.base/printcmds.exp: p ctable1[110]
PASS: gdb.base/printcmds.exp: p ctable1[111]
PASS: gdb.base/printcmds.exp: p ctable1[112]
PASS: gdb.base/printcmds.exp: p ctable1[113]
PASS: gdb.base/printcmds.exp: p ctable1[114]
PASS: gdb.base/printcmds.exp: p ctable1[115]
PASS: gdb.base/printcmds.exp: p ctable1[116]
PASS: gdb.base/printcmds.exp: p ctable1[117]
PASS: gdb.base/printcmds.exp: p ctable1[118]
PASS: gdb.base/printcmds.exp: p ctable1[119]
PASS: gdb.base/printcmds.exp: p ctable1[120]
PASS: gdb.base/printcmds.exp: p ctable1[121]
PASS: gdb.base/printcmds.exp: p ctable1[122]
PASS: gdb.base/printcmds.exp: p ctable1[123]
PASS: gdb.base/printcmds.exp: p ctable1[124]
PASS: gdb.base/printcmds.exp: p ctable1[125]
PASS: gdb.base/printcmds.exp: p ctable1[126]
PASS: gdb.base/printcmds.exp: p ctable1[127]
PASS: gdb.base/printcmds.exp: p ctable1[128]
PASS: gdb.base/printcmds.exp: p ctable1[129]
PASS: gdb.base/printcmds.exp: p ctable1[130]
PASS: gdb.base/printcmds.exp: p ctable1[131]
PASS: gdb.base/printcmds.exp: p ctable1[132]
PASS: gdb.base/printcmds.exp: p ctable1[133]
PASS: gdb.base/printcmds.exp: p ctable1[134]
PASS: gdb.base/printcmds.exp: p ctable1[135]
PASS: gdb.base/printcmds.exp: p ctable1[136]
PASS: gdb.base/printcmds.exp: p ctable1[137]
PASS: gdb.base/printcmds.exp: p ctable1[138]
PASS: gdb.base/printcmds.exp: p ctable1[139]
PASS: gdb.base/printcmds.exp: p ctable1[140]
PASS: gdb.base/printcmds.exp: p ctable1[141]
PASS: gdb.base/printcmds.exp: p ctable1[142]
PASS: gdb.base/printcmds.exp: p ctable1[143]
PASS: gdb.base/printcmds.exp: p ctable1[144]
PASS: gdb.base/printcmds.exp: p ctable1[145]
PASS: gdb.base/printcmds.exp: p ctable1[146]
PASS: gdb.base/printcmds.exp: p ctable1[147]
PASS: gdb.base/printcmds.exp: p ctable1[148]
PASS: gdb.base/printcmds.exp: p ctable1[149]
PASS: gdb.base/printcmds.exp: p ctable1[150]
PASS: gdb.base/printcmds.exp: p ctable1[151]
PASS: gdb.base/printcmds.exp: p ctable1[152]
PASS: gdb.base/printcmds.exp: p ctable1[153]
PASS: gdb.base/printcmds.exp: p ctable1[154]
PASS: gdb.base/printcmds.exp: p ctable1[155]
PASS: gdb.base/printcmds.exp: p ctable1[156]
PASS: gdb.base/printcmds.exp: p ctable1[157]
PASS: gdb.base/printcmds.exp: p ctable1[158]
PASS: gdb.base/printcmds.exp: p ctable1[159]
PASS: gdb.base/printcmds.exp: p ctable1[160]
PASS: gdb.base/printcmds.exp: p ctable1[161]
PASS: gdb.base/printcmds.exp: p ctable1[162]
PASS: gdb.base/printcmds.exp: p ctable1[163]
PASS: gdb.base/printcmds.exp: p ctable1[164]
PASS: gdb.base/printcmds.exp: p ctable1[165]
PASS: gdb.base/printcmds.exp: p ctable1[166]
PASS: gdb.base/printcmds.exp: p ctable1[167]
PASS: gdb.base/printcmds.exp: p ctable1[168]
PASS: gdb.base/printcmds.exp: p ctable1[169]
PASS: gdb.base/printcmds.exp: p ctable1[170]
PASS: gdb.base/printcmds.exp: p ctable1[171]
PASS: gdb.base/printcmds.exp: p ctable1[172]
PASS: gdb.base/printcmds.exp: p ctable1[173]
PASS: gdb.base/printcmds.exp: p ctable1[174]
PASS: gdb.base/printcmds.exp: p ctable1[175]
PASS: gdb.base/printcmds.exp: p ctable1[176]
PASS: gdb.base/printcmds.exp: p ctable1[177]
PASS: gdb.base/printcmds.exp: p ctable1[178]
PASS: gdb.base/printcmds.exp: p ctable1[179]
PASS: gdb.base/printcmds.exp: p ctable1[180]
PASS: gdb.base/printcmds.exp: p ctable1[181]
PASS: gdb.base/printcmds.exp: p ctable1[182]
PASS: gdb.base/printcmds.exp: p ctable1[183]
PASS: gdb.base/printcmds.exp: p ctable1[184]
PASS: gdb.base/printcmds.exp: p ctable1[185]
PASS: gdb.base/printcmds.exp: p ctable1[186]
PASS: gdb.base/printcmds.exp: p ctable1[187]
PASS: gdb.base/printcmds.exp: p ctable1[188]
PASS: gdb.base/printcmds.exp: p ctable1[189]
PASS: gdb.base/printcmds.exp: p ctable1[190]
PASS: gdb.base/printcmds.exp: p ctable1[191]
PASS: gdb.base/printcmds.exp: p ctable1[192]
PASS: gdb.base/printcmds.exp: p ctable1[193]
PASS: gdb.base/printcmds.exp: p ctable1[194]
PASS: gdb.base/printcmds.exp: p ctable1[195]
PASS: gdb.base/printcmds.exp: p ctable1[196]
PASS: gdb.base/printcmds.exp: p ctable1[197]
PASS: gdb.base/printcmds.exp: p ctable1[198]
PASS: gdb.base/printcmds.exp: p ctable1[199]
PASS: gdb.base/printcmds.exp: p ctable1[200]
PASS: gdb.base/printcmds.exp: p ctable1[201]
PASS: gdb.base/printcmds.exp: p ctable1[202]
PASS: gdb.base/printcmds.exp: p ctable1[203]
PASS: gdb.base/printcmds.exp: p ctable1[204]
PASS: gdb.base/printcmds.exp: p ctable1[205]
PASS: gdb.base/printcmds.exp: p ctable1[206]
PASS: gdb.base/printcmds.exp: p ctable1[207]
PASS: gdb.base/printcmds.exp: p ctable1[208]
PASS: gdb.base/printcmds.exp: p ctable1[209]
PASS: gdb.base/printcmds.exp: p ctable1[210]
PASS: gdb.base/printcmds.exp: p ctable1[211]
PASS: gdb.base/printcmds.exp: p ctable1[212]
PASS: gdb.base/printcmds.exp: p ctable1[213]
PASS: gdb.base/printcmds.exp: p ctable1[214]
PASS: gdb.base/printcmds.exp: p ctable1[215]
PASS: gdb.base/printcmds.exp: p ctable1[216]
PASS: gdb.base/printcmds.exp: p ctable1[217]
PASS: gdb.base/printcmds.exp: p ctable1[218]
PASS: gdb.base/printcmds.exp: p ctable1[219]
PASS: gdb.base/printcmds.exp: p ctable1[220]
PASS: gdb.base/printcmds.exp: p ctable1[221]
PASS: gdb.base/printcmds.exp: p ctable1[222]
PASS: gdb.base/printcmds.exp: p ctable1[223]
PASS: gdb.base/printcmds.exp: p ctable1[224]
PASS: gdb.base/printcmds.exp: p ctable1[225]
PASS: gdb.base/printcmds.exp: p ctable1[226]
PASS: gdb.base/printcmds.exp: p ctable1[227]
PASS: gdb.base/printcmds.exp: p ctable1[228]
PASS: gdb.base/printcmds.exp: p ctable1[229]
PASS: gdb.base/printcmds.exp: p ctable1[230]
PASS: gdb.base/printcmds.exp: p ctable1[231]
PASS: gdb.base/printcmds.exp: p ctable1[232]
PASS: gdb.base/printcmds.exp: p ctable1[233]
PASS: gdb.base/printcmds.exp: p ctable1[234]
PASS: gdb.base/printcmds.exp: p ctable1[235]
PASS: gdb.base/printcmds.exp: p ctable1[236]
PASS: gdb.base/printcmds.exp: p ctable1[237]
PASS: gdb.base/printcmds.exp: p ctable1[238]
PASS: gdb.base/printcmds.exp: p ctable1[239]
PASS: gdb.base/printcmds.exp: p ctable1[240]
PASS: gdb.base/printcmds.exp: p ctable1[241]
PASS: gdb.base/printcmds.exp: p ctable1[242]
PASS: gdb.base/printcmds.exp: p ctable1[243]
PASS: gdb.base/printcmds.exp: p ctable1[244]
PASS: gdb.base/printcmds.exp: p ctable1[245]
PASS: gdb.base/printcmds.exp: p ctable1[246]
PASS: gdb.base/printcmds.exp: p ctable1[247]
PASS: gdb.base/printcmds.exp: p ctable1[248]
PASS: gdb.base/printcmds.exp: p ctable1[249]
PASS: gdb.base/printcmds.exp: p ctable1[250]
PASS: gdb.base/printcmds.exp: p ctable1[251]
PASS: gdb.base/printcmds.exp: p ctable1[252]
PASS: gdb.base/printcmds.exp: p ctable1[253]
PASS: gdb.base/printcmds.exp: p ctable1[254]
PASS: gdb.base/printcmds.exp: p ctable1[255]
PASS: gdb.base/printcmds.exp: set print elements 1
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: set print elements 2
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: set print elements 3
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: set print elements 4
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: set print elements 5
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: set print elements 6
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: set print elements 7
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: set print elements 8
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: set print elements 9
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: set print elements 10
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: set print elements 11
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: set print elements 12
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: set print elements 13
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: set print elements 14
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: set print elements 15
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: set print elements 16
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: correct element repeats in array embedded at offset > 0
PASS: gdb.base/printcmds.exp: set print elements 0
PASS: gdb.base/printcmds.exp: p teststring with elements set to 0
PASS: gdb.base/printcmds.exp: set print elements 1
PASS: gdb.base/printcmds.exp: p teststring with elements set to 1
PASS: gdb.base/printcmds.exp: set print elements 5
PASS: gdb.base/printcmds.exp: p teststring with elements set to 5
PASS: gdb.base/printcmds.exp: set print elements 19
PASS: gdb.base/printcmds.exp: p teststring with elements set to 19
PASS: gdb.base/printcmds.exp: set print elements 20
PASS: gdb.base/printcmds.exp: p teststring with elements set to 20
PASS: gdb.base/printcmds.exp: set print elements 8
PASS: gdb.base/printcmds.exp: p &ctable1[0]
PASS: gdb.base/printcmds.exp: p &ctable1[1]
PASS: gdb.base/printcmds.exp: p &ctable1[1*8]
PASS: gdb.base/printcmds.exp: p &ctable1[2*8]
PASS: gdb.base/printcmds.exp: p &ctable1[3*8]
PASS: gdb.base/printcmds.exp: p &ctable1[4*8]
PASS: gdb.base/printcmds.exp: p &ctable1[5*8]
PASS: gdb.base/printcmds.exp: p &ctable1[6*8]
PASS: gdb.base/printcmds.exp: p &ctable1[7*8]
PASS: gdb.base/printcmds.exp: p &ctable1[8*8]
PASS: gdb.base/printcmds.exp: p &ctable1[9*8]
PASS: gdb.base/printcmds.exp: p &ctable1[10*8]
PASS: gdb.base/printcmds.exp: p &ctable1[11*8]
PASS: gdb.base/printcmds.exp: p &ctable1[12*8]
PASS: gdb.base/printcmds.exp: p &ctable1[13*8]
PASS: gdb.base/printcmds.exp: p &ctable1[14*8]
PASS: gdb.base/printcmds.exp: p &ctable1[15*8]
PASS: gdb.base/printcmds.exp: p &ctable1[16*8]
PASS: gdb.base/printcmds.exp: p &ctable1[17*8]
PASS: gdb.base/printcmds.exp: p &ctable1[18*8]
PASS: gdb.base/printcmds.exp: p &ctable1[19*8]
PASS: gdb.base/printcmds.exp: p &ctable1[20*8]
PASS: gdb.base/printcmds.exp: p &ctable1[21*8]
PASS: gdb.base/printcmds.exp: p &ctable1[22*8]
PASS: gdb.base/printcmds.exp: p &ctable1[23*8]
PASS: gdb.base/printcmds.exp: p &ctable1[24*8]
PASS: gdb.base/printcmds.exp: p &ctable1[25*8]
PASS: gdb.base/printcmds.exp: p &ctable1[26*8]
PASS: gdb.base/printcmds.exp: p &ctable1[27*8]
PASS: gdb.base/printcmds.exp: p &ctable1[28*8]
PASS: gdb.base/printcmds.exp: p &ctable1[29*8]
PASS: gdb.base/printcmds.exp: p &ctable1[30*8]
PASS: gdb.base/printcmds.exp: p &ctable1[31*8]
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: p a1[0]
PASS: gdb.base/printcmds.exp: p a1[9]
PASS: gdb.base/printcmds.exp: p a2
PASS: gdb.base/printcmds.exp: p a2[0]
PASS: gdb.base/printcmds.exp: p a2[3]
PASS: gdb.base/printcmds.exp: set print null-stop on
PASS: gdb.base/printcmds.exp: print a2 with null-stop on
PASS: gdb.base/printcmds.exp: set print null-stop off
PASS: gdb.base/printcmds.exp: p int1dim[0]@2
PASS: gdb.base/printcmds.exp: p int1dim[0]@2@3
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: set print address on
PASS: gdb.base/printcmds.exp: p arrays
PASS: gdb.base/printcmds.exp: p parrays
PASS: gdb.base/printcmds.exp: p parrays->array1
PASS: gdb.base/printcmds.exp: p &parrays->array1
PASS: gdb.base/printcmds.exp: p parrays->array2
PASS: gdb.base/printcmds.exp: p &parrays->array2
PASS: gdb.base/printcmds.exp: p parrays->array3
PASS: gdb.base/printcmds.exp: p &parrays->array3
PASS: gdb.base/printcmds.exp: p parrays->array4
PASS: gdb.base/printcmds.exp: p &parrays->array4
PASS: gdb.base/printcmds.exp: p parrays->array5
PASS: gdb.base/printcmds.exp: p &parrays->array5
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set print elements 50
PASS: gdb.base/printcmds.exp: p "a string"
PASS: gdb.base/printcmds.exp: p "embedded \000 null"
PASS: gdb.base/printcmds.exp: p "abcd"[2]
PASS: gdb.base/printcmds.exp: p sizeof ("abcdef")
PASS: gdb.base/printcmds.exp: ptype "foo"
PASS: gdb.base/printcmds.exp: p *"foo"
PASS: gdb.base/printcmds.exp: ptype *"foo"
PASS: gdb.base/printcmds.exp: p &*"foo"
PASS: gdb.base/printcmds.exp: ptype &*"foo"
PASS: gdb.base/printcmds.exp: p (char *)"foo"
PASS: gdb.base/printcmds.exp: print {'a','b','c'}
PASS: gdb.base/printcmds.exp: print {4,5,6}[2]
PASS: gdb.base/printcmds.exp: print *&{4,5,6}[1]
PASS: gdb.base/printcmds.exp: print some_volatile_enum
PASS: gdb.base/printcmds.exp: print three
PASS: gdb.base/printcmds.exp: printf "x=%d,y=%d,z=%d\n", 5, 6, 7
PASS: gdb.base/printcmds.exp: printf "string=%.4sxx\n", teststring
PASS: gdb.base/printcmds.exp: printf "string=%sxx\n", teststring
PASS: gdb.base/printcmds.exp: printf "%f is fun\n", 1.0
PASS: gdb.base/printcmds.exp: printf "x=%d,y=%f,z=%d\n", 5, 6.0, 7
PASS: gdb.base/printcmds.exp: printf "%x %f, %c %x, %x, %f\n", 0xbad, -99.541, 'z', 0xfeedface, 0xdeadbeef, 5.0
PASS: gdb.base/printcmds.exp: printf "%c\n", "x"[1,0]
PASS: gdb.base/printcmds.exp: printf "%%%d%%\n", 5
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1.2df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.234567df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1.234567df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1234567.df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1234567.df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E1df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E10df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E-10df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E96df
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1.2dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.234567890123456dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1.234567890123456dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1234567890123456.dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1234567890123456.dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E1dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E10dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E-10dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E384dd
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1.2dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.234567890123456789012345678901234dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1.234567890123456789012345678901234dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1234567890123456789012345678901234.dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1234567890123456789012345678901234.dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E1dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E10dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E-10dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E6144dl
PASS: gdb.base/printcmds.exp: printf "%Hf %Hf\n",1.2df,1.3df
PASS: gdb.base/printcmds.exp: set print symbol on
PASS: gdb.base/printcmds.exp: print &three
PASS: gdb.base/printcmds.exp: print parrays
PASS: gdb.base/printcmds.exp: set print symbol off
PASS: gdb.base/printcmds.exp: print invalid_LLL
PASS: gdb.base/printcmds.exp: print invalid_LLE
PASS: gdb.base/printcmds.exp: print invalid_LLR
PASS: gdb.base/printcmds.exp: print invalid_LLS
PASS: gdb.base/printcmds.exp: print invalid_ELL
PASS: gdb.base/printcmds.exp: print invalid_ELR
PASS: gdb.base/printcmds.exp: print invalid_ELS
PASS: gdb.base/printcmds.exp: print invalid_RLL
PASS: gdb.base/printcmds.exp: print invalid_RLE
PASS: gdb.base/printcmds.exp: print invalid_RLR
PASS: gdb.base/printcmds.exp: print invalid_RLS
PASS: gdb.base/printcmds.exp: print invalid_SLL
PASS: gdb.base/printcmds.exp: print invalid_SLE
PASS: gdb.base/printcmds.exp: print invalid_SLR
PASS: gdb.base/printcmds.exp: print invalid_SLS
PASS: gdb.base/printcmds.exp: print invalid_LRL
PASS: gdb.base/printcmds.exp: print invalid_LRE
PASS: gdb.base/printcmds.exp: print invalid_LRR
PASS: gdb.base/printcmds.exp: print invalid_LRS
PASS: gdb.base/printcmds.exp: print invalid_ERL
PASS: gdb.base/printcmds.exp: print invalid_ERR
PASS: gdb.base/printcmds.exp: print invalid_ERS
PASS: gdb.base/printcmds.exp: print invalid_RRL
PASS: gdb.base/printcmds.exp: print invalid_RRE
PASS: gdb.base/printcmds.exp: print invalid_RRR
PASS: gdb.base/printcmds.exp: print invalid_RRS
PASS: gdb.base/printcmds.exp: print invalid_SRL
PASS: gdb.base/printcmds.exp: print invalid_SRE
PASS: gdb.base/printcmds.exp: print invalid_SRR
PASS: gdb.base/printcmds.exp: print invalid_SRS
PASS: gdb.base/printcmds.exp: print invalid_LSL
PASS: gdb.base/printcmds.exp: print invalid_LSE
PASS: gdb.base/printcmds.exp: print invalid_LSR
PASS: gdb.base/printcmds.exp: print invalid_LSS
PASS: gdb.base/printcmds.exp: print invalid_ESL
PASS: gdb.base/printcmds.exp: print invalid_ESR
PASS: gdb.base/printcmds.exp: print invalid_ESS
PASS: gdb.base/printcmds.exp: print invalid_RSL
PASS: gdb.base/printcmds.exp: print invalid_RSE
PASS: gdb.base/printcmds.exp: print invalid_RSR
PASS: gdb.base/printcmds.exp: print invalid_RSS
PASS: gdb.base/printcmds.exp: print invalid_SSL
PASS: gdb.base/printcmds.exp: print invalid_SSE
PASS: gdb.base/printcmds.exp: print invalid_SSR
PASS: gdb.base/printcmds.exp: print invalid_SSS
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/restore.exp ...
PASS: gdb.base/restore.exp: tbreak caller1
PASS: gdb.base/restore.exp: run to caller1
PASS: gdb.base/restore.exp: caller1 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: tbreak caller2
PASS: gdb.base/restore.exp: run to caller2
PASS: gdb.base/restore.exp: caller2 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: tbreak caller3
PASS: gdb.base/restore.exp: run to caller3
PASS: gdb.base/restore.exp: caller3 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee1; return callee now
FAIL: gdb.base/restore.exp: caller3 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee2; return callee now
FAIL: gdb.base/restore.exp: caller3 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee3; return callee now
FAIL: gdb.base/restore.exp: caller3 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee4; return callee now
FAIL: gdb.base/restore.exp: caller3 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee5; return callee now
FAIL: gdb.base/restore.exp: caller3 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: tbreak caller4
PASS: gdb.base/restore.exp: run to caller4
PASS: gdb.base/restore.exp: caller4 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee1; return callee now
FAIL: gdb.base/restore.exp: caller4 calls callee1; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller4 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee2; return callee now
FAIL: gdb.base/restore.exp: caller4 calls callee2; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller4 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee3; return callee now
FAIL: gdb.base/restore.exp: caller4 calls callee3; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller4 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee4; return callee now
FAIL: gdb.base/restore.exp: caller4 calls callee4; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller4 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee5; return callee now
FAIL: gdb.base/restore.exp: caller4 calls callee5; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller4 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l4 to 32495
PASS: gdb.base/restore.exp: tbreak caller5
PASS: gdb.base/restore.exp: run to caller5
PASS: gdb.base/restore.exp: caller5 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee1; return callee now
FAIL: gdb.base/restore.exp: caller5 calls callee1; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller5 calls callee1; return restored l2 to 32493
FAIL: gdb.base/restore.exp: caller5 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee2; return callee now
FAIL: gdb.base/restore.exp: caller5 calls callee2; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller5 calls callee2; return restored l2 to 32493
FAIL: gdb.base/restore.exp: caller5 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee3; return callee now
FAIL: gdb.base/restore.exp: caller5 calls callee3; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller5 calls callee3; return restored l2 to 32493
FAIL: gdb.base/restore.exp: caller5 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee4; return callee now
FAIL: gdb.base/restore.exp: caller5 calls callee4; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller5 calls callee4; return restored l2 to 32493
FAIL: gdb.base/restore.exp: caller5 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee5; return callee now
FAIL: gdb.base/restore.exp: caller5 calls callee5; return restored l1 to 32492
FAIL: gdb.base/restore.exp: caller5 calls callee5; return restored l2 to 32493
FAIL: gdb.base/restore.exp: caller5 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l5 to 32496
PASS: gdb.base/restore.exp: run to completion
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/savedregs.exp ...
PASS: gdb.base/savedregs.exp: advance thrower
PASS: gdb.base/savedregs.exp: Get main info frame
PASS: gdb.base/savedregs.exp: handle SIGSEGV pass print nostop
PASS: gdb.base/savedregs.exp: handle SIGILL pass print nostop
PASS: gdb.base/savedregs.exp: advance catcher
PASS: gdb.base/savedregs.exp: Get sigtramp info frame
FAIL: gdb.base/savedregs.exp: Get thrower info frame
FAIL: gdb.base/savedregs.exp: Check main info frame; stack contains catcher sigtramp thrower main (GDB internal error)
PASS: gdb.base/savedregs.exp: break caller
PASS: gdb.base/savedregs.exp: call caller (1,2,3,4,5,6,7,8)
PASS: gdb.base/savedregs.exp: Get dummy info frame
PASS: gdb.base/savedregs.exp: Get catcher info frame
PASS: gdb.base/savedregs.exp: Check sigtramp info frame; stack contains caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check thrower info frame; stack contains caller dummy catcher sigtramp thrower main
FAIL: gdb.base/savedregs.exp: Check main info frame; stack contains caller dummy catcher sigtramp thrower main (GDB internal error)
PASS: gdb.base/savedregs.exp: advance callee
PASS: gdb.base/savedregs.exp: Get caller info frame
PASS: gdb.base/savedregs.exp: Check dummy info frame; stack contains callee caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check catcher info frame; stack contains callee caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check sigtramp info frame; stack contains callee caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check thrower info frame; stack contains callee caller dummy catcher sigtramp thrower main
FAIL: gdb.base/savedregs.exp: Check main info frame; stack contains callee caller dummy catcher sigtramp thrower main (GDB internal error)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/ui-redirect.exp ...
PASS: gdb.base/ui-redirect.exp: commands
PASS: gdb.base/ui-redirect.exp: print 1
PASS: gdb.base/ui-redirect.exp: end
PASS: gdb.base/ui-redirect.exp: set logging file /dev/null
PASS: gdb.base/ui-redirect.exp: set logging on
PASS: gdb.base/ui-redirect.exp: save breakpoints /dev/null
PASS: gdb.base/ui-redirect.exp: set logging off
PASS: gdb.base/ui-redirect.exp: help
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/tui-layout.exp ...
PASS: gdb.base/tui-layout.exp: layout asm
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/signest.exp ...
PASS: gdb.base/signest.exp: continue to fault
PASS: gdb.base/signest.exp: set conditional breakpoint
PASS: gdb.base/signest.exp: pass SIGSEGV
PASS: gdb.base/signest.exp: pass SIGBUS
PASS: gdb.base/signest.exp: run through nested faults
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/setvar.exp ...
PASS: gdb.base/setvar.exp: set print sevenbit-strings
PASS: gdb.base/setvar.exp: set variable char=0
PASS: gdb.base/setvar.exp: set variable char=1
PASS: gdb.base/setvar.exp: set variable char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable char=65 ('A')
PASS: gdb.base/setvar.exp: set variable char=97 ('a')
PASS: gdb.base/setvar.exp: set variable char=126 ('~')
PASS: gdb.base/setvar.exp: set variable char=127 (8-bit)
PASS: gdb.base/setvar.exp: set variable signed char=0
PASS: gdb.base/setvar.exp: set variable signed char=1
PASS: gdb.base/setvar.exp: set variable signed char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable signed char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable signed char=65 ('A')
PASS: gdb.base/setvar.exp: set variable signed char=97 ('a')
PASS: gdb.base/setvar.exp: set variable signed char=126 ('~')
PASS: gdb.base/setvar.exp: set variable signed char=127 (8-bit)
PASS: gdb.base/setvar.exp: set variable v_signed_char=-1
PASS: gdb.base/setvar.exp: set variable signed char=-1 (-1)
PASS: gdb.base/setvar.exp: set variable v_signed_char=0xFF
PASS: gdb.base/setvar.exp: set variable signed char=0xFF (0xFF)
PASS: gdb.base/setvar.exp: set variable unsigned char=0
PASS: gdb.base/setvar.exp: set variable unsigned char=1
PASS: gdb.base/setvar.exp: set variable unsigned char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable unsigned char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable unsigned char=65 ('A')
PASS: gdb.base/setvar.exp: set variable unsigned char=97 ('a')
PASS: gdb.base/setvar.exp: set variable unsigned char=126 ('~')
PASS: gdb.base/setvar.exp: set variable unsigned char=255 (8-bit)
PASS: gdb.base/setvar.exp: set variable short=0
PASS: gdb.base/setvar.exp: set variable short=1
PASS: gdb.base/setvar.exp: set variable short=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed short=0
PASS: gdb.base/setvar.exp: set variable signed short=1
PASS: gdb.base/setvar.exp: set variable signed short=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned short=0
PASS: gdb.base/setvar.exp: set variable unsigned short=1
PASS: gdb.base/setvar.exp: set variable unsigned short=~0 (minus)
PASS: gdb.base/setvar.exp: set variable int=0
PASS: gdb.base/setvar.exp: set variable int=1
PASS: gdb.base/setvar.exp: set variable int=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed int=0
PASS: gdb.base/setvar.exp: set variable signed int=1
PASS: gdb.base/setvar.exp: set variable signed int=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned int=0
PASS: gdb.base/setvar.exp: set variable unsigned int=1
PASS: gdb.base/setvar.exp: set variable unsigned int=~0 (minus)
PASS: gdb.base/setvar.exp: set variable long=0
PASS: gdb.base/setvar.exp: set variable long=1
PASS: gdb.base/setvar.exp: set variable long=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed long=0
PASS: gdb.base/setvar.exp: set variable signed long=1
PASS: gdb.base/setvar.exp: set variable signed long=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned long=0
PASS: gdb.base/setvar.exp: set variable unsigned long=1
PASS: gdb.base/setvar.exp: set variable unsigned long=~0 (minus)
PASS: gdb.base/setvar.exp: set variable float=0
PASS: gdb.base/setvar.exp: set variable float=1
PASS: gdb.base/setvar.exp: set variable float=-1 (minus)
PASS: gdb.base/setvar.exp: set variable double=0
PASS: gdb.base/setvar.exp: set variable double=1
PASS: gdb.base/setvar.exp: set variable double=-1 (minus)
PASS: gdb.base/setvar.exp: set variable char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable signed char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable unsigned char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable short array
PASS: gdb.base/setvar.exp: set variable signed short array
PASS: gdb.base/setvar.exp: set variable unsigned short array
PASS: gdb.base/setvar.exp: set variable int array
PASS: gdb.base/setvar.exp: set variable signed int array
PASS: gdb.base/setvar.exp: set variable unsigned int array
PASS: gdb.base/setvar.exp: set variable long array
PASS: gdb.base/setvar.exp: set variable signed long array
PASS: gdb.base/setvar.exp: set variable unsigned long array
PASS: gdb.base/setvar.exp: set variable float array
PASS: gdb.base/setvar.exp: set variable double array
PASS: gdb.base/setvar.exp: set variable char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable signed char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable signed char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable unsigned char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable unsigned char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable short pointer
PASS: gdb.base/setvar.exp: set variable short pointer (#2)
PASS: gdb.base/setvar.exp: set v_signed_short_pointer=v_signed_short_array
PASS: gdb.base/setvar.exp: set variable *(v_signed_short_pointer)=123
PASS: gdb.base/setvar.exp: set variable *(v_signed_short_pointer+1)=-456
PASS: gdb.base/setvar.exp: set variable signed short pointer
PASS: gdb.base/setvar.exp: print *(v_signed_short_pointer+1)
PASS: gdb.base/setvar.exp: set v_unsigned_short_pointer=v_unsigned_short_array
PASS: gdb.base/setvar.exp: set variable *(v_unsigned_short_pointer)=123
PASS: gdb.base/setvar.exp: set variable *(v_unsigned_short_pointer+1)=-456
PASS: gdb.base/setvar.exp: set variable unsigned short pointer
PASS: gdb.base/setvar.exp: print *(v_unsigned_short_pointer+1)
PASS: gdb.base/setvar.exp: set variable int pointer
PASS: gdb.base/setvar.exp: set variable int pointer (#2)
PASS: gdb.base/setvar.exp: set variable signed int pointer
PASS: gdb.base/setvar.exp: set variable signed int pointer (#2)
PASS: gdb.base/setvar.exp: set variable unsigned int pointer
PASS: gdb.base/setvar.exp: print variable unsigned int pointer+1
PASS: gdb.base/setvar.exp: set variable long pointer
PASS: gdb.base/setvar.exp: set variable long pointer (#2)
PASS: gdb.base/setvar.exp: set variable signed long pointer
PASS: gdb.base/setvar.exp: set variable signed long pointer (#2)
PASS: gdb.base/setvar.exp: set variable unsigned long pointer
PASS: gdb.base/setvar.exp: set variable unsigned long pointer (#2)
PASS: gdb.base/setvar.exp: set variable float pointer
PASS: gdb.base/setvar.exp: set variable float pointer (#2)
PASS: gdb.base/setvar.exp: set variable double pointer
PASS: gdb.base/setvar.exp: set variable double pointer (#2)
PASS: gdb.base/setvar.exp: set variable structure char member
PASS: gdb.base/setvar.exp: set variable structure short member
PASS: gdb.base/setvar.exp: set variable structure int member
PASS: gdb.base/setvar.exp: set variable structure long member
PASS: gdb.base/setvar.exp: set variable structure float member
PASS: gdb.base/setvar.exp: set variable structure double member
PASS: gdb.base/setvar.exp: set print structure #1
PASS: gdb.base/setvar.exp: set print structure #2
PASS: gdb.base/setvar.exp: set print structure #3
PASS: gdb.base/setvar.exp: set print structure #4
PASS: gdb.base/setvar.exp: print sef.field=sm1
PASS: gdb.base/setvar.exp: print sef.field (sm1)
PASS: gdb.base/setvar.exp: print sef.field=s1
PASS: gdb.base/setvar.exp: print sef.field (s1)
PASS: gdb.base/setvar.exp: print uef.field=u2
PASS: gdb.base/setvar.exp: print uef.field (u2)
PASS: gdb.base/setvar.exp: print uef.field=u1
PASS: gdb.base/setvar.exp: print uef.field (u1)
PASS: gdb.base/setvar.exp: print sef.field=7
PASS: gdb.base/setvar.exp: print uef.field=6
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/pending.exp ...
PASS: gdb.base/pending.exp: set pending breakpoint (without symbols)
PASS: gdb.base/pending.exp: complete condition
PASS: gdb.base/pending.exp: single pending breakpoint info (without symbols)
PASS: gdb.base/pending.exp: run to resolved breakpoint 1 (without symbols)
PASS: gdb.base/pending.exp: set pending breakpoint
PASS: gdb.base/pending.exp: single pending breakpoint info
PASS: gdb.base/pending.exp: breakpoint function
PASS: gdb.base/pending.exp: pending plus real breakpoint info
PASS: gdb.base/pending.exp: Don't set pending breakpoint
PASS: gdb.base/pending.exp: condition 1 k == 1
PASS: gdb.base/pending.exp: pending plus condition
PASS: gdb.base/pending.exp: disable 1
PASS: gdb.base/pending.exp: pending disabled
PASS: gdb.base/pending.exp: Set commands for pending breakpoint
PASS: gdb.base/pending.exp: pending disabled plus commands
PASS: gdb.base/pending.exp: Set pending breakpoint 2
PASS: gdb.base/pending.exp: multiple pending breakpoints
PASS: gdb.base/pending.exp: Set pending breakpoint 3
PASS: gdb.base/pending.exp: set ignore count on pending breakpoint 3
PASS: gdb.base/pending.exp: multiple pending breakpoints 2
PASS: gdb.base/pending.exp: running to main
PASS: gdb.base/pending.exp: re-enabling pending breakpoint that can resolve instantly
PASS: gdb.base/pending.exp: continue to resolved breakpoint 2
PASS: gdb.base/pending.exp: continue to resolved breakpoint 1
PASS: gdb.base/pending.exp: Disable other breakpoints
PASS: gdb.base/pending.exp: Disable other breakpoints
PASS: gdb.base/pending.exp: continue to resolved breakpoint 3
PASS: gdb.base/pending.exp: set imaginary pending breakpoint
PASS: gdb.base/pending.exp: rerun to main
PASS: gdb.base/pending.exp: verify pending breakpoint after restart
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/nextoverexit.exp ...
PASS: gdb.base/nextoverexit.exp: next over exit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/prologue.exp ...
PASS: gdb.base/prologue.exp: setting breakpoint at marker
PASS: gdb.base/prologue.exp: continue to marker
PASS: gdb.base/prologue.exp: reading $pc: marker
PASS: gdb.base/prologue.exp: setting breakpoint at other
PASS: gdb.base/prologue.exp: continue to other
PASS: gdb.base/prologue.exp: reading $pc: other
PASS: gdb.base/prologue.exp: same pc from minimal symbol
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/varargs.exp ...
PASS: gdb.base/varargs.exp: set print sevenbit-strings
PASS: gdb.base/varargs.exp: set print address off
PASS: gdb.base/varargs.exp: set width 0
PASS: gdb.base/varargs.exp: print find_max1(5,1,2,3,4,5)
PASS: gdb.base/varargs.exp: print find_max1(1,3)
PASS: gdb.base/varargs.exp: print find_max1(10,1,2,3,4,5,6,7,8,29,0)
PASS: gdb.base/varargs.exp: print find_max2(3,1,2,3)
PASS: gdb.base/varargs.exp: print find_max_double(5,1.0,17.0,2.0,3.0,4.0)
PASS: gdb.base/varargs.exp: print find_max_float_real(4, fc1, fc2, fc3, fc4)
PASS: gdb.base/varargs.exp: print find_max_double_real(4, dc1, dc2, dc3, dc4)
PASS: gdb.base/varargs.exp: print find_max_long_double_real(4, ldc1, ldc2, ldc3, ldc4)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/trace-commands.exp ...
PASS: gdb.base/trace-commands.exp: show trace-commands says off
PASS: gdb.base/trace-commands.exp: source -v
PASS: gdb.base/trace-commands.exp: set trace-commands
PASS: gdb.base/trace-commands.exp: show trace-commands says on
PASS: gdb.base/trace-commands.exp: simple trace-commands test
PASS: gdb.base/trace-commands.exp: nested trace-commands test
PASS: gdb.base/trace-commands.exp: define user command
PASS: gdb.base/trace-commands.exp: nested trace-commands test with source
PASS: gdb.base/trace-commands.exp: depth resets on error part 1
PASS: gdb.base/trace-commands.exp: depth resets on error part 2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/so-impl-ld.exp ...
PASS: gdb.base/so-impl-ld.exp: step over solib call
PASS: gdb.base/so-impl-ld.exp: step into solib call
PASS: gdb.base/so-impl-ld.exp: step in solib call
PASS: gdb.base/so-impl-ld.exp: step out of solib call
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/siginfo-obj.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/relocate.exp ...
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o 0
PASS: gdb.base/relocate.exp: get address of static_foo
PASS: gdb.base/relocate.exp: get address of static_bar
PASS: gdb.base/relocate.exp: static variables have different addresses
PASS: gdb.base/relocate.exp: get address of global_foo
PASS: gdb.base/relocate.exp: get address of global_bar
PASS: gdb.base/relocate.exp: global variables have different addresses
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: get address of function_bar
PASS: gdb.base/relocate.exp: functions have different addresses
PASS: gdb.base/relocate.exp: set $offset = 0x10000
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o $offset
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: function foo has a different address
PASS: gdb.base/relocate.exp: print static_foo
PASS: gdb.base/relocate.exp: print static_bar
PASS: gdb.base/relocate.exp: print global_foo
PASS: gdb.base/relocate.exp: print global_bar
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sepdebug.exp ...
PASS: gdb.base/sepdebug.exp: breakpoint function
PASS: gdb.base/sepdebug.exp: breakpoint quoted function
PASS: gdb.base/sepdebug.exp: breakpoint function in file
PASS: gdb.base/sepdebug.exp: use `list' to establish default source file
PASS: gdb.base/sepdebug.exp: breakpoint line number
PASS: gdb.base/sepdebug.exp: breakpoint duplicate
PASS: gdb.base/sepdebug.exp: breakpoint line number in file
PASS: gdb.base/sepdebug.exp: breakpoint at start of multi line if conditional
PASS: gdb.base/sepdebug.exp: breakpoint at start of multi line while conditional
PASS: gdb.base/sepdebug.exp: breakpoint info
PASS: gdb.base/sepdebug.exp: run until function breakpoint
PASS: gdb.base/sepdebug.exp: run until breakpoint set at a line number
PASS: gdb.base/sepdebug.exp: run until file:function(6) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(5) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(4) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(3) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(2) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(1) breakpoint
PASS: gdb.base/sepdebug.exp: run until quoted breakpoint
PASS: gdb.base/sepdebug.exp: run until file:linenum breakpoint
PASS: gdb.base/sepdebug.exp: breakpoint offset +1
PASS: gdb.base/sepdebug.exp: step onto breakpoint
PASS: gdb.base/sepdebug.exp: Temporary breakpoint function
PASS: gdb.base/sepdebug.exp: Temporary breakpoint function in file
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number #1
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number #2
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number in file #1
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number in file #2
PASS: gdb.base/sepdebug.exp: Temporary breakpoint info
PASS: gdb.base/sepdebug.exp: catch requires an event name
PASS: gdb.base/sepdebug.exp: set catch fork, never expected to trigger
PASS: gdb.base/sepdebug.exp: set catch vfork, never expected to trigger
PASS: gdb.base/sepdebug.exp: set catch exec, never expected to trigger
PASS: gdb.base/sepdebug.exp: set breakpoint pending off
PASS: gdb.base/sepdebug.exp: break on non-existent source line
PASS: gdb.base/sepdebug.exp: until bp_location1
PASS: gdb.base/sepdebug.exp: break on default location, 1st time
PASS: gdb.base/sepdebug.exp: break on default location, 2nd time
PASS: gdb.base/sepdebug.exp: break on default location, 3rd time
PASS: gdb.base/sepdebug.exp: break on default location, 4th time
PASS: gdb.base/sepdebug.exp: set to-be-silent break bp_location1
PASS: gdb.base/sepdebug.exp: set silent break bp_location1
PASS: gdb.base/sepdebug.exp: info silent break bp_location1
PASS: gdb.base/sepdebug.exp: hit silent break bp_location1
PASS: gdb.base/sepdebug.exp: stopped for silent break bp_location1
PASS: gdb.base/sepdebug.exp: thread-specific breakpoint on non-existent thread disallowed
PASS: gdb.base/sepdebug.exp: thread-specific breakpoint on bogus thread ID disallowed
PASS: gdb.base/sepdebug.exp: breakpoint with trailing garbage disallowed
PASS: gdb.base/sepdebug.exp: step over breakpoint
PASS: gdb.base/sepdebug.exp: clear line has no breakpoint disallowed
PASS: gdb.base/sepdebug.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/sepdebug.exp: break marker3 #1
PASS: gdb.base/sepdebug.exp: break marker3 #2
PASS: gdb.base/sepdebug.exp: clear marker3
PASS: gdb.base/sepdebug.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/sepdebug.exp: set breakpoint via convenience variable
PASS: gdb.base/sepdebug.exp: set convenience variable $foo to 81.5
PASS: gdb.base/sepdebug.exp: set breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/sepdebug.exp: set breakpoint on to-be-called function
PASS: gdb.base/sepdebug.exp: hit breakpoint on called function
PASS: gdb.base/sepdebug.exp: backtrace while in called function
PASS: gdb.base/sepdebug.exp: finish from called function
PASS: gdb.base/sepdebug.exp: finish with arguments disallowed
PASS: gdb.base/sepdebug.exp: finish from outermost frame disallowed
PASS: gdb.base/sepdebug.exp: kill program
PASS: gdb.base/sepdebug.exp: break at factorial
PASS: gdb.base/sepdebug.exp: continue to factorial(5)
PASS: gdb.base/sepdebug.exp: backtrace from factorial(5)
PASS: gdb.base/sepdebug.exp: next to recursive call
PASS: gdb.base/sepdebug.exp: next over recursive call
PASS: gdb.base/sepdebug.exp: backtrace from factorial(5.1)
PASS: gdb.base/sepdebug.exp: continue until exit at recursive next test
PASS: gdb.base/sepdebug.exp: debuglink: set separate debug location
PASS: gdb.base/sepdebug.exp: debuglink: breakpoint function, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: breakpoint small function, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: run until function breakpoint, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: run until breakpoint set at small function, optimized file
PASS: gdb.base/sepdebug.exp: CRC mismatch is reported
PASS: gdb.base/sepdebug.exp: build-id support by binutils
PASS: gdb.base/sepdebug.exp: build-id: set separate debug location
PASS: gdb.base/sepdebug.exp: build-id: breakpoint function, optimized file
PASS: gdb.base/sepdebug.exp: build-id: breakpoint small function, optimized file
PASS: gdb.base/sepdebug.exp: build-id: run until function breakpoint, optimized file
PASS: gdb.base/sepdebug.exp: build-id: run until breakpoint set at small function, optimized file
PASS: gdb.base/sepdebug.exp: multiple-dirs: set separate debug location
PASS: gdb.base/sepdebug.exp: multiple-dirs: breakpoint function, optimized file
PASS: gdb.base/sepdebug.exp: multiple-dirs: breakpoint small function, optimized file
PASS: gdb.base/sepdebug.exp: multiple-dirs: run until function breakpoint, optimized file
PASS: gdb.base/sepdebug.exp: multiple-dirs: run until breakpoint set at small function, optimized file
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/shreloc.exp ...
PASS: gdb.base/shreloc.exp: get address of fn_1
PASS: gdb.base/shreloc.exp: get address of fn_2
PASS: gdb.base/shreloc.exp: relocated extern functions have different addresses
PASS: gdb.base/shreloc.exp: get address of extern_var_1
PASS: gdb.base/shreloc.exp: get address of extern_var_2
PASS: gdb.base/shreloc.exp: relocated extern variables have different addresses
PASS: gdb.base/shreloc.exp: get address of static_var_1
PASS: gdb.base/shreloc.exp: get address of static_var_2
PASS: gdb.base/shreloc.exp: relocated static variables have different addresses
PASS: gdb.base/shreloc.exp: get_msym_addrs static_var_[12]
PASS: gdb.base/shreloc.exp: (msymbol) relocated static vars have different addresses
PASS: gdb.base/shreloc.exp: get_msym_addrs extern_var_[12]
PASS: gdb.base/shreloc.exp: (msymbol) relocated extern vars have different addresses
PASS: gdb.base/shreloc.exp: get_msym_addrs fn_[12]
PASS: gdb.base/shreloc.exp: (msymbol) relocated functions have different addresses
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/pr11022.exp ...
PASS: gdb.base/pr11022.exp: set breakpoint
FAIL: gdb.base/pr11022.exp: set watchpoint
PASS: gdb.base/pr11022.exp: breakpoint hit
FAIL: gdb.base/pr11022.exp: watchpoint hit
PASS: gdb.base/pr11022.exp: breakpoint hit 2
PASS: gdb.base/pr11022.exp: set var x = 1
FAIL: gdb.base/pr11022.exp: watchpoint hit 2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/testenv.exp ...
PASS: gdb.base/testenv.exp: Test no TEST_GDB var
PASS: gdb.base/testenv.exp: Set TEST_GDB_VAR1
PASS: gdb.base/testenv.exp: Test with one TEST_GDB var
PASS: gdb.base/testenv.exp: Set TEST_GDB_VAR2
PASS: gdb.base/testenv.exp: Test with two TEST_GDB var
PASS: gdb.base/testenv.exp: Unset TEST_GDB_VAR1
PASS: gdb.base/testenv.exp: Test with one TEST_GDB var, after unset
PASS: gdb.base/testenv.exp: Test passing TEST_GDB_GLOBAL to GDB
PASS: gdb.base/testenv.exp: Test with TEST_GDB_GLOBAL
PASS: gdb.base/testenv.exp: Unset TEST_GDB_GLOBAL
PASS: gdb.base/testenv.exp: Test with TEST_GDB_GLOBAL unset
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sigaltstack.exp ...
PASS: gdb.base/sigaltstack.exp: handle SIGALRM print pass nostop
PASS: gdb.base/sigaltstack.exp: handle SIGVTALRM print pass nostop
PASS: gdb.base/sigaltstack.exp: handle SIGPROF print pass nostop
PASS: gdb.base/sigaltstack.exp: break catcher if level == INNER
FAIL: gdb.base/sigaltstack.exp: continue to catch (timeout)
FAIL: gdb.base/sigaltstack.exp: next (timeout)
FAIL: gdb.base/sigaltstack.exp: backtrace (pattern 1) (timeout)
FAIL: gdb.base/sigaltstack.exp: finish from catch LEAF (timeout)
FAIL: gdb.base/sigaltstack.exp: finish to throw INNER (timeout)
FAIL: gdb.base/sigaltstack.exp: finish to catch INNER (timeout)
FAIL: gdb.base/sigaltstack.exp: finish from catch INNER (timeout)
FAIL: gdb.base/sigaltstack.exp: finish to OUTER (timeout)
FAIL: gdb.base/sigaltstack.exp: finish to catch MAIN (timeout)
FAIL: gdb.base/sigaltstack.exp: finish to MAIN (timeout)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/set-noassign.exp ...
PASS: gdb.base/set-noassign.exp: set language ada
PASS: gdb.base/set-noassign.exp: warning for set without assignment
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/relational.exp ...
PASS: gdb.base/relational.exp: set variable x=14
PASS: gdb.base/relational.exp: set variable y=2
PASS: gdb.base/relational.exp: set variable z=2
PASS: gdb.base/relational.exp: set variable w=3
PASS: gdb.base/relational.exp: print value of x
PASS: gdb.base/relational.exp: print value of y
PASS: gdb.base/relational.exp: print value of z
PASS: gdb.base/relational.exp: print value of w
PASS: gdb.base/relational.exp: print value of x<y
PASS: gdb.base/relational.exp: print value of x<=y
PASS: gdb.base/relational.exp: print value of x>y
PASS: gdb.base/relational.exp: print value of x>=y
PASS: gdb.base/relational.exp: print value of x==y
PASS: gdb.base/relational.exp: print value of x!=y
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y<z
PASS: gdb.base/relational.exp: print value of x<=y<=z
PASS: gdb.base/relational.exp: print value of x>y>z
PASS: gdb.base/relational.exp: print value of x>=y>=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x==y==z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x!=y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y==z
PASS: gdb.base/relational.exp: print value of x<y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y<=z
PASS: gdb.base/relational.exp: print value of x<y>=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y>z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x>y>=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>y!=z
PASS: gdb.base/relational.exp: set x to 4
PASS: gdb.base/relational.exp: print value of x>y<=z
PASS: gdb.base/relational.exp: print value of x>=y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x>=y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>=y<=z
PASS: gdb.base/relational.exp: print value of x<=y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x<=y!=z
PASS: gdb.base/relational.exp: print value of x==y!=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>=(y<z)
PASS: gdb.base/relational.exp: print value of x>=(y!=z)
PASS: gdb.base/relational.exp: print value of x==(y==z)
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of (x==y)<z
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/recpar.exp ...
PASS: gdb.base/recpar.exp: break recpar.c:26 if n == 3
PASS: gdb.base/recpar.exp: continue
PASS: gdb.base/recpar.exp: backtrace
PASS: gdb.base/recpar.exp: frame 2
PASS: gdb.base/recpar.exp: print foo::val
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/volatile.exp ...
PASS: gdb.base/volatile.exp: continue to marker1
PASS: gdb.base/volatile.exp: up from marker1
PASS: gdb.base/volatile.exp: ptype vox
PASS: gdb.base/volatile.exp: ptype victuals
PASS: gdb.base/volatile.exp: ptype vixen
PASS: gdb.base/volatile.exp: ptype vitriol
PASS: gdb.base/volatile.exp: ptype vellum
PASS: gdb.base/volatile.exp: ptype valve
PASS: gdb.base/volatile.exp: ptype vacuity
PASS: gdb.base/volatile.exp: ptype vertigo
PASS: gdb.base/volatile.exp: ptype vampire
PASS: gdb.base/volatile.exp: ptype viper
PASS: gdb.base/volatile.exp: ptype vigour
PASS: gdb.base/volatile.exp: ptype vapour
PASS: gdb.base/volatile.exp: ptype ventricle
PASS: gdb.base/volatile.exp: ptype vigintillion
PASS: gdb.base/volatile.exp: ptype vocation
PASS: gdb.base/volatile.exp: ptype veracity
PASS: gdb.base/volatile.exp: ptype vapidity
PASS: gdb.base/volatile.exp: ptype velocity
PASS: gdb.base/volatile.exp: ptype veneer
PASS: gdb.base/volatile.exp: ptype video
PASS: gdb.base/volatile.exp: ptype vacuum
PASS: gdb.base/volatile.exp: ptype veniality
PASS: gdb.base/volatile.exp: ptype vitality
PASS: gdb.base/volatile.exp: ptype voracity
PASS: gdb.base/volatile.exp: ptype victor
PASS: gdb.base/volatile.exp: ptype vicar
PASS: gdb.base/volatile.exp: ptype victory
PASS: gdb.base/volatile.exp: ptype vicarage
PASS: gdb.base/volatile.exp: ptype vein
PASS: gdb.base/volatile.exp: ptype vogue
PASS: gdb.base/volatile.exp: ptype cavern
PASS: gdb.base/volatile.exp: ptype coverlet
PASS: gdb.base/volatile.exp: ptype caveat
PASS: gdb.base/volatile.exp: ptype covenant
PASS: gdb.base/volatile.exp: ptype vizier
PASS: gdb.base/volatile.exp: ptype vanadium
PASS: gdb.base/volatile.exp: ptype vane
PASS: gdb.base/volatile.exp: ptype veldt
PASS: gdb.base/volatile.exp: ptype cove
PASS: gdb.base/volatile.exp: ptype cavity
PASS: gdb.base/volatile.exp: ptype vagus
PASS: gdb.base/volatile.exp: ptype vagrancy
PASS: gdb.base/volatile.exp: ptype vagary
PASS: gdb.base/volatile.exp: ptype vendor
PASS: gdb.base/volatile.exp: ptype qux2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sizeof.exp ...
PASS: gdb.base/sizeof.exp: next
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (char)" (1)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (short)" (2)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long long)" (8)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (void *)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (void (*)(void))" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (float)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (double)" (8)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long double)" (12)
PASS: gdb.base/sizeof.exp: check sizeof "char"
PASS: gdb.base/sizeof.exp: check sizeof "short"
PASS: gdb.base/sizeof.exp: check sizeof "int"
PASS: gdb.base/sizeof.exp: check sizeof "long"
PASS: gdb.base/sizeof.exp: check sizeof "long long"
PASS: gdb.base/sizeof.exp: check sizeof "void *"
PASS: gdb.base/sizeof.exp: check sizeof "void (*)(void)"
PASS: gdb.base/sizeof.exp: check sizeof "float"
PASS: gdb.base/sizeof.exp: check sizeof "double"
PASS: gdb.base/sizeof.exp: check sizeof "long double"
PASS: gdb.base/sizeof.exp: get integer valueof "'\377'" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (char) -1" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (signed char) -1" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (unsigned char) -1" (255)
PASS: gdb.base/sizeof.exp: check valueof "'\377'"
PASS: gdb.base/sizeof.exp: check valueof "(int) (char) -1"
PASS: gdb.base/sizeof.exp: check valueof "(int) (signed char) -1"
PASS: gdb.base/sizeof.exp: check valueof "(int) (unsigned char) -1"
PASS: gdb.base/sizeof.exp: set padding_char.v = 1
PASS: gdb.base/sizeof.exp: print padding_char.p1
PASS: gdb.base/sizeof.exp: print/d padding_char.v
PASS: gdb.base/sizeof.exp: print padding_char.p2
PASS: gdb.base/sizeof.exp: set padding_short.v = 2
PASS: gdb.base/sizeof.exp: print padding_short.p1
PASS: gdb.base/sizeof.exp: print/d padding_short.v
PASS: gdb.base/sizeof.exp: print padding_short.p2
PASS: gdb.base/sizeof.exp: set padding_int.v = 4
PASS: gdb.base/sizeof.exp: print padding_int.p1
PASS: gdb.base/sizeof.exp: print/d padding_int.v
PASS: gdb.base/sizeof.exp: print padding_int.p2
PASS: gdb.base/sizeof.exp: set padding_long.v = 4
PASS: gdb.base/sizeof.exp: print padding_long.p1
PASS: gdb.base/sizeof.exp: print/d padding_long.v
PASS: gdb.base/sizeof.exp: print padding_long.p2
PASS: gdb.base/sizeof.exp: set padding_long_long.v = 8
PASS: gdb.base/sizeof.exp: print padding_long_long.p1
PASS: gdb.base/sizeof.exp: print/d padding_long_long.v
PASS: gdb.base/sizeof.exp: print padding_long_long.p2
PASS: gdb.base/sizeof.exp: set padding_float.v = 1
PASS: gdb.base/sizeof.exp: print padding_float.p1
PASS: gdb.base/sizeof.exp: print/f padding_float.v
PASS: gdb.base/sizeof.exp: print padding_float.p2
PASS: gdb.base/sizeof.exp: set padding_double.v = 2
PASS: gdb.base/sizeof.exp: print padding_double.p1
PASS: gdb.base/sizeof.exp: print/f padding_double.v
PASS: gdb.base/sizeof.exp: print padding_double.p2
PASS: gdb.base/sizeof.exp: set padding_long_double.v = 4
PASS: gdb.base/sizeof.exp: print padding_long_double.p1
PASS: gdb.base/sizeof.exp: print/f padding_long_double.v
PASS: gdb.base/sizeof.exp: print padding_long_double.p2
PASS: gdb.base/sizeof.exp: maint print arch
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watchpoint-hw-hit-once.exp ...
PASS: gdb.base/watchpoint-hw-hit-once.exp: rwatch watchee
FAIL: gdb.base/watchpoint-hw-hit-once.exp: continue
FAIL: gdb.base/watchpoint-hw-hit-once.exp: continue to break-at-exit (the program exited)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib-nodir.exp ...
PASS: gdb.base/solib-nodir.exp: set env LD_LIBRARY_PATH=:
PASS: gdb.base/solib-nodir.exp: cd OBJDIR/gdb.base
PASS: gdb.base/solib-nodir.exp: library loaded
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/valgrind-db-attach.exp ...
UNSUPPORTED: gdb.base/valgrind-db-attach.exp: spawn valgrind
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/store.exp ...
PASS: gdb.base/store.exp: tbreak wack_charest
PASS: gdb.base/store.exp: continue to wack_charest
PASS: gdb.base/store.exp: var charest l; print old l, expecting -1 .*
PASS: gdb.base/store.exp: var charest l; print old r, expecting -2 .*
PASS: gdb.base/store.exp: var charest l; setting l to 4
PASS: gdb.base/store.exp: var charest l; print new l, expecting 4 ..004.
PASS: gdb.base/store.exp: var charest l; next over add call
PASS: gdb.base/store.exp: var charest l; print incremented l, expecting 2 ..002.
PASS: gdb.base/store.exp: tbreak wack_short
PASS: gdb.base/store.exp: continue to wack_short
PASS: gdb.base/store.exp: var short l; print old l, expecting -1
PASS: gdb.base/store.exp: var short l; print old r, expecting -2
PASS: gdb.base/store.exp: var short l; setting l to 4
PASS: gdb.base/store.exp: var short l; print new l, expecting 4
PASS: gdb.base/store.exp: var short l; next over add call
PASS: gdb.base/store.exp: var short l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_int
PASS: gdb.base/store.exp: continue to wack_int
PASS: gdb.base/store.exp: var int l; print old l, expecting -1
PASS: gdb.base/store.exp: var int l; print old r, expecting -2
PASS: gdb.base/store.exp: var int l; setting l to 4
PASS: gdb.base/store.exp: var int l; print new l, expecting 4
PASS: gdb.base/store.exp: var int l; next over add call
PASS: gdb.base/store.exp: var int l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_long
PASS: gdb.base/store.exp: continue to wack_long
PASS: gdb.base/store.exp: var long l; print old l, expecting -1
PASS: gdb.base/store.exp: var long l; print old r, expecting -2
PASS: gdb.base/store.exp: var long l; setting l to 4
PASS: gdb.base/store.exp: var long l; print new l, expecting 4
PASS: gdb.base/store.exp: var long l; next over add call
PASS: gdb.base/store.exp: var long l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_longest
PASS: gdb.base/store.exp: continue to wack_longest
PASS: gdb.base/store.exp: var longest l; print old l, expecting -1
FAIL: gdb.base/store.exp: var longest l; print old r, expecting -2
PASS: gdb.base/store.exp: var longest l; setting l to 4
PASS: gdb.base/store.exp: var longest l; print new l, expecting 4
PASS: gdb.base/store.exp: var longest l; next over add call
PASS: gdb.base/store.exp: var longest l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_float
PASS: gdb.base/store.exp: continue to wack_float
FAIL: gdb.base/store.exp: var float l; print old l, expecting -1
PASS: gdb.base/store.exp: var float l; print old r, expecting -2
FAIL: gdb.base/store.exp: var float l; setting l to 4
FAIL: gdb.base/store.exp: var float l; print new l, expecting 4
PASS: gdb.base/store.exp: var float l; next over add call
FAIL: gdb.base/store.exp: var float l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_double
PASS: gdb.base/store.exp: continue to wack_double
FAIL: gdb.base/store.exp: var double l; print old l, expecting -1
FAIL: gdb.base/store.exp: var double l; print old r, expecting -2
FAIL: gdb.base/store.exp: var double l; setting l to 4
FAIL: gdb.base/store.exp: var double l; print new l, expecting 4
PASS: gdb.base/store.exp: var double l; next over add call
FAIL: gdb.base/store.exp: var double l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_doublest
PASS: gdb.base/store.exp: continue to wack_doublest
FAIL: gdb.base/store.exp: var doublest l; print old l, expecting -1
FAIL: gdb.base/store.exp: var doublest l; print old r, expecting -2
FAIL: gdb.base/store.exp: var doublest l; setting l to 4
FAIL: gdb.base/store.exp: var doublest l; print new l, expecting 4
PASS: gdb.base/store.exp: var doublest l; next over add call
FAIL: gdb.base/store.exp: var doublest l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak add_charest
PASS: gdb.base/store.exp: continue to add_charest
PASS: gdb.base/store.exp: upvar charest l; up
PASS: gdb.base/store.exp: upvar charest l; print old l, expecting -1 .*
PASS: gdb.base/store.exp: upvar charest l; print old r, expecting -2 .*
PASS: gdb.base/store.exp: upvar charest l; set l to 4
PASS: gdb.base/store.exp: upvar charest l; print new l, expecting 4 ..004.
PASS: gdb.base/store.exp: tbreak add_short
PASS: gdb.base/store.exp: continue to add_short
PASS: gdb.base/store.exp: upvar short l; up
PASS: gdb.base/store.exp: upvar short l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar short l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar short l; set l to 4
PASS: gdb.base/store.exp: upvar short l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_int
PASS: gdb.base/store.exp: continue to add_int
PASS: gdb.base/store.exp: upvar int l; up
PASS: gdb.base/store.exp: upvar int l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar int l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar int l; set l to 4
PASS: gdb.base/store.exp: upvar int l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_long
PASS: gdb.base/store.exp: continue to add_long
PASS: gdb.base/store.exp: upvar long l; up
PASS: gdb.base/store.exp: upvar long l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar long l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar long l; set l to 4
PASS: gdb.base/store.exp: upvar long l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_longest
PASS: gdb.base/store.exp: continue to add_longest
PASS: gdb.base/store.exp: upvar longest l; up
PASS: gdb.base/store.exp: upvar longest l; print old l, expecting -1
FAIL: gdb.base/store.exp: upvar longest l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar longest l; set l to 4
PASS: gdb.base/store.exp: upvar longest l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_float
PASS: gdb.base/store.exp: continue to add_float
PASS: gdb.base/store.exp: upvar float l; up
FAIL: gdb.base/store.exp: upvar float l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar float l; print old r, expecting -2
FAIL: gdb.base/store.exp: upvar float l; set l to 4
FAIL: gdb.base/store.exp: upvar float l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_double
PASS: gdb.base/store.exp: continue to add_double
PASS: gdb.base/store.exp: upvar double l; up
FAIL: gdb.base/store.exp: upvar double l; print old l, expecting -1
FAIL: gdb.base/store.exp: upvar double l; print old r, expecting -2
FAIL: gdb.base/store.exp: upvar double l; set l to 4
FAIL: gdb.base/store.exp: upvar double l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_doublest
PASS: gdb.base/store.exp: continue to add_doublest
PASS: gdb.base/store.exp: upvar doublest l; up
FAIL: gdb.base/store.exp: upvar doublest l; print old l, expecting -1
FAIL: gdb.base/store.exp: upvar doublest l; print old r, expecting -2
FAIL: gdb.base/store.exp: upvar doublest l; set l to 4
FAIL: gdb.base/store.exp: upvar doublest l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak wack_struct_1
PASS: gdb.base/store.exp: continue to wack_struct_1
PASS: gdb.base/store.exp: var struct 1 u; next to add_struct_1 call
PASS: gdb.base/store.exp: var struct 1 u; print old u, expecting {s = \{0}}
PASS: gdb.base/store.exp: var struct 1 u; set u to s_1
PASS: gdb.base/store.exp: var struct 1 u; print new u, expecting {s = \{1}}
PASS: gdb.base/store.exp: tbreak wack_struct_2
PASS: gdb.base/store.exp: continue to wack_struct_2
PASS: gdb.base/store.exp: var struct 2 u; next to add_struct_2 call
PASS: gdb.base/store.exp: var struct 2 u; print old u, expecting {s = \{0, 0}}
PASS: gdb.base/store.exp: var struct 2 u; set u to s_2
PASS: gdb.base/store.exp: var struct 2 u; print new u, expecting {s = \{1, 2}}
PASS: gdb.base/store.exp: tbreak wack_struct_3
PASS: gdb.base/store.exp: continue to wack_struct_3
PASS: gdb.base/store.exp: var struct 3 u; next to add_struct_3 call
PASS: gdb.base/store.exp: var struct 3 u; print old u, expecting {s = \{0, 0, 0}}
PASS: gdb.base/store.exp: var struct 3 u; set u to s_3
PASS: gdb.base/store.exp: var struct 3 u; print new u, expecting {s = \{1, 2, 3}}
PASS: gdb.base/store.exp: tbreak wack_struct_4
PASS: gdb.base/store.exp: continue to wack_struct_4
PASS: gdb.base/store.exp: var struct 4 u; next to add_struct_4 call
PASS: gdb.base/store.exp: var struct 4 u; print old u, expecting {s = \{0, 0, 0, 0}}
PASS: gdb.base/store.exp: var struct 4 u; set u to s_4
PASS: gdb.base/store.exp: var struct 4 u; print new u, expecting {s = \{1, 2, 3, 4}}
PASS: gdb.base/store.exp: tbreak add_struct_1
PASS: gdb.base/store.exp: continue to add_struct_1
PASS: gdb.base/store.exp: up struct 1 u; up
PASS: gdb.base/store.exp: up struct 1 u; print old u, expecting {s = \{0}}
PASS: gdb.base/store.exp: up struct 1 u; set u to s_1
PASS: gdb.base/store.exp: up struct 1 u; print new u, expecting {s = \{1}}
PASS: gdb.base/store.exp: tbreak add_struct_2
PASS: gdb.base/store.exp: continue to add_struct_2
PASS: gdb.base/store.exp: up struct 2 u; up
PASS: gdb.base/store.exp: up struct 2 u; print old u, expecting {s = \{0, 0}}
PASS: gdb.base/store.exp: up struct 2 u; set u to s_2
PASS: gdb.base/store.exp: up struct 2 u; print new u, expecting {s = \{1, 2}}
PASS: gdb.base/store.exp: tbreak add_struct_3
PASS: gdb.base/store.exp: continue to add_struct_3
PASS: gdb.base/store.exp: up struct 3 u; up
PASS: gdb.base/store.exp: up struct 3 u; print old u, expecting {s = \{0, 0, 0}}
PASS: gdb.base/store.exp: up struct 3 u; set u to s_3
PASS: gdb.base/store.exp: up struct 3 u; print new u, expecting {s = \{1, 2, 3}}
PASS: gdb.base/store.exp: tbreak add_struct_4
PASS: gdb.base/store.exp: continue to add_struct_4
PASS: gdb.base/store.exp: up struct 4 u; up
PASS: gdb.base/store.exp: up struct 4 u; print old u, expecting {s = \{0, 0, 0, 0}}
PASS: gdb.base/store.exp: up struct 4 u; set u to s_4
PASS: gdb.base/store.exp: up struct 4 u; print new u, expecting {s = \{1, 2, 3, 4}}
PASS: gdb.base/store.exp: tbreak wack_field_1
PASS: gdb.base/store.exp: continue field 1
PASS: gdb.base/store.exp: next field 1
PASS: gdb.base/store.exp: old field 1
PASS: gdb.base/store.exp: set variable u = F_1
PASS: gdb.base/store.exp: new field 1
PASS: gdb.base/store.exp: set variable u = F_1, u.i = f_1.i
PASS: gdb.base/store.exp: f_1.i
PASS: gdb.base/store.exp: set variable u = F_1, u.j = f_1.j
PASS: gdb.base/store.exp: f_1.j
PASS: gdb.base/store.exp: set variable u = F_1, u.k = f_1.k
PASS: gdb.base/store.exp: f_1.k
PASS: gdb.base/store.exp: set variable u = f_1, u.i = F_1.i
PASS: gdb.base/store.exp: F_1.i
PASS: gdb.base/store.exp: set variable u = f_1, u.j = F_1.j
PASS: gdb.base/store.exp: F_1.j
PASS: gdb.base/store.exp: set variable u = f_1, u.k = F_1.k
PASS: gdb.base/store.exp: F_1.k
PASS: gdb.base/store.exp: tbreak wack_field_2
PASS: gdb.base/store.exp: continue field 2
PASS: gdb.base/store.exp: next field 2
PASS: gdb.base/store.exp: old field 2
PASS: gdb.base/store.exp: set variable u = F_2
PASS: gdb.base/store.exp: new field 2
PASS: gdb.base/store.exp: set variable u = F_2, u.i = f_2.i
PASS: gdb.base/store.exp: f_2.i
PASS: gdb.base/store.exp: set variable u = F_2, u.j = f_2.j
PASS: gdb.base/store.exp: f_2.j
PASS: gdb.base/store.exp: set variable u = F_2, u.k = f_2.k
PASS: gdb.base/store.exp: f_2.k
PASS: gdb.base/store.exp: set variable u = f_2, u.i = F_2.i
PASS: gdb.base/store.exp: F_2.i
PASS: gdb.base/store.exp: set variable u = f_2, u.j = F_2.j
PASS: gdb.base/store.exp: F_2.j
PASS: gdb.base/store.exp: set variable u = f_2, u.k = F_2.k
PASS: gdb.base/store.exp: F_2.k
PASS: gdb.base/store.exp: tbreak wack_field_3
PASS: gdb.base/store.exp: continue field 3
PASS: gdb.base/store.exp: next field 3
PASS: gdb.base/store.exp: old field 3
PASS: gdb.base/store.exp: set variable u = F_3
PASS: gdb.base/store.exp: new field 3
PASS: gdb.base/store.exp: set variable u = F_3, u.i = f_3.i
PASS: gdb.base/store.exp: f_3.i
PASS: gdb.base/store.exp: set variable u = F_3, u.j = f_3.j
PASS: gdb.base/store.exp: f_3.j
PASS: gdb.base/store.exp: set variable u = F_3, u.k = f_3.k
PASS: gdb.base/store.exp: f_3.k
PASS: gdb.base/store.exp: set variable u = f_3, u.i = F_3.i
PASS: gdb.base/store.exp: F_3.i
PASS: gdb.base/store.exp: set variable u = f_3, u.j = F_3.j
PASS: gdb.base/store.exp: F_3.j
PASS: gdb.base/store.exp: set variable u = f_3, u.k = F_3.k
PASS: gdb.base/store.exp: F_3.k
PASS: gdb.base/store.exp: tbreak wack_field_4
PASS: gdb.base/store.exp: continue field 4
PASS: gdb.base/store.exp: next field 4
PASS: gdb.base/store.exp: old field 4
PASS: gdb.base/store.exp: set variable u = F_4
PASS: gdb.base/store.exp: new field 4
PASS: gdb.base/store.exp: set variable u = F_4, u.i = f_4.i
PASS: gdb.base/store.exp: f_4.i
PASS: gdb.base/store.exp: set variable u = F_4, u.j = f_4.j
PASS: gdb.base/store.exp: f_4.j
PASS: gdb.base/store.exp: set variable u = F_4, u.k = f_4.k
PASS: gdb.base/store.exp: f_4.k
PASS: gdb.base/store.exp: set variable u = f_4, u.i = F_4.i
PASS: gdb.base/store.exp: F_4.i
PASS: gdb.base/store.exp: set variable u = f_4, u.j = F_4.j
PASS: gdb.base/store.exp: F_4.j
PASS: gdb.base/store.exp: set variable u = f_4, u.k = F_4.k
PASS: gdb.base/store.exp: F_4.k
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/skip-solib.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/start.exp ...
PASS: gdb.base/start.exp: start
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib-weak.exp ...
FAIL: gdb.base/solib-weak.exp: run to breakpoint - lib1 nodebug, lib2 nodebug, lib1 first
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 nodebug, lib2 nodebug, lib2 first
FAIL: gdb.base/solib-weak.exp: run to breakpoint - lib1 nodebug, lib2 debug, lib1 first
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 nodebug, lib2 debug, lib2 first
FAIL: gdb.base/solib-weak.exp: run to breakpoint - lib1 debug, lib2 nodebug, lib1 first
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 debug, lib2 nodebug, lib2 first
FAIL: gdb.base/solib-weak.exp: run to breakpoint - lib1 debug, lib2 debug, lib1 first
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 debug, lib2 debug, lib2 first
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/save-bp.exp ...
PASS: gdb.base/save-bp.exp: add breakpoint commands
PASS: gdb.base/save-bp.exp: dprintf save-bp.c:33,"At foo entry\n"
PASS: gdb.base/save-bp.exp: save breakpoint bps
PASS: gdb.base/save-bp.exp: source bps
PASS: gdb.base/save-bp.exp: info break
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/term.exp ...
PASS: gdb.base/term.exp: test info terminal
PASS: gdb.base/term.exp: info terminal at breakpoint
PASS: gdb.base/term.exp: continue until exit
PASS: gdb.base/term.exp: test info terminal #2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/step-resume-infcall.exp ...
PASS: gdb.base/step-resume-infcall.exp: step
PASS: gdb.base/step-resume-infcall.exp: up
PASS: gdb.base/step-resume-infcall.exp: set $b=$pc
PASS: gdb.base/step-resume-infcall.exp: print $bpnum
PASS: gdb.base/step-resume-infcall.exp: disass/m
PASS: gdb.base/step-resume-infcall.exp: info breakpoints
PASS: gdb.base/step-resume-infcall.exp: next
PASS: gdb.base/step-resume-infcall.exp: p cond_hit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/print-file-var.exp ...
PASS: gdb.base/print-file-var.exp: breapoint past v1 & v2 initialization
PASS: gdb.base/print-file-var.exp: continue to STOP marker
PASS: gdb.base/print-file-var.exp: print 'print-file-var-lib1.c'::this_version_id == v1
PASS: gdb.base/print-file-var.exp: print 'print-file-var-lib2.c'::this_version_id == v2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/readline-ask.exp ...
PASS: gdb.base/readline-ask.exp: set width 50
PASS: gdb.base/readline-ask.exp: set height 3
PASS: gdb.base/readline-ask.exp: bell for more message
PASS: gdb.base/readline-ask.exp: more message for 01 and 02
PASS: gdb.base/readline-ask.exp: more message for 03
PASS: gdb.base/readline-ask.exp: more finish for 04
PASS: gdb.base/readline-ask.exp: abort more message
PASS: gdb.base/readline-ask.exp: bell for ask message
PASS: gdb.base/readline-ask.exp: ask message
PASS: gdb.base/readline-ask.exp: ask message for 01 and 02
PASS: gdb.base/readline-ask.exp: ask message no
PASS: gdb.base/readline-ask.exp: abort ask message
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sep.exp ...
PASS: gdb.base/sep.exp: list using location inside included file
PASS: gdb.base/sep.exp: breakpoint inside included file
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/nofield.exp ...
PASS: gdb.base/nofield.exp: ptype struct not_empty
PASS: gdb.base/nofield.exp: ptype struct empty
PASS: gdb.base/nofield.exp: ptype union empty_union
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/whatis-exp.exp ...
PASS: gdb.base/whatis-exp.exp: set variable x=14
PASS: gdb.base/whatis-exp.exp: set variable y=2
PASS: gdb.base/whatis-exp.exp: set variable z=2
PASS: gdb.base/whatis-exp.exp: set variable w=3
PASS: gdb.base/whatis-exp.exp: print value of x
PASS: gdb.base/whatis-exp.exp: print value of y
PASS: gdb.base/whatis-exp.exp: print value of z
PASS: gdb.base/whatis-exp.exp: print value of w
PASS: gdb.base/whatis-exp.exp: whatis value of x+y
PASS: gdb.base/whatis-exp.exp: whatis value of x-y
PASS: gdb.base/whatis-exp.exp: whatis value of x*y
PASS: gdb.base/whatis-exp.exp: whatis value of x/y
PASS: gdb.base/whatis-exp.exp: whatis value of x%y
PASS: gdb.base/whatis-exp.exp: whatis value of x=y
PASS: gdb.base/whatis-exp.exp: whatis value of x+=2
PASS: gdb.base/whatis-exp.exp: whatis value of  ++x
PASS: gdb.base/whatis-exp.exp: whatis value of  --x
PASS: gdb.base/whatis-exp.exp: whatis value of  x++
PASS: gdb.base/whatis-exp.exp: whatis value of  x--
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/return2.exp ...
PASS: gdb.base/return2.exp: set break on void_func
PASS: gdb.base/return2.exp: continue to void_func
PASS: gdb.base/return2.exp: return from void_func
PASS: gdb.base/return2.exp: void function returned successfully
PASS: gdb.base/return2.exp: set break on char_func
PASS: gdb.base/return2.exp: continue to char_func
PASS: gdb.base/return2.exp: return from char_func
PASS: gdb.base/return2.exp: char value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on short_func
PASS: gdb.base/return2.exp: continue to short_func
PASS: gdb.base/return2.exp: return from short_func
PASS: gdb.base/return2.exp: short value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on int_func
PASS: gdb.base/return2.exp: continue to int_func
PASS: gdb.base/return2.exp: return from int_func
PASS: gdb.base/return2.exp: int value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on long_func
PASS: gdb.base/return2.exp: continue to long_func
PASS: gdb.base/return2.exp: return from long_func
PASS: gdb.base/return2.exp: long value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on long_long_func
PASS: gdb.base/return2.exp: continue to long_long_func
PASS: gdb.base/return2.exp: return from long_long_func
PASS: gdb.base/return2.exp: long_long value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on float_func
PASS: gdb.base/return2.exp: continue to float_func
PASS: gdb.base/return2.exp: return from float_func
PASS: gdb.base/return2.exp: float value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on double_func
PASS: gdb.base/return2.exp: continue to double_func
PASS: gdb.base/return2.exp: return from double_func
PASS: gdb.base/return2.exp: double value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/shlib-call.exp ...
PASS: gdb.base/shlib-call.exp: set print sevenbit-strings
PASS: gdb.base/shlib-call.exp: set print address off
PASS: gdb.base/shlib-call.exp: set width 0
PASS: gdb.base/shlib-call.exp: next to shr1
PASS: gdb.base/shlib-call.exp: print g
PASS: gdb.base/shlib-call.exp: next over shr1
PASS: gdb.base/shlib-call.exp: print g
PASS: gdb.base/shlib-call.exp: print shr1(1)
PASS: gdb.base/shlib-call.exp: print shr1(g)
PASS: gdb.base/shlib-call.exp: breakpoint function shr2
PASS: gdb.base/shlib-call.exp: run until breakpoint set at a function
PASS: gdb.base/shlib-call.exp: print shr1(1) 2nd time
PASS: gdb.base/shlib-call.exp: print mainshr1(1) from shlib func
PASS: gdb.base/shlib-call.exp: step out of shr2 to main (stopped in shr2 epilogue)
PASS: gdb.base/shlib-call.exp: step out of shr2 epilogue to main
PASS: gdb.base/shlib-call.exp: print mainshr1(1)
PASS: gdb.base/shlib-call.exp: step into mainshr1
PASS: gdb.base/shlib-call.exp: set print sevenbit-strings
PASS: gdb.base/shlib-call.exp: set print address off
PASS: gdb.base/shlib-call.exp: set width 0
PASS: gdb.base/shlib-call.exp: run to bp in shared library
PASS: gdb.base/shlib-call.exp: continue until exit
PASS: gdb.base/shlib-call.exp: re-run to bp in shared library (PR's 16495, 18213)
PASS: gdb.base/shlib-call.exp: continue until exit
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watch-vfork.exp ...
PASS: gdb.base/watch-vfork.exp: Watchpoint on global variable (hw)
FAIL: gdb.base/watch-vfork.exp: Watchpoint triggers after vfork (hw) (timeout)
PASS: gdb.base/watch-vfork.exp: Watchpoint on global variable (sw)
FAIL: gdb.base/watch-vfork.exp: Watchpoint triggers after vfork (sw) (timeout)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib-symbol.exp ...
PASS: gdb.base/solib-symbol.exp: foo2 in main
PASS: gdb.base/solib-symbol.exp: foo in libmd
PASS: gdb.base/solib-symbol.exp: continue
PASS: gdb.base/solib-symbol.exp: foo2 in mdlib
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sigall.exp ...
UNTESTED: gdb.base/sigall.exp: takes ages: nearly all FAIL with timeout
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/pie-execl.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/range-stepping.exp ...
PASS: gdb.base/range-stepping.exp: probe range-stepping support
UNSUPPORTED: gdb.base/range-stepping.exp: range stepping not supported by the target
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/valgrind-infcall.exp ...
UNSUPPORTED: gdb.base/valgrind-infcall.exp: spawn valgrind
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/siginfo-infcall.exp ...
PASS: gdb.base/siginfo-infcall.exp: continue to SIGUSR1
PASS: gdb.base/siginfo-infcall.exp: p callme ()
FAIL: gdb.base/siginfo-infcall.exp: continue to the handler
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/setshow.exp ...
PASS: gdb.base/setshow.exp: default annotation_level is zero
PASS: gdb.base/setshow.exp: set annotate 2
PASS: gdb.base/setshow.exp: show annotate 2
PASS: gdb.base/setshow.exp: annotation_level 2
PASS: gdb.base/setshow.exp: set annotate 1
PASS: gdb.base/setshow.exp: show annotate (1)
PASS: gdb.base/setshow.exp: annotation_level 1
PASS: gdb.base/setshow.exp: set annotate 0
PASS: gdb.base/setshow.exp: show annotate (0)
PASS: gdb.base/setshow.exp: annotation_level 0
PASS: gdb.base/setshow.exp: set args ~
PASS: gdb.base/setshow.exp: show args ~
PASS: gdb.base/setshow.exp: set args
PASS: gdb.base/setshow.exp: show args
PASS: gdb.base/setshow.exp: continuing
PASS: gdb.base/setshow.exp: passing args
PASS: gdb.base/setshow.exp: set check range on
PASS: gdb.base/setshow.exp: show check range (on)
PASS: gdb.base/setshow.exp: set check range off
PASS: gdb.base/setshow.exp: show check range (off)
PASS: gdb.base/setshow.exp: set check range auto
PASS: gdb.base/setshow.exp: show check range (auto)
PASS: gdb.base/setshow.exp: set check type on
PASS: gdb.base/setshow.exp: show check type (on)
PASS: gdb.base/setshow.exp: set check type off
PASS: gdb.base/setshow.exp: show check type (off)
PASS: gdb.base/setshow.exp: set complaints 100
PASS: gdb.base/setshow.exp: show complaints (100)
PASS: gdb.base/setshow.exp: set complaints 0
PASS: gdb.base/setshow.exp: show complaints (0)
PASS: gdb.base/setshow.exp: set confirm off
PASS: gdb.base/setshow.exp: show confirm (off)
PASS: gdb.base/setshow.exp: set confirm on
PASS: gdb.base/setshow.exp: show confirm (on)
PASS: gdb.base/setshow.exp: set editing off
PASS: gdb.base/setshow.exp: show editing (off)
PASS: gdb.base/setshow.exp: set environment FOOBARBAZ
PASS: gdb.base/setshow.exp: show environment FOOBARBAZ
PASS: gdb.base/setshow.exp: set height 100
PASS: gdb.base/setshow.exp: show height
PASS: gdb.base/setshow.exp: set height unlimited
PASS: gdb.base/setshow.exp: set history expansion on
PASS: gdb.base/setshow.exp: show history expansion
PASS: gdb.base/setshow.exp: set history filename foobar.baz
PASS: gdb.base/setshow.exp: show history filename (foobar.baz)
PASS: gdb.base/setshow.exp: set history save on
PASS: gdb.base/setshow.exp: show history save (on)
PASS: gdb.base/setshow.exp: set history save off
PASS: gdb.base/setshow.exp: set history size 100
PASS: gdb.base/setshow.exp: show history size (100)
PASS: gdb.base/setshow.exp: set language asm
PASS: gdb.base/setshow.exp: show language (asm)
PASS: gdb.base/setshow.exp: set language java
PASS: gdb.base/setshow.exp: show language (java)
PASS: gdb.base/setshow.exp: complete set language minimal
PASS: gdb.base/setshow.exp: set language auto
PASS: gdb.base/setshow.exp: show language (auto)
PASS: gdb.base/setshow.exp: set listsize 100
PASS: gdb.base/setshow.exp: show listsize (100)
PASS: gdb.base/setshow.exp: set prompt FooBarBaz
PASS: gdb.base/setshow.exp: show prompt FooBarBaz
PASS: gdb.base/setshow.exp: set prompt gdb
PASS: gdb.base/setshow.exp: set radix 11
PASS: gdb.base/setshow.exp: set radix 16
PASS: gdb.base/setshow.exp: show radix (16)
PASS: gdb.base/setshow.exp: set radix 10
PASS: gdb.base/setshow.exp: show radix (10)
PASS: gdb.base/setshow.exp: set width 90
PASS: gdb.base/setshow.exp: show width (90)
PASS: gdb.base/setshow.exp: set write on
PASS: gdb.base/setshow.exp: show write (on)
PASS: gdb.base/setshow.exp: show user
PASS: gdb.base/setshow.exp: set verbose on
PASS: gdb.base/setshow.exp: show verbose (on)
PASS: gdb.base/setshow.exp: set verbose off
PASS: gdb.base/setshow.exp: show verbose (off)
PASS: gdb.base/setshow.exp: history file is not set to /home/
PASS: gdb.base/setshow.exp: history file is not set to .
PASS: gdb.base/setshow.exp: history file is not set to ~/home
PASS: gdb.base/setshow.exp: history file is not set to =home
PASS: gdb.base/setshow.exp: solib-search-path is not set to /home/
PASS: gdb.base/setshow.exp: solib-search-path is not set to .
PASS: gdb.base/setshow.exp: solib-search-path is not set to ~/home
PASS: gdb.base/setshow.exp: solib-search-path is not set to =home
PASS: gdb.base/setshow.exp: data-directory is not set to /home/
PASS: gdb.base/setshow.exp: data-directory is not set to .
PASS: gdb.base/setshow.exp: data-directory is not set to ~/home
PASS: gdb.base/setshow.exp: data-directory is not set to =home
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watch-cond-infcall.exp ...
PASS: gdb.base/watch-cond-infcall.exp: hw: watch var if return_1 ()
PASS: gdb.base/watch-cond-infcall.exp: hw: continue
PASS: gdb.base/watch-cond-infcall.exp: sw: watch var if return_1 ()
PASS: gdb.base/watch-cond-infcall.exp: sw: continue
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/prologue-include.exp ...
PASS: gdb.base/prologue-include.exp: breakpoint main
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/unwindonsignal.exp ...
PASS: gdb.base/unwindonsignal.exp: break stop_here
PASS: gdb.base/unwindonsignal.exp: continue to breakpoint at stop_here
PASS: gdb.base/unwindonsignal.exp: setting unwindonsignal
PASS: gdb.base/unwindonsignal.exp: showing unwindonsignal
PASS: gdb.base/unwindonsignal.exp: unwindonsignal, inferior function call signaled
PASS: gdb.base/unwindonsignal.exp: unwindonsignal, stack unwound
PASS: gdb.base/unwindonsignal.exp: unwindonsignal, dummy frame removed
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/step-symless.exp ...
PASS: gdb.base/step-symless.exp: strip stub symbols
PASS: gdb.base/step-symless.exp: step
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/structs3.exp ...
PASS: gdb.base/structs3.exp: print two
PASS: gdb.base/structs3.exp: print *twop
PASS: gdb.base/structs3.exp: print *(struct Two *)onep
PASS: gdb.base/structs3.exp: print *(tTwo *)onep
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/siginfo-thread.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/page.exp ...
PASS: gdb.base/page.exp: set pagination off
PASS: gdb.base/page.exp: pagination is off
PASS: gdb.base/page.exp: unpaged help
PASS: gdb.base/page.exp: set pagination on
PASS: gdb.base/page.exp: pagination is on
PASS: gdb.base/page.exp: set height 10
PASS: gdb.base/page.exp: paged help
PASS: gdb.base/page.exp: q
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/pc-fp.exp ...
PASS: gdb.base/pc-fp.exp: get hexadecimal valueof "$pc"
PASS: gdb.base/pc-fp.exp: get hexadecimal valueof "$fp"
PASS: gdb.base/pc-fp.exp: display/i $pc
PASS: gdb.base/pc-fp.exp: display/w $fp
PASS: gdb.base/pc-fp.exp: info register $pc
PASS: gdb.base/pc-fp.exp: info register $fp
PASS: gdb.base/pc-fp.exp: info register pc fp
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/step-bt.exp ...
PASS: gdb.base/step-bt.exp: breakpoint at first instruction of hello()
PASS: gdb.base/step-bt.exp: run to hello()
PASS: gdb.base/step-bt.exp: step first instruction
PASS: gdb.base/step-bt.exp: backtrace after first instruction step
PASS: gdb.base/step-bt.exp: step second instruction
PASS: gdb.base/step-bt.exp: backtrace after second instruction step
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/stale-infcall.exp ...
PASS: gdb.base/stale-infcall.exp: continue to breakpoint: test-next
PASS: gdb.base/stale-infcall.exp: set $test_fail_bpnum=$bpnum
PASS: gdb.base/stale-infcall.exp: test system longjmp tracking support
PASS: gdb.base/stale-infcall.exp: delete $test_fail_bpnum
PASS: gdb.base/stale-infcall.exp: continue to breakpoint: break-run1
PASS: gdb.base/stale-infcall.exp: print infcall ()
PASS: gdb.base/stale-infcall.exp: stack corrupted
PASS: gdb.base/stale-infcall.exp: bt
PASS: gdb.base/stale-infcall.exp: maintenance print dummy-frames
PASS: gdb.base/stale-infcall.exp: maintenance info breakpoints
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib-overlap.exp ...
UNTESTED: gdb.base/solib-overlap.exp: 0x40000000: Could not prelink OBJDIR/gdb.base/solib-overlap-lib1-0x40000000.so or OBJDIR/gdb.base/solib-overlap-lib2-0x40000000.so.
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/siginfo.exp ...
PASS: gdb.base/siginfo.exp: display/i $pc
PASS: gdb.base/siginfo.exp: break handler
FAIL: gdb.base/siginfo.exp: continue to stepi handler (timeout)
FAIL: gdb.base/siginfo.exp: backtrace for nexti (pattern 1) (timeout)
FAIL: gdb.base/siginfo.exp: step out of handler (timeout)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/siginfo-addr.exp ...
PASS: gdb.base/siginfo-addr.exp: display/i $pc
PASS: gdb.base/siginfo-addr.exp: continue to signal
FAIL: gdb.base/siginfo-addr.exp: si_addr value
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watch-cond.exp ...
PASS: gdb.base/watch-cond.exp: set write watchpoint on global variable, local condition
PASS: gdb.base/watch-cond.exp: watchpoint with global expression, local condition evaluates in correct frame
PASS: gdb.base/watch-cond.exp: set write watchpoint on local variable, local condition
PASS: gdb.base/watch-cond.exp: watchpoint with local expression, local condition evaluates in correct frame
PASS: gdb.base/watch-cond.exp: set write watchpoint on global2 variable
PASS: gdb.base/watch-cond.exp: watchpoint on global2 variable triggers
PASS: gdb.base/watch-cond.exp: condition of watchpoint 2 changes
PASS: gdb.base/watch-cond.exp: watchpoint stops with untestable local expression
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/structs.exp ...
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: continue to breakpoint: chartest-done
PASS: gdb.base/structs.exp: p chartest
PASS: gdb.base/structs.exp: ptype foo1; structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 7 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 7 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 7 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 8 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 8 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 8 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 9 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 9 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 9 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 10 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 10 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 10 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 11 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 11 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 11 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 12 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 12 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 12 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 13 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 13 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 13 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 14 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 14 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 14 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 15 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 15 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 15 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 16 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 16 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 16 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 17 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 17 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 17 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 3 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 3 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 3 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 3 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 3 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 3 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 3 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 3 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 3 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 4 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 4 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 4 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 4 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 4 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 4 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 4 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 4 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 4 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 5 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 5 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 5 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 5 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 5 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 5 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 5 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 5 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 5 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 6 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 6 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 6 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 6 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 6 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 6 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 6 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 6 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 6 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 7 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 7 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 7 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 7 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 7 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 7 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 7 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 7 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 7 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 8 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 8 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 8 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 8 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 8 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 8 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 8 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 8 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 8 structs-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 3 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 3 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 3 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 3 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 3 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 3 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 3 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 3 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 3 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 4 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 4 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 4 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 4 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 4 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 4 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 4 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 4 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 4 structs-ts
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-ti
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ti
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ti
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tl
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tl
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tl
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tll
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tll
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tll
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tll
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tll
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tll
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tll
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tll
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tll
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tll
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tf
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-td
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-td
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-td
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-td
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-td
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-td
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-td
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-td
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-td
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-td
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tld
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tld
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tld
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tld
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tld
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tld
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tld
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tld
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tld
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tld
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 7 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 7 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 7 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 8 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 8 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 8 structs-ts-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-ti-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tl-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tll-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tll-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tll-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tll-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tf-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-td-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tld-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tld-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tld-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tld-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tc-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tll
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-td
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tld
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-td-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-td-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-td-tf
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-td-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-td-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-td-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-td-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-td-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-td-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-td-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tf-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf-td
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf-td
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf-td
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf-td
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf-td
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf-td
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf-td
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf-td
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf-td
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf-td
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/subst.exp ...
PASS: gdb.base/subst.exp: deactivate GDB's confirmation interface
PASS: gdb.base/subst.exp: show substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path, too many arguments
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too few arguments
PASS: gdb.base/subst.exp: set substitute-path, first argument is empty string
PASS: gdb.base/subst.exp: add from -> to substitution rule
PASS: gdb.base/subst.exp: add from1 -> to1 substitution rule
PASS: gdb.base/subst.exp: add source -> destination substitution rule
PASS: gdb.base/subst.exp: add depuis -> vers substitution rule
PASS: gdb.base/subst.exp: add substitution rule to empty string
PASS: gdb.base/subst.exp: show substitute-path after all paths added
PASS: gdb.base/subst.exp: show substitute-path from, after all paths added
PASS: gdb.base/subst.exp: show substitute-path depuis, after all paths added
PASS: gdb.base/subst.exp: show substitute-path garbage, after all paths added
PASS: gdb.base/subst.exp: unset substitute-path from
PASS: gdb.base/subst.exp: show substitute-path from, after unsetting it
PASS: gdb.base/subst.exp: show substitute-path after from rule removed
PASS: gdb.base/subst.exp: unset substitute-path from after the rule was removed
PASS: gdb.base/subst.exp: unset substitute-path depuis (middle of list)
PASS: gdb.base/subst.exp: show substitute-path after depuis rule removed
PASS: gdb.base/subst.exp: unset substitute-path empty (end of list)
PASS: gdb.base/subst.exp: show substitute-path after empty rule removed
PASS: gdb.base/subst.exp: remove all remaining substitution rules
PASS: gdb.base/subst.exp: show substitute-path after all remaining rules removed
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/step-test.exp ...
PASS: gdb.base/step-test.exp: next 1
PASS: gdb.base/step-test.exp: step 1
PASS: gdb.base/step-test.exp: next 2
PASS: gdb.base/step-test.exp: step 3
PASS: gdb.base/step-test.exp: next 3
PASS: gdb.base/step-test.exp: next over
PASS: gdb.base/step-test.exp: step into
PASS: gdb.base/step-test.exp: step out
PASS: gdb.base/step-test.exp: stepi to next line
PASS: gdb.base/step-test.exp: stepi into function
PASS: gdb.base/step-test.exp: stepi into function's first source line
PASS: gdb.base/step-test.exp: stepi: finish call
PASS: gdb.base/step-test.exp: nexti over function
PASS: gdb.base/step-test.exp: set breakpoint at call to large_struct_by_value
PASS: gdb.base/step-test.exp: run to pass large struct
PASS: gdb.base/step-test.exp: large struct by value
PASS: gdb.base/step-test.exp: continue until exit at step-test.exp
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/step-line.exp ...
PASS: gdb.base/step-line.exp: break f1
PASS: gdb.base/step-line.exp: continue to f1
PASS: gdb.base/step-line.exp: next over dummy 1
PASS: gdb.base/step-line.exp: next to dummy 2
PASS: gdb.base/step-line.exp: next over dummy 2
PASS: gdb.base/step-line.exp: step into f2
PASS: gdb.base/step-line.exp: next over dummy 4
PASS: gdb.base/step-line.exp: next to dummy 5
PASS: gdb.base/step-line.exp: next to dummy 6
PASS: gdb.base/step-line.exp: next over dummy 6
PASS: gdb.base/step-line.exp: next to dummy 7
PASS: gdb.base/step-line.exp: next to dummy 8
PASS: gdb.base/step-line.exp: next over dummy 8
PASS: gdb.base/step-line.exp: next to dummy 9
PASS: gdb.base/step-line.exp: next to dummy 10
PASS: gdb.base/step-line.exp: next over dummy 10
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/source.exp ...
PASS: gdb.base/source.exp: script contains error
PASS: gdb.base/source.exp: source -v
PASS: gdb.base/source.exp: source after -v
PASS: gdb.base/source.exp: set search directories
PASS: gdb.base/source.exp: source -s
PASS: gdb.base/source.exp: source -s -v
PASS: gdb.base/source.exp: source -v -s
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/recurse.exp ...
PASS: gdb.base/recurse.exp: next over b = 0 in first instance
PASS: gdb.base/recurse.exp: set first instance watchpoint
PASS: gdb.base/recurse.exp: continue to first instance watchpoint, first time
PASS: gdb.base/recurse.exp: continue to recurse (a = 9)
PASS: gdb.base/recurse.exp: continue to recurse (a = 8)
PASS: gdb.base/recurse.exp: continue to recurse (a = 7)
PASS: gdb.base/recurse.exp: continue to recurse (a = 6)
PASS: gdb.base/recurse.exp: continue to recurse (a = 5)
PASS: gdb.base/recurse.exp: next over b = 0 in second instance
PASS: gdb.base/recurse.exp: set second instance watchpoint
PASS: gdb.base/recurse.exp: continue to second instance watchpoint, first time
PASS: gdb.base/recurse.exp: continue to recurse (a = 4)
PASS: gdb.base/recurse.exp: continue to recurse (a = 3)
PASS: gdb.base/recurse.exp: continue to recurse (a = 2)
PASS: gdb.base/recurse.exp: continue to recurse (a = 1)
PASS: gdb.base/recurse.exp: continue to second instance watchpoint, second time
PASS: gdb.base/recurse.exp: second instance watchpoint deleted when leaving scope
PASS: gdb.base/recurse.exp: continue to first instance watchpoint, second time
PASS: gdb.base/recurse.exp: first instance watchpoint deleted when leaving scope
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/type-opaque.exp ...
PASS: gdb.base/type-opaque.exp: opaque struct type resolving
PASS: gdb.base/type-opaque.exp: empty struct type resolving
PASS: gdb.base/type-opaque.exp: filled struct type resolving
PASS: gdb.base/type-opaque.exp: opaque union type resolving
PASS: gdb.base/type-opaque.exp: empty union type resolving
PASS: gdb.base/type-opaque.exp: filled union type resolving
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/ptype.exp ...
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member
PASS: gdb.base/ptype.exp: ptype structure
PASS: gdb.base/ptype.exp: ptype v_struct1.v_float_member
PASS: gdb.base/ptype.exp: ptype v_struct1->v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p.v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p->v_float_member
PASS: gdb.base/ptype.exp: ptype linked list structure
PASS: gdb.base/ptype.exp: ptype union
PASS: gdb.base/ptype.exp: ptype linked list union
PASS: gdb.base/ptype.exp: ptype unnamed enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration
PASS: gdb.base/ptype.exp: ptype unnamed typedef'd enumeration
PASS: gdb.base/ptype.exp: list main
PASS: gdb.base/ptype.exp: whatis unnamed typedef'd enum (compiler bug in IBM's xlc)
PASS: gdb.base/ptype.exp: printing typedef'd struct
PASS: gdb.base/ptype.exp: printing typedef'd union
PASS: gdb.base/ptype.exp: ptype named typedef'd enumf'd enum
PASS: gdb.base/ptype.exp: ptype misordered enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration member
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member #2
PASS: gdb.base/ptype.exp: ptype short
PASS: gdb.base/ptype.exp: ptype int
PASS: gdb.base/ptype.exp: ptype t_char_array
PASS: gdb.base/ptype.exp: ptype pv_char_array
PASS: gdb.base/ptype.exp: ptype outer structure
PASS: gdb.base/ptype.exp: ptype inner structure
PASS: gdb.base/ptype.exp: ptype inner union
PASS: gdb.base/ptype.exp: ptype nested structure
PASS: gdb.base/ptype.exp: ptype outer int
PASS: gdb.base/ptype.exp: ptype nested structure #2
PASS: gdb.base/ptype.exp: ptype inner int
PASS: gdb.base/ptype.exp: ptype nested union
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype func_type
PASS: gdb.base/ptype.exp: ptype old_fptr
PASS: gdb.base/ptype.exp: ptype new_fptr
PASS: gdb.base/ptype.exp: ptype fptr
PASS: gdb.base/ptype.exp: ptype fptr2
PASS: gdb.base/ptype.exp: ptype xptr
PASS: gdb.base/ptype.exp: ptype ffptr
PASS: gdb.base/ptype.exp: ptype fffptr
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of charfoo
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of charfoo
PASS: gdb.base/ptype.exp: ptype "abc"
PASS: gdb.base/ptype.exp: ptype {'a','b','c'}
PASS: gdb.base/ptype.exp: ptype {0,1,2}
PASS: gdb.base/ptype.exp: ptype {(long)0,(long)1,(long)2}
PASS: gdb.base/ptype.exp: ptype {(float)0,(float)1,(float)2}
PASS: gdb.base/ptype.exp: ptype {{0,1,2},{3,4,5}}
PASS: gdb.base/ptype.exp: ptype {4,5,6}[2]
PASS: gdb.base/ptype.exp: ptype *&{4,5,6}[1]
PASS: gdb.base/ptype.exp: ptype $pc
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/realname-expand.exp ...
PASS: gdb.base/realname-expand.exp: set basenames-may-differ on
PASS: gdb.base/realname-expand.exp: rbreak realname-expand-real.c:func
PASS: gdb.base/realname-expand.exp: set basenames-may-differ on
PASS: gdb.base/realname-expand.exp: break realname-expand-real.c:func
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/relativedebug.exp ...
PASS: gdb.base/relativedebug.exp: continue
FAIL: gdb.base/relativedebug.exp: pause found in backtrace
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/remotetimeout.exp ...
PASS: gdb.base/remotetimeout.exp: correct remotetimeout printed
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/until.exp ...
PASS: gdb.base/until.exp: until line number
PASS: gdb.base/until.exp: malformed until
PASS: gdb.base/until.exp: until factorial, recursive function
PASS: gdb.base/until.exp: until func, not called by current frame
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/pointers.exp ...
PASS: gdb.base/pointers.exp: continuing after dummy()
PASS: gdb.base/pointers.exp: set pointer to beginning of array
PASS: gdb.base/pointers.exp: set pointer to end of array
PASS: gdb.base/pointers.exp: print object pointed to
PASS: gdb.base/pointers.exp: print object pointed to #2
PASS: gdb.base/pointers.exp: pointer1==pointer2
PASS: gdb.base/pointers.exp: pointer1!=pointer2
PASS: gdb.base/pointers.exp: pointer1<=pointer2
PASS: gdb.base/pointers.exp: pointer1>=pointer2
PASS: gdb.base/pointers.exp: pointer1<pointer2
PASS: gdb.base/pointers.exp: pointer1>pointer2
PASS: gdb.base/pointers.exp: set y = *v_int_pointer++
PASS: gdb.base/pointers.exp: pointer assignment
PASS: gdb.base/pointers.exp: and post-increment
PASS: gdb.base/pointers.exp: set y = *--v_int_pointer2
PASS: gdb.base/pointers.exp: pointer assignment
PASS: gdb.base/pointers.exp: and pre-decrement
PASS: gdb.base/pointers.exp: set y =v_int_pointer-v_int_pointer2
PASS: gdb.base/pointers.exp: pointer1-pointer2
PASS: gdb.base/pointers.exp: set v_int_pointer=v_int_array
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer #2
PASS: gdb.base/pointers.exp: print array element through pointer #3
PASS: gdb.base/pointers.exp: print array element through pointer #4
PASS: gdb.base/pointers.exp: print array element through pointer #5
PASS: gdb.base/pointers.exp: increment rptr
PASS: gdb.base/pointers.exp: print array element through pointer #6
PASS: gdb.base/pointers.exp: print array element through pointer #7
PASS: gdb.base/pointers.exp: print array element through pointer #8
PASS: gdb.base/pointers.exp: print array element w/ pointer arithmetic
PASS: gdb.base/pointers.exp: print through ptr to ptr
PASS: gdb.base/pointers.exp: continue
PASS: gdb.base/pointers.exp: up from marker1
PASS: gdb.base/pointers.exp: print value of *pUC
PASS: gdb.base/pointers.exp: ptype pUC
PASS: gdb.base/pointers.exp: print value of *pS
PASS: gdb.base/pointers.exp: ptype pS
PASS: gdb.base/pointers.exp: print value of *pUS
PASS: gdb.base/pointers.exp: ptype pUS
PASS: gdb.base/pointers.exp: print value of *pI
PASS: gdb.base/pointers.exp: ptype pI
PASS: gdb.base/pointers.exp: print value of *pUI
PASS: gdb.base/pointers.exp: ptype pUI
PASS: gdb.base/pointers.exp: print value of *pL
PASS: gdb.base/pointers.exp: ptype pL
PASS: gdb.base/pointers.exp: print value of *pUL
PASS: gdb.base/pointers.exp: ptype pUL
PASS: gdb.base/pointers.exp: print value of *pF
PASS: gdb.base/pointers.exp: ptype pF
PASS: gdb.base/pointers.exp: print value of *pD
PASS: gdb.base/pointers.exp: ptype pD
PASS: gdb.base/pointers.exp: print value of ******ppppppC
PASS: gdb.base/pointers.exp: ptype pC
PASS: gdb.base/pointers.exp: ptype ppC
PASS: gdb.base/pointers.exp: ptype pppC
PASS: gdb.base/pointers.exp: ptype ppppC
PASS: gdb.base/pointers.exp: ptype pppppC
PASS: gdb.base/pointers.exp: ptype ppppppC
PASS: gdb.base/pointers.exp: p instance.array_variable + 0
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/ptr-typedef.exp ...
PASS: gdb.base/ptr-typedef.exp: print foo_ptr
PASS: gdb.base/ptr-typedef.exp: print foz_ptr
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/readline.exp ...
UNTESTED: gdb.base/readline.exp: <http://www.gnu.org/software/hurd/open_issues/term_blocking.html>
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/wchar.exp ...
PASS: gdb.base/wchar.exp: print narrow
PASS: gdb.base/wchar.exp: print single
PASS: gdb.base/wchar.exp: print simple
PASS: gdb.base/wchar.exp: print difficile
PASS: gdb.base/wchar.exp: print simple[2]
PASS: gdb.base/wchar.exp: print difficile[2]
PASS: gdb.base/wchar.exp: print repeat
PASS: gdb.base/wchar.exp: print repeat_p
PASS: gdb.base/wchar.exp: set print null on
PASS: gdb.base/wchar.exp: print repeat (print null on)
PASS: gdb.base/wchar.exp: set print elements 3
PASS: gdb.base/wchar.exp: print repeat (print elements 3)
PASS: gdb.base/wchar.exp: print repeat_p (print elements 3)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watchpoint-hw.exp ...
PASS: gdb.base/watchpoint-hw.exp: watch watchee
FAIL: gdb.base/watchpoint-hw.exp: start (timeout)
FAIL: gdb.base/watchpoint-hw.exp: info watchpoints (timeout)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/signull.exp ...
PASS: gdb.base/signull.exp: set for function pointer probe
PASS: gdb.base/signull.exp: probe function pointer (function entry-point)
PASS: gdb.base/signull.exp: rerun to main
PASS: gdb.base/signull.exp: break bowler
PASS: gdb.base/signull.exp: break keeper
PASS: gdb.base/signull.exp: handle SIGSEGV
PASS: gdb.base/signull.exp: handle SIGBUS
PASS: gdb.base/signull.exp: data read; start with the bowler
PASS: gdb.base/signull.exp: data read; select the pointer type
PASS: gdb.base/signull.exp: data read; take the SIGSEGV
PASS: gdb.base/signull.exp: data read; backtrace from SIGSEGV
PASS: gdb.base/signull.exp: data read; continue to the keeper
FAIL: gdb.base/signull.exp: data read; backtrace from keeper through SIGSEGV
PASS: gdb.base/signull.exp: data write; start with the bowler
PASS: gdb.base/signull.exp: data write; select the pointer type
PASS: gdb.base/signull.exp: data write; take the SIGSEGV
PASS: gdb.base/signull.exp: data write; backtrace from SIGSEGV
PASS: gdb.base/signull.exp: data write; continue to the keeper
FAIL: gdb.base/signull.exp: data write; backtrace from keeper through SIGSEGV
PASS: gdb.base/signull.exp: code; start with the bowler
PASS: gdb.base/signull.exp: code; select the pointer type
PASS: gdb.base/signull.exp: code; take the SIGSEGV
PASS: gdb.base/signull.exp: code; backtrace from SIGSEGV
PASS: gdb.base/signull.exp: code; continue to the keeper
FAIL: gdb.base/signull.exp: code; backtrace from keeper through SIGSEGV
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/so-indr-cl.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/shell.exp ...
PASS: gdb.base/shell.exp: shell echo foo
PASS: gdb.base/shell.exp: ! echo foo
PASS: gdb.base/shell.exp: !echo foo
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/psymtab.exp ...
PASS: gdb.base/psymtab.exp: psymtab pending setup
PASS: gdb.base/psymtab.exp: Don't search past end of psymtab.
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sect-cmd.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sepsymtab.exp ...
PASS: gdb.base/sepsymtab.exp: info sym main
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watchpoint-delete.exp ...
PASS: gdb.base/watchpoint-delete.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-delete.exp: continue to breakpoint: break-here
PASS: gdb.base/watchpoint-delete.exp: watch x
PASS: gdb.base/watchpoint-delete.exp: delete $bpnum
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watch-non-mem.exp ...
PASS: gdb.base/watch-non-mem.exp: set write watchpoint on $pc
PASS: gdb.base/watch-non-mem.exp: watchpoint on $pc works
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/unload.exp ...
PASS: gdb.base/unload.exp: pending breakpoint info before run
FAIL: gdb.base/unload.exp: running program (the program exited)
FAIL: gdb.base/unload.exp: pending breakpoint info on first run at shrfunc1
FAIL: gdb.base/unload.exp: continuing to unloaded libfile (the program is no longer running)
FAIL: gdb.base/unload.exp: print y from libfile
FAIL: gdb.base/unload.exp: rerun to shared library breakpoint (the program exited)
FAIL: gdb.base/unload.exp: pending breakpoint info on second run at shrfunc1
FAIL: gdb.base/unload.exp: continuing to unloaded libfile (the program is no longer running)
FAIL: gdb.base/unload.exp: continue to shrfunc2 (the program is no longer running)
FAIL: gdb.base/unload.exp: pending breakpoint info on second run at shrfunc2
FAIL: gdb.base/unload.exp: continuing to unloaded libfile2 (the program is no longer running)
FAIL: gdb.base/unload.exp: print y from libfile2
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/twice.exp ...
PASS: gdb.base/twice.exp: step
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/permissions.exp ...
PASS: gdb.base/permissions.exp: show may-write-registers
PASS: gdb.base/permissions.exp: show may-write-memory
PASS: gdb.base/permissions.exp: show may-insert-breakpoints
PASS: gdb.base/permissions.exp: show may-insert-tracepoints
PASS: gdb.base/permissions.exp: show may-insert-fast-tracepoints
PASS: gdb.base/permissions.exp: show may-interrupt
PASS: gdb.base/permissions.exp: enable observer mode
PASS: gdb.base/permissions.exp: show may-write-memory
PASS: gdb.base/permissions.exp: show may-write-registers
PASS: gdb.base/permissions.exp: show may-insert-breakpoints
PASS: gdb.base/permissions.exp: show may-insert-tracepoints
PASS: gdb.base/permissions.exp: show may-insert-fast-tracepoints
PASS: gdb.base/permissions.exp: show may-interrupt
PASS: gdb.base/permissions.exp: disable observer mode
PASS: gdb.base/permissions.exp: set non-stop off
PASS: gdb.base/permissions.exp: set a global
PASS: gdb.base/permissions.exp: print x
PASS: gdb.base/permissions.exp: set may-write-memory off
PASS: gdb.base/permissions.exp: try to set a global
PASS: gdb.base/permissions.exp: print x
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/nodebug.exp ...
PASS: gdb.base/nodebug.exp: p top
PASS: gdb.base/nodebug.exp: whatis top
PASS: gdb.base/nodebug.exp: ptype top
PASS: gdb.base/nodebug.exp: p middle
PASS: gdb.base/nodebug.exp: whatis middle
PASS: gdb.base/nodebug.exp: ptype middle
PASS: gdb.base/nodebug.exp: p dataglobal
PASS: gdb.base/nodebug.exp: whatis dataglobal
PASS: gdb.base/nodebug.exp: ptype dataglobal
PASS: gdb.base/nodebug.exp: p datalocal
PASS: gdb.base/nodebug.exp: whatis datalocal
PASS: gdb.base/nodebug.exp: ptype datalocal
PASS: gdb.base/nodebug.exp: p bssglobal
PASS: gdb.base/nodebug.exp: whatis bssglobal
PASS: gdb.base/nodebug.exp: ptype bssglobal
PASS: gdb.base/nodebug.exp: p bsslocal
PASS: gdb.base/nodebug.exp: whatis bsslocal
PASS: gdb.base/nodebug.exp: ptype bsslocal
PASS: gdb.base/nodebug.exp: backtrace from inner in nodebug.exp
PASS: gdb.base/nodebug.exp: p/c array_index("abcdef",2)
PASS: gdb.base/nodebug.exp: backtrace from middle in nodebug.exp
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/pr10179.exp ...
PASS: gdb.base/pr10179.exp: rbreak foo.*
PASS: gdb.base/pr10179.exp: rbreak pr10179-a.c:foo.*
PASS: gdb.base/pr10179.exp: rbreak pr10179-a.c : .*
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/remote.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/stap-probe.exp ...
gdb compile failed, ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/stap-probe.c:39:21: fatal error: sys/sdt.h: No such file or directory
 #include <sys/sdt.h>
                     ^
compilation terminated.
UNTESTED: gdb.base/stap-probe.exp: without semaphore, not optimized: stap-probe.exp
UNTESTED: gdb.base/stap-probe.exp: without semaphore, not optimized: stap-probe.exp
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sigchld.exp ...
PASS: gdb.base/sigchld.exp: set breakpoint at success exit
PASS: gdb.base/sigchld.exp: set breakpoint at failure exit
PASS: gdb.base/sigchld.exp: SIGCHLD blocked in inferior
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/skip.exp ...
PASS: gdb.base/skip.exp: skip file (no default file)
PASS: gdb.base/skip.exp: skip function
PASS: gdb.base/skip.exp: skip (no default function)
PASS: gdb.base/skip.exp: info skip empty
PASS: gdb.base/skip.exp: skip file (skip.c)
PASS: gdb.base/skip.exp: skip (main)
PASS: gdb.base/skip.exp: skip file skip1.c
PASS: gdb.base/skip.exp: skip function baz
PASS: gdb.base/skip.exp: skip enable 999
PASS: gdb.base/skip.exp: skip disable 999
PASS: gdb.base/skip.exp: skip delete 999
PASS: gdb.base/skip.exp: skip enable a
PASS: gdb.base/skip.exp: skip disable a
PASS: gdb.base/skip.exp: skip delete a
PASS: gdb.base/skip.exp: info skip 999
PASS: gdb.base/skip.exp: info skip
PASS: gdb.base/skip.exp: step in the main
PASS: gdb.base/skip.exp: step after all ignored
PASS: gdb.base/skip.exp: skip delete 1
PASS: gdb.base/skip.exp: info skip (delete 1)
PASS: gdb.base/skip.exp: step after deleting 1 (1)
PASS: gdb.base/skip.exp: step after deleting 1 (2)
PASS: gdb.base/skip.exp: step after deleting 1 (3)
PASS: gdb.base/skip.exp: skip disable 3
PASS: gdb.base/skip.exp: info skip shows entry as disabled
PASS: gdb.base/skip.exp: step after disabling 3 (1)
PASS: gdb.base/skip.exp: step after disabling 3 (2)
PASS: gdb.base/skip.exp: step after disabling 3 (3)
PASS: gdb.base/skip.exp: step after disabling 3 (4)
PASS: gdb.base/skip.exp: step after disabling 3 (5)
PASS: gdb.base/skip.exp: skip enable 3
PASS: gdb.base/skip.exp: info skip shows entry as enabled
PASS: gdb.base/skip.exp: step after enable 3 (1)
PASS: gdb.base/skip.exp: step after enable 3 (2)
PASS: gdb.base/skip.exp: step after enable 3 (3)
PASS: gdb.base/skip.exp: skip disable
PASS: gdb.base/skip.exp: info skip after disabling all
PASS: gdb.base/skip.exp: skip enable
PASS: gdb.base/skip.exp: info skip after enabling all
PASS: gdb.base/skip.exp: skip disable 4 2-3
PASS: gdb.base/skip.exp: info skip after disabling 4 2-3
PASS: gdb.base/skip.exp: skip enable 2-3
PASS: gdb.base/skip.exp: info skip after enabling 2-3
PASS: gdb.base/skip.exp: info skip 2-3
PASS: gdb.base/skip.exp: skip delete 2 3
PASS: gdb.base/skip.exp: info skip after deleting 2 3
PASS: gdb.base/skip.exp: skip delete
PASS: gdb.base/skip.exp: info skip after deleting all
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/whatis.exp ...
PASS: gdb.base/whatis.exp: whatis char
PASS: gdb.base/whatis.exp: whatis signed char
PASS: gdb.base/whatis.exp: whatis unsigned char
PASS: gdb.base/whatis.exp: whatis short
PASS: gdb.base/whatis.exp: whatis signed short
PASS: gdb.base/whatis.exp: whatis unsigned short
PASS: gdb.base/whatis.exp: whatis int
PASS: gdb.base/whatis.exp: whatis signed int
PASS: gdb.base/whatis.exp: whatis unsigned int
PASS: gdb.base/whatis.exp: whatis long
PASS: gdb.base/whatis.exp: whatis signed long
PASS: gdb.base/whatis.exp: whatis unsigned long
PASS: gdb.base/whatis.exp: whatis unsigned long long
PASS: gdb.base/whatis.exp: whatis float
PASS: gdb.base/whatis.exp: whatis double
PASS: gdb.base/whatis.exp: whatis char array
PASS: gdb.base/whatis.exp: whatis signed char array
PASS: gdb.base/whatis.exp: whatis unsigned char array
PASS: gdb.base/whatis.exp: whatis short array
PASS: gdb.base/whatis.exp: whatis signed short array
PASS: gdb.base/whatis.exp: whatis unsigned short array
PASS: gdb.base/whatis.exp: whatis int array
PASS: gdb.base/whatis.exp: whatis signed int array
PASS: gdb.base/whatis.exp: whatis unsigned int array
PASS: gdb.base/whatis.exp: whatis long array
PASS: gdb.base/whatis.exp: whatis signed long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis float array
PASS: gdb.base/whatis.exp: whatis double array
PASS: gdb.base/whatis.exp: whatis char pointer
PASS: gdb.base/whatis.exp: whatis signed char pointer
PASS: gdb.base/whatis.exp: whatis unsigned char pointer
PASS: gdb.base/whatis.exp: whatis short pointer
PASS: gdb.base/whatis.exp: whatis signed short pointer
PASS: gdb.base/whatis.exp: whatis unsigned short pointer
PASS: gdb.base/whatis.exp: whatis int pointer
PASS: gdb.base/whatis.exp: whatis signed int pointer
PASS: gdb.base/whatis.exp: whatis unsigned int pointer
PASS: gdb.base/whatis.exp: whatis long pointer
PASS: gdb.base/whatis.exp: whatis signed long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long pointer
PASS: gdb.base/whatis.exp: whatis long long pointer
PASS: gdb.base/whatis.exp: whatis signed long long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long long pointer
PASS: gdb.base/whatis.exp: whatis float pointer
PASS: gdb.base/whatis.exp: whatis double pointer
PASS: gdb.base/whatis.exp: whatis named structure
PASS: gdb.base/whatis.exp: whatis named structure using type name
PASS: gdb.base/whatis.exp: whatis unnamed structure
PASS: gdb.base/whatis.exp: whatis named union
PASS: gdb.base/whatis.exp: whatis named union using type name
PASS: gdb.base/whatis.exp: whatis unnamed union
PASS: gdb.base/whatis.exp: whatis char function
PASS: gdb.base/whatis.exp: whatis signed char function
PASS: gdb.base/whatis.exp: whatis unsigned char function
PASS: gdb.base/whatis.exp: whatis short function
PASS: gdb.base/whatis.exp: whatis signed short function
PASS: gdb.base/whatis.exp: whatis unsigned short function
PASS: gdb.base/whatis.exp: whatis int function
PASS: gdb.base/whatis.exp: whatis signed int function
PASS: gdb.base/whatis.exp: whatis unsigned int function
PASS: gdb.base/whatis.exp: whatis long function
PASS: gdb.base/whatis.exp: whatis signed long function
PASS: gdb.base/whatis.exp: whatis unsigned long function
PASS: gdb.base/whatis.exp: whatis long long function
PASS: gdb.base/whatis.exp: whatis signed long long function
PASS: gdb.base/whatis.exp: whatis unsigned long long function
PASS: gdb.base/whatis.exp: whatis float function
PASS: gdb.base/whatis.exp: whatis double function
PASS: gdb.base/whatis.exp: whatis complicated structure
PASS: gdb.base/whatis.exp: whatis complicated union
PASS: gdb.base/whatis.exp: whatis enumeration
PASS: gdb.base/whatis.exp: whatis enumeration using type name
PASS: gdb.base/whatis.exp: whatis outer structure
PASS: gdb.base/whatis.exp: whatis outer structure member
PASS: gdb.base/whatis.exp: whatis inner structure
PASS: gdb.base/whatis.exp: whatis inner structure member
PASS: gdb.base/whatis.exp: whatis inner union
PASS: gdb.base/whatis.exp: whatis inner union member
PASS: gdb.base/whatis.exp: whatis using typedef type name
PASS: gdb.base/whatis.exp: whatis applied to variable defined by typedef
PASS: gdb.base/whatis.exp: whatis applied to pointer to pointer to function
PASS: gdb.base/whatis.exp: whatis applied to const pointer to pointer to function
PASS: gdb.base/whatis.exp: whatis applied to pointer to const pointer to function
PASS: gdb.base/whatis.exp: whatis applied to pointer to function returning pointer to int
PASS: gdb.base/whatis.exp: whatis applied to pointer to pointer to function returning pointer to int
PASS: gdb.base/whatis.exp: whatis applied to pointer to function returning pointer to array
PASS: gdb.base/whatis.exp: whatis applied to pointer to function taking int,int and returning int
PASS: gdb.base/whatis.exp: whatis applied to pointer to function taking const int ptr and varargs and returning int
PASS: gdb.base/whatis.exp: whatis applied to function with types trailing 'void'
PASS: gdb.base/whatis.exp: whatis applied to function with 'void' parameter type
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib-disc.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sigbpt.exp ...
PASS: gdb.base/sigbpt.exp: break keeper
PASS: gdb.base/sigbpt.exp: display/i $pc
PASS: gdb.base/sigbpt.exp: advance to the bowler
PASS: gdb.base/sigbpt.exp: stepping to fault
PASS: gdb.base/sigbpt.exp: get insn after fault
PASS: gdb.base/sigbpt.exp: Verify that SIGSEGV occurs at the last STEPI insn
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: stepi; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi; nopass SIGSEGV
FAIL: gdb.base/sigbpt.exp: stepi; stepi out of handler
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: stepi bp before segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp before segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp before segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp before segv; set breakpoint 0 of 1
FAIL: gdb.base/sigbpt.exp: stepi bp before segv; stepi out of handler
PASS: gdb.base/sigbpt.exp: stepi bp before segv; clear breakpoint 0 of 1
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: stepi bp at segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp at segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp at segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp at segv; set breakpoint 0 of 1
FAIL: gdb.base/sigbpt.exp: stepi bp at segv; stepi out of handler
PASS: gdb.base/sigbpt.exp: stepi bp at segv; clear breakpoint 0 of 1
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; set breakpoint 0 of 2
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; set breakpoint 1 of 2
FAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; stepi out of handler
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; clear breakpoint 0 of 2
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; clear breakpoint 1 of 2
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: cont; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont; continue to keeper
PASS: gdb.base/sigbpt.exp: cont; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont; set breakpoint 0  of 1
PASS: gdb.base/sigbpt.exp: cont; continue to breakpoint at fault
PASS: gdb.base/sigbpt.exp: cont; stepi fault
PASS: gdb.base/sigbpt.exp: cont; clear breakpoint 0 of 1
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: cont bp after segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont bp after segv; continue to keeper
PASS: gdb.base/sigbpt.exp: cont bp after segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont bp after segv; set breakpoint 0  of 2
PASS: gdb.base/sigbpt.exp: cont bp after segv; set breakpoint 1  of 2
PASS: gdb.base/sigbpt.exp: cont bp after segv; continue to breakpoint at fault
PASS: gdb.base/sigbpt.exp: cont bp after segv; stepi fault
PASS: gdb.base/sigbpt.exp: cont bp after segv; clear breakpoint 0 of 2
PASS: gdb.base/sigbpt.exp: cont bp after segv; clear breakpoint 1 of 2
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; continue to keeper
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 0  of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 1  of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 2  of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; continue to breakpoint at fault
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; stepi fault
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 0 of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 1 of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 2 of 3
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/scope.exp ...
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss before run
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal before run
PASS: gdb.base/scope.exp: next over init0() in main
PASS: gdb.base/scope.exp: print filelocal
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at main
PASS: gdb.base/scope.exp: print filelocal_bss
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_main
PASS: gdb.base/scope.exp: print filelocal_ro in test_at_main
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro
PASS: gdb.base/scope.exp: print foo::funclocal
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal
PASS: gdb.base/scope.exp: print foo::funclocal_ro
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro
PASS: gdb.base/scope.exp: print bar::funclocal
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print filelocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal at foo
PASS: gdb.base/scope.exp: print filelocal_bss at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss at foo
PASS: gdb.base/scope.exp: print filelocal_ro at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro at foo
PASS: gdb.base/scope.exp: print funclocal at foo
PASS: gdb.base/scope.exp: print foo::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal at foo
PASS: gdb.base/scope.exp: print funclocal_bss at foo
PASS: gdb.base/scope.exp: print foo::funclocal_bss at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_bss at foo
PASS: gdb.base/scope.exp: print funclocal_ro at foo
PASS: gdb.base/scope.exp: print foo::funclocal_ro at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro at foo
PASS: gdb.base/scope.exp: print bar::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at bar
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_bar
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro at bar
PASS: gdb.base/scope.exp: print filelocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal at bar
PASS: gdb.base/scope.exp: print filelocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss at bar
PASS: gdb.base/scope.exp: print filelocal_ro in test_at_bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro at bar
PASS: gdb.base/scope.exp: print foo::funclocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal at bar
PASS: gdb.base/scope.exp: print foo::funclocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_bss at bar
PASS: gdb.base/scope.exp: print foo::funclocal_ro at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro at bar
PASS: gdb.base/scope.exp: print funclocal at bar
PASS: gdb.base/scope.exp: print bar::funclocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal at bar
PASS: gdb.base/scope.exp: print funclocal_bss at bar
PASS: gdb.base/scope.exp: print bar::funclocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal_bss at bar
PASS: gdb.base/scope.exp: continue to marker2
PASS: gdb.base/scope.exp: up from marker2 in scopes.exp
PASS: gdb.base/scope.exp: print localval, outer scope
PASS: gdb.base/scope.exp: print localval1, outer scope
PASS: gdb.base/scope.exp: print localval2, outer scope
PASS: gdb.base/scope.exp: print localval3, outer scope
PASS: gdb.base/scope.exp: continue to marker3 in scope.exp
PASS: gdb.base/scope.exp: up from marker3 in scope.exp
PASS: gdb.base/scope.exp: print localval, first nested scope
PASS: gdb.base/scope.exp: print localval1, first nested scope
PASS: gdb.base/scope.exp: print localval2, first nested scope
PASS: gdb.base/scope.exp: print localval3, first nested scope
PASS: gdb.base/scope.exp: continue to marker4 in scope.exp
PASS: gdb.base/scope.exp: up from marker4 in scope.exp
PASS: gdb.base/scope.exp: print localval, innermost scope
PASS: gdb.base/scope.exp: print localval1, innermost scope
PASS: gdb.base/scope.exp: print localval2, innermost scope
PASS: gdb.base/scope.exp: print localval3, innermost scope
PASS: gdb.base/scope.exp: continue to marker1
PASS: gdb.base/scope.exp: up from marker1 in scope.exp
PASS: gdb.base/scope.exp: 100 auto variables correctly initialized
PASS: gdb.base/scope.exp: args in correct order
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/reread.exp ...
PASS: gdb.base/reread.exp: breakpoint foo in first file
PASS: gdb.base/reread.exp: run to foo()
PASS: gdb.base/reread.exp: run to foo() second time
PASS: gdb.base/reread.exp: second pass: breakpoint foo in first file
PASS: gdb.base/reread.exp: second pass: run to foo()
PASS: gdb.base/reread.exp: continue until exit at second pass
PASS: gdb.base/reread.exp: second pass: run to foo() second time
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/value-double-free.exp ...
PASS: gdb.base/value-double-free.exp: watch var
PASS: gdb.base/value-double-free.exp: continue
PASS: gdb.base/value-double-free.exp: print empty()
PASS: gdb.base/value-double-free.exp: help help
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib-search.exp ...
PASS: gdb.base/solib-search.exp: continue to break_here
UNSUPPORTED: gdb.base/solib-search.exp: save a corefile
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib-display.exp ...
PASS: gdb.base/solib-display.exp: NO: display a_global
PASS: gdb.base/solib-display.exp: NO: display b_global
PASS: gdb.base/solib-display.exp: NO: display c_global
PASS: gdb.base/solib-display.exp: NO: after rerun
PASS: gdb.base/solib-display.exp: NO: after rerun (2)
PASS: gdb.base/solib-display.exp: NO: break 25
PASS: gdb.base/solib-display.exp: NO: continue
PASS: gdb.base/solib-display.exp: NO: display main_global
PASS: gdb.base/solib-display.exp: NO: display a_local
PASS: gdb.base/solib-display.exp: NO: display a_static
PASS: gdb.base/solib-display.exp: NO: break 25
PASS: gdb.base/solib-display.exp: NO: continue
PASS: gdb.base/solib-display.exp: IN: display a_global
PASS: gdb.base/solib-display.exp: IN: display b_global
PASS: gdb.base/solib-display.exp: IN: display c_global
PASS: gdb.base/solib-display.exp: IN: after rerun
PASS: gdb.base/solib-display.exp: IN: after rerun (2)
PASS: gdb.base/solib-display.exp: IN: break 25
PASS: gdb.base/solib-display.exp: IN: continue
PASS: gdb.base/solib-display.exp: IN: display main_global
PASS: gdb.base/solib-display.exp: IN: display a_local
PASS: gdb.base/solib-display.exp: IN: display a_static
PASS: gdb.base/solib-display.exp: IN: break 25
PASS: gdb.base/solib-display.exp: IN: continue
PASS: gdb.base/solib-display.exp: SEP: split solib
PASS: gdb.base/solib-display.exp: SEP: display a_global
PASS: gdb.base/solib-display.exp: SEP: display b_global
PASS: gdb.base/solib-display.exp: SEP: display c_global
PASS: gdb.base/solib-display.exp: SEP: after rerun
PASS: gdb.base/solib-display.exp: SEP: split solib second time
PASS: gdb.base/solib-display.exp: SEP: after rerun (2)
PASS: gdb.base/solib-display.exp: SEP: break 25
PASS: gdb.base/solib-display.exp: SEP: continue
PASS: gdb.base/solib-display.exp: SEP: display main_global
PASS: gdb.base/solib-display.exp: SEP: display a_local
PASS: gdb.base/solib-display.exp: SEP: display a_static
PASS: gdb.base/solib-display.exp: SEP: break 25
PASS: gdb.base/solib-display.exp: SEP: continue
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sigrepeat.exp ...
PASS: gdb.base/sigrepeat.exp: advance to infinite loop
FAIL: gdb.base/sigrepeat.exp: next
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watch_thread_num.exp ...
PASS: gdb.base/watch_thread_num.exp: successfully compiled posix threads test case
PASS: gdb.base/watch_thread_num.exp: Watchpoint on invalid thread
PASS: gdb.base/watch_thread_num.exp: Invalid watch syntax
PASS: gdb.base/watch_thread_num.exp: Next 5
PASS: gdb.base/watch_thread_num.exp: Set breakpoint at thread_function
PASS: gdb.base/watch_thread_num.exp: Stopped in thread_function
PASS: gdb.base/watch_thread_num.exp: Thread command
PASS: gdb.base/watch_thread_num.exp: Disable breakpoint 2
FAIL: gdb.base/watch_thread_num.exp: Watchpoint on shared variable
PASS: gdb.base/watch_thread_num.exp: info breakpoint 3
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 1
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 1
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 2
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 2
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 3
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 3
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 4
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 4
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 5
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 5
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 6
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 6
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 7
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 7
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 8
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 8
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 9
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 9
FAIL: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 10
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 10
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/overlays.exp ...
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/prelink.exp ...
PASS: gdb.base/prelink.exp: ldd prelinkt
PASS: gdb.base/prelink.exp: ldd prelinkt output contains libs
PASS: gdb.base/prelink.exp: copy ld-2.17.so to ld.so
PASS: gdb.base/prelink.exp: copy prelink.so to prelink.so
PASS: gdb.base/prelink.exp: copy libm-2.17.so to libm.so.6
PASS: gdb.base/prelink.exp: copy libc-2.17.so to libc.so.0.3
PASS: gdb.base/prelink.exp: copy ld-2.17.so to ld.so.1
PASS: gdb.base/prelink.exp: copy libmachuser-2.17.so to libmachuser.so.1
PASS: gdb.base/prelink.exp: copy libhurduser-2.17.so to libhurduser.so.0.3
PASS: gdb.base/prelink.exp: split debug of executable
PASS: gdb.base/prelink.exp: unprelink ld.so pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/prelink.exp: prelink ld.so (missing /usr/sbin/prelink)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/step-break.exp ...
PASS: gdb.base/step-break.exp: breakpoint line number
PASS: gdb.base/step-break.exp: run until breakpoint set at a line number
PASS: gdb.base/step-break.exp: next 2 (1)
PASS: gdb.base/step-break.exp: next 2 (2)
PASS: gdb.base/step-break.exp: next 2 (3)
PASS: gdb.base/step-break.exp: next 2 (4)
PASS: gdb.base/step-break.exp: next 2 (5)
PASS: gdb.base/step-break.exp: next 2 (6)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/solib-corrupted.exp ...
PASS: gdb.base/solib-corrupted.exp: normal list
XFAIL: gdb.base/solib-corrupted.exp: make solibs looping
UNTESTED: gdb.base/solib-corrupted.exp: no _r_debug symbol has been found
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/watchpoint-solib.exp ...
PASS: gdb.base/watchpoint-solib.exp: set pending breakpoint
FAIL: gdb.base/watchpoint-solib.exp: continue to foo (the program exited)
FAIL: gdb.base/watchpoint-solib.exp: set watchpoint on g
FAIL: gdb.base/watchpoint-solib.exp: continue to watchpoint hit (the program is no longer running)
PASS: gdb.base/watchpoint-solib.exp: rerun to main
FAIL: gdb.base/watchpoint-solib.exp: continue to foo again (the program exited)
FAIL: gdb.base/watchpoint-solib.exp: continue to watchpoint hit again (the program is no longer running)
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/symbol-without-target_section.exp ...
PASS: gdb.base/symbol-without-target_section.exp: add-symbol-file
PASS: gdb.base/symbol-without-target_section.exp: list main
PASS: gdb.base/symbol-without-target_section.exp: print symbol_without_target_section
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/stack-checking.exp ...
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for small frame
PASS: gdb.base/stack-checking.exp: bt
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for medium frame
PASS: gdb.base/stack-checking.exp: bt
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for big frame
PASS: gdb.base/stack-checking.exp: bt
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/sigstep.exp ...
PASS: gdb.base/sigstep.exp: display/i $pc
PASS: gdb.base/sigstep.exp: break handler
PASS: gdb.base/sigstep.exp: continue to stepi handler
FAIL: gdb.base/sigstep.exp: backtrace for nexti (pattern 2)
PASS: gdb.base/sigstep.exp: step from handler; continue to handler
FAIL: gdb.base/sigstep.exp: step from handler; leave handler (timeout)
PASS: gdb.base/sigstep.exp: stepi from handleri; continue to handler
FAIL: gdb.base/sigstep.exp: stepi from handleri; leave handler (hit breakpoint again)
FAIL: gdb.base/sigstep.exp: stepi from handleri; leave signal trampoline
PASS: gdb.base/sigstep.exp: next from handler; continue to handler
FAIL: gdb.base/sigstep.exp: next from handler; leave handler
PASS: gdb.base/sigstep.exp: nexti from handleri; continue to handler
FAIL: gdb.base/sigstep.exp: nexti from handleri; leave handler
FAIL: gdb.base/sigstep.exp: nexti from handleri; leave signal trampoline
PASS: gdb.base/sigstep.exp: finish from handleri; continue to handler
FAIL: gdb.base/sigstep.exp: finish from handleri; leave handler
FAIL: gdb.base/sigstep.exp: finish from handleri; leave signal trampoline
PASS: gdb.base/sigstep.exp: return from handleri; continue to handler
FAIL: gdb.base/sigstep.exp: return from handleri; leave handler
FAIL: gdb.base/sigstep.exp: return from handleri; leave signal trampoline
PASS: gdb.base/sigstep.exp: Set done as return will have skipped it
PASS: gdb.base/sigstep.exp: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: break 79
FAIL: gdb.base/sigstep.exp: step to handler; resync (the program exited)
PASS: gdb.base/sigstep.exp: step to handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: step to handler; break handler
FAIL: gdb.base/sigstep.exp: step to handler; performing step (the program is no longer running)
PASS: gdb.base/sigstep.exp: step to handler; clear handler
FAIL: gdb.base/sigstep.exp: next to handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: next to handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: next to handler; break handler
FAIL: gdb.base/sigstep.exp: next to handler; performing next (the program is no longer running)
PASS: gdb.base/sigstep.exp: next to handler; clear handler
FAIL: gdb.base/sigstep.exp: continue to handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue to handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: continue to handler; break handler
FAIL: gdb.base/sigstep.exp: continue to handler; performing continue (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue to handler; clear handler
FAIL: gdb.base/sigstep.exp: step to handler entry; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: step to handler entry; advance to infinite loop
PASS: gdb.base/sigstep.exp: step to handler entry; break handler
FAIL: gdb.base/sigstep.exp: step to handler entry; performing step (the program is no longer running)
PASS: gdb.base/sigstep.exp: step to handler entry; clear handler
FAIL: gdb.base/sigstep.exp: next to handler entry; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: next to handler entry; advance to infinite loop
PASS: gdb.base/sigstep.exp: next to handler entry; break handler
FAIL: gdb.base/sigstep.exp: next to handler entry; performing next (the program is no longer running)
PASS: gdb.base/sigstep.exp: next to handler entry; clear handler
FAIL: gdb.base/sigstep.exp: continue to handler entry; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue to handler entry; advance to infinite loop
PASS: gdb.base/sigstep.exp: continue to handler entry; break handler
FAIL: gdb.base/sigstep.exp: continue to handler entry; performing continue (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue to handler entry; clear handler
FAIL: gdb.base/sigstep.exp: step over handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: step over handler; advance to infinite loop
FAIL: gdb.base/sigstep.exp: step over handler; performing step (the program is no longer running)
FAIL: gdb.base/sigstep.exp: next over handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: next over handler; advance to infinite loop
FAIL: gdb.base/sigstep.exp: next over handler; performing next (the program is no longer running)
FAIL: gdb.base/sigstep.exp: continue over handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue over handler; advance to infinite loop
FAIL: gdb.base/sigstep.exp: continue over handler; performing continue (the program is no longer running)
FAIL: gdb.base/sigstep.exp: step on breakpoint, to handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; break infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; break handler
FAIL: gdb.base/sigstep.exp: step on breakpoint, to handler; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: step on breakpoint, to handler; performing step (the program is no longer running)
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; clear infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; clear handler
FAIL: gdb.base/sigstep.exp: next on breakpoint, to handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; break infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; break handler
FAIL: gdb.base/sigstep.exp: next on breakpoint, to handler; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: next on breakpoint, to handler; performing next (the program is no longer running)
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; clear infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; clear handler
FAIL: gdb.base/sigstep.exp: continue on breakpoint, to handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; break infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; break handler
FAIL: gdb.base/sigstep.exp: continue on breakpoint, to handler; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: continue on breakpoint, to handler; performing continue (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; clear infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; clear handler
FAIL: gdb.base/sigstep.exp: step on breakpoint, to handler entry; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; break infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; break handler
FAIL: gdb.base/sigstep.exp: step on breakpoint, to handler entry; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: step on breakpoint, to handler entry; performing step (the program is no longer running)
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; clear infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; clear handler
FAIL: gdb.base/sigstep.exp: next on breakpoint, to handler entry; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; break infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; break handler
FAIL: gdb.base/sigstep.exp: next on breakpoint, to handler entry; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: next on breakpoint, to handler entry; performing next (the program is no longer running)
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; clear infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; clear handler
FAIL: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; break infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; break handler
FAIL: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; performing continue (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; clear infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; clear handler
FAIL: gdb.base/sigstep.exp: step on breakpoint, skip handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: step on breakpoint, skip handler; break infinite loop
FAIL: gdb.base/sigstep.exp: step on breakpoint, skip handler; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: step on breakpoint, skip handler; performing step (the program is no longer running)
PASS: gdb.base/sigstep.exp: step on breakpoint, skip handler; clear infinite loop
FAIL: gdb.base/sigstep.exp: next on breakpoint, skip handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: next on breakpoint, skip handler; break infinite loop
FAIL: gdb.base/sigstep.exp: next on breakpoint, skip handler; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: next on breakpoint, skip handler; performing next (the program is no longer running)
PASS: gdb.base/sigstep.exp: next on breakpoint, skip handler; clear infinite loop
FAIL: gdb.base/sigstep.exp: continue on breakpoint, skip handler; resync (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue on breakpoint, skip handler; break infinite loop
FAIL: gdb.base/sigstep.exp: continue on breakpoint, skip handler; continue to infinite loop (the program is no longer running)
FAIL: gdb.base/sigstep.exp: continue on breakpoint, skip handler; performing continue (the program is no longer running)
PASS: gdb.base/sigstep.exp: continue on breakpoint, skip handler; clear infinite loop
Running ../../../Ferry_Tagscherer/gdb/testsuite/gdb.base/nostdlib.exp ...
PASS: gdb.base/nostdlib.exp: stop at run
PASS: gdb.base/nostdlib.exp: continue to marker

		=== gdb Summary ===

# of expected passes		3867
# of unexpected failures	201
# of expected failures		2
# of known failures		2
# of untested testcases		7
# of unsupported tests		4
[...]/tschwinge/Ferry_Tagscherer.build/gdb/testsuite/../../gdb/gdb version  7.6.50.20130613-cvs -nw -nx -data-directory [...]/tschwinge/Ferry_Tagscherer.build/gdb/testsuite/../data-directory 

