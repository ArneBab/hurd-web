Test Run By thomas on Mon Jul  4 18:12:48 2011
Native configuration is i686-pc-linux-gnu

		=== gdb tests ===

Schedule of variations:
    unix

Running target unix
Running ../../../master/gdb/testsuite/gdb.ada/array_bounds.exp ...
UNSUPPORTED: gdb.ada/array_bounds.exp: compilation bar.adb
Running ../../../master/gdb/testsuite/gdb.ada/array_return.exp ...
UNSUPPORTED: gdb.ada/array_return.exp: compilation p.adb
Running ../../../master/gdb/testsuite/gdb.ada/array_subscript_addr.exp ...
UNSUPPORTED: gdb.ada/array_subscript_addr.exp: compilation p.adb
Running ../../../master/gdb/testsuite/gdb.ada/arrayidx.exp ...
UNSUPPORTED: gdb.ada/arrayidx.exp: compilation p.adb
Running ../../../master/gdb/testsuite/gdb.ada/arrayparam.exp ...
UNSUPPORTED: gdb.ada/arrayparam.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/arrayptr.exp ...
UNSUPPORTED: gdb.ada/arrayptr.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/assign_1.exp ...
PASS: gdb.ada/assign_1.exp: Changing the language to ada
PASS: gdb.ada/assign_1.exp: set convenience variable $xxx to 1
Running ../../../master/gdb/testsuite/gdb.ada/atomic_enum.exp ...
UNSUPPORTED: gdb.ada/atomic_enum.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/boolean_expr.exp ...
PASS: gdb.ada/boolean_expr.exp: Changing the language to ada
PASS: gdb.ada/boolean_expr.exp: print 1 = 2
PASS: gdb.ada/boolean_expr.exp: print 3 = 3
Running ../../../master/gdb/testsuite/gdb.ada/call_pn.exp ...
UNSUPPORTED: gdb.ada/call_pn.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/catch_ex.exp ...
UNSUPPORTED: gdb.ada/catch_ex.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/char_enum.exp ...
UNSUPPORTED: gdb.ada/char_enum.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/char_param.exp ...
UNSUPPORTED: gdb.ada/char_param.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/complete.exp ...
UNSUPPORTED: gdb.ada/complete.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/cond_lang.exp ...
UNSUPPORTED: gdb.ada/cond_lang.exp: compilation a.adb
Running ../../../master/gdb/testsuite/gdb.ada/dyn_loc.exp ...
UNSUPPORTED: gdb.ada/dyn_loc.exp: compilation p.adb
Running ../../../master/gdb/testsuite/gdb.ada/exec_changed.exp ...
UNSUPPORTED: gdb.ada/exec_changed.exp: compilation first.adb
Running ../../../master/gdb/testsuite/gdb.ada/exprs.exp ...
UNSUPPORTED: gdb.ada/exprs.exp: compilation p.adb
Running ../../../master/gdb/testsuite/gdb.ada/fixed_cmp.exp ...
UNSUPPORTED: gdb.ada/fixed_cmp.exp: compilation fixed.adb
Running ../../../master/gdb/testsuite/gdb.ada/fixed_points.exp ...
UNSUPPORTED: gdb.ada/fixed_points.exp: compilation fixed_points.adb
Running ../../../master/gdb/testsuite/gdb.ada/formatted_ref.exp ...
UNSUPPORTED: gdb.ada/formatted_ref.exp: compilation formatted_ref.adb
UNTESTED: gdb.ada/formatted_ref.exp: formatted-ref.exp
Running ../../../master/gdb/testsuite/gdb.ada/frame_args.exp ...
UNSUPPORTED: gdb.ada/frame_args.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/fun_addr.exp ...
UNSUPPORTED: gdb.ada/fun_addr.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/fun_in_declare.exp ...
UNSUPPORTED: gdb.ada/fun_in_declare.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/funcall_param.exp ...
UNSUPPORTED: gdb.ada/funcall_param.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/homonym.exp ...
UNSUPPORTED: gdb.ada/homonym.exp: compilation homonym_main.adb
Running ../../../master/gdb/testsuite/gdb.ada/info_types.exp ...
PASS: gdb.ada/info_types.exp: set lang ada
PASS: gdb.ada/info_types.exp: info types new_integer_type
Running ../../../master/gdb/testsuite/gdb.ada/int_deref.exp ...
UNSUPPORTED: gdb.ada/int_deref.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/interface.exp ...
UNSUPPORTED: gdb.ada/interface.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/lang_switch.exp ...
UNSUPPORTED: gdb.ada/lang_switch.exp: compilation lang_switch.adb
Running ../../../master/gdb/testsuite/gdb.ada/mi_catch_ex.exp ...
UNSUPPORTED: gdb.ada/mi_catch_ex.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/mod_from_name.exp ...
UNSUPPORTED: gdb.ada/mod_from_name.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/nested.exp ...
UNSUPPORTED: gdb.ada/nested.exp: compilation hello.adb
Running ../../../master/gdb/testsuite/gdb.ada/null_array.exp ...
UNSUPPORTED: gdb.ada/null_array.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/null_record.exp ...
UNSUPPORTED: gdb.ada/null_record.exp: compilation null_record.adb
Running ../../../master/gdb/testsuite/gdb.ada/packed_array.exp ...
UNSUPPORTED: gdb.ada/packed_array.exp: compilation pa.adb
Running ../../../master/gdb/testsuite/gdb.ada/packed_tagged.exp ...
UNSUPPORTED: gdb.ada/packed_tagged.exp: compilation comp_bug.adb
Running ../../../master/gdb/testsuite/gdb.ada/print_chars.exp ...
UNSUPPORTED: gdb.ada/print_chars.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/print_pc.exp ...
UNSUPPORTED: gdb.ada/print_pc.exp: compilation dummy.adb
Running ../../../master/gdb/testsuite/gdb.ada/ptr_typedef.exp ...
UNSUPPORTED: gdb.ada/ptr_typedef.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/ptype_arith_binop.exp ...
PASS: gdb.ada/ptype_arith_binop.exp: set lang ada
PASS: gdb.ada/ptype_arith_binop.exp: ptype 3 * 2.0
PASS: gdb.ada/ptype_arith_binop.exp: ptype 3 / 2.0
Running ../../../master/gdb/testsuite/gdb.ada/ptype_field.exp ...
UNSUPPORTED: gdb.ada/ptype_field.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/ptype_tagged_param.exp ...
UNSUPPORTED: gdb.ada/ptype_tagged_param.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/rec_return.exp ...
UNSUPPORTED: gdb.ada/rec_return.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/ref_param.exp ...
UNSUPPORTED: gdb.ada/ref_param.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/ref_tick_size.exp ...
UNSUPPORTED: gdb.ada/ref_tick_size.exp: compilation p.adb
Running ../../../master/gdb/testsuite/gdb.ada/same_enum.exp ...
UNSUPPORTED: gdb.ada/same_enum.exp: compilation a.adb
Running ../../../master/gdb/testsuite/gdb.ada/start.exp ...
UNSUPPORTED: gdb.ada/start.exp: compilation dummy.adb
Running ../../../master/gdb/testsuite/gdb.ada/str_ref_cmp.exp ...
UNSUPPORTED: gdb.ada/str_ref_cmp.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/sym_print_name.exp ...
UNSUPPORTED: gdb.ada/sym_print_name.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/taft_type.exp ...
UNSUPPORTED: gdb.ada/taft_type.exp: compilation p.adb
Running ../../../master/gdb/testsuite/gdb.ada/tagged.exp ...
UNSUPPORTED: gdb.ada/tagged.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/tasks.exp ...
UNSUPPORTED: gdb.ada/tasks.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/tick_last_segv.exp ...
UNSUPPORTED: gdb.ada/tick_last_segv.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/type_coercion.exp ...
UNSUPPORTED: gdb.ada/type_coercion.exp: compilation assign.adb
Running ../../../master/gdb/testsuite/gdb.ada/uninitialized_vars.exp ...
UNSUPPORTED: gdb.ada/uninitialized_vars.exp: compilation parse.adb
Running ../../../master/gdb/testsuite/gdb.ada/variant_record_packed_array.exp ...
UNSUPPORTED: gdb.ada/variant_record_packed_array.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.ada/watch_arg.exp ...
UNSUPPORTED: gdb.ada/watch_arg.exp: compilation watch.adb
Running ../../../master/gdb/testsuite/gdb.ada/widewide.exp ...
UNSUPPORTED: gdb.ada/widewide.exp: compilation foo.adb
Running ../../../master/gdb/testsuite/gdb.arch/alpha-step.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/altivec-abi.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/altivec-regs.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/amd64-byte.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/amd64-disp-step.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/amd64-dword.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/amd64-i386-address.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/amd64-word.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/arm-disp-step.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/e500-abi.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/e500-prologue.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/e500-regs.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/gdb1291.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/gdb1431.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/gdb1558.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/i386-avx.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/i386-bp_permanent.exp ...
PASS: gdb.arch/i386-bp_permanent.exp: Stop at the 'standard' start breakpoint (fetching esp).
PASS: gdb.arch/i386-bp_permanent.exp: Stop at permanent breakpoint.
PASS: gdb.arch/i386-bp_permanent.exp: Single stepping past permanent breakpoint.
PASS: gdb.arch/i386-bp_permanent.exp: ESP value does not match - step_permanent_breakpoint wrong.
Running ../../../master/gdb/testsuite/gdb.arch/i386-byte.exp ...
PASS: gdb.arch/i386-byte.exp: set first breakpoint in main
PASS: gdb.arch/i386-byte.exp: continue to breakpoint: continue to first breakpoint in main
PASS: gdb.arch/i386-byte.exp: check contents of %al
PASS: gdb.arch/i386-byte.exp: check contents of %ah
PASS: gdb.arch/i386-byte.exp: check contents of %bl
PASS: gdb.arch/i386-byte.exp: check contents of %bh
PASS: gdb.arch/i386-byte.exp: check contents of %cl
PASS: gdb.arch/i386-byte.exp: check contents of %ch
PASS: gdb.arch/i386-byte.exp: check contents of %dl
PASS: gdb.arch/i386-byte.exp: check contents of %dh
PASS: gdb.arch/i386-byte.exp: set %al
PASS: gdb.arch/i386-byte.exp: set %ah
PASS: gdb.arch/i386-byte.exp: set %bl
PASS: gdb.arch/i386-byte.exp: set %bh
PASS: gdb.arch/i386-byte.exp: set %cl
PASS: gdb.arch/i386-byte.exp: set %ch
PASS: gdb.arch/i386-byte.exp: set %dl
PASS: gdb.arch/i386-byte.exp: set %dh
PASS: gdb.arch/i386-byte.exp: set second breakpoint in main
PASS: gdb.arch/i386-byte.exp: continue to breakpoint: continue to second breakpoint in main
PASS: gdb.arch/i386-byte.exp: check contents of %al
PASS: gdb.arch/i386-byte.exp: check contents of %ah
PASS: gdb.arch/i386-byte.exp: check contents of %bl
PASS: gdb.arch/i386-byte.exp: check contents of %bh
PASS: gdb.arch/i386-byte.exp: check contents of %cl
PASS: gdb.arch/i386-byte.exp: check contents of %ch
PASS: gdb.arch/i386-byte.exp: check contents of %dl
PASS: gdb.arch/i386-byte.exp: check contents of %dh
Running ../../../master/gdb/testsuite/gdb.arch/i386-disp-step.exp ...
PASS: gdb.arch/i386-disp-step.exp: set displaced-stepping on
PASS: gdb.arch/i386-disp-step.exp: show displaced-stepping
PASS: gdb.arch/i386-disp-step.exp: break test_call
PASS: gdb.arch/i386-disp-step.exp: break test_call_end
PASS: gdb.arch/i386-disp-step.exp: break test_ret
PASS: gdb.arch/i386-disp-step.exp: break test_ret_end
PASS: gdb.arch/i386-disp-step.exp: continue to test_call
PASS: gdb.arch/i386-disp-step.exp: continue to test_call_end
PASS: gdb.arch/i386-disp-step.exp: continue to test_ret
PASS: gdb.arch/i386-disp-step.exp: continue to test_ret_end
PASS: gdb.arch/i386-disp-step.exp: break test_prefixed_abs_jump
PASS: gdb.arch/i386-disp-step.exp: break test_prefixed_abs_jump_end
PASS: gdb.arch/i386-disp-step.exp: continue to test_prefixed_abs_jump
PASS: gdb.arch/i386-disp-step.exp: continue to test_prefixed_abs_jump_end
PASS: gdb.arch/i386-disp-step.exp: break test_syscall
PASS: gdb.arch/i386-disp-step.exp: break test_syscall_end
PASS: gdb.arch/i386-disp-step.exp: continue to test_syscall
PASS: gdb.arch/i386-disp-step.exp: continue to test_syscall_end
PASS: gdb.arch/i386-disp-step.exp: break test_prefixed_syscall
PASS: gdb.arch/i386-disp-step.exp: break test_prefixed_syscall_end
PASS: gdb.arch/i386-disp-step.exp: continue to test_prefixed_syscall
PASS: gdb.arch/i386-disp-step.exp: continue to test_prefixed_syscall_end
PASS: gdb.arch/i386-disp-step.exp: break test_int3
PASS: gdb.arch/i386-disp-step.exp: break test_int3_end
PASS: gdb.arch/i386-disp-step.exp: continue to test_int3
PASS: gdb.arch/i386-disp-step.exp: continue to test_int3_end
PASS: gdb.arch/i386-disp-step.exp: continue until exit at i386-disp-step
Running ../../../master/gdb/testsuite/gdb.arch/i386-dr3-watch.exp ...
PASS: gdb.arch/i386-dr3-watch.exp: set breakpoint always-inserted on
PASS: gdb.arch/i386-dr3-watch.exp: watch i1
PASS: gdb.arch/i386-dr3-watch.exp: watch i2
PASS: gdb.arch/i386-dr3-watch.exp: watch i3
PASS: gdb.arch/i386-dr3-watch.exp: watch i4
PASS: gdb.arch/i386-dr3-watch.exp: continue to i1 watchpoint
PASS: gdb.arch/i386-dr3-watch.exp: continue to i2 watchpoint
PASS: gdb.arch/i386-dr3-watch.exp: continue to i3 watchpoint
PASS: gdb.arch/i386-dr3-watch.exp: continue to i4 watchpoint
Running ../../../master/gdb/testsuite/gdb.arch/i386-gnu-cfi.exp ...
PASS: gdb.arch/i386-gnu-cfi.exp: continue to abort()
PASS: gdb.arch/i386-gnu-cfi.exp: backtrace
PASS: gdb.arch/i386-gnu-cfi.exp: shift up to the modified frame
PASS: gdb.arch/i386-gnu-cfi.exp: Existence of the CFI inserted register
PASS: gdb.arch/i386-gnu-cfi.exp: Value of the CFI inserted register
Running ../../../master/gdb/testsuite/gdb.arch/i386-permbkpt.exp ...
PASS: gdb.arch/i386-permbkpt.exp: First permanent break
PASS: gdb.arch/i386-permbkpt.exp: Second permanent break
Running ../../../master/gdb/testsuite/gdb.arch/i386-prologue.exp ...
PASS: gdb.arch/i386-prologue.exp: continue to standard
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in standard
PASS: gdb.arch/i386-prologue.exp: backtrace in standard
PASS: gdb.arch/i386-prologue.exp: saved registers in standard
PASS: gdb.arch/i386-prologue.exp: break *(stack_align_ecx + 7)
PASS: gdb.arch/i386-prologue.exp: continue to stack_align_ecx + 7
PASS: gdb.arch/i386-prologue.exp: first backtrace in stack_align_ecx
PASS: gdb.arch/i386-prologue.exp: continue in stack_align_ecx
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in stack_align_ecx
PASS: gdb.arch/i386-prologue.exp: second backtrace in stack_align_ecx
PASS: gdb.arch/i386-prologue.exp: saved registers in stack_align_ecx
PASS: gdb.arch/i386-prologue.exp: break *(stack_align_edx + 7)
PASS: gdb.arch/i386-prologue.exp: continue to stack_align_edx + 7
PASS: gdb.arch/i386-prologue.exp: first backtrace in stack_align_edx
PASS: gdb.arch/i386-prologue.exp: continue in stack_align_edx
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in stack_align_edx
PASS: gdb.arch/i386-prologue.exp: second backtrace in stack_align_edx
PASS: gdb.arch/i386-prologue.exp: saved registers in stack_align_edx
PASS: gdb.arch/i386-prologue.exp: break *(stack_align_eax + 7)
PASS: gdb.arch/i386-prologue.exp: continue to stack_align_eax + 7
PASS: gdb.arch/i386-prologue.exp: first backtrace in stack_align_eax
PASS: gdb.arch/i386-prologue.exp: continue in stack_align_eax
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in stack_align_eax
PASS: gdb.arch/i386-prologue.exp: second backtrace in stack_align_eax
PASS: gdb.arch/i386-prologue.exp: saved registers in stack_align_eax
PASS: gdb.arch/i386-prologue.exp: continue to gdb1253
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in gdb1253
PASS: gdb.arch/i386-prologue.exp: backtrace in gdb1253
PASS: gdb.arch/i386-prologue.exp: saved registers in gdb1253
PASS: gdb.arch/i386-prologue.exp: continue to gdb1718
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in gdb1718
PASS: gdb.arch/i386-prologue.exp: backtrace in gdb1718
KFAIL: gdb.arch/i386-prologue.exp: saved registers in gdb1718 (PRMS: gdb/1718)
PASS: gdb.arch/i386-prologue.exp: continue to gdb1338
PASS: gdb.arch/i386-prologue.exp: skip breakpoint in gdb1338
PASS: gdb.arch/i386-prologue.exp: backtrace in gdb1338
PASS: gdb.arch/i386-prologue.exp: saved registers in gdb1338
PASS: gdb.arch/i386-prologue.exp: check jump_at_beginning prologue end
Running ../../../master/gdb/testsuite/gdb.arch/i386-signal.exp ...
PASS: gdb.arch/i386-signal.exp: backtrace 10
PASS: gdb.arch/i386-signal.exp: finish
Running ../../../master/gdb/testsuite/gdb.arch/i386-size-overlap.exp ...
PASS: gdb.arch/i386-size-overlap.exp: run past main
PASS: gdb.arch/i386-size-overlap.exp: backtrace shows the outer function
Running ../../../master/gdb/testsuite/gdb.arch/i386-size.exp ...
PASS: gdb.arch/i386-size.exp: run past main
PASS: gdb.arch/i386-size.exp: backtrace shows no function
PASS: gdb.arch/i386-size.exp: disassemble stops at end of main
Running ../../../master/gdb/testsuite/gdb.arch/i386-sse.exp ...
PASS: gdb.arch/i386-sse.exp: check whether processor supports SSE
PASS: gdb.arch/i386-sse.exp: set first breakpoint in main
PASS: gdb.arch/i386-sse.exp: continue to breakpoint: continue to first breakpoint in main
PASS: gdb.arch/i386-sse.exp: check float contents of %xmm0
PASS: gdb.arch/i386-sse.exp: check int8 contents of %xmm0
PASS: gdb.arch/i386-sse.exp: check float contents of %xmm1
PASS: gdb.arch/i386-sse.exp: check int8 contents of %xmm1
PASS: gdb.arch/i386-sse.exp: check float contents of %xmm2
PASS: gdb.arch/i386-sse.exp: check int8 contents of %xmm2
PASS: gdb.arch/i386-sse.exp: check float contents of %xmm3
PASS: gdb.arch/i386-sse.exp: check int8 contents of %xmm3
PASS: gdb.arch/i386-sse.exp: check float contents of %xmm4
PASS: gdb.arch/i386-sse.exp: check int8 contents of %xmm4
PASS: gdb.arch/i386-sse.exp: check float contents of %xmm5
PASS: gdb.arch/i386-sse.exp: check int8 contents of %xmm5
PASS: gdb.arch/i386-sse.exp: check float contents of %xmm6
PASS: gdb.arch/i386-sse.exp: check int8 contents of %xmm6
PASS: gdb.arch/i386-sse.exp: check float contents of %xmm7
PASS: gdb.arch/i386-sse.exp: check int8 contents of %xmm7
PASS: gdb.arch/i386-sse.exp: set %xmm0
PASS: gdb.arch/i386-sse.exp: set %xmm1
PASS: gdb.arch/i386-sse.exp: set %xmm2
PASS: gdb.arch/i386-sse.exp: set %xmm3
PASS: gdb.arch/i386-sse.exp: set %xmm4
PASS: gdb.arch/i386-sse.exp: set %xmm5
PASS: gdb.arch/i386-sse.exp: set %xmm6
PASS: gdb.arch/i386-sse.exp: set %xmm7
PASS: gdb.arch/i386-sse.exp: set second breakpoint in main
PASS: gdb.arch/i386-sse.exp: continue to breakpoint: continue to second breakpoint in main
PASS: gdb.arch/i386-sse.exp: check contents of data[0]
PASS: gdb.arch/i386-sse.exp: check contents of data[1]
PASS: gdb.arch/i386-sse.exp: check contents of data[2]
PASS: gdb.arch/i386-sse.exp: check contents of data[3]
PASS: gdb.arch/i386-sse.exp: check contents of data[4]
PASS: gdb.arch/i386-sse.exp: check contents of data[5]
PASS: gdb.arch/i386-sse.exp: check contents of data[6]
PASS: gdb.arch/i386-sse.exp: check contents of data[7]
Running ../../../master/gdb/testsuite/gdb.arch/i386-unwind.exp ...
PASS: gdb.arch/i386-unwind.exp: run past gdb1435
PASS: gdb.arch/i386-unwind.exp: backtrace past gdb1435
Running ../../../master/gdb/testsuite/gdb.arch/i386-word.exp ...
PASS: gdb.arch/i386-word.exp: set first breakpoint in main
PASS: gdb.arch/i386-word.exp: continue to breakpoint: continue to first breakpoint in main
PASS: gdb.arch/i386-word.exp: check contents of %ax
PASS: gdb.arch/i386-word.exp: check contents of %bx
PASS: gdb.arch/i386-word.exp: check contents of %cx
PASS: gdb.arch/i386-word.exp: check contents of %dx
PASS: gdb.arch/i386-word.exp: set %ax
PASS: gdb.arch/i386-word.exp: set %bx
PASS: gdb.arch/i386-word.exp: set %cx
PASS: gdb.arch/i386-word.exp: set %dx
PASS: gdb.arch/i386-word.exp: set second breakpoint in main
PASS: gdb.arch/i386-word.exp: continue to breakpoint: continue to second breakpoint in main
PASS: gdb.arch/i386-word.exp: check contents of %ax
PASS: gdb.arch/i386-word.exp: check contents of %bx
PASS: gdb.arch/i386-word.exp: check contents of %cx
PASS: gdb.arch/i386-word.exp: check contents of %dx
Running ../../../master/gdb/testsuite/gdb.arch/ia64-breakpoint-shadow.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/iwmmxt-regs.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/pa-nullify.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/powerpc-aix-prologue.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/powerpc-d128-regs.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/powerpc-prologue.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/ppc-dfp.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/ppc-fp.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/ppc64-atomic-inst.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/spu-info.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/spu-ls.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/system-gcore.exp ...
PASS: gdb.arch/system-gcore.exp: help gcore
PASS: gdb.arch/system-gcore.exp: set breakpoint at terminal_func
PASS: gdb.arch/system-gcore.exp: continue to terminal_func
PASS: gdb.arch/system-gcore.exp: save a corefile
PASS: gdb.arch/system-gcore.exp: re-load generated corefile
PASS: gdb.arch/system-gcore.exp: where in corefile
PASS: gdb.arch/system-gcore.exp: corefile restored general registers
PASS: gdb.arch/system-gcore.exp: corefile restored all registers
PASS: gdb.arch/system-gcore.exp: corefile restored system registers
PASS: gdb.arch/system-gcore.exp: corefile restored extern array
PASS: gdb.arch/system-gcore.exp: corefile restored static array
PASS: gdb.arch/system-gcore.exp: corefile restored un-initialized array
PASS: gdb.arch/system-gcore.exp: corefile restored heap array
PASS: gdb.arch/system-gcore.exp: corefile restored stack array
PASS: gdb.arch/system-gcore.exp: corefile restored backtrace
Running ../../../master/gdb/testsuite/gdb.arch/thumb-prologue.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/thumb-singlestep.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/thumb2-it.exp ...
Running ../../../master/gdb/testsuite/gdb.arch/vsx-regs.exp ...
Running ../../../master/gdb/testsuite/gdb.asm/asm-source.exp ...
PASS: gdb.asm/asm-source.exp: f at main
PASS: gdb.asm/asm-source.exp: next over macro
PASS: gdb.asm/asm-source.exp: step into foo2
PASS: gdb.asm/asm-source.exp: info target
PASS: gdb.asm/asm-source.exp: info symbol
PASS: gdb.asm/asm-source.exp: list
PASS: gdb.asm/asm-source.exp: search
PASS: gdb.asm/asm-source.exp: f in foo2
PASS: gdb.asm/asm-source.exp: n in foo2
PASS: gdb.asm/asm-source.exp: bt ALL in foo2
PASS: gdb.asm/asm-source.exp: bt 2 in foo2
PASS: gdb.asm/asm-source.exp: s 2
PASS: gdb.asm/asm-source.exp: n 2
PASS: gdb.asm/asm-source.exp: bt 3 in foo3
PASS: gdb.asm/asm-source.exp: info source asmsrc1.s
PASS: gdb.asm/asm-source.exp: finish from foo3
PASS: gdb.asm/asm-source.exp: info source asmsrc2.s
PASS: gdb.asm/asm-source.exp: info sources
PASS: gdb.asm/asm-source.exp: info line
PASS: gdb.asm/asm-source.exp: next over foo3
PASS: gdb.asm/asm-source.exp: return from foo2
PASS: gdb.asm/asm-source.exp: look at global variable
PASS: gdb.asm/asm-source.exp: x/i &globalvar
PASS: gdb.asm/asm-source.exp: disassem &globalvar, &globalvar+1
PASS: gdb.asm/asm-source.exp: look at static variable
PASS: gdb.asm/asm-source.exp: x/i &staticvar
PASS: gdb.asm/asm-source.exp: disassem &staticvar, &staticvar+1
PASS: gdb.asm/asm-source.exp: look at static function
Running ../../../master/gdb/testsuite/gdb.base/a2-run.exp ...
PASS: gdb.base/a2-run.exp: run "a2-run" with no args
PASS: gdb.base/a2-run.exp: no spurious messages at program exit
PASS: gdb.base/a2-run.exp: run "a2-run" with arg
PASS: gdb.base/a2-run.exp: run "a2-run" again with same args
PASS: gdb.base/a2-run.exp: set args
PASS: gdb.base/a2-run.exp: run after setting args to nil
PASS: gdb.base/a2-run.exp: set args 6
PASS: gdb.base/a2-run.exp: run "a2-run" again after setting args
PASS: gdb.base/a2-run.exp: run "a2-run" with shell
Running ../../../master/gdb/testsuite/gdb.base/advance.exp ...
PASS: gdb.base/advance.exp: advance line number
PASS: gdb.base/advance.exp: malformed advance
PASS: gdb.base/advance.exp: advance func
PASS: gdb.base/advance.exp: advance function not called by current frame
PASS: gdb.base/advance.exp: set breakpoint at call to func3
PASS: gdb.base/advance.exp: continue to call to func3 in main
PASS: gdb.base/advance.exp: advance function called as param
PASS: gdb.base/advance.exp: advance with no argument
Running ../../../master/gdb/testsuite/gdb.base/all-bin.exp ...
PASS: gdb.base/all-bin.exp: continuing after dummy()
PASS: gdb.base/all-bin.exp: print value of v_int+v_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int+v_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int+v_float
PASS: gdb.base/all-bin.exp: print value of v_int+v_double
PASS: gdb.base/all-bin.exp: print value of v_int<=v_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int<=v_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int<=v_float
PASS: gdb.base/all-bin.exp: print value of v_int<=v_double
PASS: gdb.base/all-bin.exp: set v_char=0
PASS: gdb.base/all-bin.exp: set v_double=0
PASS: gdb.base/all-bin.exp: set v_unsigned_long=0
PASS: gdb.base/all-bin.exp: print value of v_int&&v_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_char
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_short
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_int
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_int
PASS: gdb.base/all-bin.exp: print value of v_int&&v_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_signed_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_unsigned_long
PASS: gdb.base/all-bin.exp: print value of v_int&&v_float
PASS: gdb.base/all-bin.exp: print value of v_int&&v_double
Running ../../../master/gdb/testsuite/gdb.base/annota1.exp ...
PASS: gdb.base/annota1.exp: set height 0
PASS: gdb.base/annota1.exp: breakpoint main
PASS: gdb.base/annota1.exp: annotation set at level 2
PASS: gdb.base/annota1.exp: breakpoint info
PASS: gdb.base/annota1.exp: run until main breakpoint
PASS: gdb.base/annota1.exp: go after array init line
PASS: gdb.base/annota1.exp: print array
PASS: gdb.base/annota1.exp: print non_existent_value
PASS: gdb.base/annota1.exp: break handle_USR1
PASS: gdb.base/annota1.exp: break printf
PASS: gdb.base/annota1.exp: continue to printf
PASS: gdb.base/annota1.exp: backtrace from shlibrary
PASS: gdb.base/annota1.exp: send SIGUSR1
PASS: gdb.base/annota1.exp: backtrace @ signal handler
PASS: gdb.base/annota1.exp: delete bp 1
PASS: gdb.base/annota1.exp: delete bp 2
PASS: gdb.base/annota1.exp: delete bp 3
PASS: gdb.base/annota1.exp: break at 28
PASS: gdb.base/annota1.exp: set up display
PASS: gdb.base/annota1.exp: re-run
PASS: gdb.base/annota1.exp: break at 46
PASS: gdb.base/annota1.exp: ignore 5 4
PASS: gdb.base/annota1.exp: annotate ignore count change
PASS: gdb.base/annota1.exp: breakpoint ignore count
PASS: gdb.base/annota1.exp: signal sent
PASS: gdb.base/annota1.exp: cleanup core file (not dumped)
PASS: gdb.base/annota1.exp: successfully compiled posix threads test case
PASS: gdb.base/annota1.exp: new thread
PASS: gdb.base/annota1.exp: thread switch
Running ../../../master/gdb/testsuite/gdb.base/annota3.exp ...
PASS: gdb.base/annota3.exp: set height 0
PASS: gdb.base/annota3.exp: breakpoint main
PASS: gdb.base/annota3.exp: annotation set at level 3
PASS: gdb.base/annota3.exp: start if construct
PASS: gdb.base/annota3.exp: end if construct
PASS: gdb.base/annota3.exp: breakpoint info
PASS: gdb.base/annota3.exp: run until main breakpoint
PASS: gdb.base/annota3.exp: go after array init line
PASS: gdb.base/annota3.exp: print array
PASS: gdb.base/annota3.exp: print non_existent_value
PASS: gdb.base/annota3.exp: breakpoint handle_USR1
PASS: gdb.base/annota3.exp: breakpoint printf
PASS: gdb.base/annota3.exp: continue to printf
PASS: gdb.base/annota3.exp: backtrace from shlibrary
PASS: gdb.base/annota3.exp: send SIGUSR1
PASS: gdb.base/annota3.exp: backtrace @ signal handler
PASS: gdb.base/annota3.exp: delete bp 1
PASS: gdb.base/annota3.exp: delete bp 2
PASS: gdb.base/annota3.exp: delete bp 3
PASS: gdb.base/annota3.exp: break at 28
PASS: gdb.base/annota3.exp: set up display
PASS: gdb.base/annota3.exp: re-run
PASS: gdb.base/annota3.exp: break at 46
PASS: gdb.base/annota3.exp: ignore 5 4
PASS: gdb.base/annota3.exp: annotate ignore count change
PASS: gdb.base/annota3.exp: next to exit loop
PASS: gdb.base/annota3.exp: breakpoint ignore count
PASS: gdb.base/annota3.exp: signal sent
PASS: gdb.base/annota3.exp: cleanup core file (not dumped)
Running ../../../master/gdb/testsuite/gdb.base/anon.exp ...
PASS: gdb.base/anon.exp: set breakpoint in anon.c
PASS: gdb.base/anon.exp: continue to breakpoint: continue to breakpoint in anon.c
PASS: gdb.base/anon.exp: print val.data.six
Running ../../../master/gdb/testsuite/gdb.base/args.exp ...
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for basic
PASS: gdb.base/args.exp: argc for basic
PASS: gdb.base/args.exp: argv[1] for basic
PASS: gdb.base/args.exp: argv[2] for basic
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one empty
PASS: gdb.base/args.exp: argc for one empty
PASS: gdb.base/args.exp: argv[1] for one empty
PASS: gdb.base/args.exp: argv[2] for one empty
PASS: gdb.base/args.exp: argv[3] for one empty
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two empty
PASS: gdb.base/args.exp: argc for two empty
PASS: gdb.base/args.exp: argv[1] for two empty
PASS: gdb.base/args.exp: argv[2] for two empty
PASS: gdb.base/args.exp: argv[3] for two empty
PASS: gdb.base/args.exp: argv[4] for two empty
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one empty (with single quotes)
PASS: gdb.base/args.exp: argc for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[1] for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[2] for one empty (with single quotes)
PASS: gdb.base/args.exp: argv[3] for one empty (with single quotes)
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two empty (with single quotes)
PASS: gdb.base/args.exp: argc for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[1] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[2] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[3] for two empty (with single quotes)
PASS: gdb.base/args.exp: argv[4] for two empty (with single quotes)
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for one newline
PASS: gdb.base/args.exp: argc for one newline
PASS: gdb.base/args.exp: argv[1] for one newline
PASS: gdb.base/args.exp: argv[2] for one newline
PASS: gdb.base/args.exp: argv[3] for one newline
PASS: gdb.base/args.exp: continue to breakpoint: breakpoint for two newlines
PASS: gdb.base/args.exp: argc for two newlines
PASS: gdb.base/args.exp: argv[1] for two newlines
PASS: gdb.base/args.exp: argv[2] for two newlines
PASS: gdb.base/args.exp: argv[3] for two newlines
PASS: gdb.base/args.exp: argv[4] for two newlines
Running ../../../master/gdb/testsuite/gdb.base/arithmet.exp ...
PASS: gdb.base/arithmet.exp: set variable x=14
PASS: gdb.base/arithmet.exp: set variable y=2
PASS: gdb.base/arithmet.exp: set variable z=2
PASS: gdb.base/arithmet.exp: set variable w=3
PASS: gdb.base/arithmet.exp: print x
PASS: gdb.base/arithmet.exp: print y
PASS: gdb.base/arithmet.exp: print z
PASS: gdb.base/arithmet.exp: print w
PASS: gdb.base/arithmet.exp: print x+y
PASS: gdb.base/arithmet.exp: print x-y
PASS: gdb.base/arithmet.exp: print x*y
PASS: gdb.base/arithmet.exp: print x/y
PASS: gdb.base/arithmet.exp: print x%y
PASS: gdb.base/arithmet.exp: print x+y+z
PASS: gdb.base/arithmet.exp: print x-y-z
PASS: gdb.base/arithmet.exp: print x*y*z
PASS: gdb.base/arithmet.exp: print x/y/z
PASS: gdb.base/arithmet.exp: print x%y%z
PASS: gdb.base/arithmet.exp: set variable x=10
PASS: gdb.base/arithmet.exp: set variable y=4
PASS: gdb.base/arithmet.exp: print x+y-z
PASS: gdb.base/arithmet.exp: print x+y*z
PASS: gdb.base/arithmet.exp: print x+y%w
PASS: gdb.base/arithmet.exp: print x+y/w
PASS: gdb.base/arithmet.exp: print x-y*z
PASS: gdb.base/arithmet.exp: print x-y%z
PASS: gdb.base/arithmet.exp: print x-y/z
PASS: gdb.base/arithmet.exp: print x*y/z
PASS: gdb.base/arithmet.exp: print x*y%w
PASS: gdb.base/arithmet.exp: print x/y%w
PASS: gdb.base/arithmet.exp: print x-(y+w)
PASS: gdb.base/arithmet.exp: print x/(y*w)
PASS: gdb.base/arithmet.exp: print x-(y/w)
PASS: gdb.base/arithmet.exp: print (x+y)*w
Running ../../../master/gdb/testsuite/gdb.base/arrayidx.exp ...
PASS: gdb.base/arrayidx.exp: Set print array-indexes to off
PASS: gdb.base/arrayidx.exp: Print array with array-indexes off
PASS: gdb.base/arrayidx.exp: Set print array-indexes to on
PASS: gdb.base/arrayidx.exp: Print array with array-indexes on
Running ../../../master/gdb/testsuite/gdb.base/assign.exp ...
PASS: gdb.base/assign.exp: continuing after dummy()
PASS: gdb.base/assign.exp: v_int=57
PASS: gdb.base/assign.exp: set v_int to 6
PASS: gdb.base/assign.exp: v_int+=57
PASS: gdb.base/assign.exp: set v_int to 6 (2)
PASS: gdb.base/assign.exp: v_int-=57
PASS: gdb.base/assign.exp: set v_int to 6 (3)
PASS: gdb.base/assign.exp: v_int*=5
PASS: gdb.base/assign.exp: set v_int to 6 (4)
PASS: gdb.base/assign.exp: v_int/=4
PASS: gdb.base/assign.exp: set v_int to 6 (5)
PASS: gdb.base/assign.exp: v_int%=4
PASS: gdb.base/assign.exp: set v_int to 6 (6)
PASS: gdb.base/assign.exp: v_int+=char
PASS: gdb.base/assign.exp: set v_int to 6 (7)
PASS: gdb.base/assign.exp: v_int+=signed_char
PASS: gdb.base/assign.exp: set v_int to 6 (8)
PASS: gdb.base/assign.exp: v_int+=unsigned_char
PASS: gdb.base/assign.exp: set v_int to 6 (9)
PASS: gdb.base/assign.exp: v_int+=short
PASS: gdb.base/assign.exp: set v_int to 6 (10)
PASS: gdb.base/assign.exp: v_int+=signed_short
PASS: gdb.base/assign.exp: set v_int to 6 (11)
PASS: gdb.base/assign.exp: v_int=+unsigned_short
PASS: gdb.base/assign.exp: set v_int to 6 (12)
PASS: gdb.base/assign.exp: v_int+=signed_int
PASS: gdb.base/assign.exp: set v_int to 6 (13)
PASS: gdb.base/assign.exp: v_int+=unsigned_int
PASS: gdb.base/assign.exp: set v_int to 6 (14)
PASS: gdb.base/assign.exp: v_int+=long
PASS: gdb.base/assign.exp: set v_int to 6 (15)
PASS: gdb.base/assign.exp: v_int+=signed_long
PASS: gdb.base/assign.exp: set v_int to 6 (16)
PASS: gdb.base/assign.exp: v_int+=unsigned_long
PASS: gdb.base/assign.exp: set v_int to 6 (17)
PASS: gdb.base/assign.exp: v_int+=v_float
PASS: gdb.base/assign.exp: set v_int to 6 (18)
PASS: gdb.base/assign.exp: v_int+=double
Running ../../../master/gdb/testsuite/gdb.base/async-shell.exp ...
PASS: gdb.base/async-shell.exp: set target-async on
PASS: gdb.base/async-shell.exp: set non-stop on
PASS: gdb.base/async-shell.exp: run &
PASS: gdb.base/async-shell.exp: shell echo foo
PASS: gdb.base/async-shell.exp: interrupt
PASS: gdb.base/async-shell.exp: process stopped
Running ../../../master/gdb/testsuite/gdb.base/async.exp ...
Running ../../../master/gdb/testsuite/gdb.base/attach-pie-misread.exp ...
PASS: gdb.base/attach-pie-misread.exp: ldd attach-pie-misread
PASS: gdb.base/attach-pie-misread.exp: ldd attach-pie-misread output contains libs
PASS: gdb.base/attach-pie-misread.exp: copy ld-2.13.so to ld-linux.so.2
PASS: gdb.base/attach-pie-misread.exp: copy libm-2.13.so to libm.so.6
PASS: gdb.base/attach-pie-misread.exp: copy libc-2.13.so to libc.so.6
PASS: gdb.base/attach-pie-misread.exp: readelf initial scan
PASS: gdb.base/attach-pie-misread.exp: generate stub
PASS: gdb.base/attach-pie-misread.exp: ldd attach-pie-misread
PASS: gdb.base/attach-pie-misread.exp: ldd attach-pie-misread output contains libs
PASS: gdb.base/attach-pie-misread.exp: copy ld-2.13.so to ld-linux.so.2
PASS: gdb.base/attach-pie-misread.exp: copy libm-2.13.so to libm.so.6
PASS: gdb.base/attach-pie-misread.exp: copy libc-2.13.so to libc.so.6
PASS: gdb.base/attach-pie-misread.exp: readelf rebuilt with stub_size
PASS: gdb.base/attach-pie-misread.exp: unprelink libc.so.6 pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/attach-pie-misread.exp: prelink libc.so.6 (missing /usr/sbin/prelink)
Running ../../../master/gdb/testsuite/gdb.base/attach.exp ...
PASS: gdb.base/attach.exp: attach to nonsense is prohibited
PASS: gdb.base/attach.exp: attach to digits-starting nonsense is prohibited
PASS: gdb.base/attach.exp: attach to nonexistent process is prohibited
PASS: gdb.base/attach.exp: set file, before attach1 (re-read)
PASS: gdb.base/attach.exp: attach1, after setting file
PASS: gdb.base/attach.exp: after attach1, print should_exit
PASS: gdb.base/attach.exp: attach1 detach
PASS: gdb.base/attach.exp: attach1, purging symbols after detach
PASS: gdb.base/attach.exp: set file, before attach2
PASS: gdb.base/attach.exp: after attach2, set should_exit
PASS: gdb.base/attach.exp: after attach2, set tbreak postloop
PASS: gdb.base/attach.exp: after attach2, reach tbreak postloop
PASS: gdb.base/attach.exp: continue until exit at after attach2, exit
PASS: gdb.base/attach.exp: set source path
PASS: gdb.base/attach.exp: cd away from process working directory
PASS: gdb.base/attach.exp: before attach3, flush symbols
PASS: gdb.base/attach.exp: before attach3, flush exec
PASS: gdb.base/attach.exp: attach when process' a.out not in cwd
PASS: gdb.base/attach.exp: after attach3, exit
PASS: gdb.base/attach.exp: force switch to gdb64, if necessary
PASS: gdb.base/attach.exp: attach call
PASS: gdb.base/attach.exp: info other register
PASS: gdb.base/attach.exp: p should_exit = 1
PASS: gdb.base/attach.exp: continue until exit
Running ../../../master/gdb/testsuite/gdb.base/auxv.exp ...
PASS: gdb.base/auxv.exp: set print sevenbit-strings
PASS: gdb.base/auxv.exp: set width 0
PASS: gdb.base/auxv.exp: cd to temporary directory for core dumps
PASS: gdb.base/auxv.exp: tbreak 64
PASS: gdb.base/auxv.exp: continue
PASS: gdb.base/auxv.exp: info auxv on live process
PASS: gdb.base/auxv.exp: gcore
PASS: gdb.base/auxv.exp: continue
PASS: gdb.base/auxv.exp: continue
WARNING: can't generate a core file - core tests suppressed - check ulimit -c
FAIL: gdb.base/auxv.exp: generate native core dump
UNSUPPORTED: gdb.base/auxv.exp: info auxv on native core dump
UNSUPPORTED: gdb.base/auxv.exp: matching auxv data from live and core
PASS: gdb.base/auxv.exp: load core file for info auxv on gcore-created dump
PASS: gdb.base/auxv.exp: info auxv on gcore-created dump
PASS: gdb.base/auxv.exp: matching auxv data from live and gcore
Running ../../../master/gdb/testsuite/gdb.base/bang.exp ...
PASS: gdb.base/bang.exp: run program
Running ../../../master/gdb/testsuite/gdb.base/bfp-test.exp ...
PASS: gdb.base/bfp-test.exp: continue to breakpoint: return
PASS: gdb.base/bfp-test.exp: The original value of b32 is 1.5
PASS: gdb.base/bfp-test.exp: The original value of b64 is 2.25
PASS: gdb.base/bfp-test.exp: The original value of b128 is 3.375
PASS: gdb.base/bfp-test.exp: Try to change b32 to -1.5 with 'print b32=-1.5f'
PASS: gdb.base/bfp-test.exp: Try to change b64 to -2.25 with 'print b64=-2.25f'
PASS: gdb.base/bfp-test.exp: Try to change b128 to -3.375 with 'print b128=-3.375l'
PASS: gdb.base/bfp-test.exp: set variable b32 = 10.5f
PASS: gdb.base/bfp-test.exp: set variable b64 = 20.25f
PASS: gdb.base/bfp-test.exp: set variable b128 = 30.375l
PASS: gdb.base/bfp-test.exp: The value of b32 is changed to 10.5
PASS: gdb.base/bfp-test.exp: The value of b64 is changed to 20.25
PASS: gdb.base/bfp-test.exp: The value of b128 is changed to 30.375
PASS: gdb.base/bfp-test.exp: set variable b32 = 100.5a
PASS: gdb.base/bfp-test.exp: set variable b64 = 200.25x
PASS: gdb.base/bfp-test.exp: set variable b128 = 300.375fl
PASS: gdb.base/bfp-test.exp: set variable b128 = 300.375fff
Running ../../../master/gdb/testsuite/gdb.base/bigcore.exp ...
PASS: gdb.base/bigcore.exp: set print sevenbit-strings
PASS: gdb.base/bigcore.exp: set width 0
PASS: gdb.base/bigcore.exp: tbreak 269
PASS: gdb.base/bigcore.exp: continue
PASS: gdb.base/bigcore.exp: next
PASS: gdb.base/bigcore.exp: extract next heap
PASS: gdb.base/bigcore.exp: extract prev heap
PASS: gdb.base/bigcore.exp: save heap size
PASS: gdb.base/bigcore.exp: grab pid
PASS: gdb.base/bigcore.exp: signal SIGABRT
PASS: gdb.base/bigcore.exp: check core size
PASS: gdb.base/bigcore.exp: load corefile
PASS: gdb.base/bigcore.exp: check next heap
PASS: gdb.base/bigcore.exp: check prev heap
Running ../../../master/gdb/testsuite/gdb.base/bitfields.exp ...
PASS: gdb.base/bitfields.exp: set print sevenbit-strings
PASS: gdb.base/bitfields.exp: print flags
PASS: gdb.base/bitfields.exp: continuing to break1 #1
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s1)
PASS: gdb.base/bitfields.exp: continuing to break1 #2
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u1)
PASS: gdb.base/bitfields.exp: continuing to break1 #3
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s2)
PASS: gdb.base/bitfields.exp: continuing to break1 #4
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u2)
PASS: gdb.base/bitfields.exp: continuing to break1 #5
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s3)
PASS: gdb.base/bitfields.exp: continuing to break1 #6
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u3)
PASS: gdb.base/bitfields.exp: continuing to break1 #7
PASS: gdb.base/bitfields.exp: bitfield uniqueness (s9)
PASS: gdb.base/bitfields.exp: continuing to break1 #8
PASS: gdb.base/bitfields.exp: bitfield uniqueness (u9)
PASS: gdb.base/bitfields.exp: continuing to break1 #9
PASS: gdb.base/bitfields.exp: bitfield uniqueness (sc)
PASS: gdb.base/bitfields.exp: bitfield containment #1
PASS: gdb.base/bitfields.exp: continuing to break2
PASS: gdb.base/bitfields.exp: bitfield containment #2
PASS: gdb.base/bitfields.exp: unsigned bitfield ranges
PASS: gdb.base/bitfields.exp: signed bitfields, max positive values
PASS: gdb.base/bitfields.exp: continuing to break4 #1
PASS: gdb.base/bitfields.exp: determining signed-ness of bitfields
PASS: gdb.base/bitfields.exp: signed bitfields, max negative values
PASS: gdb.base/bitfields.exp: continuing to break4 #2
PASS: gdb.base/bitfields.exp: signed bitfields with -1
PASS: gdb.base/bitfields.exp: continuing to break5
PASS: gdb.base/bitfields.exp: distinct bitfields in container
PASS: gdb.base/bitfields.exp: print container.one.u3
PASS: gdb.base/bitfields.exp: print container.two.u3
Running ../../../master/gdb/testsuite/gdb.base/bitfields2.exp ...
PASS: gdb.base/bitfields2.exp: set print sevenbit-strings
PASS: gdb.base/bitfields2.exp: break tester prior to break1
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break1
PASS: gdb.base/bitfields2.exp: continuing to break1 #0
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s1 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #1
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u1 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #2
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s2 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #3
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u2 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #4
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.s3 = 1
PASS: gdb.base/bitfields2.exp: continuing to break1 #5
PASS: gdb.base/bitfields2.exp: bitfield uniqueness; flags.u3 = 1
PASS: gdb.base/bitfields2.exp: break tester prior to break2
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break2
PASS: gdb.base/bitfields2.exp: continuing to break2 #0
PASS: gdb.base/bitfields2.exp: bitfield containment; flags.u1, flags.u3, and flags.s3 to all 1s
PASS: gdb.base/bitfields2.exp: continuing to break2 #1
PASS: gdb.base/bitfields2.exp: bitfield containment; flags.u2, flags.s1, flags.s2 to all 1s
PASS: gdb.base/bitfields2.exp: break tester prior to break3
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break3
PASS: gdb.base/bitfields2.exp: continuing to break3 #0
PASS: gdb.base/bitfields2.exp: maximum unsigned bitfield values
PASS: gdb.base/bitfields2.exp: break tester prior to break4
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break4
PASS: gdb.base/bitfields2.exp: continuing to break4 #0
PASS: gdb.base/bitfields2.exp: maximum signed bitfield values
PASS: gdb.base/bitfields2.exp: continuing to break4 #1
PASS: gdb.base/bitfields2.exp: determining signed-ness of bitfields
PASS: gdb.base/bitfields2.exp: most negative signed bitfield values
PASS: gdb.base/bitfields2.exp: continuing to break4 #2
PASS: gdb.base/bitfields2.exp: signed bitfields containing -1
PASS: gdb.base/bitfields2.exp: break tester prior to break5
PASS: gdb.base/bitfields2.exp: continuing to tester prior to break5
PASS: gdb.base/bitfields2.exp: continuing to break5 #0
PASS: gdb.base/bitfields2.exp: set long long unsigned bitfield
PASS: gdb.base/bitfields2.exp: set long long signed bitfield positive
PASS: gdb.base/bitfields2.exp: long long bitfield values after set
PASS: gdb.base/bitfields2.exp: set long long signed bitfield negative
PASS: gdb.base/bitfields2.exp: long long bitfield values after set negative
Running ../../../master/gdb/testsuite/gdb.base/bitops.exp ...
PASS: gdb.base/bitops.exp: print value of !1
PASS: gdb.base/bitops.exp: print value of !0
PASS: gdb.base/bitops.exp: print value of !100
PASS: gdb.base/bitops.exp: print value of !1000
PASS: gdb.base/bitops.exp: print value of !10
PASS: gdb.base/bitops.exp: print value of !2
PASS: gdb.base/bitops.exp: print value of 10 | 5
PASS: gdb.base/bitops.exp: print value of 10 & 5
PASS: gdb.base/bitops.exp: print value of 10 ^ 5
PASS: gdb.base/bitops.exp: print value of -!0
PASS: gdb.base/bitops.exp: print value of ~-!0
PASS: gdb.base/bitops.exp: print value of 3 * 2 / 4.0 * 2.0
PASS: gdb.base/bitops.exp: print value of 8 << 2 >> 4
PASS: gdb.base/bitops.exp: print value of -1 < 0 > 1
PASS: gdb.base/bitops.exp: print value of 15 ^ 10 ^ 5 ^ 7
PASS: gdb.base/bitops.exp: print value of 3.5 < 4.0
PASS: gdb.base/bitops.exp: print value of 3.5 < -4.0
PASS: gdb.base/bitops.exp: print value of 2 > -3
PASS: gdb.base/bitops.exp: print value of -3>4
PASS: gdb.base/bitops.exp: print value of (-3 > 4)
PASS: gdb.base/bitops.exp: print value of 3>=2.5
PASS: gdb.base/bitops.exp: print value of 3>=4.5
PASS: gdb.base/bitops.exp: print value of 3==3.0
PASS: gdb.base/bitops.exp: print value of 3==4.0
PASS: gdb.base/bitops.exp: print value of 3!=3.0
PASS: gdb.base/bitops.exp: print value of 3!=5.0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8 > 128 >>1 +2 *2
PASS: gdb.base/bitops.exp: print value of 1.0 || 0
PASS: gdb.base/bitops.exp: print value of 0.0 || 1.0
PASS: gdb.base/bitops.exp: print value of 0.0 || 0
PASS: gdb.base/bitops.exp: print value of 0 || 1 && 0 | 0 ^ 0 == 8
PASS: gdb.base/bitops.exp: print value of 0 == 8 > 128 >> 1 + 2 * 2
Running ../../../master/gdb/testsuite/gdb.base/break-always.exp ...
PASS: gdb.base/break-always.exp: set breakpoint always-inserted on
PASS: gdb.base/break-always.exp: confirm breakpoint always-inserted
PASS: gdb.base/break-always.exp: set breakpoint on bar
PASS: gdb.base/break-always.exp: continue to breakpoint: bar
Running ../../../master/gdb/testsuite/gdb.base/break-entry.exp ...
PASS: gdb.base/break-entry.exp: info files
PASS: gdb.base/break-entry.exp: p/x $pc
PASS: gdb.base/break-entry.exp: continue to breakpoint: main
Running ../../../master/gdb/testsuite/gdb.base/break-interp.exp ...
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: copy ld-2.13.so to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: unprelink break-interp-LDprelinkNOdebugNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: strip break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: unprelink break-interp-LDprelinkNOdebugNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: set args OBJDIR/gdb.base/break-interp-test
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: symbol-less: ld.so exit
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: copy break-interp-LDprelinkNOdebugNO to break-interp-LDprelinkNOdebugNO-saved
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: ldd break-interp-BINprelinkNOdebugNOpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: ldd break-interp-BINprelinkNOdebugNOpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: unprelink break-interp-BINprelinkNOdebugNOpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: info files
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: break at entry point
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieNO: symbol-less: entry point reached
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: ldd break-interp-BINprelinkNOdebugNOpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: ldd break-interp-BINprelinkNOdebugNOpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: unprelink break-interp-BINprelinkNOdebugNOpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: info files
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: break at entry point
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieYES: symbol-less: entry point reached
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: ldd break-interp-BINprelinkNOdebugNOpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: ldd break-interp-BINprelinkNOdebugNOpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: prelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugNOpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: ldd break-interp-BINprelinkNOdebugINpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: ldd break-interp-BINprelinkNOdebugINpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: unprelink break-interp-BINprelinkNOdebugINpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: ldd break-interp-BINprelinkNOdebugINpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: ldd break-interp-BINprelinkNOdebugINpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: unprelink break-interp-BINprelinkNOdebugINpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: ldd break-interp-BINprelinkNOdebugINpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: ldd break-interp-BINprelinkNOdebugINpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: prelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugINpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: ldd break-interp-BINprelinkNOdebugSEPpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: ldd break-interp-BINprelinkNOdebugSEPpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: unprelink break-interp-BINprelinkNOdebugSEPpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: ldd break-interp-BINprelinkNOdebugSEPpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: ldd break-interp-BINprelinkNOdebugSEPpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: unprelink break-interp-BINprelinkNOdebugSEPpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: ldd break-interp-BINprelinkNOdebugSEPpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: ldd break-interp-BINprelinkNOdebugSEPpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: prelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkNOdebugSEPpieATTACH: copy break-interp-LDprelinkNOdebugNO-saved to break-interp-LDprelinkNOdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: ldd break-interp-BINprelinkYESdebugNOpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: ldd break-interp-BINprelinkYESdebugNOpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: unprelink break-interp-BINprelinkYESdebugNOpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieYES: prelink break-interp-BINprelinkYESdebugNOpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: ldd break-interp-BINprelinkYESdebugNOpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: ldd break-interp-BINprelinkYESdebugNOpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: unprelink break-interp-BINprelinkYESdebugNOpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugNOpieATTACH: prelink break-interp-BINprelinkYESdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: ldd break-interp-BINprelinkYESdebugINpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: ldd break-interp-BINprelinkYESdebugINpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: unprelink break-interp-BINprelinkYESdebugINpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieYES: prelink break-interp-BINprelinkYESdebugINpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: ldd break-interp-BINprelinkYESdebugINpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: ldd break-interp-BINprelinkYESdebugINpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: unprelink break-interp-BINprelinkYESdebugINpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugINpieATTACH: prelink break-interp-BINprelinkYESdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: ldd break-interp-BINprelinkYESdebugSEPpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: ldd break-interp-BINprelinkYESdebugSEPpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: unprelink break-interp-BINprelinkYESdebugSEPpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieYES: prelink break-interp-BINprelinkYESdebugSEPpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: ldd break-interp-BINprelinkYESdebugSEPpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: ldd break-interp-BINprelinkYESdebugSEPpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: unprelink break-interp-BINprelinkYESdebugSEPpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugNO: BINprelinkYESdebugSEPpieATTACH: prelink break-interp-BINprelinkYESdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: copy ld-2.13.so to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: unprelink break-interp-LDprelinkNOdebugIN (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: set args OBJDIR/gdb.base/break-interp-test
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: copy break-interp-LDprelinkNOdebugIN to break-interp-LDprelinkNOdebugIN-saved
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: ldd break-interp-BINprelinkNOdebugNOpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: ldd break-interp-BINprelinkNOdebugNOpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: unprelink break-interp-BINprelinkNOdebugNOpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: info files
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: break at entry point
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieNO: symbol-less: entry point reached
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: ldd break-interp-BINprelinkNOdebugNOpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: ldd break-interp-BINprelinkNOdebugNOpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: unprelink break-interp-BINprelinkNOdebugNOpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: load
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: info files
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: break at entry point
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieYES: symbol-less: entry point reached
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: ldd break-interp-BINprelinkNOdebugNOpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: ldd break-interp-BINprelinkNOdebugNOpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: prelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: unprelink break-interp-BINprelinkNOdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugNOpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: ldd break-interp-BINprelinkNOdebugINpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: ldd break-interp-BINprelinkNOdebugINpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: unprelink break-interp-BINprelinkNOdebugINpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: ldd break-interp-BINprelinkNOdebugINpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: ldd break-interp-BINprelinkNOdebugINpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: unprelink break-interp-BINprelinkNOdebugINpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: ldd break-interp-BINprelinkNOdebugINpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: ldd break-interp-BINprelinkNOdebugINpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: prelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: unprelink break-interp-BINprelinkNOdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugINpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: ldd break-interp-BINprelinkNOdebugSEPpieNO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: ldd break-interp-BINprelinkNOdebugSEPpieNO output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: unprelink break-interp-BINprelinkNOdebugSEPpieNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieNO: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: ldd break-interp-BINprelinkNOdebugSEPpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: ldd break-interp-BINprelinkNOdebugSEPpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: unprelink break-interp-BINprelinkNOdebugSEPpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: set debug-file-directory
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: set disable-randomization off
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: set args segv
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: dl bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-main: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-libfunc: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: kill
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 1
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: reach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: reach-_dl_debug_state: set stop-on-solib-events 0
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: set debug-file-directory for core
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: core loaded
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: core: core main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieYES: attach: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: ldd break-interp-BINprelinkNOdebugSEPpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: ldd break-interp-BINprelinkNOdebugSEPpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: sleep function started
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: prelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: unprelink break-interp-BINprelinkNOdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: set verbose on
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: file
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: seen displacement message as NONZERO
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach final prompt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: attach-relinkNO: attach main bt
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkNOdebugSEPpieATTACH: copy break-interp-LDprelinkNOdebugIN-saved to break-interp-LDprelinkNOdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: ldd break-interp-BINprelinkYESdebugNOpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: ldd break-interp-BINprelinkYESdebugNOpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: unprelink break-interp-BINprelinkYESdebugNOpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieYES: prelink break-interp-BINprelinkYESdebugNOpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: ldd break-interp-BINprelinkYESdebugNOpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: ldd break-interp-BINprelinkYESdebugNOpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: unprelink break-interp-BINprelinkYESdebugNOpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugNOpieATTACH: prelink break-interp-BINprelinkYESdebugNOpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: ldd break-interp-BINprelinkYESdebugINpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: ldd break-interp-BINprelinkYESdebugINpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: unprelink break-interp-BINprelinkYESdebugINpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieYES: prelink break-interp-BINprelinkYESdebugINpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: ldd break-interp-BINprelinkYESdebugINpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: ldd break-interp-BINprelinkYESdebugINpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: unprelink break-interp-BINprelinkYESdebugINpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugINpieATTACH: prelink break-interp-BINprelinkYESdebugINpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: ldd break-interp-BINprelinkYESdebugSEPpieYES
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: ldd break-interp-BINprelinkYESdebugSEPpieYES output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: unprelink break-interp-BINprelinkYESdebugSEPpieYES pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieYES: prelink break-interp-BINprelinkYESdebugSEPpieYES (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: ldd break-interp-BINprelinkYESdebugSEPpieATTACH
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: ldd break-interp-BINprelinkYESdebugSEPpieATTACH output contains libs
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: copy break-interp.so to break-interp.so
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: copy libm-2.13.so to libm.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: copy libc-2.13.so to libc.so.6
PASS: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: unprelink break-interp-BINprelinkYESdebugSEPpieATTACH pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkNOdebugIN: BINprelinkYESdebugSEPpieATTACH: prelink break-interp-BINprelinkYESdebugSEPpieATTACH (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugNO: copy ld-2.13.so to break-interp-LDprelinkYESdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugNO: unprelink break-interp-LDprelinkYESdebugNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugNO: strip break-interp-LDprelinkYESdebugNO
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugNO: unprelink break-interp-LDprelinkYESdebugNO pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkYESdebugNO: prelink break-interp-LDprelinkYESdebugNO (missing /usr/sbin/prelink)
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugIN: copy ld-2.13.so to break-interp-LDprelinkYESdebugIN
PASS: gdb.base/break-interp.exp: LDprelinkYESdebugIN: unprelink break-interp-LDprelinkYESdebugIN pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/break-interp.exp: LDprelinkYESdebugIN: prelink break-interp-LDprelinkYESdebugIN (missing /usr/sbin/prelink)
Running ../../../master/gdb/testsuite/gdb.base/break-on-linker-gcd-function.exp ...
PASS: gdb.base/break-on-linker-gcd-function.exp: b 25
Running ../../../master/gdb/testsuite/gdb.base/break.exp ...
PASS: gdb.base/break.exp: Delete all breakpoints when none
PASS: gdb.base/break.exp: breakpoint function
PASS: gdb.base/break.exp: breakpoint quoted function
PASS: gdb.base/break.exp: breakpoint function in file
PASS: gdb.base/break.exp: use `list' to establish default source file
PASS: gdb.base/break.exp: breakpoint line number
PASS: gdb.base/break.exp: breakpoint duplicate
PASS: gdb.base/break.exp: breakpoint line number in file
PASS: gdb.base/break.exp: breakpoint at start of multi line if conditional
PASS: gdb.base/break.exp: breakpoint at start of multi line while conditional
PASS: gdb.base/break.exp: breakpoint info
PASS: gdb.base/break.exp: info break 2 4 6
PASS: gdb.base/break.exp: info break 3-5
PASS: gdb.base/break.exp: disable using history values
PASS: gdb.base/break.exp: check disable with history values
PASS: gdb.base/break.exp: disable with convenience values
PASS: gdb.base/break.exp: check disable with convenience values
PASS: gdb.base/break.exp: disable non-existent breakpoint 10
PASS: gdb.base/break.exp: set $baz 1.234
PASS: gdb.base/break.exp: disable with non-integer convenience var
PASS: gdb.base/break.exp: disable with non-existent convenience var
PASS: gdb.base/break.exp: disable with non-existent history value
PASS: gdb.base/break.exp: disable with badly formed history value
PASS: gdb.base/break.exp: run until function breakpoint
PASS: gdb.base/break.exp: run until breakpoint set at a line number
PASS: gdb.base/break.exp: run until file:function(6) breakpoint
PASS: gdb.base/break.exp: run until file:function(5) breakpoint
PASS: gdb.base/break.exp: run until file:function(4) breakpoint
PASS: gdb.base/break.exp: run until file:function(3) breakpoint
PASS: gdb.base/break.exp: run until file:function(2) breakpoint
PASS: gdb.base/break.exp: run until file:function(1) breakpoint
PASS: gdb.base/break.exp: run until quoted breakpoint
PASS: gdb.base/break.exp: run until file:linenum breakpoint
PASS: gdb.base/break.exp: breakpoint offset +1
PASS: gdb.base/break.exp: step onto breakpoint
PASS: gdb.base/break.exp: setting breakpoint at }
PASS: gdb.base/break.exp: continue to breakpoint at }
PASS: gdb.base/break.exp: Temporary breakpoint function
PASS: gdb.base/break.exp: Temporary breakpoint function in file
PASS: gdb.base/break.exp: Temporary breakpoint line number #1
PASS: gdb.base/break.exp: Temporary breakpoint line number #2
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #1
PASS: gdb.base/break.exp: Temporary breakpoint line number in file #2
PASS: gdb.base/break.exp: Temporary breakpoint info
PASS: gdb.base/break.exp: catch requires an event name
PASS: gdb.base/break.exp: set catch fork, never expected to trigger
PASS: gdb.base/break.exp: set catch vfork, never expected to trigger
PASS: gdb.base/break.exp: set catch exec, never expected to trigger
PASS: gdb.base/break.exp: break on non-existent source line
PASS: gdb.base/break.exp: until bp_location1
PASS: gdb.base/break.exp: break on default location, 1st time
PASS: gdb.base/break.exp: break on default location, 2nd time
PASS: gdb.base/break.exp: break on default location, 3rd time
PASS: gdb.base/break.exp: break on default location, 4th time
PASS: gdb.base/break.exp: set to-be-silent break bp_location1
PASS: gdb.base/break.exp: set silent break bp_location1
PASS: gdb.base/break.exp: info silent break bp_location1
PASS: gdb.base/break.exp: hit silent break bp_location1
PASS: gdb.base/break.exp: stopped for silent break bp_location1
PASS: gdb.base/break.exp: thread-specific breakpoint on non-existent thread disallowed
PASS: gdb.base/break.exp: thread-specific breakpoint on bogus thread ID disallowed
PASS: gdb.base/break.exp: breakpoint with trailing garbage disallowed
PASS: gdb.base/break.exp: step over breakpoint
PASS: gdb.base/break.exp: clear line has no breakpoint disallowed
PASS: gdb.base/break.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/break.exp: break marker3 #1
PASS: gdb.base/break.exp: break marker3 #2
PASS: gdb.base/break.exp: clear marker3
PASS: gdb.base/break.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/break.exp: set breakpoint via convenience variable
PASS: gdb.base/break.exp: set convenience variable $foo to 81.5
PASS: gdb.base/break.exp: set breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/break.exp: set breakpoint on to-be-called function
PASS: gdb.base/break.exp: hit breakpoint on called function
PASS: gdb.base/break.exp: backtrace while in called function
PASS: gdb.base/break.exp: finish from called function
PASS: gdb.base/break.exp: finish with arguments disallowed
PASS: gdb.base/break.exp: finish from outermost frame disallowed
PASS: gdb.base/break.exp: kill program
PASS: gdb.base/break.exp: break at factorial
PASS: gdb.base/break.exp: continue to factorial(5)
PASS: gdb.base/break.exp: backtrace from factorial(5)
PASS: gdb.base/break.exp: next to recursive call
PASS: gdb.base/break.exp: next over recursive call
PASS: gdb.base/break.exp: backtrace from factorial(5.1)
PASS: gdb.base/break.exp: continue until exit at recursive next test
PASS: gdb.base/break.exp: breakpoint function, optimized file
PASS: gdb.base/break.exp: breakpoint small function, optimized file
PASS: gdb.base/break.exp: run until function breakpoint, optimized file (code motion)
PASS: gdb.base/break.exp: run until breakpoint set at small function, optimized file
PASS: gdb.base/break.exp: rbreak junk pending setup
PASS: gdb.base/break.exp: rbreak junk set breakpoint
PASS: gdb.base/break.exp: rbreak junk
Running ../../../master/gdb/testsuite/gdb.base/breakpoint-shadow.exp ...
PASS: gdb.base/breakpoint-shadow.exp: set breakpoint always-inserted on
PASS: gdb.base/breakpoint-shadow.exp: show breakpoint always-inserted
PASS: gdb.base/breakpoint-shadow.exp: disassembly without breakpoints
PASS: gdb.base/breakpoint-shadow.exp: First breakpoint placed
PASS: gdb.base/breakpoint-shadow.exp: Second breakpoint placed
PASS: gdb.base/breakpoint-shadow.exp: disassembly with breakpoints
Running ../../../master/gdb/testsuite/gdb.base/call-ar-st.exp ...
PASS: gdb.base/call-ar-st.exp: set print sevenbit-strings
PASS: gdb.base/call-ar-st.exp: set print address off
PASS: gdb.base/call-ar-st.exp: set width 0
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1209
PASS: gdb.base/call-ar-st.exp: run until breakpoint set at a line
PASS: gdb.base/call-ar-st.exp: print print_double_array(double_array)
PASS: gdb.base/call-ar-st.exp: print print_char_array(char_array)
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1216
PASS: gdb.base/call-ar-st.exp: continue to 1216
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1220
PASS: gdb.base/call-ar-st.exp: continuing to breakpoint 1220
PASS: gdb.base/call-ar-st.exp: step inside print_all_arrays
PASS: gdb.base/call-ar-st.exp: next over print_int_array in print-all_arrays
PASS: gdb.base/call-ar-st.exp: print print_double_array(array_d)
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1236
PASS: gdb.base/call-ar-st.exp: continuing to 1236
PASS: gdb.base/call-ar-st.exp: print sum_array_print(10, *list1, *list2, *list3, *list4)
PASS: gdb.base/call-ar-st.exp: next to 1237
PASS: gdb.base/call-ar-st.exp: print print_array_rep(*list1, *list2, *list3)
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1241
PASS: gdb.base/call-ar-st.exp: continue to 1241
PASS: gdb.base/call-ar-st.exp: set breakpoint in sum_array_print
PASS: gdb.base/call-ar-st.exp: set print frame-arguments all
PASS: gdb.base/call-ar-st.exp: check args of sum_array_print
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1281
PASS: gdb.base/call-ar-st.exp: continue to 1281
PASS: gdb.base/call-ar-st.exp: print print_small_structs
PASS: gdb.base/call-ar-st.exp: print compute_with_small_structs(20)
PASS: gdb.base/call-ar-st.exp: print print_ten_doubles
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1286
PASS: gdb.base/call-ar-st.exp: continue to 1286
PASS: gdb.base/call-ar-st.exp: tbreak in print_long_arg_list after stepping into memcpy
PASS: gdb.base/call-ar-st.exp: step into print_long_arg_list
PASS: gdb.base/call-ar-st.exp: print print_small_structs from print_long_arg_list
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1300
PASS: gdb.base/call-ar-st.exp: continue to 1300
PASS: gdb.base/call-ar-st.exp: step into init_bit_flags_combo
PASS: gdb.base/call-ar-st.exp: print print_bit_flags_combo from init_bit_flags_combo
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1305
PASS: gdb.base/call-ar-st.exp: continue to 1305
PASS: gdb.base/call-ar-st.exp: print print_long_arg_list
PASS: gdb.base/call-ar-st.exp: tbreakpoint line 1311
PASS: gdb.base/call-ar-st.exp: continue to 1311
PASS: gdb.base/call-ar-st.exp: print sum_struct_print(10, *struct1, *struct2, *struct3, *struct4)
PASS: gdb.base/call-ar-st.exp: print print_struct_rep(*struct1, *struct2, *struct3)
PASS: gdb.base/call-ar-st.exp: print print_one_large_struct(*list1)
Running ../../../master/gdb/testsuite/gdb.base/call-rt-st.exp ...
PASS: gdb.base/call-rt-st.exp: set print sevenbit-strings
PASS: gdb.base/call-rt-st.exp: set print address off
PASS: gdb.base/call-rt-st.exp: set width 0
PASS: gdb.base/call-rt-st.exp: breakpoint loop_count
PASS: gdb.base/call-rt-st.exp: continue to loop_count
PASS: gdb.base/call-rt-st.exp: finish out from loop_count (line 777)
PASS: gdb.base/call-rt-st.exp: print print_struct_rep(*struct1)
PASS: gdb.base/call-rt-st.exp: print print_one_large_struct(*list1)
PASS: gdb.base/call-rt-st.exp: print print_one_double(*d1)
PASS: gdb.base/call-rt-st.exp: print print_two_floats(*f3)
PASS: gdb.base/call-rt-st.exp: print print_bit_flags_char(*cflags)
PASS: gdb.base/call-rt-st.exp: print print_bit_flags_short(*sflags)
PASS: gdb.base/call-rt-st.exp: print print_bit_flags(*flags)
PASS: gdb.base/call-rt-st.exp: print print_bit_flags_combo(*flags_combo)
PASS: gdb.base/call-rt-st.exp: print print_three_chars(*three_char)
PASS: gdb.base/call-rt-st.exp: print print_five_chars(*five_char)
PASS: gdb.base/call-rt-st.exp: print print_int_char_combo(*int_char_combo)
Running ../../../master/gdb/testsuite/gdb.base/call-sc.exp ...
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tc (char)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tc char
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tc
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tc
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tc
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tc
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tc
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tc
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tc
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tc
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tc
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tc
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tc
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tc
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-ts (short int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-ts short int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-ts
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-ts
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-ts
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-ts
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-ts
PASS: gdb.base/call-sc.exp: return foo; return call-sc-ts
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-ts
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-ts
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-ts
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-ts
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-ts
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-ts
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-ti (int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-ti int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-ti
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-ti
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-ti
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-ti
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-ti
PASS: gdb.base/call-sc.exp: return foo; return call-sc-ti
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-ti
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-ti
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-ti
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-ti
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-ti
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-ti
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tl (long int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tl long int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tl
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tl
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tl
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tl
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tl
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tl
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tl
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tl
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tl
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tl
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tl
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tl
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tll (long long int)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tll long long int
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tll
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tll
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tll
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tll
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tll
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tll
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tll
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tll
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tll
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tll
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tll
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tll
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tf (float)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tf float
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tf
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tf
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tf
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tf
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tf
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tf
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tf
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tf
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tf
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tf
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tf
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tf
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-td (double)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-td double
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-td
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-td
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-td
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-td
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-td
PASS: gdb.base/call-sc.exp: return foo; return call-sc-td
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-td
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-td
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-td
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-td
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-td
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-td
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-tld (long double)
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-tld long double
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-tld
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-tld
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-tld
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-tld
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-tld
PASS: gdb.base/call-sc.exp: return foo; return call-sc-tld
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-tld
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-tld
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-tld
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-tld
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-tld
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-tld
PASS: gdb.base/call-sc.exp: set print sevenbit-strings
PASS: gdb.base/call-sc.exp: set print address off
PASS: gdb.base/call-sc.exp: set width 0
PASS: gdb.base/call-sc.exp: ptype; call-sc-te (enum {e = 49})
PASS: gdb.base/call-sc.exp: ptype foo; call-sc-te enum {e = 49}
PASS: gdb.base/call-sc.exp: p/c fun(); call call-sc-te
PASS: gdb.base/call-sc.exp: call Fun(foo); call call-sc-te
PASS: gdb.base/call-sc.exp: p/c L; call call-sc-te
PASS: gdb.base/call-sc.exp: advance to fun for return; return call-sc-te
PASS: gdb.base/call-sc.exp: zed L for return; return call-sc-te
PASS: gdb.base/call-sc.exp: return foo; return call-sc-te
PASS: gdb.base/call-sc.exp: return foo; synchronize pc to main()
PASS: gdb.base/call-sc.exp: value foo returned; return call-sc-te
PASS: gdb.base/call-sc.exp: advance to fun for finish; return call-sc-te
PASS: gdb.base/call-sc.exp: zed L for finish; return call-sc-te
PASS: gdb.base/call-sc.exp: finish foo; return call-sc-te
PASS: gdb.base/call-sc.exp: value foo finished; return call-sc-te
PASS: gdb.base/call-sc.exp: return and finish use same convention; return call-sc-te
Running ../../../master/gdb/testsuite/gdb.base/call-signal-resume.exp ...
PASS: gdb.base/call-signal-resume.exp: break stop_one
PASS: gdb.base/call-signal-resume.exp: continue to breakpoint at stop_one
PASS: gdb.base/call-signal-resume.exp: inferior function call signaled
PASS: gdb.base/call-signal-resume.exp: dummy stack frame number
PASS: gdb.base/call-signal-resume.exp: frame 3
PASS: gdb.base/call-signal-resume.exp: set confirm off
PASS: gdb.base/call-signal-resume.exp: return
PASS: gdb.base/call-signal-resume.exp: break stop_two
PASS: gdb.base/call-signal-resume.exp: continue to breakpoint at stop_two
PASS: gdb.base/call-signal-resume.exp: continue to receipt of signal
PASS: gdb.base/call-signal-resume.exp: break null_hand_call
PASS: gdb.base/call-signal-resume.exp: null_hand_call
PASS: gdb.base/call-signal-resume.exp: dummy stack frame number
PASS: gdb.base/call-signal-resume.exp: frame 1
PASS: gdb.base/call-signal-resume.exp: set confirm off
PASS: gdb.base/call-signal-resume.exp: return
PASS: gdb.base/call-signal-resume.exp: break handle_signal
PASS: gdb.base/call-signal-resume.exp: continue to breakpoint at handle_signal
PASS: gdb.base/call-signal-resume.exp: continue to program exit
Running ../../../master/gdb/testsuite/gdb.base/call-strs.exp ...
PASS: gdb.base/call-strs.exp: set print sevenbit-strings
PASS: gdb.base/call-strs.exp: set print address off
PASS: gdb.base/call-strs.exp: set width 0
PASS: gdb.base/call-strs.exp: step after assignment to s
PASS: gdb.base/call-strs.exp: next over strcpy
PASS: gdb.base/call-strs.exp: print buf
PASS: gdb.base/call-strs.exp: print s
PASS: gdb.base/call-strs.exp: print str_func1(s)
PASS: gdb.base/call-strs.exp: print str_func1("test string")
PASS: gdb.base/call-strs.exp: call str_func1(s)
PASS: gdb.base/call-strs.exp: call str_func1("test string")
PASS: gdb.base/call-strs.exp: print str_func1(buf)
PASS: gdb.base/call-strs.exp: call str_func1(buf)
PASS: gdb.base/call-strs.exp: print str_func("a","b","c","d","e","f","g")
PASS: gdb.base/call-strs.exp: call str_func("a","b","c","d","e","f","g")
PASS: gdb.base/call-strs.exp: print str_func(s,s,s,s,s,s,s)
PASS: gdb.base/call-strs.exp: call str_func(s,s,s,s,s,s,s)
Running ../../../master/gdb/testsuite/gdb.base/callexit.exp ...
PASS: gdb.base/callexit.exp: inferior function call terminated program
Running ../../../master/gdb/testsuite/gdb.base/callfuncs.exp ...
PASS: gdb.base/callfuncs.exp: set print sevenbit-strings
PASS: gdb.base/callfuncs.exp: set print address off
PASS: gdb.base/callfuncs.exp: set width 0
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: p t_char_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_char_values('a','b')
PASS: gdb.base/callfuncs.exp: p t_char_values(char_val1,char_val2)
PASS: gdb.base/callfuncs.exp: p t_char_values('a',char_val2)
PASS: gdb.base/callfuncs.exp: p t_char_values(char_val1,'b')
PASS: gdb.base/callfuncs.exp: p t_short_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_short_values(10,-23)
PASS: gdb.base/callfuncs.exp: p t_short_values(short_val1,short_val2)
PASS: gdb.base/callfuncs.exp: p t_short_values(10,short_val2)
PASS: gdb.base/callfuncs.exp: p t_short_values(short_val1,-23)
PASS: gdb.base/callfuncs.exp: p t_int_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_int_values(87,-26)
PASS: gdb.base/callfuncs.exp: p t_int_values(int_val1,int_val2)
PASS: gdb.base/callfuncs.exp: p t_int_values(87,int_val2)
PASS: gdb.base/callfuncs.exp: p t_int_values(int_val1,-26)
PASS: gdb.base/callfuncs.exp: p t_long_values(0,0)
PASS: gdb.base/callfuncs.exp: p t_long_values(789,-321)
PASS: gdb.base/callfuncs.exp: p t_long_values(long_val1,long_val2)
PASS: gdb.base/callfuncs.exp: p t_long_values(789,long_val2)
PASS: gdb.base/callfuncs.exp: p t_long_values(long_val1,-321)
PASS: gdb.base/callfuncs.exp: p t_float_values(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_float_values(3.14159,-2.3765)
PASS: gdb.base/callfuncs.exp: p t_float_values(float_val1,float_val2)
PASS: gdb.base/callfuncs.exp: p t_float_values(3.14159,float_val2)
PASS: gdb.base/callfuncs.exp: p t_float_values(float_val1,-2.3765)
PASS: gdb.base/callfuncs.exp: p t_float_values2(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_float_values2(3.14159,float_val2)
PASS: gdb.base/callfuncs.exp: Call function with many float arguments.
PASS: gdb.base/callfuncs.exp: p t_small_values(1,2,3,4,5,6,7,8,9,10)
PASS: gdb.base/callfuncs.exp: p t_double_values(0.0,0.0)
PASS: gdb.base/callfuncs.exp: p t_double_values(45.654,-67.66)
PASS: gdb.base/callfuncs.exp: p t_double_values(double_val1,double_val2)
PASS: gdb.base/callfuncs.exp: p t_double_values(45.654,double_val2)
PASS: gdb.base/callfuncs.exp: p t_double_values(double_val1,-67.66)
PASS: gdb.base/callfuncs.exp: Call function with many double arguments.
PASS: gdb.base/callfuncs.exp: p t_double_int(99.0, 1)
PASS: gdb.base/callfuncs.exp: p t_double_int(99.0, 99)
PASS: gdb.base/callfuncs.exp: p t_int_double(99, 1.0)
PASS: gdb.base/callfuncs.exp: p t_int_double(99, 99.0)
PASS: gdb.base/callfuncs.exp: p t_float_complex_values(fc1, fc2)
PASS: gdb.base/callfuncs.exp: p t_float_complex_values(fc3, fc4)
PASS: gdb.base/callfuncs.exp: p t_float_complex_many_args(fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4, fc1, fc2, fc3, fc4)
PASS: gdb.base/callfuncs.exp: p t_float_complex_many_args(fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1, fc1)
PASS: gdb.base/callfuncs.exp: p t_double_complex_values(dc1, dc2)
PASS: gdb.base/callfuncs.exp: p t_double_complex_values(dc3, dc4)
PASS: gdb.base/callfuncs.exp: p t_double_complex_many_args(dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4, dc1, dc2, dc3, dc4)
PASS: gdb.base/callfuncs.exp: p t_double_complex_many_args(dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1, dc1)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_values(ldc1, ldc2)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_values(ldc3, ldc4)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_many_args(ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4, ldc1, ldc2, ldc3, ldc4)
PASS: gdb.base/callfuncs.exp: p t_long_double_complex_many_args(ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1,ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1, ldc1)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val2,string_val1)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val1,string_val2)
PASS: gdb.base/callfuncs.exp: p t_string_values("string 1","string 2")
PASS: gdb.base/callfuncs.exp: p t_string_values("string 1",string_val2)
PASS: gdb.base/callfuncs.exp: p t_string_values(string_val1,"string 2")
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val2,char_array_val1)
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val1,char_array_val2)
PASS: gdb.base/callfuncs.exp: p t_char_array_values("carray 1","carray 2")
PASS: gdb.base/callfuncs.exp: p t_char_array_values("carray 1",char_array_val2)
PASS: gdb.base/callfuncs.exp: p t_char_array_values(char_array_val1,"carray 2")
PASS: gdb.base/callfuncs.exp: p doubleit(4)
PASS: gdb.base/callfuncs.exp: p add(4,5)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val2,func_val1)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val1,func_val2)
PASS: gdb.base/callfuncs.exp: p function_struct.func(5)
PASS: gdb.base/callfuncs.exp: p function_struct_ptr->func(10)
PASS: gdb.base/callfuncs.exp: p t_func_values(add,func_val2)
PASS: gdb.base/callfuncs.exp: p t_func_values(func_val1,doubleit)
PASS: gdb.base/callfuncs.exp: p t_call_add(add,3,4)
PASS: gdb.base/callfuncs.exp: p t_call_add(func_val1,3,4)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enumval1)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enum_val1)
PASS: gdb.base/callfuncs.exp: p t_enum_value1(enum_val2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enumval2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enum_val2)
PASS: gdb.base/callfuncs.exp: p t_enum_value2(enum_val1)
PASS: gdb.base/callfuncs.exp: p sum_args(1,{2})
PASS: gdb.base/callfuncs.exp: p sum_args(2,{2,3})
PASS: gdb.base/callfuncs.exp: p sum_args(3,{2,3,4})
PASS: gdb.base/callfuncs.exp: p sum_args(4,{2,3,4,5})
PASS: gdb.base/callfuncs.exp: p sum10 (1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
PASS: gdb.base/callfuncs.exp: p cmp10 (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns char
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns short
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns int
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns long
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns float
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns double
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns float _Complex
KFAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns double _Complex (PRMS: gdb/12783)
KFAIL: gdb.base/callfuncs.exp: call inferior func with struct - returns long double _Complex (PRMS: gdb/12783)
PASS: gdb.base/callfuncs.exp: call inferior func with struct - returns char *
PASS: gdb.base/callfuncs.exp: register contents after gdb function calls
FAIL: gdb.base/callfuncs.exp: gdb function calls preserve register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: stop at breakpoint in call dummy function
PASS: gdb.base/callfuncs.exp: continue from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: bt after continuing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after stop in call dummy
PASS: gdb.base/callfuncs.exp: continue after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: call function causing a breakpoint then do a finish
PASS: gdb.base/callfuncs.exp: finish from call dummy breakpoint returns correct value
PASS: gdb.base/callfuncs.exp: bt after finishing from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after finish in call dummy
PASS: gdb.base/callfuncs.exp: finish after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: call function causing a breakpoint and then do a return
PASS: gdb.base/callfuncs.exp: back at main after return from call dummy breakpoint
PASS: gdb.base/callfuncs.exp: register contents after return in call dummy
PASS: gdb.base/callfuncs.exp: return after stop in call dummy preserves register contents
PASS: gdb.base/callfuncs.exp: set language c
PASS: gdb.base/callfuncs.exp: next to t_double_values
PASS: gdb.base/callfuncs.exp: next to t_structs_c
PASS: gdb.base/callfuncs.exp: retrieve original register contents
PASS: gdb.base/callfuncs.exp: stop at nested call level 1
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 1
PASS: gdb.base/callfuncs.exp: stop at nested call level 2
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 2
PASS: gdb.base/callfuncs.exp: stop at nested call level 3
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 3
PASS: gdb.base/callfuncs.exp: stop at nested call level 4
PASS: gdb.base/callfuncs.exp: backtrace at nested call level 4
PASS: gdb.base/callfuncs.exp: Finish from nested call level 4
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 4
PASS: gdb.base/callfuncs.exp: Finish from nested call level 3
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 3
PASS: gdb.base/callfuncs.exp: Finish from nested call level 2
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 2
PASS: gdb.base/callfuncs.exp: Finish from nested call level 1
PASS: gdb.base/callfuncs.exp: backtrace after finish from nested call level 1
PASS: gdb.base/callfuncs.exp: register contents after nested call dummies
PASS: gdb.base/callfuncs.exp: nested call dummies preserve register contents
PASS: gdb.base/callfuncs.exp: set $old_sp = $sp
PASS: gdb.base/callfuncs.exp: set $sp = 0
PASS: gdb.base/callfuncs.exp: sp == 0: call doubleit (1)
PASS: gdb.base/callfuncs.exp: set $sp = -1
PASS: gdb.base/callfuncs.exp: sp == -1: call doubleit (1)
PASS: gdb.base/callfuncs.exp: set $sp = $old_sp
PASS: gdb.base/callfuncs.exp: print callfunc (Lcallfunc, 5)
Running ../../../master/gdb/testsuite/gdb.base/catch-syscall.exp ...
PASS: gdb.base/catch-syscall.exp: help catch syscall
PASS: gdb.base/catch-syscall.exp: catch syscall to a nonsense syscall is prohibited
PASS: gdb.base/catch-syscall.exp: setting catch syscall without arguments
PASS: gdb.base/catch-syscall.exp: catch syscall appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called close
PASS: gdb.base/catch-syscall.exp: syscall close has returned
PASS: gdb.base/catch-syscall.exp: program has called chroot
PASS: gdb.base/catch-syscall.exp: syscall chroot has returned
PASS: gdb.base/catch-syscall.exp: program has called exit_group
PASS: gdb.base/catch-syscall.exp: continue until exit
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments (close)
PASS: gdb.base/catch-syscall.exp: syscall(s) close appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called close
PASS: gdb.base/catch-syscall.exp: syscall close has returned
PASS: gdb.base/catch-syscall.exp: continue until exit
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments ('close' [] 'chroot' [])
PASS: gdb.base/catch-syscall.exp: syscalls close, chroot appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called close
PASS: gdb.base/catch-syscall.exp: syscall close has returned
PASS: gdb.base/catch-syscall.exp: program has called chroot
PASS: gdb.base/catch-syscall.exp: syscall chroot has returned
PASS: gdb.base/catch-syscall.exp: continue until exit
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments (mlock)
PASS: gdb.base/catch-syscall.exp: syscall(s) mlock appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: continue until exit at catch syscall with unused syscall (mlock)
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments (chroot)
PASS: gdb.base/catch-syscall.exp: syscall(s) chroot appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called chroot
PASS: gdb.base/catch-syscall.exp: rerun to main
PASS: gdb.base/catch-syscall.exp: program has called chroot
PASS: gdb.base/catch-syscall.exp: syscall chroot has returned
PASS: gdb.base/catch-syscall.exp: continue until exit
PASS: gdb.base/catch-syscall.exp: set data-directory /the/path/to/nowhere
PASS: gdb.base/catch-syscall.exp: Catch syscall displays a warning when there is no XML support (no datadir set)
PASS: gdb.base/catch-syscall.exp: catch syscall appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: set data-directory /the/path/to/nowhere
PASS: gdb.base/catch-syscall.exp: catch syscall
PASS: gdb.base/catch-syscall.exp: program has called [0-9]*
PASS: gdb.base/catch-syscall.exp: syscall [0-9]* has returned
PASS: gdb.base/catch-syscall.exp: program has called [0-9]*
PASS: gdb.base/catch-syscall.exp: syscall [0-9]* has returned
PASS: gdb.base/catch-syscall.exp: program has called [0-9]*
PASS: gdb.base/catch-syscall.exp: catch syscall with arguments (6)
PASS: gdb.base/catch-syscall.exp: syscall(s) 6 appears in 'info breakpoints'
PASS: gdb.base/catch-syscall.exp: program has called 6
PASS: gdb.base/catch-syscall.exp: syscall 6 has returned
PASS: gdb.base/catch-syscall.exp: Catch a nonsense syscall without XML support
Running ../../../master/gdb/testsuite/gdb.base/charset.exp ...
PASS: gdb.base/charset.exp: show charset
PASS: gdb.base/charset.exp: show target-charset
PASS: gdb.base/charset.exp: check `show target-charset' against `show charset'
PASS: gdb.base/charset.exp: show host-charset
PASS: gdb.base/charset.exp: check `show host-charset' against `show charset'
PASS: gdb.base/charset.exp: try malformed `set charset'
PASS: gdb.base/charset.exp: try `set host-charset' with invalid charset
PASS: gdb.base/charset.exp: try `set target-charset' with invalid charset
PASS: gdb.base/charset.exp: capture valid host charsets
PASS: gdb.base/charset.exp: capture valid target charsets
PASS: gdb.base/charset.exp: try `set host-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set host-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set host-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set host-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: try `set host-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set host-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set host-charset IBM1047'
PASS: gdb.base/charset.exp: try `set target-charset ASCII'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ASCII'
PASS: gdb.base/charset.exp: check effect of `set target-charset ASCII'
PASS: gdb.base/charset.exp: try `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: check effect of `set target-charset ISO-8859-1'
PASS: gdb.base/charset.exp: try `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: check effect of `set target-charset EBCDIC-US'
PASS: gdb.base/charset.exp: try `set target-charset IBM1047'
PASS: gdb.base/charset.exp: parse `show charset' after `set target-charset IBM1047'
PASS: gdb.base/charset.exp: check effect of `set target-charset IBM1047'
PASS: gdb.base/charset.exp: set breakpoint after all strings have been initialized
PASS: gdb.base/charset.exp: run until all strings have been initialized
PASS: gdb.base/charset.exp: get integer valueof "sizeof (wchar_t)" (4)
PASS: gdb.base/charset.exp: set host-charset ASCII
PASS: gdb.base/charset.exp: set target-charset ASCII
PASS: gdb.base/charset.exp: print the null character in ASCII
PASS: gdb.base/charset.exp: print string in ASCII
PASS: gdb.base/charset.exp: parse character literal in ASCII
PASS: gdb.base/charset.exp: check value of parsed character literal in ASCII
PASS: gdb.base/charset.exp: parse string literal in ASCII
PASS: gdb.base/charset.exp: check value of parsed string literal in ASCII
PASS: gdb.base/charset.exp: try printing '\a' in ASCII
PASS: gdb.base/charset.exp: check value of '\a' in ASCII
PASS: gdb.base/charset.exp: check value of "\a" in ASCII
PASS: gdb.base/charset.exp: try printing '\b' in ASCII
PASS: gdb.base/charset.exp: check value of '\b' in ASCII
PASS: gdb.base/charset.exp: check value of "\b" in ASCII
PASS: gdb.base/charset.exp: try printing '\f' in ASCII
PASS: gdb.base/charset.exp: check value of '\f' in ASCII
PASS: gdb.base/charset.exp: check value of "\f" in ASCII
PASS: gdb.base/charset.exp: try printing '\n' in ASCII
PASS: gdb.base/charset.exp: check value of '\n' in ASCII
PASS: gdb.base/charset.exp: check value of "\n" in ASCII
PASS: gdb.base/charset.exp: try printing '\r' in ASCII
PASS: gdb.base/charset.exp: check value of '\r' in ASCII
PASS: gdb.base/charset.exp: check value of "\r" in ASCII
PASS: gdb.base/charset.exp: try printing '\t' in ASCII
PASS: gdb.base/charset.exp: check value of '\t' in ASCII
PASS: gdb.base/charset.exp: check value of "\t" in ASCII
PASS: gdb.base/charset.exp: try printing '\v' in ASCII
PASS: gdb.base/charset.exp: check value of '\v' in ASCII
PASS: gdb.base/charset.exp: check value of "\v" in ASCII
PASS: gdb.base/charset.exp: print escape that doesn't exist in ASCII
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in ASCII
PASS: gdb.base/charset.exp: set target-charset ISO-8859-1
PASS: gdb.base/charset.exp: print the null character in ISO-8859-1
PASS: gdb.base/charset.exp: print string in ISO-8859-1
PASS: gdb.base/charset.exp: parse character literal in ISO-8859-1
PASS: gdb.base/charset.exp: check value of parsed character literal in ISO-8859-1
PASS: gdb.base/charset.exp: parse string literal in ISO-8859-1
PASS: gdb.base/charset.exp: check value of parsed string literal in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\a' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\a' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\a" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\b' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\b' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\b" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\f' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\f' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\f" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\n' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\n' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\n" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\r' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\r' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\r" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\t' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\t' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\t" in ISO-8859-1
PASS: gdb.base/charset.exp: try printing '\v' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of '\v' in ISO-8859-1
PASS: gdb.base/charset.exp: check value of "\v" in ISO-8859-1
PASS: gdb.base/charset.exp: print escape that doesn't exist in ISO-8859-1
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in ISO-8859-1
PASS: gdb.base/charset.exp: set target-charset EBCDIC-US
PASS: gdb.base/charset.exp: print the null character in EBCDIC-US
PASS: gdb.base/charset.exp: print string in EBCDIC-US
PASS: gdb.base/charset.exp: parse character literal in EBCDIC-US
PASS: gdb.base/charset.exp: check value of parsed character literal in EBCDIC-US
PASS: gdb.base/charset.exp: parse string literal in EBCDIC-US
PASS: gdb.base/charset.exp: check value of parsed string literal in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\a' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\a' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\a" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\b' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\b' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\b" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\f' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\f' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\f" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\n' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\n' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\n" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\r' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\r' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\r" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\t' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\t' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\t" in EBCDIC-US
PASS: gdb.base/charset.exp: try printing '\v' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of '\v' in EBCDIC-US
PASS: gdb.base/charset.exp: check value of "\v" in EBCDIC-US
PASS: gdb.base/charset.exp: print escape that doesn't exist in EBCDIC-US
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in EBCDIC-US
PASS: gdb.base/charset.exp: set target-charset IBM1047
PASS: gdb.base/charset.exp: print the null character in IBM1047
PASS: gdb.base/charset.exp: print string in IBM1047
PASS: gdb.base/charset.exp: parse character literal in IBM1047
PASS: gdb.base/charset.exp: check value of parsed character literal in IBM1047
PASS: gdb.base/charset.exp: parse string literal in IBM1047
PASS: gdb.base/charset.exp: check value of parsed string literal in IBM1047
PASS: gdb.base/charset.exp: try printing '\a' in IBM1047
PASS: gdb.base/charset.exp: check value of '\a' in IBM1047
PASS: gdb.base/charset.exp: check value of "\a" in IBM1047
PASS: gdb.base/charset.exp: try printing '\b' in IBM1047
PASS: gdb.base/charset.exp: check value of '\b' in IBM1047
PASS: gdb.base/charset.exp: check value of "\b" in IBM1047
PASS: gdb.base/charset.exp: try printing '\f' in IBM1047
PASS: gdb.base/charset.exp: check value of '\f' in IBM1047
PASS: gdb.base/charset.exp: check value of "\f" in IBM1047
PASS: gdb.base/charset.exp: try printing '\n' in IBM1047
PASS: gdb.base/charset.exp: check value of '\n' in IBM1047
PASS: gdb.base/charset.exp: check value of "\n" in IBM1047
PASS: gdb.base/charset.exp: try printing '\r' in IBM1047
PASS: gdb.base/charset.exp: check value of '\r' in IBM1047
PASS: gdb.base/charset.exp: check value of "\r" in IBM1047
PASS: gdb.base/charset.exp: try printing '\t' in IBM1047
PASS: gdb.base/charset.exp: check value of '\t' in IBM1047
PASS: gdb.base/charset.exp: check value of "\t" in IBM1047
PASS: gdb.base/charset.exp: try printing '\v' in IBM1047
PASS: gdb.base/charset.exp: check value of '\v' in IBM1047
PASS: gdb.base/charset.exp: check value of "\v" in IBM1047
PASS: gdb.base/charset.exp: print escape that doesn't exist in IBM1047
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in IBM1047
PASS: gdb.base/charset.exp: set target-wide-charset UTF-32
PASS: gdb.base/charset.exp: print the null character in UTF-32
PASS: gdb.base/charset.exp: print string in UTF-32
PASS: gdb.base/charset.exp: parse character literal in UTF-32
PASS: gdb.base/charset.exp: check value of parsed character literal in UTF-32
PASS: gdb.base/charset.exp: parse string literal in UTF-32
PASS: gdb.base/charset.exp: check value of parsed string literal in UTF-32
PASS: gdb.base/charset.exp: try printing '\a' in UTF-32
PASS: gdb.base/charset.exp: check value of '\a' in UTF-32
PASS: gdb.base/charset.exp: check value of "\a" in UTF-32
PASS: gdb.base/charset.exp: try printing '\b' in UTF-32
PASS: gdb.base/charset.exp: check value of '\b' in UTF-32
PASS: gdb.base/charset.exp: check value of "\b" in UTF-32
PASS: gdb.base/charset.exp: try printing '\f' in UTF-32
PASS: gdb.base/charset.exp: check value of '\f' in UTF-32
PASS: gdb.base/charset.exp: check value of "\f" in UTF-32
PASS: gdb.base/charset.exp: try printing '\n' in UTF-32
PASS: gdb.base/charset.exp: check value of '\n' in UTF-32
PASS: gdb.base/charset.exp: check value of "\n" in UTF-32
PASS: gdb.base/charset.exp: try printing '\r' in UTF-32
PASS: gdb.base/charset.exp: check value of '\r' in UTF-32
PASS: gdb.base/charset.exp: check value of "\r" in UTF-32
PASS: gdb.base/charset.exp: try printing '\t' in UTF-32
PASS: gdb.base/charset.exp: check value of '\t' in UTF-32
PASS: gdb.base/charset.exp: check value of "\t" in UTF-32
PASS: gdb.base/charset.exp: try printing '\v' in UTF-32
PASS: gdb.base/charset.exp: check value of '\v' in UTF-32
PASS: gdb.base/charset.exp: check value of "\v" in UTF-32
PASS: gdb.base/charset.exp: print escape that doesn't exist in UTF-32
PASS: gdb.base/charset.exp: check value of escape that doesn't exist in UTF-32
PASS: gdb.base/charset.exp: set target-charset UTF-8
PASS: gdb.base/charset.exp: non-representable target character
PASS: gdb.base/charset.exp: print '\x'
PASS: gdb.base/charset.exp: print '\u'
PASS: gdb.base/charset.exp: print '\9'
PASS: gdb.base/charset.exp: print "\1011"
PASS: gdb.base/charset.exp: basic wide string concatenation
PASS: gdb.base/charset.exp: narrow and wide string concatenation
PASS: gdb.base/charset.exp: wide and narrow string concatenation
PASS: gdb.base/charset.exp: wide string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty wide string
PASS: gdb.base/charset.exp: basic wide character
PASS: gdb.base/charset.exp: get integer valueof "sizeof (char16_t)" (2)
PASS: gdb.base/charset.exp: basic UTF-16 string concatenation
PASS: gdb.base/charset.exp: narrow and UTF-16 string concatenation
PASS: gdb.base/charset.exp: UTF-16 and narrow string concatenation
PASS: gdb.base/charset.exp: UTF-16 string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty UTF-16 string
PASS: gdb.base/charset.exp: basic UTF-16 character
PASS: gdb.base/charset.exp: get integer valueof "sizeof (char32_t)" (4)
PASS: gdb.base/charset.exp: basic UTF-32 string concatenation
PASS: gdb.base/charset.exp: narrow and UTF-32 string concatenation
PASS: gdb.base/charset.exp: UTF-32 and narrow string concatenation
PASS: gdb.base/charset.exp: UTF-32 string concatenation with escape
PASS: gdb.base/charset.exp: concatenate three strings with empty UTF-32 string
PASS: gdb.base/charset.exp: basic UTF-32 character
PASS: gdb.base/charset.exp: undefined concatenation of wide and UTF-16
PASS: gdb.base/charset.exp: undefined concatenation of wide and UTF-32
PASS: gdb.base/charset.exp: typedef to wchar_t
PASS: gdb.base/charset.exp: undefined concatenation of UTF-16 and UTF-32
PASS: gdb.base/charset.exp: set up for python printing of utf-16 string
PASS: gdb.base/charset.exp: extract utf-16 string using python
PASS: gdb.base/charset.exp: EVAL_SKIP cleanup handling regression test
PASS: gdb.base/charset.exp: Assign String16 with prefix u
PASS: gdb.base/charset.exp: Display String String16 with x/hs
PASS: gdb.base/charset.exp: Assign String32 with prefix U
PASS: gdb.base/charset.exp: Display String String32 with x/ws
PASS: gdb.base/charset.exp: Assign String32 with prefix L
PASS: gdb.base/charset.exp: Display String String32 with x/ws
PASS: gdb.base/charset.exp: assign string to short array
PASS: gdb.base/charset.exp: assign string to int array
PASS: gdb.base/charset.exp: assign string to long array
Running ../../../master/gdb/testsuite/gdb.base/checkpoint.exp ...
PASS: gdb.base/checkpoint.exp: break1 start
PASS: gdb.base/checkpoint.exp: break1 two
PASS: gdb.base/checkpoint.exp: break1 three
PASS: gdb.base/checkpoint.exp: break1 four
PASS: gdb.base/checkpoint.exp: break1 five
PASS: gdb.base/checkpoint.exp: break1 six
PASS: gdb.base/checkpoint.exp: break1 seven
PASS: gdb.base/checkpoint.exp: break1 eight
PASS: gdb.base/checkpoint.exp: break1 nine
PASS: gdb.base/checkpoint.exp: break1 ten
PASS: gdb.base/checkpoint.exp: info checkpoints one
PASS: gdb.base/checkpoint.exp: break2 one
PASS: gdb.base/checkpoint.exp: restart 1 one
PASS: gdb.base/checkpoint.exp: verify i 1 one
PASS: gdb.base/checkpoint.exp: step in 1 one
PASS: gdb.base/checkpoint.exp: verify lines 1 one
PASS: gdb.base/checkpoint.exp: restart 2 one
PASS: gdb.base/checkpoint.exp: step in 2 one
PASS: gdb.base/checkpoint.exp: verify i 2 one
PASS: gdb.base/checkpoint.exp: verify lines 2 one
PASS: gdb.base/checkpoint.exp: restart 3 one
PASS: gdb.base/checkpoint.exp: step in 3 one
PASS: gdb.base/checkpoint.exp: verify i 3 one
PASS: gdb.base/checkpoint.exp: verify lines 3 one
PASS: gdb.base/checkpoint.exp: restart 4 one
PASS: gdb.base/checkpoint.exp: step in 4 one
PASS: gdb.base/checkpoint.exp: verify i 4 one
PASS: gdb.base/checkpoint.exp: verify lines 4 one
PASS: gdb.base/checkpoint.exp: restart 5 one
PASS: gdb.base/checkpoint.exp: step in 5 one
PASS: gdb.base/checkpoint.exp: verify i 5 one
PASS: gdb.base/checkpoint.exp: verify lines 5 one
PASS: gdb.base/checkpoint.exp: restart 6 one
PASS: gdb.base/checkpoint.exp: step in 6 one
PASS: gdb.base/checkpoint.exp: verify i 6 one
PASS: gdb.base/checkpoint.exp: verify lines 6 one
PASS: gdb.base/checkpoint.exp: restart 7 one
PASS: gdb.base/checkpoint.exp: step in 7 one
PASS: gdb.base/checkpoint.exp: verify i 7 one
PASS: gdb.base/checkpoint.exp: verify lines 7 one
PASS: gdb.base/checkpoint.exp: restart 8 one
PASS: gdb.base/checkpoint.exp: step in 8 one
PASS: gdb.base/checkpoint.exp: verify i 8 one
PASS: gdb.base/checkpoint.exp: verify lines 8 one
PASS: gdb.base/checkpoint.exp: restart 9 one
PASS: gdb.base/checkpoint.exp: step in 9 one
PASS: gdb.base/checkpoint.exp: verify i 9 one
PASS: gdb.base/checkpoint.exp: verify lines 9 one
PASS: gdb.base/checkpoint.exp: restart 10 one
PASS: gdb.base/checkpoint.exp: step in 10 one
PASS: gdb.base/checkpoint.exp: verify i 10 one
PASS: gdb.base/checkpoint.exp: verify lines 10 one
PASS: gdb.base/checkpoint.exp: restart 0 one
PASS: gdb.base/checkpoint.exp: break3 one
PASS: gdb.base/checkpoint.exp: Diff input and output one
PASS: gdb.base/checkpoint.exp: restart 1 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 1 one
PASS: gdb.base/checkpoint.exp: step in 1 two
PASS: gdb.base/checkpoint.exp: verify lines 1 two
PASS: gdb.base/checkpoint.exp: restart 2 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 2 one
PASS: gdb.base/checkpoint.exp: step in 2 two
PASS: gdb.base/checkpoint.exp: verify lines 2 two
PASS: gdb.base/checkpoint.exp: restart 3 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 3 one
PASS: gdb.base/checkpoint.exp: step in 3 two
PASS: gdb.base/checkpoint.exp: verify lines 3 two
PASS: gdb.base/checkpoint.exp: restart 4 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 4 one
PASS: gdb.base/checkpoint.exp: step in 4 two
PASS: gdb.base/checkpoint.exp: verify lines 4 two
PASS: gdb.base/checkpoint.exp: restart 5 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 5 one
PASS: gdb.base/checkpoint.exp: step in 5 two
PASS: gdb.base/checkpoint.exp: verify lines 5 two
PASS: gdb.base/checkpoint.exp: restart 6 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 6 one
PASS: gdb.base/checkpoint.exp: step in 6 two
PASS: gdb.base/checkpoint.exp: verify lines 5 two
PASS: gdb.base/checkpoint.exp: restart 7 two
PASS: gdb.base/checkpoint.exp: breakpoint 1 7 one
PASS: gdb.base/checkpoint.exp: step in 7 two
PASS: gdb.base/checkpoint.exp: verify lines 7 two
PASS: gdb.base/checkpoint.exp: Diff input and output two
PASS: gdb.base/checkpoint.exp: restart 0 one
PASS: gdb.base/checkpoint.exp: break4 one
PASS: gdb.base/checkpoint.exp: delete copy1
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 1 one
PASS: gdb.base/checkpoint.exp: outfile still open 1
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 2 one
PASS: gdb.base/checkpoint.exp: outfile still open 2
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 3 one
PASS: gdb.base/checkpoint.exp: outfile still open 3
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 4 one
PASS: gdb.base/checkpoint.exp: outfile still open 4
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 5 one
PASS: gdb.base/checkpoint.exp: outfile still open 5
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 6 one
PASS: gdb.base/checkpoint.exp: outfile still open 6
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 7 one
PASS: gdb.base/checkpoint.exp: outfile still open 7
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 8 one
PASS: gdb.base/checkpoint.exp: outfile still open 8
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 9 one
PASS: gdb.base/checkpoint.exp: outfile still open 9
PASS: gdb.base/checkpoint.exp: restart 1 three
PASS: gdb.base/checkpoint.exp: break2 10 one
PASS: gdb.base/checkpoint.exp: outfile still open 10
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork one
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork two
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork three
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork four
PASS: gdb.base/checkpoint.exp: Exit, dropped into next fork five
PASS: gdb.base/checkpoint.exp: info checkpoints two
PASS: gdb.base/checkpoint.exp: kill all one
PASS: gdb.base/checkpoint.exp: no more checkpoint 0
PASS: gdb.base/checkpoint.exp: no more checkpoint 1
PASS: gdb.base/checkpoint.exp: no more checkpoint 2
PASS: gdb.base/checkpoint.exp: no more checkpoint 3
PASS: gdb.base/checkpoint.exp: no more checkpoint 4
PASS: gdb.base/checkpoint.exp: no more checkpoint 5
PASS: gdb.base/checkpoint.exp: no more checkpoint 6
PASS: gdb.base/checkpoint.exp: no more checkpoint 7
PASS: gdb.base/checkpoint.exp: no more checkpoint 8
PASS: gdb.base/checkpoint.exp: no more checkpoint 9
PASS: gdb.base/checkpoint.exp: no more checkpoint 10
PASS: gdb.base/checkpoint.exp: set checkpoint breakpoint
PASS: gdb.base/checkpoint.exp: break2 with many checkpoints
PASS: gdb.base/checkpoint.exp: info checkpoints with at least 600 checkpoints
PASS: gdb.base/checkpoint.exp: kill all one with many checkpoints
Running ../../../master/gdb/testsuite/gdb.base/chng-syms.exp ...
PASS: gdb.base/chng-syms.exp: setting conditional breakpoint on function
PASS: gdb.base/chng-syms.exp: continue until exit at breakpoint first time through
PASS: gdb.base/chng-syms.exp: running with invalidated bpt condition after executable changes
Running ../../../master/gdb/testsuite/gdb.base/code-expr.exp ...
PASS: gdb.base/code-expr.exp: set print sevenbit-strings
PASS: gdb.base/code-expr.exp: set print address off
PASS: gdb.base/code-expr.exp: set width 0
PASS: gdb.base/code-expr.exp: (@code char)
PASS: gdb.base/code-expr.exp: (@code signed char)
PASS: gdb.base/code-expr.exp: (@code unsigned char)
PASS: gdb.base/code-expr.exp: (@code short)
PASS: gdb.base/code-expr.exp: (@code signed short)
PASS: gdb.base/code-expr.exp: (@code unsigned short)
PASS: gdb.base/code-expr.exp: (@code int)
PASS: gdb.base/code-expr.exp: (@code signed int)
PASS: gdb.base/code-expr.exp: (@code unsigned int)
PASS: gdb.base/code-expr.exp: (@code long)
PASS: gdb.base/code-expr.exp: (@code signed long)
PASS: gdb.base/code-expr.exp: (@code unsigned long)
PASS: gdb.base/code-expr.exp: (@code long long)
PASS: gdb.base/code-expr.exp: (@code signed long long)
PASS: gdb.base/code-expr.exp: (@code unsigned long long)
PASS: gdb.base/code-expr.exp: (@code float)
PASS: gdb.base/code-expr.exp: (@code double)
PASS: gdb.base/code-expr.exp: (@data char)
PASS: gdb.base/code-expr.exp: (@data signed char)
PASS: gdb.base/code-expr.exp: (@data unsigned char)
PASS: gdb.base/code-expr.exp: (@data short)
PASS: gdb.base/code-expr.exp: (@data signed short)
PASS: gdb.base/code-expr.exp: (@data unsigned short)
PASS: gdb.base/code-expr.exp: (@data int)
PASS: gdb.base/code-expr.exp: (@data signed int)
PASS: gdb.base/code-expr.exp: (@data unsigned int)
PASS: gdb.base/code-expr.exp: (@data long)
PASS: gdb.base/code-expr.exp: (@data signed long)
PASS: gdb.base/code-expr.exp: (@data unsigned long)
PASS: gdb.base/code-expr.exp: (@data long long)
PASS: gdb.base/code-expr.exp: (@data signed long long)
PASS: gdb.base/code-expr.exp: (@data unsigned long long)
PASS: gdb.base/code-expr.exp: (@data float)
PASS: gdb.base/code-expr.exp: (@data double)
PASS: gdb.base/code-expr.exp: (char @code)
PASS: gdb.base/code-expr.exp: (signed char @code)
PASS: gdb.base/code-expr.exp: (unsigned char @code)
PASS: gdb.base/code-expr.exp: (short @code)
PASS: gdb.base/code-expr.exp: (signed short @code)
PASS: gdb.base/code-expr.exp: (unsigned short @code)
PASS: gdb.base/code-expr.exp: (int @code)
PASS: gdb.base/code-expr.exp: (signed int @code)
PASS: gdb.base/code-expr.exp: (unsigned int @code)
PASS: gdb.base/code-expr.exp: (long @code)
PASS: gdb.base/code-expr.exp: (signed long @code)
PASS: gdb.base/code-expr.exp: (unsigned long @code)
PASS: gdb.base/code-expr.exp: (long long @code)
PASS: gdb.base/code-expr.exp: (signed long long @code)
PASS: gdb.base/code-expr.exp: (unsigned long long @code)
PASS: gdb.base/code-expr.exp: (float @code)
PASS: gdb.base/code-expr.exp: (double @code)
PASS: gdb.base/code-expr.exp: (char @data)
PASS: gdb.base/code-expr.exp: (signed char @data)
PASS: gdb.base/code-expr.exp: (unsigned char @data)
PASS: gdb.base/code-expr.exp: (short @data)
PASS: gdb.base/code-expr.exp: (signed short @data)
PASS: gdb.base/code-expr.exp: (unsigned short @data)
PASS: gdb.base/code-expr.exp: (int @data)
PASS: gdb.base/code-expr.exp: (signed int @data)
PASS: gdb.base/code-expr.exp: (unsigned int @data)
PASS: gdb.base/code-expr.exp: (long @data)
PASS: gdb.base/code-expr.exp: (signed long @data)
PASS: gdb.base/code-expr.exp: (unsigned long @data)
PASS: gdb.base/code-expr.exp: (long long @data)
PASS: gdb.base/code-expr.exp: (signed long long @data)
PASS: gdb.base/code-expr.exp: (unsigned long long @data)
PASS: gdb.base/code-expr.exp: (float @data)
PASS: gdb.base/code-expr.exp: (double @data)
PASS: gdb.base/code-expr.exp: (@code enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @code)
PASS: gdb.base/code-expr.exp: (@data enum misordered)
PASS: gdb.base/code-expr.exp: (enum misordered @data)
PASS: gdb.base/code-expr.exp: (@code int *)
PASS: gdb.base/code-expr.exp: (int @code *)
PASS: gdb.base/code-expr.exp: (int * @code)
PASS: gdb.base/code-expr.exp: (@code int * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code)
PASS: gdb.base/code-expr.exp: (@code int **)
PASS: gdb.base/code-expr.exp: (int @code **)
PASS: gdb.base/code-expr.exp: (int ** @code)
PASS: gdb.base/code-expr.exp: (@code int * @code *)
PASS: gdb.base/code-expr.exp: (int @code * @code *)
PASS: gdb.base/code-expr.exp: (@code int * @code * @code)
PASS: gdb.base/code-expr.exp: (int @code * @code * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct)
PASS: gdb.base/code-expr.exp: (@code union t_union)
PASS: gdb.base/code-expr.exp: (struct t_struct @code)
PASS: gdb.base/code-expr.exp: (union t_union @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct *)
PASS: gdb.base/code-expr.exp: (@code union t_union *)
PASS: gdb.base/code-expr.exp: (struct t_struct @code *)
PASS: gdb.base/code-expr.exp: (union t_union @code *)
PASS: gdb.base/code-expr.exp: (struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (union t_union * @code)
PASS: gdb.base/code-expr.exp: (@code struct t_struct * @code)
PASS: gdb.base/code-expr.exp: (@code union t_union * @code)
PASS: gdb.base/code-expr.exp: (struct t_struct @code * @code)
PASS: gdb.base/code-expr.exp: (union t_union @code * @code)
Running ../../../master/gdb/testsuite/gdb.base/code_elim.exp ...
PASS: gdb.base/code_elim.exp: add-symbol-file code_elim1 0x100000
PASS: gdb.base/code_elim.exp: test eliminated var my_global_symbol
PASS: gdb.base/code_elim.exp: test eliminated var my_static_symbol
PASS: gdb.base/code_elim.exp: test eliminated var my_global_func
PASS: gdb.base/code_elim.exp: get address of main
PASS: gdb.base/code_elim.exp: test eliminated var my_global_symbol
PASS: gdb.base/code_elim.exp: test eliminated var my_static_symbol
PASS: gdb.base/code_elim.exp: test eliminated var my_global_func
PASS: gdb.base/code_elim.exp: get address of main
PASS: gdb.base/code_elim.exp: add-symbol-file code_elim1 0x100000
PASS: gdb.base/code_elim.exp: add-symbol-file code_elim2 0x200000
PASS: gdb.base/code_elim.exp: get address of my_global_symbol
PASS: gdb.base/code_elim.exp: get address of my_static_symbol
PASS: gdb.base/code_elim.exp: get address of my_global_func
PASS: gdb.base/code_elim.exp: get address of main
PASS: gdb.base/code_elim.exp: add-symbol-file code_elim2 0x200000
PASS: gdb.base/code_elim.exp: add-symbol-file code_elim1 0x100000
PASS: gdb.base/code_elim.exp: get address of my_global_symbol
PASS: gdb.base/code_elim.exp: get address of my_static_symbol
PASS: gdb.base/code_elim.exp: get address of my_global_func
PASS: gdb.base/code_elim.exp: get address of main
Running ../../../master/gdb/testsuite/gdb.base/commands.exp ...
PASS: gdb.base/commands.exp: set foo in gdbvar_simple_if_test
PASS: gdb.base/commands.exp: gdbvar_simple_if_test #1
PASS: gdb.base/commands.exp: gdbvar_simple_if_test #2
PASS: gdb.base/commands.exp: set foo in gdbvar_simple_while_test
PASS: gdb.base/commands.exp: gdbvar_simple_while_test #1
PASS: gdb.base/commands.exp: set foo in gdbvar complex_if_while_test
PASS: gdb.base/commands.exp: gdbvar_complex_if_while_test #1
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test #1
PASS: gdb.base/commands.exp: progvar_simple_if_test #1
PASS: gdb.base/commands.exp: progvar_simple_if_test #2
PASS: gdb.base/commands.exp: set args in progvar_simple_while_test
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test #2
PASS: gdb.base/commands.exp: progvar_simple_while_test #1
PASS: gdb.base/commands.exp: set args in progvar_complex_if_while_test
PASS: gdb.base/commands.exp: set value to 4 in progvar_simple_if_test
PASS: gdb.base/commands.exp: progvar_complex_if_while_test #1
PASS: gdb.base/commands.exp: set args in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: set value to 5 in progvar_simple_if_test
PASS: gdb.base/commands.exp: break factorial #1
PASS: gdb.base/commands.exp: commands in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: commands part 2 in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: if_while_breakpoint_command_test #1
PASS: gdb.base/commands.exp: info break in if_while_breakpoint_command_test
PASS: gdb.base/commands.exp: set args in infrun_breakpoint_command_test
PASS: gdb.base/commands.exp: set value to 6 in progvar_simple_if_test #1
PASS: gdb.base/commands.exp: break factorial if value == 5
PASS: gdb.base/commands.exp: commands in infrun_breakpoint_command_test #1
PASS: gdb.base/commands.exp: commands in infrun_breakpoint_command_test #2
PASS: gdb.base/commands.exp: continue in infrun_breakpoint_command_test
PASS: gdb.base/commands.exp: set args in breakpoint_command_test
PASS: gdb.base/commands.exp: set value to 6 in progvar_simple_if_test #2
PASS: gdb.base/commands.exp: break factorial #2
PASS: gdb.base/commands.exp: commands in breakpoint_command_test
PASS: gdb.base/commands.exp: continue in breakpoint_command_test
PASS: gdb.base/commands.exp: print value in breakpoint_command_test
PASS: gdb.base/commands.exp: set foo in user_defined_command_test
PASS: gdb.base/commands.exp: define mycommand in user_defined_command_test
PASS: gdb.base/commands.exp: enter commands in user_defined_command_test
PASS: gdb.base/commands.exp: execute user defined command in user_defined_command_test
PASS: gdb.base/commands.exp: display user command in user_defined_command_test
PASS: gdb.base/commands.exp: set args in watchpoint_command_test
PASS: gdb.base/commands.exp: watch local_var
PASS: gdb.base/commands.exp: begin commands on watch
PASS: gdb.base/commands.exp: add print command to watch
PASS: gdb.base/commands.exp: add continue command to watch
PASS: gdb.base/commands.exp: end commands on watch
PASS: gdb.base/commands.exp: continue with watch
PASS: gdb.base/commands.exp: break factorial #3
PASS: gdb.base/commands.exp: set value to 5 in test_command_prompt_position
PASS: gdb.base/commands.exp: if test in test_command_prompt_position
PASS: gdb.base/commands.exp: > OK in test_command_prompt_position
PASS: gdb.base/commands.exp: tried to deprecate non-existing command
PASS: gdb.base/commands.exp: maintenance deprecate p "new_p" /1/
PASS: gdb.base/commands.exp: p deprecated warning, with replacement
PASS: gdb.base/commands.exp: Deprecated warning goes away /1/
PASS: gdb.base/commands.exp: maintenance deprecate p "new_p" /2/
PASS: gdb.base/commands.exp: maintenance deprecate print "new_print"
PASS: gdb.base/commands.exp: both alias and command are deprecated
PASS: gdb.base/commands.exp: Deprecated warning goes away /2/
PASS: gdb.base/commands.exp: deprecate long command /1/
PASS: gdb.base/commands.exp: long command deprecated /1/
PASS: gdb.base/commands.exp: deprecate long command /2/
PASS: gdb.base/commands.exp: long command deprecated with no alternative /2/
PASS: gdb.base/commands.exp: deprecate with no arguments
PASS: gdb.base/commands.exp: set args in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: breakpoint in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: begin commands in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: add silent command
PASS: gdb.base/commands.exp: add clear command
PASS: gdb.base/commands.exp: add printf command
PASS: gdb.base/commands.exp: add cont command
PASS: gdb.base/commands.exp: end commands
PASS: gdb.base/commands.exp: run factorial until breakpoint
PASS: gdb.base/commands.exp: set args in temporary_breakpoint_commands
PASS: gdb.base/commands.exp: breakpoint in temporary_breakpoint_commands
PASS: gdb.base/commands.exp: begin commands in bp_deleted_in_command_test
PASS: gdb.base/commands.exp: add silent tbreak command
PASS: gdb.base/commands.exp: add printf tbreak command
PASS: gdb.base/commands.exp: add cont tbreak command
PASS: gdb.base/commands.exp: end tbreak commands
PASS: gdb.base/commands.exp: run factorial until temporary breakpoint
PASS: gdb.base/commands.exp: stray_arg0_test #1
PASS: gdb.base/commands.exp: stray_arg0_test #2
PASS: gdb.base/commands.exp: stray_arg0_test #3
PASS: gdb.base/commands.exp: stray_arg0_test #4
PASS: gdb.base/commands.exp: source file with indented comment
PASS: gdb.base/commands.exp: recursive source test
PASS: gdb.base/commands.exp: set $tem in if_commands_test
PASS: gdb.base/commands.exp: if $tem == 2 - if_commands_test 1
PASS: gdb.base/commands.exp: break main - if_commands_test 1
PASS: gdb.base/commands.exp: else - if_commands_test 1
PASS: gdb.base/commands.exp: break factorial - if_commands_test 1
PASS: gdb.base/commands.exp: commands - if_commands_test 1
PASS: gdb.base/commands.exp: silent - if_commands_test 1
PASS: gdb.base/commands.exp: set $tem = 3 - if_commands_test 1
PASS: gdb.base/commands.exp: continue - if_commands_test 1
PASS: gdb.base/commands.exp: first end - if_commands_test 1
PASS: gdb.base/commands.exp: second end - if_commands_test 1
PASS: gdb.base/commands.exp: if $tem == 1 - if_commands_test 2
PASS: gdb.base/commands.exp: break main - if_commands_test 2
PASS: gdb.base/commands.exp: else - if_commands_test 2
PASS: gdb.base/commands.exp: break factorial - if_commands_test 2
PASS: gdb.base/commands.exp: commands - if_commands_test 2
PASS: gdb.base/commands.exp: silent - if_commands_test 2
PASS: gdb.base/commands.exp: set $tem = 3 - if_commands_test 2
PASS: gdb.base/commands.exp: continue - if_commands_test 2
PASS: gdb.base/commands.exp: first end - if_commands_test 2
PASS: gdb.base/commands.exp: second end - if_commands_test 2
PASS: gdb.base/commands.exp: define one
PASS: gdb.base/commands.exp: define hook-one
PASS: gdb.base/commands.exp: define one in redefine_hook_test
PASS: gdb.base/commands.exp: enter commands for one redefinition in redefine_hook_test
PASS: gdb.base/commands.exp: execute one command in redefine_hook_test
PASS: gdb.base/commands.exp: define backtrace
PASS: gdb.base/commands.exp: expect response to define backtrace
PASS: gdb.base/commands.exp: enter commands in redefine_backtrace_test
PASS: gdb.base/commands.exp: execute backtrace command in redefine_backtrace_test
PASS: gdb.base/commands.exp: execute bt command in redefine_backtrace_test
Running ../../../master/gdb/testsuite/gdb.base/completion.exp ...
PASS: gdb.base/completion.exp: complete 'hfgfh'
PASS: gdb.base/completion.exp: complete 'show output'
PASS: gdb.base/completion.exp: complete 'show output-'
PASS: gdb.base/completion.exp: complete 'p'
PASS: gdb.base/completion.exp: complete 'p '
PASS: gdb.base/completion.exp: complete 'info t foo'
PASS: gdb.base/completion.exp: complete 'info t'
PASS: gdb.base/completion.exp: complete 'info t '
PASS: gdb.base/completion.exp: complete 'info asdfgh'
PASS: gdb.base/completion.exp: complete 'info asdfgh '
PASS: gdb.base/completion.exp: complete 'info'
PASS: gdb.base/completion.exp: complete 'info '
PASS: gdb.base/completion.exp: complete (2) 'info '
PASS: gdb.base/completion.exp: complete 'help info wat'
PASS: gdb.base/completion.exp: complete 'p "break1'
XFAIL: gdb.base/completion.exp: complete 'p "break1.'
PASS: gdb.base/completion.exp: complete 'p 'arg'
PASS: gdb.base/completion.exp: complete (2) 'p 'arg'
PASS: gdb.base/completion.exp: complete 'p no_var_named_this-arg'
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-arg'
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-' (eat prompt)
PASS: gdb.base/completion.exp: complete (2) 'p no_var_named_this-'
PASS: gdb.base/completion.exp: complete 'p values[0].a'
PASS: gdb.base/completion.exp: complete 'p values[0] . a'
PASS: gdb.base/completion.exp: complete 'p &values[0] -> a'
PASS: gdb.base/completion.exp: completion of field in anonymous union
PASS: gdb.base/completion.exp: cd to ${srcdir}
PASS: gdb.base/completion.exp: directory completion
PASS: gdb.base/completion.exp: directory completion 2
PASS: gdb.base/completion.exp: Glob remaining of directory test
PASS: gdb.base/completion.exp: complete-command 'file ./gdb.base/compl'
PASS: gdb.base/completion.exp: complete 'file ./gdb.base/complet'
PASS: gdb.base/completion.exp: complete 'info func marke'
PASS: gdb.base/completion.exp: complete 'set follow-fork-mode'
PASS: gdb.base/completion.exp: field completion with invalid field
PASS: gdb.base/completion.exp: test non-deprecated completion
PASS: gdb.base/completion.exp: test deprecated completion
Running ../../../master/gdb/testsuite/gdb.base/complex.exp ...
PASS: gdb.base/complex.exp: print complex packed value in C
PASS: gdb.base/complex.exp: print complex value in C
Running ../../../master/gdb/testsuite/gdb.base/cond-expr.exp ...
PASS: gdb.base/cond-expr.exp: print value of cond expr (const true)
PASS: gdb.base/cond-expr.exp: print value of cond expr (const false)
PASS: gdb.base/cond-expr.exp: set variable x=14
PASS: gdb.base/cond-expr.exp: set variable y=2
PASS: gdb.base/cond-expr.exp: set variable z=3
PASS: gdb.base/cond-expr.exp: print value of cond expr (var true)
PASS: gdb.base/cond-expr.exp: set variable x=0
PASS: gdb.base/cond-expr.exp: print value of cond expr (var false)
PASS: gdb.base/cond-expr.exp: print whatis of cond expr
Running ../../../master/gdb/testsuite/gdb.base/condbreak.exp ...
PASS: gdb.base/condbreak.exp: breakpoint function
PASS: gdb.base/condbreak.exp: break marker1 if 1==1
PASS: gdb.base/condbreak.exp: delete 2
PASS: gdb.base/condbreak.exp: break break.c:97 if 1==1
PASS: gdb.base/condbreak.exp: delete 3
PASS: gdb.base/condbreak.exp: break marker1 if (1==1)
PASS: gdb.base/condbreak.exp: break break.c:97 if (1==1)
PASS: gdb.base/condbreak.exp: break marker2 if (a==43)
PASS: gdb.base/condbreak.exp: break marker3 if (multi_line_if_conditional(1,1,1)==0)
PASS: gdb.base/condbreak.exp: break marker4
PASS: gdb.base/condbreak.exp: breakpoint info
PASS: gdb.base/condbreak.exp: rerun to main
PASS: gdb.base/condbreak.exp: run until breakpoint set at a line number
PASS: gdb.base/condbreak.exp: run until breakpoint at marker1
PASS: gdb.base/condbreak.exp: run until breakpoint at marker2
PASS: gdb.base/condbreak.exp: break main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) thread 999
PASS: gdb.base/condbreak.exp: break *main thread 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) task 999
PASS: gdb.base/condbreak.exp: break *main task 999 if (1==1)
PASS: gdb.base/condbreak.exp: break *main if (1==1) t 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) th 999
PASS: gdb.base/condbreak.exp: break *main if (1==1) ta 999
PASS: gdb.base/condbreak.exp: run until breakpoint at marker3
PASS: gdb.base/condbreak.exp: run until breakpoint at marker4
Running ../../../master/gdb/testsuite/gdb.base/consecutive.exp ...
PASS: gdb.base/consecutive.exp: continue to breakpoint in foo
PASS: gdb.base/consecutive.exp: get breakpoint address for foo
PASS: gdb.base/consecutive.exp: set bp, 2nd instr
PASS: gdb.base/consecutive.exp: stopped at bp, 2nd instr
Running ../../../master/gdb/testsuite/gdb.base/constvars.exp ...
PASS: gdb.base/constvars.exp: break marker1
PASS: gdb.base/constvars.exp: continue to marker1
PASS: gdb.base/constvars.exp: up from marker1
PASS: gdb.base/constvars.exp: ptype qux1
PASS: gdb.base/constvars.exp: print lave
PASS: gdb.base/constvars.exp: ptype lave
PASS: gdb.base/constvars.exp: print lavish
PASS: gdb.base/constvars.exp: ptype lavish
PASS: gdb.base/constvars.exp: print lax
PASS: gdb.base/constvars.exp: ptype lax
PASS: gdb.base/constvars.exp: print lecherous
PASS: gdb.base/constvars.exp: ptype lecherous
PASS: gdb.base/constvars.exp: print lechery
PASS: gdb.base/constvars.exp: ptype lechery
PASS: gdb.base/constvars.exp: print lectern
PASS: gdb.base/constvars.exp: ptype lectern
PASS: gdb.base/constvars.exp: print leeway
PASS: gdb.base/constvars.exp: ptype leeway
PASS: gdb.base/constvars.exp: print legacy
PASS: gdb.base/constvars.exp: ptype legacy
PASS: gdb.base/constvars.exp: print laconic
PASS: gdb.base/constvars.exp: ptype laconic
PASS: gdb.base/constvars.exp: print laggard
PASS: gdb.base/constvars.exp: ptype laggard
PASS: gdb.base/constvars.exp: print lagoon
PASS: gdb.base/constvars.exp: ptype lagoon
PASS: gdb.base/constvars.exp: print laity
PASS: gdb.base/constvars.exp: ptype laity
PASS: gdb.base/constvars.exp: print lambent
PASS: gdb.base/constvars.exp: ptype lambent
PASS: gdb.base/constvars.exp: print laminated
PASS: gdb.base/constvars.exp: ptype laminated
PASS: gdb.base/constvars.exp: print lampoon
PASS: gdb.base/constvars.exp: ptype lampoon
PASS: gdb.base/constvars.exp: print languid
PASS: gdb.base/constvars.exp: ptype languid
PASS: gdb.base/constvars.exp: print *legend
PASS: gdb.base/constvars.exp: ptype legend
PASS: gdb.base/constvars.exp: print *legerdemain
PASS: gdb.base/constvars.exp: ptype legerdemain
PASS: gdb.base/constvars.exp: print *leniency
PASS: gdb.base/constvars.exp: ptype leniency
PASS: gdb.base/constvars.exp: print *leonine
PASS: gdb.base/constvars.exp: ptype leonine
PASS: gdb.base/constvars.exp: print *lesion
PASS: gdb.base/constvars.exp: ptype lesion
PASS: gdb.base/constvars.exp: print *lethal
PASS: gdb.base/constvars.exp: ptype lethal
PASS: gdb.base/constvars.exp: print *lethargic
PASS: gdb.base/constvars.exp: ptype lethargic
PASS: gdb.base/constvars.exp: print *levity
PASS: gdb.base/constvars.exp: ptype levity
PASS: gdb.base/constvars.exp: print *lewd
PASS: gdb.base/constvars.exp: ptype lewd
PASS: gdb.base/constvars.exp: print *lexicographer
PASS: gdb.base/constvars.exp: ptype lexicographer
PASS: gdb.base/constvars.exp: print *lexicon
PASS: gdb.base/constvars.exp: ptype lexicon
PASS: gdb.base/constvars.exp: print *liaison
PASS: gdb.base/constvars.exp: ptype liaison
PASS: gdb.base/constvars.exp: print *libation
PASS: gdb.base/constvars.exp: ptype libation
PASS: gdb.base/constvars.exp: print *libelous
PASS: gdb.base/constvars.exp: ptype libelous
PASS: gdb.base/constvars.exp: print *libertine
PASS: gdb.base/constvars.exp: ptype libertine
PASS: gdb.base/constvars.exp: print *libidinous
PASS: gdb.base/constvars.exp: ptype libidinous
PASS: gdb.base/constvars.exp: print *languish
PASS: gdb.base/constvars.exp: ptype languish
PASS: gdb.base/constvars.exp: print *languor
PASS: gdb.base/constvars.exp: ptype languor
PASS: gdb.base/constvars.exp: print *lank
PASS: gdb.base/constvars.exp: ptype lank
PASS: gdb.base/constvars.exp: print *lapidary
PASS: gdb.base/constvars.exp: ptype lapidary
PASS: gdb.base/constvars.exp: print *larceny
PASS: gdb.base/constvars.exp: ptype larceny
PASS: gdb.base/constvars.exp: print *largess
PASS: gdb.base/constvars.exp: ptype largess
PASS: gdb.base/constvars.exp: print *lascivious
PASS: gdb.base/constvars.exp: ptype lascivious
PASS: gdb.base/constvars.exp: print *lassitude
PASS: gdb.base/constvars.exp: ptype lassitude
PASS: gdb.base/constvars.exp: print *lamprey
PASS: gdb.base/constvars.exp: ptype lamprey
PASS: gdb.base/constvars.exp: print *lariat
PASS: gdb.base/constvars.exp: ptype lariat
PASS: gdb.base/constvars.exp: print *laudanum
PASS: gdb.base/constvars.exp: ptype laudanum
PASS: gdb.base/constvars.exp: print *lecithin
PASS: gdb.base/constvars.exp: ptype lecithin
PASS: gdb.base/constvars.exp: print *leviathan
PASS: gdb.base/constvars.exp: ptype leviathan
PASS: gdb.base/constvars.exp: print *libretto
PASS: gdb.base/constvars.exp: ptype libretto
PASS: gdb.base/constvars.exp: print *lissome
PASS: gdb.base/constvars.exp: ptype lissome
PASS: gdb.base/constvars.exp: print *locust
PASS: gdb.base/constvars.exp: ptype locust
PASS: gdb.base/constvars.exp: ptype logical
PASS: gdb.base/constvars.exp: ptype lugged
PASS: gdb.base/constvars.exp: ptype luck
PASS: gdb.base/constvars.exp: ptype lunar
PASS: gdb.base/constvars.exp: ptype lumen
PASS: gdb.base/constvars.exp: ptype lurk
PASS: gdb.base/constvars.exp: ptype lush
PASS: gdb.base/constvars.exp: ptype lynx
PASS: gdb.base/constvars.exp: ptype crass
PASS: gdb.base/constvars.exp: ptype crisp
Running ../../../master/gdb/testsuite/gdb.base/corefile.exp ...
PASS: gdb.base/corefile.exp: args: -core=coremaker.core (with bad program name)
PASS: gdb.base/corefile.exp: args: execfile -core=coremaker.core (with bad program name)
PASS: gdb.base/corefile.exp: core-file command (with bad program name)
PASS: gdb.base/corefile.exp: print coremaker_data
PASS: gdb.base/corefile.exp: print coremaker_bss
PASS: gdb.base/corefile.exp: print coremaker_ro
PASS: gdb.base/corefile.exp: print func2::coremaker_local
PASS: gdb.base/corefile.exp: backtrace in corefile.exp
PASS: gdb.base/corefile.exp: up in corefile.exp
PASS: gdb.base/corefile.exp: accessing original mmap data in core file
PASS: gdb.base/corefile.exp: accessing mmapped data in core file
PASS: gdb.base/corefile.exp: up in corefile.exp (reinit)
PASS: gdb.base/corefile.exp: core
PASS: gdb.base/corefile.exp: run: load core again
PASS: gdb.base/corefile.exp: run: sanity check we see the core file
PASS: gdb.base/corefile.exp: run: with core
PASS: gdb.base/corefile.exp: run: core file is cleared
PASS: gdb.base/corefile.exp: quit with a process
PASS: gdb.base/corefile.exp: quit with processes: n
PASS: gdb.base/corefile.exp: no question: load core
PASS: gdb.base/corefile.exp: quit with a core file
PASS: gdb.base/corefile.exp: attach: load core again
PASS: gdb.base/corefile.exp: attach: sanity check we see the core file
PASS: gdb.base/corefile.exp: attach: with core
PASS: gdb.base/corefile.exp: attach: core file is cleared
Running ../../../master/gdb/testsuite/gdb.base/cursal.exp ...
PASS: gdb.base/cursal.exp: set listsize 1
PASS: gdb.base/cursal.exp: list before run
PASS: gdb.base/cursal.exp: list in main
PASS: gdb.base/cursal.exp: list in func2
PASS: gdb.base/cursal.exp: backtrace
PASS: gdb.base/cursal.exp: list after backtrace
PASS: gdb.base/cursal.exp: set listsize 3
PASS: gdb.base/cursal.exp: list size 3
Running ../../../master/gdb/testsuite/gdb.base/cvexpr.exp ...
PASS: gdb.base/cvexpr.exp: set print sevenbit-strings
PASS: gdb.base/cvexpr.exp: set print address off
PASS: gdb.base/cvexpr.exp: set width 0
PASS: gdb.base/cvexpr.exp: (const char)
PASS: gdb.base/cvexpr.exp: (const signed char)
PASS: gdb.base/cvexpr.exp: (const unsigned char)
PASS: gdb.base/cvexpr.exp: (const short)
PASS: gdb.base/cvexpr.exp: (const signed short)
PASS: gdb.base/cvexpr.exp: (const unsigned short)
PASS: gdb.base/cvexpr.exp: (const int)
PASS: gdb.base/cvexpr.exp: (const signed int)
PASS: gdb.base/cvexpr.exp: (const unsigned int)
PASS: gdb.base/cvexpr.exp: (const long)
PASS: gdb.base/cvexpr.exp: (const signed long)
PASS: gdb.base/cvexpr.exp: (const unsigned long)
PASS: gdb.base/cvexpr.exp: (const long long)
PASS: gdb.base/cvexpr.exp: (const signed long long)
PASS: gdb.base/cvexpr.exp: (const unsigned long long)
PASS: gdb.base/cvexpr.exp: (const float)
PASS: gdb.base/cvexpr.exp: (const double)
PASS: gdb.base/cvexpr.exp: (volatile char)
PASS: gdb.base/cvexpr.exp: (volatile signed char)
PASS: gdb.base/cvexpr.exp: (volatile unsigned char)
PASS: gdb.base/cvexpr.exp: (volatile short)
PASS: gdb.base/cvexpr.exp: (volatile signed short)
PASS: gdb.base/cvexpr.exp: (volatile unsigned short)
PASS: gdb.base/cvexpr.exp: (volatile int)
PASS: gdb.base/cvexpr.exp: (volatile signed int)
PASS: gdb.base/cvexpr.exp: (volatile unsigned int)
PASS: gdb.base/cvexpr.exp: (volatile long)
PASS: gdb.base/cvexpr.exp: (volatile signed long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long)
PASS: gdb.base/cvexpr.exp: (volatile long long)
PASS: gdb.base/cvexpr.exp: (volatile signed long long)
PASS: gdb.base/cvexpr.exp: (volatile unsigned long long)
PASS: gdb.base/cvexpr.exp: (volatile float)
PASS: gdb.base/cvexpr.exp: (volatile double)
PASS: gdb.base/cvexpr.exp: (const volatile int)
PASS: gdb.base/cvexpr.exp: (volatile const int)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const)
PASS: gdb.base/cvexpr.exp: (int const volatile)
PASS: gdb.base/cvexpr.exp: (int volatile const)
PASS: gdb.base/cvexpr.exp: (const volatile int *)
PASS: gdb.base/cvexpr.exp: (volatile const int *)
PASS: gdb.base/cvexpr.exp: (const int volatile)
PASS: gdb.base/cvexpr.exp: (volatile int const *)
PASS: gdb.base/cvexpr.exp: (int const volatile *)
PASS: gdb.base/cvexpr.exp: (int volatile const *)
PASS: gdb.base/cvexpr.exp: (int * const volatile)
PASS: gdb.base/cvexpr.exp: (int * volatile const)
PASS: gdb.base/cvexpr.exp: (char const)
PASS: gdb.base/cvexpr.exp: (signed char const)
PASS: gdb.base/cvexpr.exp: (unsigned char const)
PASS: gdb.base/cvexpr.exp: (short const)
PASS: gdb.base/cvexpr.exp: (signed short const)
PASS: gdb.base/cvexpr.exp: (unsigned short const)
PASS: gdb.base/cvexpr.exp: (int const)
PASS: gdb.base/cvexpr.exp: (signed int const)
PASS: gdb.base/cvexpr.exp: (unsigned int const)
PASS: gdb.base/cvexpr.exp: (long const)
PASS: gdb.base/cvexpr.exp: (signed long const)
PASS: gdb.base/cvexpr.exp: (unsigned long const)
PASS: gdb.base/cvexpr.exp: (long long const)
PASS: gdb.base/cvexpr.exp: (signed long long const)
PASS: gdb.base/cvexpr.exp: (unsigned long long const)
PASS: gdb.base/cvexpr.exp: (float const)
PASS: gdb.base/cvexpr.exp: (double const)
PASS: gdb.base/cvexpr.exp: (char volatile)
PASS: gdb.base/cvexpr.exp: (signed char volatile)
PASS: gdb.base/cvexpr.exp: (unsigned char volatile)
PASS: gdb.base/cvexpr.exp: (short volatile)
PASS: gdb.base/cvexpr.exp: (signed short volatile)
PASS: gdb.base/cvexpr.exp: (unsigned short volatile)
PASS: gdb.base/cvexpr.exp: (int volatile)
PASS: gdb.base/cvexpr.exp: (signed int volatile)
PASS: gdb.base/cvexpr.exp: (unsigned int volatile)
PASS: gdb.base/cvexpr.exp: (long volatile)
PASS: gdb.base/cvexpr.exp: (signed long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long volatile)
PASS: gdb.base/cvexpr.exp: (long long volatile)
PASS: gdb.base/cvexpr.exp: (signed long long volatile)
PASS: gdb.base/cvexpr.exp: (unsigned long long volatile)
PASS: gdb.base/cvexpr.exp: (float volatile)
PASS: gdb.base/cvexpr.exp: (double volatile)
PASS: gdb.base/cvexpr.exp: (const enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered const)
PASS: gdb.base/cvexpr.exp: (volatile enum misordered)
PASS: gdb.base/cvexpr.exp: (enum misordered volatile)
PASS: gdb.base/cvexpr.exp: (const int *)
PASS: gdb.base/cvexpr.exp: (int const *)
PASS: gdb.base/cvexpr.exp: (int * const)
PASS: gdb.base/cvexpr.exp: (const int * const)
PASS: gdb.base/cvexpr.exp: (int const * const)
PASS: gdb.base/cvexpr.exp: (const int **)
PASS: gdb.base/cvexpr.exp: (int const **)
PASS: gdb.base/cvexpr.exp: (int ** const)
PASS: gdb.base/cvexpr.exp: (const int * const *)
PASS: gdb.base/cvexpr.exp: (int const * const *)
PASS: gdb.base/cvexpr.exp: (const int * const * const)
PASS: gdb.base/cvexpr.exp: (int const * const * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct)
PASS: gdb.base/cvexpr.exp: (const union t_union)
PASS: gdb.base/cvexpr.exp: (struct t_struct const)
PASS: gdb.base/cvexpr.exp: (union t_union const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct *)
PASS: gdb.base/cvexpr.exp: (const union t_union *)
PASS: gdb.base/cvexpr.exp: (struct t_struct const *)
PASS: gdb.base/cvexpr.exp: (union t_union const *)
PASS: gdb.base/cvexpr.exp: (struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (union t_union * const)
PASS: gdb.base/cvexpr.exp: (const struct t_struct * const)
PASS: gdb.base/cvexpr.exp: (const union t_union * const)
PASS: gdb.base/cvexpr.exp: (struct t_struct const * const)
PASS: gdb.base/cvexpr.exp: (union t_union const * const)
Running ../../../master/gdb/testsuite/gdb.base/dbx.exp ...
PASS: gdb.base/dbx.exp: stop in main
PASS: gdb.base/dbx.exp: status
PASS: gdb.base/dbx.exp: stop at average.c:43
PASS: gdb.base/dbx.exp: stop in average.c:43
PASS: gdb.base/dbx.exp: stop at main
PASS: gdb.base/dbx.exp: running to main
PASS: gdb.base/dbx.exp: assign first
PASS: gdb.base/dbx.exp: print first
PASS: gdb.base/dbx.exp: whereis my_list
PASS: gdb.base/dbx.exp: file average.c:1
PASS: gdb.base/dbx.exp: cont 1
PASS: gdb.base/dbx.exp: step
XFAIL: gdb.base/dbx.exp: func sum
PASS: gdb.base/dbx.exp: stop in sum
PASS: gdb.base/dbx.exp: cont 2
XFAIL: gdb.base/dbx.exp: func print_average
Running ../../../master/gdb/testsuite/gdb.base/default.exp ...
PASS: gdb.base/default.exp: add-symbol-file
PASS: gdb.base/default.exp: append
PASS: gdb.base/default.exp: append binary
PASS: gdb.base/default.exp: append memory
PASS: gdb.base/default.exp: append value
PASS: gdb.base/default.exp: append binary memory
PASS: gdb.base/default.exp: append binary value
PASS: gdb.base/default.exp: attach
PASS: gdb.base/default.exp: break
PASS: gdb.base/default.exp: break "b" abbreviation
PASS: gdb.base/default.exp: break "br" abbreviation
PASS: gdb.base/default.exp: break "bre" abbreviation
PASS: gdb.base/default.exp: break "brea" abbreviation
PASS: gdb.base/default.exp: backtrace
PASS: gdb.base/default.exp: backtrace "bt" abbreviation
PASS: gdb.base/default.exp: backtrace "ba" abbreviation
PASS: gdb.base/default.exp: backtrace "bac" abbreviation
PASS: gdb.base/default.exp: continue
PASS: gdb.base/default.exp: continue "c" abbreviation
PASS: gdb.base/default.exp: call
PASS: gdb.base/default.exp: catch
PASS: gdb.base/default.exp: cd
PASS: gdb.base/default.exp: clear
PASS: gdb.base/default.exp: commands
PASS: gdb.base/default.exp: condition
PASS: gdb.base/default.exp: core-file
PASS: gdb.base/default.exp: delete "d" abbreviation
PASS: gdb.base/default.exp: delete
PASS: gdb.base/default.exp: define
PASS: gdb.base/default.exp: delete breakpoints
PASS: gdb.base/default.exp: delete display prompt
PASS: gdb.base/default.exp: detach
PASS: gdb.base/default.exp: directory prompt
PASS: gdb.base/default.exp: disable "dis" abbreviation
PASS: gdb.base/default.exp: disable "disa" abbreviation
PASS: gdb.base/default.exp: disable
PASS: gdb.base/default.exp: disable breakpoints
PASS: gdb.base/default.exp: disable display
PASS: gdb.base/default.exp: disassemble
PASS: gdb.base/default.exp: display
PASS: gdb.base/default.exp: do
PASS: gdb.base/default.exp: document
PASS: gdb.base/default.exp: down
PASS: gdb.base/default.exp: down-silently
PASS: gdb.base/default.exp: dump
PASS: gdb.base/default.exp: dump binary
PASS: gdb.base/default.exp: dump ihex
PASS: gdb.base/default.exp: dump memory
PASS: gdb.base/default.exp: dump srec
PASS: gdb.base/default.exp: dump tekhex
PASS: gdb.base/default.exp: dump value
PASS: gdb.base/default.exp: dump binary memory
PASS: gdb.base/default.exp: dump binary value
PASS: gdb.base/default.exp: dump ihex memory
PASS: gdb.base/default.exp: dump ihex value
PASS: gdb.base/default.exp: dump srec memory
PASS: gdb.base/default.exp: dump srec value
PASS: gdb.base/default.exp: dump tekhex memory
PASS: gdb.base/default.exp: dump tekhex value
PASS: gdb.base/default.exp: echo
PASS: gdb.base/default.exp: enable breakpoints delete
PASS: gdb.base/default.exp: enable breakpoints once
PASS: gdb.base/default.exp: enable breakpoints
PASS: gdb.base/default.exp: enable delete
PASS: gdb.base/default.exp: enable display
PASS: gdb.base/default.exp: enable once
PASS: gdb.base/default.exp: enable
PASS: gdb.base/default.exp: exec-file
PASS: gdb.base/default.exp: frame "f" abbreviation
PASS: gdb.base/default.exp: frame
PASS: gdb.base/default.exp: fg
PASS: gdb.base/default.exp: file
PASS: gdb.base/default.exp: finish
PASS: gdb.base/default.exp: forward-search
PASS: gdb.base/default.exp: gcore
PASS: gdb.base/default.exp: generate-core-file
PASS: gdb.base/default.exp: help "h" abbreviation
PASS: gdb.base/default.exp: help
PASS: gdb.base/default.exp: handle
PASS: gdb.base/default.exp: info "i" abbreviation
PASS: gdb.base/default.exp: info
PASS: gdb.base/default.exp: ignore
PASS: gdb.base/default.exp: info address
PASS: gdb.base/default.exp: info all-registers
PASS: gdb.base/default.exp: info args
PASS: gdb.base/default.exp: info bogus-gdb-command
PASS: gdb.base/default.exp: info breakpoints
PASS: gdb.base/default.exp: info catch
PASS: gdb.base/default.exp: info copying
PASS: gdb.base/default.exp: info display
PASS: gdb.base/default.exp: info frame "f" abbreviation
PASS: gdb.base/default.exp: info frame
PASS: gdb.base/default.exp: info files
PASS: gdb.base/default.exp: info float
PASS: gdb.base/default.exp: info functions
PASS: gdb.base/default.exp: info locals
PASS: gdb.base/default.exp: info program
PASS: gdb.base/default.exp: info registers
PASS: gdb.base/default.exp: info stack "s" abbreviation
PASS: gdb.base/default.exp: info stack
PASS: gdb.base/default.exp: info set
PASS: gdb.base/default.exp: info symbol
PASS: gdb.base/default.exp: info source
PASS: gdb.base/default.exp: info sources
PASS: gdb.base/default.exp: info target
PASS: gdb.base/default.exp: info terminal
PASS: gdb.base/default.exp: info threads
PASS: gdb.base/default.exp: info types
PASS: gdb.base/default.exp: info variables
PASS: gdb.base/default.exp: info vector
PASS: gdb.base/default.exp: info warranty
PASS: gdb.base/default.exp: info watchpoints
PASS: gdb.base/default.exp: inspect
PASS: gdb.base/default.exp: jump
PASS: gdb.base/default.exp: kill
PASS: gdb.base/default.exp: list "l" abbreviation
PASS: gdb.base/default.exp: list
PASS: gdb.base/default.exp: load
PASS: gdb.base/default.exp: next "n" abbreviation
PASS: gdb.base/default.exp: next
PASS: gdb.base/default.exp: nexti "ni" abbreviation
PASS: gdb.base/default.exp: nexti
PASS: gdb.base/default.exp: output
PASS: gdb.base/default.exp: overlay
PASS: gdb.base/default.exp: overlay on
PASS: gdb.base/default.exp: overlay manual #1
PASS: gdb.base/default.exp: overlay auto
PASS: gdb.base/default.exp: overlay off
PASS: gdb.base/default.exp: overlay list
PASS: gdb.base/default.exp: overlay map #1
PASS: gdb.base/default.exp: overlay unmap #1
PASS: gdb.base/default.exp: overlay manual #2
PASS: gdb.base/default.exp: overlay map #2
PASS: gdb.base/default.exp: overlay unmap #2
PASS: gdb.base/default.exp: print "p" abbreviation
PASS: gdb.base/default.exp: print
PASS: gdb.base/default.exp: printf
PASS: gdb.base/default.exp: ptype
PASS: gdb.base/default.exp: pwd
PASS: gdb.base/default.exp: run "r" abbreviation
PASS: gdb.base/default.exp: run
PASS: gdb.base/default.exp: rbreak
PASS: gdb.base/default.exp: restore
PASS: gdb.base/default.exp: return
PASS: gdb.base/default.exp: reverse-search
PASS: gdb.base/default.exp: step "s" abbreviation #1
PASS: gdb.base/default.exp: step #1
PASS: gdb.base/default.exp: search
PASS: gdb.base/default.exp: section
PASS: gdb.base/default.exp: set annotate
PASS: gdb.base/default.exp: set args
PASS: gdb.base/default.exp: set check "c" abbreviation
PASS: gdb.base/default.exp: set check "ch" abbreviation
PASS: gdb.base/default.exp: set check
PASS: gdb.base/default.exp: set check range
PASS: gdb.base/default.exp: set check type
PASS: gdb.base/default.exp: set complaints
PASS: gdb.base/default.exp: set confirm
PASS: gdb.base/default.exp: set environment
PASS: gdb.base/default.exp: set height
PASS: gdb.base/default.exp: set history expansion
PASS: gdb.base/default.exp: set history filename
PASS: gdb.base/default.exp: set history save
PASS: gdb.base/default.exp: set history size
PASS: gdb.base/default.exp: set history
PASS: gdb.base/default.exp: set language
PASS: gdb.base/default.exp: set listsize
PASS: gdb.base/default.exp: set print "p" abbreviation
PASS: gdb.base/default.exp: set print "pr" abbreviation
PASS: gdb.base/default.exp: set print
PASS: gdb.base/default.exp: set print address
PASS: gdb.base/default.exp: set print array
PASS: gdb.base/default.exp: set print asm-demangle
PASS: gdb.base/default.exp: set print demangle
PASS: gdb.base/default.exp: set print elements
PASS: gdb.base/default.exp: set print object
PASS: gdb.base/default.exp: set print pretty
PASS: gdb.base/default.exp: set print sevenbit-strings
PASS: gdb.base/default.exp: set print union
PASS: gdb.base/default.exp: set print vtbl
PASS: gdb.base/default.exp: set radix
PASS: gdb.base/default.exp: set symbol-reloading
PASS: gdb.base/default.exp: set variable
PASS: gdb.base/default.exp: set verbose
PASS: gdb.base/default.exp: set width
PASS: gdb.base/default.exp: set write
PASS: gdb.base/default.exp: set
PASS: gdb.base/default.exp: shell echo Hi dad!
PASS: gdb.base/default.exp: show annotate
PASS: gdb.base/default.exp: show args
PASS: gdb.base/default.exp: show check "c" abbreviation
PASS: gdb.base/default.exp: show check "ch" abbreviation
PASS: gdb.base/default.exp: show check
PASS: gdb.base/default.exp: show check range
PASS: gdb.base/default.exp: show check type
PASS: gdb.base/default.exp: show commands
PASS: gdb.base/default.exp: show complaints
PASS: gdb.base/default.exp: show confirm
PASS: gdb.base/default.exp: show convenience
PASS: gdb.base/default.exp: show directories
PASS: gdb.base/default.exp: show editing
PASS: gdb.base/default.exp: show height
PASS: gdb.base/default.exp: show history expansion
PASS: gdb.base/default.exp: show history filename
PASS: gdb.base/default.exp: show history save
PASS: gdb.base/default.exp: show history size
PASS: gdb.base/default.exp: show history
PASS: gdb.base/default.exp: show language
PASS: gdb.base/default.exp: show listsize
PASS: gdb.base/default.exp: show p
PASS: gdb.base/default.exp: show pr
PASS: gdb.base/default.exp: show print
PASS: gdb.base/default.exp: show paths
PASS: gdb.base/default.exp: show print address
PASS: gdb.base/default.exp: show print array
PASS: gdb.base/default.exp: show print asm-demangle
PASS: gdb.base/default.exp: show print demangle
PASS: gdb.base/default.exp: show print elements
PASS: gdb.base/default.exp: show print object
PASS: gdb.base/default.exp: show print pretty
PASS: gdb.base/default.exp: show print sevenbit-strings
PASS: gdb.base/default.exp: show print union
PASS: gdb.base/default.exp: show print vtbl
PASS: gdb.base/default.exp: show prompt
PASS: gdb.base/default.exp: show radix
PASS: gdb.base/default.exp: show symbol-reloading
PASS: gdb.base/default.exp: show user
PASS: gdb.base/default.exp: show values
PASS: gdb.base/default.exp: show verbose
PASS: gdb.base/default.exp: show version
PASS: gdb.base/default.exp: show width
PASS: gdb.base/default.exp: show write
PASS: gdb.base/default.exp: show
PASS: gdb.base/default.exp: stepi "si" abbreviation
PASS: gdb.base/default.exp: stepi
PASS: gdb.base/default.exp: signal
PASS: gdb.base/default.exp: source
PASS: gdb.base/default.exp: step "s" abbreviation #2
PASS: gdb.base/default.exp: step #2
PASS: gdb.base/default.exp: symbol-file
PASS: gdb.base/default.exp: target child
PASS: gdb.base/default.exp: target procfs
PASS: gdb.base/default.exp: target core
PASS: gdb.base/default.exp: target exec
PASS: gdb.base/default.exp: target remote
PASS: gdb.base/default.exp: target
PASS: gdb.base/default.exp: tbreak
PASS: gdb.base/default.exp: thread
PASS: gdb.base/default.exp: thread apply
PASS: gdb.base/default.exp: thread find
PASS: gdb.base/default.exp: thread name
PASS: gdb.base/default.exp: tty
PASS: gdb.base/default.exp: until "u" abbreviation
PASS: gdb.base/default.exp: until
PASS: gdb.base/default.exp: undisplay prompt
PASS: gdb.base/default.exp: unset environment prompt
PASS: gdb.base/default.exp: unset
PASS: gdb.base/default.exp: up-silently
PASS: gdb.base/default.exp: watch
PASS: gdb.base/default.exp: whatis
PASS: gdb.base/default.exp: where
PASS: gdb.base/default.exp: x
Running ../../../master/gdb/testsuite/gdb.base/define.exp ...
PASS: gdb.base/define.exp: define user command: nextwhere
PASS: gdb.base/define.exp: use user command: nextwhere
PASS: gdb.base/define.exp: define user command: nextwh
PASS: gdb.base/define.exp: redefine user command aborted: nextwhere
PASS: gdb.base/define.exp: redefine user command: nextwhere
PASS: gdb.base/define.exp: redocumenting builtin command disallowed
PASS: gdb.base/define.exp: document user command: nextwhere
PASS: gdb.base/define.exp: re-document user command: nextwhere
PASS: gdb.base/define.exp: help user command: nextwhere
PASS: gdb.base/define.exp: set up whitespace in help string
PASS: gdb.base/define.exp: preserve whitespace in help string
PASS: gdb.base/define.exp: define user command: ifnospace
PASS: gdb.base/define.exp: test ifnospace is parsed correctly
PASS: gdb.base/define.exp: define user command: whilenospace
PASS: gdb.base/define.exp: test whilenospace is parsed correctly
PASS: gdb.base/define.exp: define user command: user-bt
PASS: gdb.base/define.exp: define hook-stop command
PASS: gdb.base/define.exp: use hook-stop command
PASS: gdb.base/define.exp: define hook undefined command aborted: bar
PASS: gdb.base/define.exp: define hook undefined command: bar
PASS: gdb.base/define.exp: define target testsuite
PASS: gdb.base/define.exp: document target testsuite
PASS: gdb.base/define.exp: help target
PASS: gdb.base/define.exp: target testsuite
PASS: gdb.base/define.exp: show user target testsuite
PASS: gdb.base/define.exp: define target hook-testsuite
PASS: gdb.base/define.exp: define target hookpost-testsuite
PASS: gdb.base/define.exp: target testsuite with hooks
PASS: gdb.base/define.exp: set gdb_prompt
PASS: gdb.base/define.exp: reset gdb_prompt
Running ../../../master/gdb/testsuite/gdb.base/del.exp ...
PASS: gdb.base/del.exp: Remove all breakpoints (del)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (del)
PASS: gdb.base/del.exp: Remove last breakpoint (del)
PASS: gdb.base/del.exp: info break after removing break on main (del)
PASS: gdb.base/del.exp: Remove all breakpoints (d)
PASS: gdb.base/del.exp: info break after removing break on main
PASS: gdb.base/del.exp: breakpoint insertion (d)
PASS: gdb.base/del.exp: Remove last breakpoint (d)
PASS: gdb.base/del.exp: info break after removing break on main (d)
Running ../../../master/gdb/testsuite/gdb.base/detach.exp ...
PASS: gdb.base/detach.exp: set should_exit, one
PASS: gdb.base/detach.exp: detach, one
PASS: gdb.base/detach.exp: set should_exit, two
PASS: gdb.base/detach.exp: detach, two
Running ../../../master/gdb/testsuite/gdb.base/dfp-exprs.exp ...
PASS: gdb.base/dfp-exprs.exp: p 1.2df
PASS: gdb.base/dfp-exprs.exp: p -1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.234567df
PASS: gdb.base/dfp-exprs.exp: p -1.234567df
PASS: gdb.base/dfp-exprs.exp: p 1234567.df
PASS: gdb.base/dfp-exprs.exp: p -1234567.df
PASS: gdb.base/dfp-exprs.exp: p 1.2E1df
PASS: gdb.base/dfp-exprs.exp: p 1.2E10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10df
PASS: gdb.base/dfp-exprs.exp: p 1.2E96df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd
PASS: gdb.base/dfp-exprs.exp: p -1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456dd
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456.dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dd
PASS: gdb.base/dfp-exprs.exp: p 1.2E384dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl
PASS: gdb.base/dfp-exprs.exp: p -1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p -1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-exprs.exp: p 1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p -1234567890123456789012345678901234.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E-10dl
PASS: gdb.base/dfp-exprs.exp: p 1.2E6144dl
PASS: gdb.base/dfp-exprs.exp: p 1.4df + 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df - 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df * 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4df / 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.4dd + 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd - 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd * 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dd / 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.4dl + 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl - 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl * 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.4dl / 1.2dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.df
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.dl + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 2.1df + 2.7dd
PASS: gdb.base/dfp-exprs.exp: p 2.1dd + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.6df + 2.7dl
PASS: gdb.base/dfp-exprs.exp: p 2.6dl + 2.7df
PASS: gdb.base/dfp-exprs.exp: p 2.3dd + 2.2dl
PASS: gdb.base/dfp-exprs.exp: p 2.3dl + 2.2dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dd
PASS: gdb.base/dfp-exprs.exp: ptype 2.df + 2.dl
PASS: gdb.base/dfp-exprs.exp: ptype 2.dd + 2.dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: p 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: p 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: ptype 1.2df + 1
PASS: gdb.base/dfp-exprs.exp: ptype 2 + 1.7dd
PASS: gdb.base/dfp-exprs.exp: ptype 3 + 2.1dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 2ll
PASS: gdb.base/dfp-exprs.exp: p 1.2df + 1.2f
PASS: gdb.base/dfp-exprs.exp: p !0.df
PASS: gdb.base/dfp-exprs.exp: p !0.dd
PASS: gdb.base/dfp-exprs.exp: p !0.dl
PASS: gdb.base/dfp-exprs.exp: p !0.5df
PASS: gdb.base/dfp-exprs.exp: p !0.5dd
PASS: gdb.base/dfp-exprs.exp: p !0.5dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2df == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd == 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dl == 1.3dd
PASS: gdb.base/dfp-exprs.exp: p +1.2df
PASS: gdb.base/dfp-exprs.exp: p +1.2dd
PASS: gdb.base/dfp-exprs.exp: p +1.2dl
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dd
PASS: gdb.base/dfp-exprs.exp: p 1.2dd < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3dl
PASS: gdb.base/dfp-exprs.exp: p 1.2dl < 1.3df
PASS: gdb.base/dfp-exprs.exp: p 1.2df > 1
PASS: gdb.base/dfp-exprs.exp: p 1.2dl > 2
PASS: gdb.base/dfp-exprs.exp: p 2 > 1.2dd
PASS: gdb.base/dfp-exprs.exp: p 2 > 3.1dl
PASS: gdb.base/dfp-exprs.exp: p (float) -0.1df
PASS: gdb.base/dfp-exprs.exp: p (int) 8.3dd
PASS: gdb.base/dfp-exprs.exp: p (_Decimal64) 3.1
PASS: gdb.base/dfp-exprs.exp: p (_Decimal128) 3.7df
PASS: gdb.base/dfp-exprs.exp: p (_Decimal32) 4
Running ../../../master/gdb/testsuite/gdb.base/dfp-test.exp ...
PASS: gdb.base/dfp-test.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/dfp-test.exp: next after initializing d32
PASS: gdb.base/dfp-test.exp: d32 is initialized to 1.2345
PASS: gdb.base/dfp-test.exp: next after assigning builtin infinity to d32
PASS: gdb.base/dfp-test.exp: d32 is positive Infinity
PASS: gdb.base/dfp-test.exp: next after assigning negative builtin infinity to d32
PASS: gdb.base/dfp-test.exp: d32 is negative Infinity
PASS: gdb.base/dfp-test.exp: next after assigning builtin NaN to d32
PASS: gdb.base/dfp-test.exp: d32 is NaN
PASS: gdb.base/dfp-test.exp: p d32=123.45df
PASS: gdb.base/dfp-test.exp: p d32=12345.df
PASS: gdb.base/dfp-test.exp: p d32=12345.67df
PASS: gdb.base/dfp-test.exp: p d32=1234567.df
PASS: gdb.base/dfp-test.exp: p d32=1.234567E0df
PASS: gdb.base/dfp-test.exp: p d32=1.234567E10df
PASS: gdb.base/dfp-test.exp: p d32=1.234567E+96df
PASS: gdb.base/dfp-test.exp: p d32=9.999999E96df
PASS: gdb.base/dfp-test.exp: p d32=1.0E-95df
PASS: gdb.base/dfp-test.exp: p d32=1.E-101df
PASS: gdb.base/dfp-test.exp: p d32=0.000001E-95df
PASS: gdb.base/dfp-test.exp: 1.2345678 is rounded to 1.234568
PASS: gdb.base/dfp-test.exp: 1.0E-101 is rounded to 1E-101
PASS: gdb.base/dfp-test.exp: 1.234567E+97 is Infinity
PASS: gdb.base/dfp-test.exp: 12345. is a valid number
PASS: gdb.base/dfp-test.exp: 12345 is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E45A is an invalid number
PASS: gdb.base/dfp-test.exp: next after initializing d64
PASS: gdb.base/dfp-test.exp: d64 is initialized to 1.2345
PASS: gdb.base/dfp-test.exp: next after assigning builtin infinity to d64
PASS: gdb.base/dfp-test.exp: d64 is positive Infinity
PASS: gdb.base/dfp-test.exp: next after assigning negative builtin infinity to d64
PASS: gdb.base/dfp-test.exp: d64 is negative Infinity
PASS: gdb.base/dfp-test.exp: next after assigning builtin NaN to d64
PASS: gdb.base/dfp-test.exp: d64 is NaN
PASS: gdb.base/dfp-test.exp: p d64=123.45dd
PASS: gdb.base/dfp-test.exp: p d64=12345.dd
PASS: gdb.base/dfp-test.exp: p d64=12345.67dd
PASS: gdb.base/dfp-test.exp: p d64=1.234567890123456dd
PASS: gdb.base/dfp-test.exp: p d64=1.234567890123456E10dd
PASS: gdb.base/dfp-test.exp: p d64=1.234567890123456E100dd
PASS: gdb.base/dfp-test.exp: p d64=1.234567890123456E384dd
PASS: gdb.base/dfp-test.exp: p d64=9.999999999999999E384dd
PASS: gdb.base/dfp-test.exp: p d64=1.E-383dd
PASS: gdb.base/dfp-test.exp: p d64=1.E-398dd
PASS: gdb.base/dfp-test.exp: p d64=0.000000000000001E-383dd
PASS: gdb.base/dfp-test.exp: 1.2345678901234567 is rounded to 1.234567890123457
PASS: gdb.base/dfp-test.exp: d64=9.9999999999999999E384 is Infinity
PASS: gdb.base/dfp-test.exp: d64=1.234567890123456E385 is Infinity
PASS: gdb.base/dfp-test.exp: 12345dd is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E45A is an invalid number
PASS: gdb.base/dfp-test.exp: next after initializing d128
PASS: gdb.base/dfp-test.exp: d128 is initialized to 1.2345
PASS: gdb.base/dfp-test.exp: p d128=123.45dl
PASS: gdb.base/dfp-test.exp: p d128=12345.dl
PASS: gdb.base/dfp-test.exp: p d128=12345.67dl
PASS: gdb.base/dfp-test.exp: p d128=1.234567890123456789012345678901234dl
PASS: gdb.base/dfp-test.exp: p d128=1.234567890123456E10dl
PASS: gdb.base/dfp-test.exp: p d128=1.234567890123456E100dl
PASS: gdb.base/dfp-test.exp: p d128=1.234567890123456E1000dl
PASS: gdb.base/dfp-test.exp: p d128=9.999999999999999999999999999999999E6144dl
PASS: gdb.base/dfp-test.exp: p d128=1.E-6143dl
PASS: gdb.base/dfp-test.exp: p d128=1.E-6176dl
PASS: gdb.base/dfp-test.exp: p d128=0.000000000000000000000000000000001E-6143dl
PASS: gdb.base/dfp-test.exp: 1.2345678901234567890123456789012345 is rounded to 1.234567890123456789012345678901234
PASS: gdb.base/dfp-test.exp: d128=1.234567890123456E6145 is Infinity
PASS: gdb.base/dfp-test.exp: 12345dl is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E is an invalid number
PASS: gdb.base/dfp-test.exp: 1.23E45A is an invalid number
PASS: gdb.base/dfp-test.exp: next after assigning builtin infinity to d128
PASS: gdb.base/dfp-test.exp: d128 is positive Infinity
PASS: gdb.base/dfp-test.exp: next after assigning negative builtin infinity to d128
PASS: gdb.base/dfp-test.exp: d128 is negative Infinity
PASS: gdb.base/dfp-test.exp: next after assigning builtin NaN to d128
PASS: gdb.base/dfp-test.exp: d128 is NaN
PASS: gdb.base/dfp-test.exp: continue to breakpoint: entry to arg0_32
PASS: gdb.base/dfp-test.exp: backtrace at arg0_32
PASS: gdb.base/dfp-test.exp: continue to breakpoint: entry to arg0_64
PASS: gdb.base/dfp-test.exp: backtrace at arg0_64
PASS: gdb.base/dfp-test.exp: continue to breakpoint: entry to arg0_128
PASS: gdb.base/dfp-test.exp: backtrace at arg0_128
PASS: gdb.base/dfp-test.exp: Call function with correct _Decimal32 arguments.
PASS: gdb.base/dfp-test.exp: Backtrace function with correct _Decimal32 arguments.
PASS: gdb.base/dfp-test.exp: Correct _Decimal32 return value from called function.
PASS: gdb.base/dfp-test.exp: Call function with correct _Decimal64 arguments.
PASS: gdb.base/dfp-test.exp: Backtrace function with correct _Decimal64 arguments.
PASS: gdb.base/dfp-test.exp: Correct _Decimal64 return value from called function.
PASS: gdb.base/dfp-test.exp: Call function with correct _Decimal128 arguments.
PASS: gdb.base/dfp-test.exp: Backtrace function with correct _Decimal128 arguments.
PASS: gdb.base/dfp-test.exp: Correct _Decimal128 return value from called function.
PASS: gdb.base/dfp-test.exp: Call function with mixed decimal float arguments TEST.
PASS: gdb.base/dfp-test.exp: Call function with mixed decimal float arguments.
PASS: gdb.base/dfp-test.exp: Call function with many _Decimal32 arguments.
PASS: gdb.base/dfp-test.exp: Call function with many _Decimal64 arguments.
PASS: gdb.base/dfp-test.exp: Call function with many _Decimal128 arguments.
PASS: gdb.base/dfp-test.exp: Call function with many mixed decimal float arguments.
PASS: gdb.base/dfp-test.exp: continue to breakpoint: Setting a decimal struct
PASS: gdb.base/dfp-test.exp: print ds.dec32
PASS: gdb.base/dfp-test.exp: print ds.dec64
PASS: gdb.base/dfp-test.exp: print ds.dec128
PASS: gdb.base/dfp-test.exp: print d32 + ds.dec32
PASS: gdb.base/dfp-test.exp: print d64 + ds.dec64
PASS: gdb.base/dfp-test.exp: print d128 + ds.dec128
PASS: gdb.base/dfp-test.exp: ptype d64 + ds.dec32
PASS: gdb.base/dfp-test.exp: ptype d128 + ds.dec32
PASS: gdb.base/dfp-test.exp: ptype d128 + ds.dec64
PASS: gdb.base/dfp-test.exp: p d32 + 1
PASS: gdb.base/dfp-test.exp: p 2 + d64
PASS: gdb.base/dfp-test.exp: p ds.int4 + d128
PASS: gdb.base/dfp-test.exp: ptype d32 + 1
PASS: gdb.base/dfp-test.exp: ptype ds.int4 + d128
PASS: gdb.base/dfp-test.exp: p !d32
PASS: gdb.base/dfp-test.exp: p !d64
PASS: gdb.base/dfp-test.exp: p !d128
PASS: gdb.base/dfp-test.exp: p +d32
PASS: gdb.base/dfp-test.exp: p +d64
PASS: gdb.base/dfp-test.exp: p +d128
PASS: gdb.base/dfp-test.exp: p d64 == d128
PASS: gdb.base/dfp-test.exp: p d128 == ds.dec32
PASS: gdb.base/dfp-test.exp: p d128 == d32
PASS: gdb.base/dfp-test.exp: p ds.dec32 == ds.dec64
PASS: gdb.base/dfp-test.exp: p d32 < ds.dec32
PASS: gdb.base/dfp-test.exp: p d64 < ds.dec64
PASS: gdb.base/dfp-test.exp: p d128 < ds.dec128
PASS: gdb.base/dfp-test.exp: p ds.dec32 < d32
PASS: gdb.base/dfp-test.exp: p d64 > ds.dec64
PASS: gdb.base/dfp-test.exp: p ds.dec128 > d128
PASS: gdb.base/dfp-test.exp: p d32 < ds.int4
PASS: gdb.base/dfp-test.exp: p ds.int4 > d32
PASS: gdb.base/dfp-test.exp: p ds.dec32 < ds.int4
PASS: gdb.base/dfp-test.exp: p ds.int4 > ds.dec64
PASS: gdb.base/dfp-test.exp: p ds.dec128 > ds.int4
PASS: gdb.base/dfp-test.exp: p d64 + ds.float4
PASS: gdb.base/dfp-test.exp: p ds.double8 + d128
PASS: gdb.base/dfp-test.exp: print ds.dec32=d32
PASS: gdb.base/dfp-test.exp: print ds.dec64=d64
PASS: gdb.base/dfp-test.exp: print ds.dec128=d128
PASS: gdb.base/dfp-test.exp: print ds.dec32 = -d32
PASS: gdb.base/dfp-test.exp: print ds.dec64 = -d64
PASS: gdb.base/dfp-test.exp: print ds.dec128 = -d128
PASS: gdb.base/dfp-test.exp: print ds.double8 = ds.dec64
PASS: gdb.base/dfp-test.exp: print ds.dec64 = ds.float4
PASS: gdb.base/dfp-test.exp: print ds.dec128 = -ds.double8
PASS: gdb.base/dfp-test.exp: print ds.dec128 = ds.dec32
PASS: gdb.base/dfp-test.exp: print ds.dec32 = ds.int4
PASS: gdb.base/dfp-test.exp: print ds.int4 = 7.3dl
Running ../../../master/gdb/testsuite/gdb.base/disasm-end-cu.exp ...
PASS: gdb.base/disasm-end-cu.exp: get hexadecimal valueof "&main"
PASS: gdb.base/disasm-end-cu.exp: get hexadecimal valueof "&dummy_3"
PASS: gdb.base/disasm-end-cu.exp: disassemble command returned some output
Running ../../../master/gdb/testsuite/gdb.base/display.exp ...
PASS: gdb.base/display.exp: kill
PASS: gdb.base/display.exp: detach
PASS: gdb.base/display.exp: run
PASS: gdb.base/display.exp: kill again
PASS: gdb.base/display.exp: detach again
PASS: gdb.base/display.exp: break  do_loops
PASS: gdb.base/display.exp: get to do_loops
PASS: gdb.base/display.exp: set watch
PASS: gdb.base/display.exp: break loop end
PASS: gdb.base/display.exp: inf disp
PASS: gdb.base/display.exp: display i
PASS: gdb.base/display.exp: display j
PASS: gdb.base/display.exp: display &k
PASS: gdb.base/display.exp: display/f f
PASS: gdb.base/display.exp: display/s &sum
PASS: gdb.base/display.exp: first disp
PASS: gdb.base/display.exp: second disp
PASS: gdb.base/display.exp: catch err
PASS: gdb.base/display.exp: disab disp 1
PASS: gdb.base/display.exp: disab disp 2
PASS: gdb.base/display.exp: re-enab
PASS: gdb.base/display.exp: re-enab of enab
PASS: gdb.base/display.exp: undisp
PASS: gdb.base/display.exp: info disp
PASS: gdb.base/display.exp: next hit
PASS: gdb.base/display.exp: undisp all
PASS: gdb.base/display.exp: disab 3
PASS: gdb.base/display.exp: watch off
PASS: gdb.base/display.exp: finish
PASS: gdb.base/display.exp: step
PASS: gdb.base/display.exp: tbreak in do_vars
PASS: gdb.base/display.exp: cont
PASS: gdb.base/display.exp: printf
PASS: gdb.base/display.exp: printf %d
PASS: gdb.base/display.exp: printf "%d
PASS: gdb.base/display.exp: printf "%d%d",i
PASS: gdb.base/display.exp: printf "\\!\a\f\r\t\v\b\n"
PASS: gdb.base/display.exp: re-set term
PASS: gdb.base/display.exp: printf "\w"
PASS: gdb.base/display.exp: printf "%d" j
PASS: gdb.base/display.exp: printf "%p\n", 0
PASS: gdb.base/display.exp: printf "%p\n", 1
PASS: gdb.base/display.exp: print/z j
PASS: gdb.base/display.exp: debug test output 1
PASS: gdb.base/display.exp: debug test output 1a
PASS: gdb.base/display.exp: debug test output 2
PASS: gdb.base/display.exp: debug test output 2a
PASS: gdb.base/display.exp: debug test output 3
PASS: gdb.base/display.exp: x/0 j
PASS: gdb.base/display.exp: print/0 j
PASS: gdb.base/display.exp: ignored s
PASS: gdb.base/display.exp: no i
PASS: gdb.base/display.exp: print/a &sum
PASS: gdb.base/display.exp: print/a main+4
PASS: gdb.base/display.exp: print/a $pc
PASS: gdb.base/display.exp: print/a &&j
Running ../../../master/gdb/testsuite/gdb.base/dump.exp ...
PASS: gdb.base/dump.exp: inaccessible memory is reported
PASS: gdb.base/dump.exp: endianness: little
PASS: gdb.base/dump.exp: dump array as value, default
PASS: gdb.base/dump.exp: dump struct as value, default
PASS: gdb.base/dump.exp: dump array as value, binary
PASS: gdb.base/dump.exp: dump struct as value, binary
PASS: gdb.base/dump.exp: dump array as value, srec
PASS: gdb.base/dump.exp: dump struct as value, srec
PASS: gdb.base/dump.exp: dump array as value, intel hex
PASS: gdb.base/dump.exp: dump struct as value, intel hex
PASS: gdb.base/dump.exp: dump array as value, tekhex
PASS: gdb.base/dump.exp: dump struct as value, tekhex
PASS: gdb.base/dump.exp: capture /x &intarray[0]
PASS: gdb.base/dump.exp: capture /x &intarray[32]
PASS: gdb.base/dump.exp: capture /x &intstruct
PASS: gdb.base/dump.exp: capture /x &intstruct + 1
PASS: gdb.base/dump.exp: capture intarray
PASS: gdb.base/dump.exp: capture intstruct
PASS: gdb.base/dump.exp: capture type of pointer &intarray
PASS: gdb.base/dump.exp: capture type of pointer &intstruct
PASS: gdb.base/dump.exp: dump array as memory, default
PASS: gdb.base/dump.exp: dump struct as memory, default
PASS: gdb.base/dump.exp: dump array as memory, binary
PASS: gdb.base/dump.exp: dump struct as memory, binary
PASS: gdb.base/dump.exp: dump array as memory, srec
PASS: gdb.base/dump.exp: dump struct as memory, srec
PASS: gdb.base/dump.exp: dump array as memory, ihex
PASS: gdb.base/dump.exp: dump struct as memory, ihex
PASS: gdb.base/dump.exp: dump array as memory, tekhex
PASS: gdb.base/dump.exp: dump struct as memory, tekhex
PASS: gdb.base/dump.exp: dump array as mem, srec, expressions
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, srec; file restored ok
PASS: gdb.base/dump.exp: array as value, srec; capture intarray
PASS: gdb.base/dump.exp: array as value, srec; value restored ok
PASS: gdb.base/dump.exp: struct as value, srec; file restored ok
PASS: gdb.base/dump.exp: struct as value, srec; capture intstruct
PASS: gdb.base/dump.exp: struct as value, srec; value restored ok
PASS: gdb.base/dump.exp: zero all
PASS: gdb.base/dump.exp: array as memory, srec; file restored ok
PASS: gdb.base/dump.exp: array as memory, srec; capture intarray
PASS: gdb.base/dump.exp: array as memory, srec; value restored ok
PASS: gdb.base/dump.exp: struct as memory, srec; file restored ok
PASS: gdb.base/dump.exp: struct as memory, srec; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, srec; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, ihex; file restored ok
PASS: gdb.base/dump.exp: array as value, ihex; capture intarray
PASS: gdb.base/dump.exp: array as value, ihex; value restored ok
PASS: gdb.base/dump.exp: struct as value, ihex; file restored ok
PASS: gdb.base/dump.exp: struct as value, ihex; capture intstruct
PASS: gdb.base/dump.exp: struct as value, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, ihex; file restored ok
PASS: gdb.base/dump.exp: array as memory, ihex; capture intarray
PASS: gdb.base/dump.exp: array as memory, ihex; value restored ok
PASS: gdb.base/dump.exp: struct as memory, ihex; file restored ok
PASS: gdb.base/dump.exp: struct as memory, ihex; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, tekhex; file restored ok
PASS: gdb.base/dump.exp: array as value, tekhex; capture intarray
PASS: gdb.base/dump.exp: array as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct as value, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct as value, tekhex; capture intstruct
PASS: gdb.base/dump.exp: struct as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, tekhex; file restored ok
PASS: gdb.base/dump.exp: array as memory, tekhex; capture intarray
PASS: gdb.base/dump.exp: array as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct as memory, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct as memory, tekhex; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as value, binary; file restored ok
PASS: gdb.base/dump.exp: array as value, binary; capture intarray
PASS: gdb.base/dump.exp: array as value, binary; value restored ok
PASS: gdb.base/dump.exp: struct as value, binary; file restored ok
PASS: gdb.base/dump.exp: struct as value, binary; capture intstruct
PASS: gdb.base/dump.exp: struct as value, binary; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array as memory, binary; file restored ok
PASS: gdb.base/dump.exp: array as memory, binary; capture intarray
PASS: gdb.base/dump.exp: array as memory, binary; value restored ok
PASS: gdb.base/dump.exp: struct as memory, binary; file restored ok
PASS: gdb.base/dump.exp: struct as memory, binary; capture intstruct
PASS: gdb.base/dump.exp: struct as memory, binary; value restored ok
PASS: gdb.base/dump.exp: capture /x &intarray2[0]
PASS: gdb.base/dump.exp: capture /x &intstruct2
PASS: gdb.base/dump.exp: capture (char *) &intarray2 - (char *) &intarray
PASS: gdb.base/dump.exp: capture (char *) &intstruct2 - (char *) &intstruct
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, srec; file restored ok
PASS: gdb.base/dump.exp: array copy, srec; capture intarray2
PASS: gdb.base/dump.exp: array copy, srec; value restored ok
PASS: gdb.base/dump.exp: struct copy, srec; file restored ok
PASS: gdb.base/dump.exp: struct copy, srec; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, srec; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, ihex; file restored ok
PASS: gdb.base/dump.exp: array copy, ihex; capture intarray2
PASS: gdb.base/dump.exp: array copy, ihex; value restored ok
PASS: gdb.base/dump.exp: struct copy, ihex; file restored ok
PASS: gdb.base/dump.exp: struct copy, ihex; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, ihex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, tekhex; file restored ok
PASS: gdb.base/dump.exp: array copy, tekhex; capture intarray2
PASS: gdb.base/dump.exp: array copy, tekhex; value restored ok
PASS: gdb.base/dump.exp: struct copy, tekhex; file restored ok
PASS: gdb.base/dump.exp: struct copy, tekhex; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, tekhex; value restored ok
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array copy, binary; file restored ok
PASS: gdb.base/dump.exp: array copy, binary; capture intarray2
PASS: gdb.base/dump.exp: array copy, binary; value restored ok
PASS: gdb.base/dump.exp: struct copy, binary; file restored ok
PASS: gdb.base/dump.exp: struct copy, binary; capture intstruct2
PASS: gdb.base/dump.exp: struct copy, binary; value restored ok
PASS: gdb.base/dump.exp: capture /x &intarray[3]
PASS: gdb.base/dump.exp: capture /x &intarray[4]
PASS: gdb.base/dump.exp: capture /x (char *) &intarray[3] - (char *) &intarray[0]
PASS: gdb.base/dump.exp: capture /x (char *) &intarray[4] - (char *) &intarray[0]
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, srec; file restored ok
PASS: gdb.base/dump.exp: array partial, srec; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, srec; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 1
PASS: gdb.base/dump.exp: element 4 not changed - 1
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, ihex; file restored ok
PASS: gdb.base/dump.exp: array partial, ihex; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, ihex; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 2
PASS: gdb.base/dump.exp: element 4 not changed - 2
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, tekhex; file restored ok
PASS: gdb.base/dump.exp: array partial, tekhex; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, tekhex; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 3
PASS: gdb.base/dump.exp: element 4 not changed - 3
PASS: gdb.base/dump.exp: print zero_all ()
PASS: gdb.base/dump.exp: array partial, binary; file restored ok
PASS: gdb.base/dump.exp: array partial, binary; capture intarray[3]
PASS: gdb.base/dump.exp: array partial, binary; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed - 4
PASS: gdb.base/dump.exp: element 4 not changed - 4
PASS: gdb.base/dump.exp: array partial with expressions; file restored ok
PASS: gdb.base/dump.exp: array partial with expressions; capture intarray2[3]
PASS: gdb.base/dump.exp: array partial with expressions; value restored ok
PASS: gdb.base/dump.exp: element 2 not changed, == 4
PASS: gdb.base/dump.exp: element 4 not changed, == 4
PASS: gdb.base/dump.exp: setting little endianness
PASS: gdb.base/dump.exp: file binfile; capture intarray
PASS: gdb.base/dump.exp: start with intarray un-initialized
PASS: gdb.base/dump.exp: file binfile; capture intstruct
PASS: gdb.base/dump.exp: start with intstruct un-initialized
PASS: gdb.base/dump.exp: reload array as value, srec; capture * (int (*)[32]) 0x80497a0
PASS: gdb.base/dump.exp: reload array as value, srec; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, srec; capture * (struct teststruct *) 0x8049780
PASS: gdb.base/dump.exp: reload struct as value, srec; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, srec; capture * (int (*)[32]) 0x80497a0
PASS: gdb.base/dump.exp: reload array as memory, srec; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, srec; capture * (struct teststruct *) 0x8049780
PASS: gdb.base/dump.exp: reload struct as memory, srec; value restored ok
PASS: gdb.base/dump.exp: reload array as value, intel hex; capture * (int (*)[32]) 0x80497a0
PASS: gdb.base/dump.exp: reload array as value, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, intel hex; capture * (struct teststruct *) 0x8049780
PASS: gdb.base/dump.exp: reload struct as value, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, intel hex; capture * (int (*)[32]) 0x80497a0
PASS: gdb.base/dump.exp: reload array as memory, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, intel hex; capture * (struct teststruct *) 0x8049780
PASS: gdb.base/dump.exp: reload struct as memory, intel hex; value restored ok
PASS: gdb.base/dump.exp: reload array as value, tekhex; capture * (int (*)[32]) 0x80497a0
PASS: gdb.base/dump.exp: reload array as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload struct as value, tekhex; capture * (struct teststruct *) 0x8049780
PASS: gdb.base/dump.exp: reload struct as value, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload array as memory, tekhex; capture * (int (*)[32]) 0x80497a0
PASS: gdb.base/dump.exp: reload array as memory, tekhex; value restored ok
PASS: gdb.base/dump.exp: reload struct as memory, tekhex; capture * (struct teststruct *) 0x8049780
PASS: gdb.base/dump.exp: reload struct as memory, tekhex; value restored ok
Running ../../../master/gdb/testsuite/gdb.base/dup-sect.exp ...
PASS: gdb.base/dup-sect.exp: rename section
PASS: gdb.base/dup-sect.exp: split
PASS: gdb.base/dup-sect.exp: strip
PASS: gdb.base/dup-sect.exp: var1 after strip
PASS: gdb.base/dup-sect.exp: var2 after strip
Running ../../../master/gdb/testsuite/gdb.base/echo.exp ...
PASS: gdb.base/echo.exp: Echo test
Running ../../../master/gdb/testsuite/gdb.base/ena-dis-br.exp ...
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: enable break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
PASS: gdb.base/ena-dis-br.exp: continue to break marker1
PASS: gdb.base/ena-dis-br.exp: delete break marker1
PASS: gdb.base/ena-dis-br.exp: break marker2
PASS: gdb.base/ena-dis-br.exp: enable once break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: continue to auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: info auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at auto-disabled break marker2
PASS: gdb.base/ena-dis-br.exp: break marker3
PASS: gdb.base/ena-dis-br.exp: enable del break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker2
PASS: gdb.base/ena-dis-br.exp: continue to auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: info auto-deleted break marker3
PASS: gdb.base/ena-dis-br.exp: break marker4
PASS: gdb.base/ena-dis-br.exp: disable break marker4
PASS: gdb.base/ena-dis-br.exp: info break marker4
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore non-existent break
PASS: gdb.base/ena-dis-br.exp: ignore break with missing ignore count
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 -1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1 0
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: info ignored break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue to break marker1, 2nd time
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: enable del break marker1
PASS: gdb.base/ena-dis-br.exp: info break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & auto-deleted break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: continue to ignored & auto-deleted break marker1
PASS: gdb.base/ena-dis-br.exp: break marker1
PASS: gdb.base/ena-dis-br.exp: ignore break marker1
PASS: gdb.base/ena-dis-br.exp: disable break marker1
PASS: gdb.base/ena-dis-br.exp: continue until exit at no stop at ignored & disabled break marker1
PASS: gdb.base/ena-dis-br.exp: rerun to main
PASS: gdb.base/ena-dis-br.exp: info ignored & disabled break marker1
PASS: gdb.base/ena-dis-br.exp: prepare to continue with ignore count
PASS: gdb.base/ena-dis-br.exp: continue with ignore count
PASS: gdb.base/ena-dis-br.exp: step
PASS: gdb.base/ena-dis-br.exp: continue with ignore count, not stopped at bpt
Running ../../../master/gdb/testsuite/gdb.base/ending-run.exp ...
PASS: gdb.base/ending-run.exp: bpt at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:14, one
PASS: gdb.base/ending-run.exp: b ending-run.c:31
PASS: gdb.base/ending-run.exp: run
PASS: gdb.base/ending-run.exp: clear worked
PASS: gdb.base/ending-run.exp: cleared bp at line before routine
PASS: gdb.base/ending-run.exp: b ending-run.c:1
PASS: gdb.base/ending-run.exp: b ending-run.c:14, two
PASS: gdb.base/ending-run.exp: Cleared 2 by line
PASS: gdb.base/ending-run.exp: b ending-run.c:14
PASS: gdb.base/ending-run.exp: Breakpoint 7 at *ending-run.c:14
PASS: gdb.base/ending-run.exp: Clear 2 by default
PASS: gdb.base/ending-run.exp: all set to continue
PASS: gdb.base/ending-run.exp: cont
PASS: gdb.base/ending-run.exp: Step to return
PASS: gdb.base/ending-run.exp: step out of main
PASS: gdb.base/ending-run.exp: step to end of run
UNSUPPORTED: gdb.base/ending-run.exp: continue after exit
PASS: gdb.base/ending-run.exp: don't step after run
PASS: gdb.base/ending-run.exp: ls: core (No core dumped on quit)
Running ../../../master/gdb/testsuite/gdb.base/environ.exp ...
Running ../../../master/gdb/testsuite/gdb.base/eu-strip-infcall.exp ...
UNTESTED: gdb.base/eu-strip-infcall.exp: eu-strip-infcall.exp
Running ../../../master/gdb/testsuite/gdb.base/eval-skip.exp ...
PASS: gdb.base/eval-skip.exp: set variable x=14
PASS: gdb.base/eval-skip.exp: set variable y=2
PASS: gdb.base/eval-skip.exp: set variable z=2
PASS: gdb.base/eval-skip.exp: set variable w=3
PASS: gdb.base/eval-skip.exp: print value of (0 && (x+y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x-y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x*y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x/y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x%y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x&&y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x||y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x&y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x|y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x^y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x < y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x <= y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>=y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x==y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x!=y))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x<<31))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x>>31))
PASS: gdb.base/eval-skip.exp: print value of (0 && (!x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (~x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (-x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x++))
PASS: gdb.base/eval-skip.exp: print value of (0 && (++x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x--))
PASS: gdb.base/eval-skip.exp: print value of (0 && (--x))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x+=7))
PASS: gdb.base/eval-skip.exp: print value of (0 && (x=y))
Running ../../../master/gdb/testsuite/gdb.base/eval.exp ...
PASS: gdb.base/eval.exp: Initialize $a.
PASS: gdb.base/eval.exp: First eval.
PASS: gdb.base/eval.exp: Second eval.
Running ../../../master/gdb/testsuite/gdb.base/exe-lock.exp ...
PASS: gdb.base/exe-lock.exp: continue until exit
Running ../../../master/gdb/testsuite/gdb.base/expand-psymtabs.exp ...
PASS: gdb.base/expand-psymtabs.exp: Expand psymtabs
Running ../../../master/gdb/testsuite/gdb.base/exprs.exp ...
PASS: gdb.base/exprs.exp: print char == (setup)
PASS: gdb.base/exprs.exp: print char == (print v_char == 0)
PASS: gdb.base/exprs.exp: print char == (print v_char == 127)
PASS: gdb.base/exprs.exp: print char != (setup)
PASS: gdb.base/exprs.exp: print char != (print v_char != 0)
PASS: gdb.base/exprs.exp: print char != (print v_char != 127)
PASS: gdb.base/exprs.exp: print char < (setup)
PASS: gdb.base/exprs.exp: print char < (print v_char < 0)
PASS: gdb.base/exprs.exp: print char < (print v_char < 127)
PASS: gdb.base/exprs.exp: print char > (setup)
PASS: gdb.base/exprs.exp: print char > (print v_char > 0)
PASS: gdb.base/exprs.exp: print char > (print v_char > 127)
PASS: gdb.base/exprs.exp: print signed char == (setup)
PASS: gdb.base/exprs.exp: print signed char == (print v_signed_char == 0)
PASS: gdb.base/exprs.exp: print signed char == (print v_signed_char == 127)
PASS: gdb.base/exprs.exp: print signed char != (setup)
PASS: gdb.base/exprs.exp: print signed char != (print v_signed_char != 0)
PASS: gdb.base/exprs.exp: print signed char != (print v_signed_char != 127)
PASS: gdb.base/exprs.exp: print signed char < (setup)
PASS: gdb.base/exprs.exp: print signed char < (print v_signed_char < 0)
PASS: gdb.base/exprs.exp: print signed char < (print v_signed_char < 127)
PASS: gdb.base/exprs.exp: print signed char > (setup)
PASS: gdb.base/exprs.exp: print signed char > (print v_signed_char > 0)
PASS: gdb.base/exprs.exp: print signed char > (print v_signed_char > 127)
PASS: gdb.base/exprs.exp: print signed char == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char == (minus) (print v_signed_char == 0)
PASS: gdb.base/exprs.exp: print signed char == (minus) (print v_signed_char == -1)
PASS: gdb.base/exprs.exp: print signed char != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char != (minus) (print v_signed_char != 0)
PASS: gdb.base/exprs.exp: print signed char != (minus) (print v_signed_char != -1)
PASS: gdb.base/exprs.exp: print signed char < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char < (minus) (print v_signed_char < 0)
PASS: gdb.base/exprs.exp: print signed char < (minus) (print v_signed_char < 127)
PASS: gdb.base/exprs.exp: print signed char > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed char > (minus) (print v_signed_char > 0)
PASS: gdb.base/exprs.exp: print signed char > (minus) (print v_signed_char > 127)
PASS: gdb.base/exprs.exp: print unsigned char == (setup)
PASS: gdb.base/exprs.exp: print unsigned char == (print v_unsigned_char == 0)
PASS: gdb.base/exprs.exp: print unsigned char == (print v_unsigned_char == 127)
PASS: gdb.base/exprs.exp: print unsigned char != (setup)
PASS: gdb.base/exprs.exp: print unsigned char != (print v_unsigned_char != 0)
PASS: gdb.base/exprs.exp: print unsigned char != (print v_unsigned_char != 127)
PASS: gdb.base/exprs.exp: print unsigned char < (setup)
PASS: gdb.base/exprs.exp: print unsigned char < (print v_unsigned_char < 0)
PASS: gdb.base/exprs.exp: print unsigned char < (print v_unsigned_char < 127)
PASS: gdb.base/exprs.exp: print unsigned char > (setup)
PASS: gdb.base/exprs.exp: print unsigned char > (print v_unsigned_char > 0)
PASS: gdb.base/exprs.exp: print unsigned char > (print v_unsigned_char > 127)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == 0)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == ~0)
PASS: gdb.base/exprs.exp: print unsigned char == (~0) (print v_unsigned_char == (unsigned char)~0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != 0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != (unsigned char)~0)
PASS: gdb.base/exprs.exp: print unsigned char != (~0) (print v_unsigned_char != ~0)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (print v_unsigned_char < 0)
PASS: gdb.base/exprs.exp: print unsigned char < (~0) (print v_unsigned_char < 127)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (print v_unsigned_char > 0)
PASS: gdb.base/exprs.exp: print unsigned char > (~0) (print v_unsigned_char > 127)
PASS: gdb.base/exprs.exp: print signed short == (setup)
PASS: gdb.base/exprs.exp: print signed short == (print v_short == 0)
PASS: gdb.base/exprs.exp: print signed short == (print v_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short != (setup)
PASS: gdb.base/exprs.exp: print signed short != (print v_short != 0)
PASS: gdb.base/exprs.exp: print signed short != (print v_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short < (setup)
PASS: gdb.base/exprs.exp: print signed short < (print v_short < 0)
PASS: gdb.base/exprs.exp: print signed short < (print v_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short > (setup)
PASS: gdb.base/exprs.exp: print signed short > (print v_short > 0)
PASS: gdb.base/exprs.exp: print signed short > (print v_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short == (minus) (print v_short == 0)
PASS: gdb.base/exprs.exp: print signed short == (minus) (print v_short == -1)
PASS: gdb.base/exprs.exp: print signed short != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short != (minus) (print v_short != 0)
PASS: gdb.base/exprs.exp: print signed short != (minus) (print v_short != -1)
PASS: gdb.base/exprs.exp: print signed short < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short < (minus) (print v_short < 0)
PASS: gdb.base/exprs.exp: print signed short < (minus) (print v_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed short > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed short > (minus) (print v_short > 0)
PASS: gdb.base/exprs.exp: print signed short > (minus) (print v_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short == (setup)
PASS: gdb.base/exprs.exp: print signed signed short == (print v_signed_short == 0)
PASS: gdb.base/exprs.exp: print signed signed short == (print v_signed_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short != (setup)
PASS: gdb.base/exprs.exp: print signed signed short != (print v_signed_short != 0)
PASS: gdb.base/exprs.exp: print signed signed short != (print v_signed_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short < (setup)
PASS: gdb.base/exprs.exp: print signed signed short < (print v_signed_short < 0)
PASS: gdb.base/exprs.exp: print signed signed short < (print v_signed_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short > (setup)
PASS: gdb.base/exprs.exp: print signed signed short > (print v_signed_short > 0)
PASS: gdb.base/exprs.exp: print signed signed short > (print v_signed_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (print v_signed_short == 0)
PASS: gdb.base/exprs.exp: print signed signed short == (minus) (print v_signed_short == -1)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (print v_signed_short != 0)
PASS: gdb.base/exprs.exp: print signed signed short != (minus) (print v_signed_short != -1)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (print v_signed_short < 0)
PASS: gdb.base/exprs.exp: print signed signed short < (minus) (print v_signed_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (print v_signed_short > 0)
PASS: gdb.base/exprs.exp: print signed signed short > (minus) (print v_signed_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short == (setup)
PASS: gdb.base/exprs.exp: print unsigned short == (print v_unsigned_short == 0)
PASS: gdb.base/exprs.exp: print unsigned short == (print v_unsigned_short == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short != (setup)
PASS: gdb.base/exprs.exp: print unsigned short != (print v_unsigned_short != 0)
PASS: gdb.base/exprs.exp: print unsigned short != (print v_unsigned_short != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short < (setup)
PASS: gdb.base/exprs.exp: print unsigned short < (print v_unsigned_short < 0)
PASS: gdb.base/exprs.exp: print unsigned short < (print v_unsigned_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short > (setup)
PASS: gdb.base/exprs.exp: print unsigned short > (print v_unsigned_short > 0)
PASS: gdb.base/exprs.exp: print unsigned short > (print v_unsigned_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print v_unsigned_short == 0)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print sizeof (v_unsigned_short) < sizeof (~0) && v_unsigned_short == ~0)
PASS: gdb.base/exprs.exp: print unsigned short == (~0) (print v_unsigned_short == (unsigned short)~0)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (print v_unsigned_short != 0)
PASS: gdb.base/exprs.exp: print unsigned short != (~0) (print v_unsigned_short != (unsigned short)~0)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (print v_unsigned_short < 0)
PASS: gdb.base/exprs.exp: print unsigned short < (~0) (print v_unsigned_short < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (print v_unsigned_short > 0)
PASS: gdb.base/exprs.exp: print unsigned short > (~0) (print v_unsigned_short > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int == (setup)
PASS: gdb.base/exprs.exp: print signed int == (print v_int == 0)
PASS: gdb.base/exprs.exp: print signed int == (print v_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int != (setup)
PASS: gdb.base/exprs.exp: print signed int != (print v_int != 0)
PASS: gdb.base/exprs.exp: print signed int != (print v_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int < (setup)
PASS: gdb.base/exprs.exp: print signed int < (print v_int < 0)
PASS: gdb.base/exprs.exp: print signed int < (print v_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int > (setup)
PASS: gdb.base/exprs.exp: print signed int > (print v_int > 0)
PASS: gdb.base/exprs.exp: print signed int > (print v_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int == (minus) (print v_int == 0)
PASS: gdb.base/exprs.exp: print signed int == (minus) (print v_int == -1)
PASS: gdb.base/exprs.exp: print signed int != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int != (minus) (print v_int != 0)
PASS: gdb.base/exprs.exp: print signed int != (minus) (print v_int != -1)
PASS: gdb.base/exprs.exp: print signed int < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int < (minus) (print v_int < 0)
PASS: gdb.base/exprs.exp: print signed int < (minus) (print v_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed int > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed int > (minus) (print v_int > 0)
PASS: gdb.base/exprs.exp: print signed int > (minus) (print v_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int == (setup)
PASS: gdb.base/exprs.exp: print signed signed int == (print v_signed_int == 0)
PASS: gdb.base/exprs.exp: print signed signed int == (print v_signed_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int != (setup)
PASS: gdb.base/exprs.exp: print signed signed int != (print v_signed_int != 0)
PASS: gdb.base/exprs.exp: print signed signed int != (print v_signed_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int < (setup)
PASS: gdb.base/exprs.exp: print signed signed int < (print v_signed_int < 0)
PASS: gdb.base/exprs.exp: print signed signed int < (print v_signed_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int > (setup)
PASS: gdb.base/exprs.exp: print signed signed int > (print v_signed_int > 0)
PASS: gdb.base/exprs.exp: print signed signed int > (print v_signed_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (print v_signed_int == 0)
PASS: gdb.base/exprs.exp: print signed signed int == (minus) (print v_signed_int == -1)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (print v_signed_int != 0)
PASS: gdb.base/exprs.exp: print signed signed int != (minus) (print v_signed_int != -1)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (print v_signed_int < 0)
PASS: gdb.base/exprs.exp: print signed signed int < (minus) (print v_signed_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (print v_signed_int > 0)
PASS: gdb.base/exprs.exp: print signed signed int > (minus) (print v_signed_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int == (setup)
PASS: gdb.base/exprs.exp: print unsigned int == (print v_unsigned_int == 0)
PASS: gdb.base/exprs.exp: print unsigned int == (print v_unsigned_int == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int != (setup)
PASS: gdb.base/exprs.exp: print unsigned int != (print v_unsigned_int != 0)
PASS: gdb.base/exprs.exp: print unsigned int != (print v_unsigned_int != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int < (setup)
PASS: gdb.base/exprs.exp: print unsigned int < (print v_unsigned_int < 0)
PASS: gdb.base/exprs.exp: print unsigned int < (print v_unsigned_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int > (setup)
PASS: gdb.base/exprs.exp: print unsigned int > (print v_unsigned_int > 0)
PASS: gdb.base/exprs.exp: print unsigned int > (print v_unsigned_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == 0)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == ~0)
PASS: gdb.base/exprs.exp: print unsigned int == (~0) (print v_unsigned_int == (unsigned int)~0)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (print v_unsigned_int != 0)
PASS: gdb.base/exprs.exp: print unsigned int != (~0) (print v_unsigned_int != (unsigned int)~0)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (print v_unsigned_int < 0)
PASS: gdb.base/exprs.exp: print unsigned int < (~0) (print v_unsigned_int < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (print v_unsigned_int > 0)
PASS: gdb.base/exprs.exp: print unsigned int > (~0) (print v_unsigned_int > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long == (setup)
PASS: gdb.base/exprs.exp: print signed long == (print v_long == 0)
PASS: gdb.base/exprs.exp: print signed long == (print v_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long != (setup)
PASS: gdb.base/exprs.exp: print signed long != (print v_long != 0)
PASS: gdb.base/exprs.exp: print signed long != (print v_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long < (setup)
PASS: gdb.base/exprs.exp: print signed long < (print v_long < 0)
PASS: gdb.base/exprs.exp: print signed long < (print v_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long > (setup)
PASS: gdb.base/exprs.exp: print signed long > (print v_long > 0)
PASS: gdb.base/exprs.exp: print signed long > (print v_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long == (minus) (print v_long == 0)
PASS: gdb.base/exprs.exp: print signed long == (minus) (print v_long == -1)
PASS: gdb.base/exprs.exp: print signed long != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long != (minus) (print v_long != 0)
PASS: gdb.base/exprs.exp: print signed long != (minus) (print v_long != -1)
PASS: gdb.base/exprs.exp: print signed long < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long < (minus) (print v_long < 0)
PASS: gdb.base/exprs.exp: print signed long < (minus) (print v_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed long > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed long > (minus) (print v_long > 0)
PASS: gdb.base/exprs.exp: print signed long > (minus) (print v_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long == (setup)
PASS: gdb.base/exprs.exp: print signed signed long == (print v_signed_long == 0)
PASS: gdb.base/exprs.exp: print signed signed long == (print v_signed_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long != (setup)
PASS: gdb.base/exprs.exp: print signed signed long != (print v_signed_long != 0)
PASS: gdb.base/exprs.exp: print signed signed long != (print v_signed_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long < (setup)
PASS: gdb.base/exprs.exp: print signed signed long < (print v_signed_long < 0)
PASS: gdb.base/exprs.exp: print signed signed long < (print v_signed_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long > (setup)
PASS: gdb.base/exprs.exp: print signed signed long > (print v_signed_long > 0)
PASS: gdb.base/exprs.exp: print signed signed long > (print v_signed_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (print v_signed_long == 0)
PASS: gdb.base/exprs.exp: print signed signed long == (minus) (print v_signed_long == -1)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (print v_signed_long != 0)
PASS: gdb.base/exprs.exp: print signed signed long != (minus) (print v_signed_long != -1)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (print v_signed_long < 0)
PASS: gdb.base/exprs.exp: print signed signed long < (minus) (print v_signed_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (setup)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (print v_signed_long > 0)
PASS: gdb.base/exprs.exp: print signed signed long > (minus) (print v_signed_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long == (setup)
PASS: gdb.base/exprs.exp: print unsigned long == (print v_unsigned_long == 0)
PASS: gdb.base/exprs.exp: print unsigned long == (print v_unsigned_long == 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long != (setup)
PASS: gdb.base/exprs.exp: print unsigned long != (print v_unsigned_long != 0)
PASS: gdb.base/exprs.exp: print unsigned long != (print v_unsigned_long != 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long < (setup)
PASS: gdb.base/exprs.exp: print unsigned long < (print v_unsigned_long < 0)
PASS: gdb.base/exprs.exp: print unsigned long < (print v_unsigned_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long > (setup)
PASS: gdb.base/exprs.exp: print unsigned long > (print v_unsigned_long > 0)
PASS: gdb.base/exprs.exp: print unsigned long > (print v_unsigned_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == 0)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == ~0)
PASS: gdb.base/exprs.exp: print unsigned long == (~0) (print v_unsigned_long == (unsigned long)~0)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (print v_unsigned_long != 0)
PASS: gdb.base/exprs.exp: print unsigned long != (~0) (print v_unsigned_long != (unsigned long)~0)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (print v_unsigned_long < 0)
PASS: gdb.base/exprs.exp: print unsigned long < (~0) (print v_unsigned_long < 0x7FFF)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (setup)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (print v_unsigned_long > 0)
PASS: gdb.base/exprs.exp: print unsigned long > (~0) (print v_unsigned_long > 0x7FFF)
PASS: gdb.base/exprs.exp: print (void*)v_signed_char (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_char (print (void*)v_signed_char)
PASS: gdb.base/exprs.exp: print (void*)v_signed_short (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_short (print (void*)v_signed_short)
PASS: gdb.base/exprs.exp: print (void*)v_signed_int (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_int (print (void*)v_signed_int)
PASS: gdb.base/exprs.exp: print (void*)v_signed_long (setup)
PASS: gdb.base/exprs.exp: print (void*)v_signed_long (print (void*)v_signed_long)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_char (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_char (print (void*)v_unsigned_char)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_short (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_short (print (void*)v_unsigned_short)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_int (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_int (print (void*)v_unsigned_int)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_long (setup)
PASS: gdb.base/exprs.exp: print (void*)v_unsigned_long (print (void*)v_unsigned_long)
PASS: gdb.base/exprs.exp: sizeof (long long) > sizeof (long) (true)
PASS: gdb.base/exprs.exp: truncate (void*) 0x00000000ffffffff + 1
PASS: gdb.base/exprs.exp: truncate (void*) 0xffffffff00000000 - 1
PASS: gdb.base/exprs.exp: \$[0-9]* = "xy" (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = "xyz" (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = red (setup)
PASS: gdb.base/exprs.exp: set output-radix 8
PASS: gdb.base/exprs.exp: \$[0-9]* = red (setup)
PASS: gdb.base/exprs.exp: \$[0-9]* = 0 (setup)
PASS: gdb.base/exprs.exp: set output-radix 10
PASS: gdb.base/exprs.exp: set variable v_int = 1
PASS: gdb.base/exprs.exp: print v_int++
PASS: gdb.base/exprs.exp: print ++v_int
PASS: gdb.base/exprs.exp: print v_int--
PASS: gdb.base/exprs.exp: print --v_int
PASS: gdb.base/exprs.exp: print v_int++ = 5
PASS: gdb.base/exprs.exp: print v_int-- = 5
Running ../../../master/gdb/testsuite/gdb.base/fileio.exp ...
PASS: gdb.base/fileio.exp: set print sevenbit-strings
PASS: gdb.base/fileio.exp: set print address off
PASS: gdb.base/fileio.exp: set width 0
PASS: gdb.base/fileio.exp: break stop
PASS: gdb.base/fileio.exp: Open a file
PASS: gdb.base/fileio.exp: Creating already existing file returns EEXIST
PASS: gdb.base/fileio.exp: Open directory for writing returns EISDIR
PASS: gdb.base/fileio.exp: Opening nonexistant file returns ENOENT
PASS: gdb.base/fileio.exp: Open for write but no write permission returns EACCES
PASS: gdb.base/fileio.exp: Writing to a file
PASS: gdb.base/fileio.exp: Write using invalid file descriptor returns EBADF
PASS: gdb.base/fileio.exp: Writing to a read-only file returns EBADF
PASS: gdb.base/fileio.exp: Reading from a file
PASS: gdb.base/fileio.exp: Read using invalid file descriptor returns EBADF
PASS: gdb.base/fileio.exp: Lseeking CUR a file
PASS: gdb.base/fileio.exp: Lseeking END a file
PASS: gdb.base/fileio.exp: Lseeking SET a file
PASS: gdb.base/fileio.exp: Closing a file
PASS: gdb.base/fileio.exp: Closing an invalid file descriptor returns EBADF
PASS: gdb.base/fileio.exp: Stat a file
PASS: gdb.base/fileio.exp: Stat a NULL pathname returns ENOENT or EFAULT
PASS: gdb.base/fileio.exp: Stat an empty pathname returns ENOENT
PASS: gdb.base/fileio.exp: Stat a nonexistant file returns ENOENT
PASS: gdb.base/fileio.exp: Fstat an open file
PASS: gdb.base/fileio.exp: Fstat an invalid file descriptor returns EBADF
PASS: gdb.base/fileio.exp: Isatty (stdin)
PASS: gdb.base/fileio.exp: Isatty (stdout)
PASS: gdb.base/fileio.exp: Isatty (stderr)
PASS: gdb.base/fileio.exp: Isatty (invalid fd)
PASS: gdb.base/fileio.exp: Isatty (open file)
PASS: gdb.base/fileio.exp: System says shell is available
PASS: gdb.base/fileio.exp: set remote system-call-allowed 1
PASS: gdb.base/fileio.exp: System(3) call
PASS: gdb.base/fileio.exp: System with invalid command returns 127
PASS: gdb.base/fileio.exp: Rename a file
PASS: gdb.base/fileio.exp: Renaming a file to existing directory returns EISDIR
PASS: gdb.base/fileio.exp: Renaming a directory to a non-empty directory returns ENOTEMPTY or EEXIST
PASS: gdb.base/fileio.exp: Renaming a directory to a subdir of itself returns EINVAL
PASS: gdb.base/fileio.exp: Renaming a nonexistant file returns ENOENT
PASS: gdb.base/fileio.exp: Unlink a file
PASS: gdb.base/fileio.exp: Unlinking a file in a directory w/o write access returns EACCES
PASS: gdb.base/fileio.exp: Unlinking a nonexistant file returns ENOENT
PASS: gdb.base/fileio.exp: Time(2) call returns the same value as in parameter
PASS: gdb.base/fileio.exp: Time(2) returns feasible values
Running ../../../master/gdb/testsuite/gdb.base/find.exp ...
PASS: gdb.base/find.exp: breakpoint function in file
PASS: gdb.base/find.exp: run until function breakpoint
PASS: gdb.base/find.exp: find string pattern
PASS: gdb.base/find.exp: pattern not found at end of range
PASS: gdb.base/find.exp: pattern found at end of range
PASS: gdb.base/find.exp: max-count
PASS: gdb.base/find.exp: $_
PASS: gdb.base/find.exp: $numfound
PASS: gdb.base/find.exp: size,max-count, /1b
PASS: gdb.base/find.exp: size,max-count, /b1
PASS: gdb.base/find.exp: size,max-count, /b/1
PASS: gdb.base/find.exp: size,max-count, /1/b
PASS: gdb.base/find.exp: find byte pattern with end address
PASS: gdb.base/find.exp: find 16-bit pattern
PASS: gdb.base/find.exp: find 16-bit pattern
PASS: gdb.base/find.exp: find 32-bit pattern
PASS: gdb.base/find.exp: find 32-bit pattern
PASS: gdb.base/find.exp: find 64-bit pattern
PASS: gdb.base/find.exp: find 64-bit pattern
PASS: gdb.base/find.exp: find mixed-sized pattern
PASS: gdb.base/find.exp: search spanning large range
PASS: gdb.base/find.exp: find pattern straddling chunk boundary
Running ../../../master/gdb/testsuite/gdb.base/finish.exp ...
PASS: gdb.base/finish.exp: set break on void_func
PASS: gdb.base/finish.exp: continue to void_func
PASS: gdb.base/finish.exp: finish from void_func
PASS: gdb.base/finish.exp: set break on char_func
PASS: gdb.base/finish.exp: continue to char_func
PASS: gdb.base/finish.exp: finish from char_func
PASS: gdb.base/finish.exp: set break on short_func
PASS: gdb.base/finish.exp: continue to short_func
PASS: gdb.base/finish.exp: finish from short_func
PASS: gdb.base/finish.exp: set break on int_func
PASS: gdb.base/finish.exp: continue to int_func
PASS: gdb.base/finish.exp: finish from int_func
PASS: gdb.base/finish.exp: set break on long_func
PASS: gdb.base/finish.exp: continue to long_func
PASS: gdb.base/finish.exp: finish from long_func
PASS: gdb.base/finish.exp: set break on long_long_func
PASS: gdb.base/finish.exp: continue to long_long_func
PASS: gdb.base/finish.exp: finish from long_long_func
PASS: gdb.base/finish.exp: set break on float_func
PASS: gdb.base/finish.exp: continue to float_func
PASS: gdb.base/finish.exp: finish from float_func
PASS: gdb.base/finish.exp: set break on double_func
PASS: gdb.base/finish.exp: continue to double_func
PASS: gdb.base/finish.exp: finish from double_func
PASS: gdb.base/finish.exp: Testing the "fin" abbreviation for "finish"
Running ../../../master/gdb/testsuite/gdb.base/fixsection.exp ...
PASS: gdb.base/fixsection.exp: breakpoint at static_fun
Running ../../../master/gdb/testsuite/gdb.base/float.exp ...
PASS: gdb.base/float.exp: info float
Running ../../../master/gdb/testsuite/gdb.base/foll-exec.exp ...
PASS: gdb.base/foll-exec.exp: insert first exec catchpoint
PASS: gdb.base/foll-exec.exp: continue to first exec catchpoint
PASS: gdb.base/foll-exec.exp: step to exec call
PASS: gdb.base/foll-exec.exp: print follow-exec/global_i
PASS: gdb.base/foll-exec.exp: print follow-exec/local_j
PASS: gdb.base/foll-exec.exp: print follow-exec/local_k
PASS: gdb.base/foll-exec.exp: step through execlp call
PASS: gdb.base/foll-exec.exp: step after execlp call
PASS: gdb.base/foll-exec.exp: print execd-program/global_i (after execlp)
PASS: gdb.base/foll-exec.exp: print execd-program/local_j (after execlp)
PASS: gdb.base/foll-exec.exp: print follow-exec/local_k (after execlp)
PASS: gdb.base/foll-exec.exp: set catch exec
PASS: gdb.base/foll-exec.exp: info shows catchpoint without exec pathname
PASS: gdb.base/foll-exec.exp: hit catch exec
PASS: gdb.base/foll-exec.exp: sync up after possible failure 1
PASS: gdb.base/foll-exec.exp: sync up after possible failure 2
PASS: gdb.base/foll-exec.exp: info shows catchpoint exec pathname
PASS: gdb.base/foll-exec.exp: continue after hit catch exec
PASS: gdb.base/foll-exec.exp: prepare to jump to execl call
PASS: gdb.base/foll-exec.exp: jump to execl call
PASS: gdb.base/foll-exec.exp: step through execl call
PASS: gdb.base/foll-exec.exp: step after execl call
PASS: gdb.base/foll-exec.exp: print execd-program/local_j (after execl)
PASS: gdb.base/foll-exec.exp: prepare to jump to execv call
PASS: gdb.base/foll-exec.exp: jump to execv call
PASS: gdb.base/foll-exec.exp: step through execv call
PASS: gdb.base/foll-exec.exp: step after execv call
PASS: gdb.base/foll-exec.exp: print execd-program/local_j (after execv)
PASS: gdb.base/foll-exec.exp: continue through exec
Running ../../../master/gdb/testsuite/gdb.base/foll-fork.exp ...
PASS: gdb.base/foll-fork.exp: set verbose
PASS: gdb.base/foll-fork.exp: help set follow-fork
PASS: gdb.base/foll-fork.exp: set follow-fork ch
PASS: gdb.base/foll-fork.exp: set follow-fork, using abbreviations
PASS: gdb.base/foll-fork.exp: set follow-fork to nonsense is prohibited
PASS: gdb.base/foll-fork.exp: reset parent
PASS: gdb.base/foll-fork.exp: insert first fork catchpoint
PASS: gdb.base/foll-fork.exp: continue to first fork catchpoint
PASS: gdb.base/foll-fork.exp: default show parent follow, no catchpoints
PASS: gdb.base/foll-fork.exp: default parent follow, no catchpoints
PASS: gdb.base/foll-fork.exp: set follow-fork parent
PASS: gdb.base/foll-fork.exp: explicit show parent follow, no catchpoints
PASS: gdb.base/foll-fork.exp: explicit parent follow, no catchpoints
PASS: gdb.base/foll-fork.exp: set follow-fork child
PASS: gdb.base/foll-fork.exp: explicit show child follow, no catchpoints
PASS: gdb.base/foll-fork.exp: explicit child follow, no catchpoints
PASS: gdb.base/foll-fork.exp: explicit child follow, set catch fork
PASS: gdb.base/foll-fork.exp: info shows catchpoint without pid
PASS: gdb.base/foll-fork.exp: explicit child follow, catch fork
PASS: gdb.base/foll-fork.exp: info shows catchpoint without pid
PASS: gdb.base/foll-fork.exp: set follow-fork child
PASS: gdb.base/foll-fork.exp: set follow-fork child, tbreak
PASS: gdb.base/foll-fork.exp: set follow-fork child, hit tbreak
PASS: gdb.base/foll-fork.exp: set follow-fork child, cleanup
PASS: gdb.base/foll-fork.exp: unpatch child, break at callee
PASS: gdb.base/foll-fork.exp: unpatch child, set catch fork
PASS: gdb.base/foll-fork.exp: unpatch child, catch fork
PASS: gdb.base/foll-fork.exp: unpatch child, breakpoint at exit call
PASS: gdb.base/foll-fork.exp: unpatch child, set follow-fork child
PASS: gdb.base/foll-fork.exp: unpatch child, unpatched parent breakpoints from child
PASS: gdb.base/foll-fork.exp: explicit parent follow, set tcatch fork
PASS: gdb.base/foll-fork.exp: explicit parent follow, tcatch fork
PASS: gdb.base/foll-fork.exp: set follow-fork parent
PASS: gdb.base/foll-fork.exp: set follow-fork parent, tbreak
PASS: gdb.base/foll-fork.exp: set follow-fork parent, hit tbreak
PASS: gdb.base/foll-fork.exp: set follow-fork parent, cleanup
Running ../../../master/gdb/testsuite/gdb.base/foll-vfork.exp ...
PASS: gdb.base/foll-vfork.exp: set verbose
PASS: gdb.base/foll-vfork.exp: insert first vfork catchpoint
PASS: gdb.base/foll-vfork.exp: continue to first vfork catchpoint
PASS: gdb.base/foll-vfork.exp: set follow-fork parent, vfork through step
PASS: gdb.base/foll-vfork.exp: vfork parent follow, through step
PASS: gdb.base/foll-vfork.exp: set follow-fork parent, vfork to bp
PASS: gdb.base/foll-vfork.exp: break, vfork to bp
PASS: gdb.base/foll-vfork.exp: vfork parent follow, to bp
PASS: gdb.base/foll-vfork.exp: set follow-fork child, vfork and exec to main bp
PASS: gdb.base/foll-vfork.exp: vfork and exec child follow, to main bp
PASS: gdb.base/foll-vfork.exp: set follow-fork parent, tcatch vfork
PASS: gdb.base/foll-vfork.exp: vfork parent follow, set tcatch vfork
PASS: gdb.base/foll-vfork.exp: vfork parent follow, tcatch vfork
PASS: gdb.base/foll-vfork.exp: vfork parent follow, finish after tcatch vfork
PASS: gdb.base/foll-vfork.exp: set follow-fork child, tcatch vfork
PASS: gdb.base/foll-vfork.exp: vfork child follow, set tcatch vfork
PASS: gdb.base/foll-vfork.exp: vfork child follow, tcatch vfork
PASS: gdb.base/foll-vfork.exp: vfork child follow, finish after tcatch vfork (followed exec)
Running ../../../master/gdb/testsuite/gdb.base/fortran-sym-case.exp ...
PASS: gdb.base/fortran-sym-case.exp: set language fortran
PASS: gdb.base/fortran-sym-case.exp: frame
Running ../../../master/gdb/testsuite/gdb.base/frame-args.exp ...
PASS: gdb.base/frame-args.exp: set print frame-arguments all
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to all
PASS: gdb.base/frame-args.exp: set print frame-arguments scalars
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to scalars
PASS: gdb.base/frame-args.exp: set print frame-arguments none
PASS: gdb.base/frame-args.exp: frame 1 with print frame-arguments set to none
Running ../../../master/gdb/testsuite/gdb.base/freebpcmd.exp ...
PASS: gdb.base/freebpcmd.exp: set breakpoint
PASS: gdb.base/freebpcmd.exp: send breakpoint commands
PASS: gdb.base/freebpcmd.exp: run program with breakpoint commands
Running ../../../master/gdb/testsuite/gdb.base/fullname.exp ...
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint at main - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built absolute
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint at main - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built relative
PASS: gdb.base/fullname.exp: set breakpoint by full path before loading symbols - built other
PASS: gdb.base/fullname.exp: set breakpoint at main - built other
PASS: gdb.base/fullname.exp: set breakpoint by full path after loading symbols - built other
Running ../../../master/gdb/testsuite/gdb.base/funcargs.exp ...
PASS: gdb.base/funcargs.exp: set print frame-arguments all
PASS: gdb.base/funcargs.exp: run to call0a
PASS: gdb.base/funcargs.exp: print c after run to call0a
PASS: gdb.base/funcargs.exp: print s after run to call0a
PASS: gdb.base/funcargs.exp: print i after run to call0a
PASS: gdb.base/funcargs.exp: print l after run to call0a
PASS: gdb.base/funcargs.exp: continue to call0b
PASS: gdb.base/funcargs.exp: continue to call0c
PASS: gdb.base/funcargs.exp: continue to call0d
PASS: gdb.base/funcargs.exp: continue to call0e
PASS: gdb.base/funcargs.exp: run to call1a
PASS: gdb.base/funcargs.exp: print uc
PASS: gdb.base/funcargs.exp: print us
PASS: gdb.base/funcargs.exp: print ui
PASS: gdb.base/funcargs.exp: print ul
PASS: gdb.base/funcargs.exp: continue to call1b
PASS: gdb.base/funcargs.exp: continue to call1c
PASS: gdb.base/funcargs.exp: continue to call1d
PASS: gdb.base/funcargs.exp: continue to call1e
PASS: gdb.base/funcargs.exp: run to call2a
PASS: gdb.base/funcargs.exp: print c after run to call2a
PASS: gdb.base/funcargs.exp: print f1 after run to call2a
PASS: gdb.base/funcargs.exp: print s after run to call2a
PASS: gdb.base/funcargs.exp: print d1 after run to call2a
PASS: gdb.base/funcargs.exp: print i after run to call2a
PASS: gdb.base/funcargs.exp: print f2 after run to call2a
PASS: gdb.base/funcargs.exp: print l after run to call2a
PASS: gdb.base/funcargs.exp: print d2 after run to call2a
PASS: gdb.base/funcargs.exp: continue to call2b
PASS: gdb.base/funcargs.exp: continue to call2c
PASS: gdb.base/funcargs.exp: continue to call2d
PASS: gdb.base/funcargs.exp: continue to call2e
PASS: gdb.base/funcargs.exp: continue to call2f
PASS: gdb.base/funcargs.exp: continue to call2g
PASS: gdb.base/funcargs.exp: continue to call2h
PASS: gdb.base/funcargs.exp: continue to call2i
PASS: gdb.base/funcargs.exp: run to call2a
PASS: gdb.base/funcargs.exp: continue to callcb
PASS: gdb.base/funcargs.exp: continue to callcb
PASS: gdb.base/funcargs.exp: continue to callcd
PASS: gdb.base/funcargs.exp: continue to callce
PASS: gdb.base/funcargs.exp: continue to callcf
PASS: gdb.base/funcargs.exp: run to callc1a
PASS: gdb.base/funcargs.exp: continue to callc1b
PASS: gdb.base/funcargs.exp: run to callc2a
PASS: gdb.base/funcargs.exp: continue to callc2b
PASS: gdb.base/funcargs.exp: run to call3a
PASS: gdb.base/funcargs.exp: print *cp
PASS: gdb.base/funcargs.exp: print *sp
PASS: gdb.base/funcargs.exp: print *ip
PASS: gdb.base/funcargs.exp: print *lp
PASS: gdb.base/funcargs.exp: continue to call3b
PASS: gdb.base/funcargs.exp: print *ucp
PASS: gdb.base/funcargs.exp: print *usp
PASS: gdb.base/funcargs.exp: print *uip
PASS: gdb.base/funcargs.exp: print *ulp
PASS: gdb.base/funcargs.exp: continue to call3c
PASS: gdb.base/funcargs.exp: print *fp
PASS: gdb.base/funcargs.exp: print *dp
PASS: gdb.base/funcargs.exp: run to call4a
PASS: gdb.base/funcargs.exp: print *stp
PASS: gdb.base/funcargs.exp: continue to call4b
PASS: gdb.base/funcargs.exp: print *unp (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: locate actual args, structs/unions passed by reference
PASS: gdb.base/funcargs.exp: run to call5a
PASS: gdb.base/funcargs.exp: print st
PASS: gdb.base/funcargs.exp: continue to call5b (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: print un (sizeof long == sizeof int)
PASS: gdb.base/funcargs.exp: run to call6a
PASS: gdb.base/funcargs.exp: backtrace from call6a
PASS: gdb.base/funcargs.exp: continue to call6b
PASS: gdb.base/funcargs.exp: backtrace from call6b
PASS: gdb.base/funcargs.exp: continue to call6c
PASS: gdb.base/funcargs.exp: backtrace from call6c
PASS: gdb.base/funcargs.exp: continue to call6d
PASS: gdb.base/funcargs.exp: backtrace from call6d
PASS: gdb.base/funcargs.exp: continue to call6e
PASS: gdb.base/funcargs.exp: backtrace from call6e
PASS: gdb.base/funcargs.exp: continue to call6f
PASS: gdb.base/funcargs.exp: backtrace from call6f
PASS: gdb.base/funcargs.exp: continue to call6g
PASS: gdb.base/funcargs.exp: backtrace from call6g
PASS: gdb.base/funcargs.exp: continue to call6h
PASS: gdb.base/funcargs.exp: backtrace from call6h
PASS: gdb.base/funcargs.exp: continue to call6i
PASS: gdb.base/funcargs.exp: backtrace from call6i
PASS: gdb.base/funcargs.exp: continue to call6j
PASS: gdb.base/funcargs.exp: backtrace from call6j
PASS: gdb.base/funcargs.exp: continue to call6k
PASS: gdb.base/funcargs.exp: backtrace from call6k
PASS: gdb.base/funcargs.exp: run to call7a
PASS: gdb.base/funcargs.exp: backtrace from call7a
PASS: gdb.base/funcargs.exp: continue to call7b
PASS: gdb.base/funcargs.exp: backtrace from call7b
PASS: gdb.base/funcargs.exp: continue to call7c
PASS: gdb.base/funcargs.exp: backtrace from call7c
PASS: gdb.base/funcargs.exp: continue to call7d
PASS: gdb.base/funcargs.exp: backtrace from call7d
PASS: gdb.base/funcargs.exp: continue to call7e
PASS: gdb.base/funcargs.exp: backtrace from call7e
PASS: gdb.base/funcargs.exp: continue to call7f
PASS: gdb.base/funcargs.exp: backtrace from call7f
PASS: gdb.base/funcargs.exp: continue to call7g
PASS: gdb.base/funcargs.exp: backtrace from call7g
PASS: gdb.base/funcargs.exp: continue to call7h
PASS: gdb.base/funcargs.exp: backtrace from call7h
PASS: gdb.base/funcargs.exp: continue to call7i
PASS: gdb.base/funcargs.exp: backtrace from call7i
PASS: gdb.base/funcargs.exp: continue to call7j
PASS: gdb.base/funcargs.exp: backtrace from call7j
PASS: gdb.base/funcargs.exp: continue to call7k
PASS: gdb.base/funcargs.exp: backtrace from call7k
PASS: gdb.base/funcargs.exp: run to hitbottom
PASS: gdb.base/funcargs.exp: recursive passing of structs by value
PASS: gdb.base/funcargs.exp: print c after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print s after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print i after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: print l after runto localvars_after_alloca
PASS: gdb.base/funcargs.exp: next in localvars_after_alloca()
PASS: gdb.base/funcargs.exp: print c in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print s in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print i in localvars_after_alloca
PASS: gdb.base/funcargs.exp: print l in localvars_after_alloca
PASS: gdb.base/funcargs.exp: backtrace after alloca
PASS: gdb.base/funcargs.exp: print c in call_after_alloca
PASS: gdb.base/funcargs.exp: print s in call_after_alloca
PASS: gdb.base/funcargs.exp: print i in call_after_alloca
PASS: gdb.base/funcargs.exp: print l in call_after_alloca
PASS: gdb.base/funcargs.exp: backtrace from call_after_alloca_subr
PASS: gdb.base/funcargs.exp: continue to call0a
PASS: gdb.base/funcargs.exp: print c in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print s in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print i in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: print l in localvars_in_indirect_call
PASS: gdb.base/funcargs.exp: backtrace in indirectly called function
PASS: gdb.base/funcargs.exp: finish from indirectly called function
PASS: gdb.base/funcargs.exp: stepping into indirectly called function
PASS: gdb.base/funcargs.exp: finish from marker_call_with_trampolines
PASS: gdb.base/funcargs.exp: stepping into function called with trampolines
PASS: gdb.base/funcargs.exp: backtrace through call with trampolines
PASS: gdb.base/funcargs.exp: stepping back to main from function called with trampolines
Running ../../../master/gdb/testsuite/gdb.base/gcore-buffer-overflow.exp ...
PASS: gdb.base/gcore-buffer-overflow.exp: help gcore
PASS: gdb.base/gcore-buffer-overflow.exp: Set buffer exceeding arguments
PASS: gdb.base/gcore-buffer-overflow.exp: save a corefile
Running ../../../master/gdb/testsuite/gdb.base/gcore.exp ...
PASS: gdb.base/gcore.exp: help gcore
PASS: gdb.base/gcore.exp: set breakpoint at terminal_func
PASS: gdb.base/gcore.exp: continue to terminal_func
PASS: gdb.base/gcore.exp: save a corefile
PASS: gdb.base/gcore.exp: re-load generated corefile
PASS: gdb.base/gcore.exp: where in corefile
PASS: gdb.base/gcore.exp: corefile restored general registers
PASS: gdb.base/gcore.exp: corefile restored all registers
PASS: gdb.base/gcore.exp: corefile restored extern array
PASS: gdb.base/gcore.exp: corefile restored static array
PASS: gdb.base/gcore.exp: corefile restored un-initialized array
PASS: gdb.base/gcore.exp: corefile restored heap array
PASS: gdb.base/gcore.exp: corefile restored stack array
PASS: gdb.base/gcore.exp: corefile restored backtrace
Running ../../../master/gdb/testsuite/gdb.base/gdb1056.exp ...
PASS: gdb.base/gdb1056.exp: print 1/0
PASS: gdb.base/gdb1056.exp: Test unsigned division by zero
Running ../../../master/gdb/testsuite/gdb.base/gdb1090.exp ...
PASS: gdb.base/gdb1090.exp: continue to breakpoint: break-here
PASS: gdb.base/gdb1090.exp: print s24
Running ../../../master/gdb/testsuite/gdb.base/gdb11530.exp ...
PASS: gdb.base/gdb11530.exp: print a.i
PASS: gdb.base/gdb11530.exp: print sizeof (a.i)
PASS: gdb.base/gdb11530.exp: print sizeof (a.i) == sizeof (int)
Running ../../../master/gdb/testsuite/gdb.base/gdb11531.exp ...
PASS: gdb.base/gdb11531.exp: Set watchpoint
PASS: gdb.base/gdb11531.exp: watchpoint variable triggers at next
PASS: gdb.base/gdb11531.exp: watchpoint variable triggers at continue
Running ../../../master/gdb/testsuite/gdb.base/gdb1250.exp ...
PASS: gdb.base/gdb1250.exp: backtrace from abort
Running ../../../master/gdb/testsuite/gdb.base/gdb1555.exp ...
PASS: gdb.base/gdb1555.exp: Step into shared lib function
PASS: gdb.base/gdb1555.exp: Next while in a shared lib function
Running ../../../master/gdb/testsuite/gdb.base/gdb1821.exp ...
PASS: gdb.base/gdb1821.exp: print /x bar
Running ../../../master/gdb/testsuite/gdb.base/gdbindex-stabs.exp ...
PASS: gdb.base/gdbindex-stabs.exp: list stabs_function
Running ../../../master/gdb/testsuite/gdb.base/gdbvars.exp ...
PASS: gdb.base/gdbvars.exp: set print sevenbit-strings
PASS: gdb.base/gdbvars.exp: Set value-history[1] using $1
PASS: gdb.base/gdbvars.exp: Set value-history[2] using $2
PASS: gdb.base/gdbvars.exp: Set value-history[3] using $3
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] using inplicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-1] again using implicit index $$
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using implicit index $
PASS: gdb.base/gdbvars.exp: Print value-history[MAX-2] using explicit index $$2
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $0
PASS: gdb.base/gdbvars.exp: print 108
PASS: gdb.base/gdbvars.exp: Print value-history[MAX] using explicit index $$0
PASS: gdb.base/gdbvars.exp: Print value-history[1] using explicit index $1
PASS: gdb.base/gdbvars.exp: Print value-history[2] using explicit index $2
PASS: gdb.base/gdbvars.exp: Print value-history[3] using explicit index $3
PASS: gdb.base/gdbvars.exp: Print (value-history[MAX] - 3) using implicit index $
PASS: gdb.base/gdbvars.exp: Use value-history element in arithmetic expression
PASS: gdb.base/gdbvars.exp: Set a new convenience variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable to a new value
PASS: gdb.base/gdbvars.exp: Print new contents of convenience variable
PASS: gdb.base/gdbvars.exp: Set convenience variable $_
PASS: gdb.base/gdbvars.exp: Print contents of convenience variable $_
PASS: gdb.base/gdbvars.exp: Use convenience variable in arithmetic expression
PASS: gdb.base/gdbvars.exp: Use convenience variable assignment in arithmetic expression
PASS: gdb.base/gdbvars.exp: Print contents of uninitialized convenience variable
PASS: gdb.base/gdbvars.exp: Set a new convenience variable to a program variable
PASS: gdb.base/gdbvars.exp: Print contents of new convenience variable of program variable
Running ../../../master/gdb/testsuite/gdb.base/gnu-ifunc.exp ...
PASS: gdb.base/gnu-ifunc.exp: continue to breakpoint: break-at-call
PASS: gdb.base/gnu-ifunc.exp: p gnu_ifunc (3)
FAIL: gdb.base/gnu-ifunc.exp: step
PASS: gdb.base/gnu-ifunc.exp: continue to break-at-nextcall
PASS: gdb.base/gnu-ifunc.exp: continue to breakpoint: nextcall gnu_ifunc
PASS: gdb.base/gnu-ifunc.exp: nextcall gnu_ifunc skipped
PASS: gdb.base/gnu-ifunc.exp: p gnu_ifunc executing
PASS: gdb.base/gnu-ifunc.exp: info sym gnu_ifunc executing
PASS: gdb.base/gnu-ifunc.exp: info addr gnu_ifunc
PASS: gdb.base/gnu-ifunc.exp: info sym <gnu_ifunc-address>
PASS: gdb.base/gnu-ifunc.exp: static gnu_ifunc
Running ../../../master/gdb/testsuite/gdb.base/gnu_vector.exp ...
PASS: gdb.base/gnu_vector.exp: print c4
PASS: gdb.base/gnu_vector.exp: print c4[2]
PASS: gdb.base/gnu_vector.exp: print i4a
PASS: gdb.base/gnu_vector.exp: print i4b
PASS: gdb.base/gnu_vector.exp: print i4a + i4b
PASS: gdb.base/gnu_vector.exp: print i4a - i4b
PASS: gdb.base/gnu_vector.exp: print i4a * i4b
PASS: gdb.base/gnu_vector.exp: print i4a / i4b
PASS: gdb.base/gnu_vector.exp: print i4a % i4b
PASS: gdb.base/gnu_vector.exp: print i4a++
PASS: gdb.base/gnu_vector.exp: print ++i4a
PASS: gdb.base/gnu_vector.exp: print i4a--
PASS: gdb.base/gnu_vector.exp: print --i4a
PASS: gdb.base/gnu_vector.exp: print +i4a
PASS: gdb.base/gnu_vector.exp: print -i4a
PASS: gdb.base/gnu_vector.exp: print i4a & i4b
PASS: gdb.base/gnu_vector.exp: print i4a | i4b
PASS: gdb.base/gnu_vector.exp: print i4a ^ i4b
PASS: gdb.base/gnu_vector.exp: print ~i4a
PASS: gdb.base/gnu_vector.exp: print i4a << i4b
PASS: gdb.base/gnu_vector.exp: print i4a >> i4b
PASS: gdb.base/gnu_vector.exp: print f4a
PASS: gdb.base/gnu_vector.exp: print f4b
PASS: gdb.base/gnu_vector.exp: print f4a + f4b
PASS: gdb.base/gnu_vector.exp: print f4a - f4b
PASS: gdb.base/gnu_vector.exp: print f4a * f4b
PASS: gdb.base/gnu_vector.exp: print f4a / f4b
PASS: gdb.base/gnu_vector.exp: print +f4a
PASS: gdb.base/gnu_vector.exp: print -f4a
PASS: gdb.base/gnu_vector.exp: print (int2) 1
PASS: gdb.base/gnu_vector.exp: print (longlong2) 2
PASS: gdb.base/gnu_vector.exp: print (float2) 3
PASS: gdb.base/gnu_vector.exp: print (double2) 4
PASS: gdb.base/gnu_vector.exp: print (char4) 12
PASS: gdb.base/gnu_vector.exp: print (uint4) ia
PASS: gdb.base/gnu_vector.exp: print (int4) -3
PASS: gdb.base/gnu_vector.exp: print (float4) 4
PASS: gdb.base/gnu_vector.exp: print i4a + ib
PASS: gdb.base/gnu_vector.exp: print fa - f4b
PASS: gdb.base/gnu_vector.exp: print f4a * fb
PASS: gdb.base/gnu_vector.exp: print ia / i4b
PASS: gdb.base/gnu_vector.exp: print i4a % ib
PASS: gdb.base/gnu_vector.exp: print ia & i4b
PASS: gdb.base/gnu_vector.exp: print i4a | ib
PASS: gdb.base/gnu_vector.exp: print ia ^ i4b
PASS: gdb.base/gnu_vector.exp: print i4a << ib
PASS: gdb.base/gnu_vector.exp: print i4a >> ib
PASS: gdb.base/gnu_vector.exp: print i4b = ia
PASS: gdb.base/gnu_vector.exp: print i4a = 3
PASS: gdb.base/gnu_vector.exp: print f4a = fb
PASS: gdb.base/gnu_vector.exp: print f4b = 2
PASS: gdb.base/gnu_vector.exp: print i4a = {2, 4, 8, 16}
PASS: gdb.base/gnu_vector.exp: print i4a <<= ib
PASS: gdb.base/gnu_vector.exp: print i4a + d2
PASS: gdb.base/gnu_vector.exp: print d2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + f4a
PASS: gdb.base/gnu_vector.exp: print i2 + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + i2
PASS: gdb.base/gnu_vector.exp: print i4a + ll2
PASS: gdb.base/gnu_vector.exp: print ll2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + d2
PASS: gdb.base/gnu_vector.exp: print d2 + f4a
PASS: gdb.base/gnu_vector.exp: print ui4 + i4a
PASS: gdb.base/gnu_vector.exp: print i4a + ui4
PASS: gdb.base/gnu_vector.exp: print i4a + i2
PASS: gdb.base/gnu_vector.exp: print i2 + i4a
PASS: gdb.base/gnu_vector.exp: print f4a + f2
PASS: gdb.base/gnu_vector.exp: print f2 + f4a
Running ../../../master/gdb/testsuite/gdb.base/hashline1.exp ...
PASS: gdb.base/hashline1.exp: set breakpoint
Running ../../../master/gdb/testsuite/gdb.base/hashline2.exp ...
PASS: gdb.base/hashline2.exp: set breakpoint
Running ../../../master/gdb/testsuite/gdb.base/hashline3.exp ...
PASS: gdb.base/hashline3.exp: set breakpoint
Running ../../../master/gdb/testsuite/gdb.base/hbreak.exp ...
PASS: gdb.base/hbreak.exp: hbreak
PASS: gdb.base/hbreak.exp: continue to break-at-exit after hbreak
Running ../../../master/gdb/testsuite/gdb.base/help.exp ...
PASS: gdb.base/help.exp: test set height
PASS: gdb.base/help.exp: help add-symbol-file
PASS: gdb.base/help.exp: help advance
PASS: gdb.base/help.exp: help aliases
PASS: gdb.base/help.exp: help append
PASS: gdb.base/help.exp: help append binary
PASS: gdb.base/help.exp: help append memory
PASS: gdb.base/help.exp: help append value
PASS: gdb.base/help.exp: help append binary memory
PASS: gdb.base/help.exp: help append binary value
PASS: gdb.base/help.exp: help attach
PASS: gdb.base/help.exp: help breakpoint "b" abbreviation
PASS: gdb.base/help.exp: help breakpoint "br" abbreviation
PASS: gdb.base/help.exp: help breakpoint "bre" abbreviation
PASS: gdb.base/help.exp: help breakpoint "brea" abbreviation
PASS: gdb.base/help.exp: help breakpoint "break" abbreviation
PASS: gdb.base/help.exp: help breakpoints
PASS: gdb.base/help.exp: help backtrace "bt" abbreviation
PASS: gdb.base/help.exp: help backtrace
PASS: gdb.base/help.exp: help continue "c" abbreviation
PASS: gdb.base/help.exp: help continue
PASS: gdb.base/help.exp: help call
PASS: gdb.base/help.exp: help catch
PASS: gdb.base/help.exp: help cd
PASS: gdb.base/help.exp: help clear
PASS: gdb.base/help.exp: help commands
PASS: gdb.base/help.exp: help condition
PASS: gdb.base/help.exp: help core-file
PASS: gdb.base/help.exp: help delete "d" abbreviation
PASS: gdb.base/help.exp: help delete
PASS: gdb.base/help.exp: help data
PASS: gdb.base/help.exp: help define
PASS: gdb.base/help.exp: help delete breakpoints
PASS: gdb.base/help.exp: help delete display
PASS: gdb.base/help.exp: help detach
PASS: gdb.base/help.exp: help directory
PASS: gdb.base/help.exp: help disable "dis" abbreviation
PASS: gdb.base/help.exp: help disable "disa" abbreviation
PASS: gdb.base/help.exp: help disable
PASS: gdb.base/help.exp: help disable breakpoints
PASS: gdb.base/help.exp: help disable display
PASS: gdb.base/help.exp: help disassemble
PASS: gdb.base/help.exp: help display
PASS: gdb.base/help.exp: help do
PASS: gdb.base/help.exp: help document
PASS: gdb.base/help.exp: help down
PASS: gdb.base/help.exp: help down-silently
PASS: gdb.base/help.exp: help dump
PASS: gdb.base/help.exp: help dump binary
PASS: gdb.base/help.exp: help dump ihex
PASS: gdb.base/help.exp: help dump memory
PASS: gdb.base/help.exp: help dump srec
PASS: gdb.base/help.exp: help dump tekhex
PASS: gdb.base/help.exp: help dump value
PASS: gdb.base/help.exp: help dump binary memory
PASS: gdb.base/help.exp: help dump binary value
PASS: gdb.base/help.exp: help dump ihex memory
PASS: gdb.base/help.exp: help dump ihex value
PASS: gdb.base/help.exp: help dump srec memory
PASS: gdb.base/help.exp: help dump srec value
PASS: gdb.base/help.exp: help dump tekhex memory
PASS: gdb.base/help.exp: help dump tekhex value
PASS: gdb.base/help.exp: help echo
PASS: gdb.base/help.exp: help enable breakpoints delete
PASS: gdb.base/help.exp: help enable breakpoints once
PASS: gdb.base/help.exp: help enable breakpoints
PASS: gdb.base/help.exp: help enable delete
PASS: gdb.base/help.exp: help enable display
PASS: gdb.base/help.exp: help enable once
PASS: gdb.base/help.exp: help enable
PASS: gdb.base/help.exp: help exec-file
PASS: gdb.base/help.exp: help frame "f" abbreviation
PASS: gdb.base/help.exp: help frame
PASS: gdb.base/help.exp: help fg
PASS: gdb.base/help.exp: help file
PASS: gdb.base/help.exp: help files
PASS: gdb.base/help.exp: help finish
PASS: gdb.base/help.exp: help forward-search
PASS: gdb.base/help.exp: help gcore
PASS: gdb.base/help.exp: help gcore
PASS: gdb.base/help.exp: help help "h" abbreviation
PASS: gdb.base/help.exp: help help
PASS: gdb.base/help.exp: help handle
PASS: gdb.base/help.exp: help info "i" abbreviation
PASS: gdb.base/help.exp: help info
PASS: gdb.base/help.exp: help ignore
PASS: gdb.base/help.exp: help info address
PASS: gdb.base/help.exp: help info all-registers
PASS: gdb.base/help.exp: help info args
PASS: gdb.base/help.exp: help info breakpoints
PASS: gdb.base/help.exp: help info catch
PASS: gdb.base/help.exp: help info copying
PASS: gdb.base/help.exp: help info display
PASS: gdb.base/help.exp: help info frame "f" abbreviation
PASS: gdb.base/help.exp: help info frame
PASS: gdb.base/help.exp: help info files
PASS: gdb.base/help.exp: help info float
PASS: gdb.base/help.exp: help info functions
PASS: gdb.base/help.exp: help info line
PASS: gdb.base/help.exp: help info locals
PASS: gdb.base/help.exp: help info program
PASS: gdb.base/help.exp: help info registers
PASS: gdb.base/help.exp: help info stack "s" abbreviation
PASS: gdb.base/help.exp: help info stack
PASS: gdb.base/help.exp: help info set
PASS: gdb.base/help.exp: help info signals
PASS: gdb.base/help.exp: help info source
PASS: gdb.base/help.exp: help info sources
PASS: gdb.base/help.exp: help info symbol
PASS: gdb.base/help.exp: help info target
PASS: gdb.base/help.exp: help info terminal
PASS: gdb.base/help.exp: help info threads
PASS: gdb.base/help.exp: help info types
PASS: gdb.base/help.exp: help info variables
PASS: gdb.base/help.exp: help info warranty
PASS: gdb.base/help.exp: help info watchpoints
PASS: gdb.base/help.exp: help inspect
PASS: gdb.base/help.exp: help jump
PASS: gdb.base/help.exp: help kill
PASS: gdb.base/help.exp: help list "l" abbreviation
PASS: gdb.base/help.exp: help list
PASS: gdb.base/help.exp: help load
PASS: gdb.base/help.exp: help make
PASS: gdb.base/help.exp: help next "n" abbreviation
PASS: gdb.base/help.exp: help next
PASS: gdb.base/help.exp: help nexti
PASS: gdb.base/help.exp: help obscure
PASS: gdb.base/help.exp: help output
PASS: gdb.base/help.exp: help overlay
PASS: gdb.base/help.exp: help overlay off
PASS: gdb.base/help.exp: help overlay manual
PASS: gdb.base/help.exp: help overlay auto
PASS: gdb.base/help.exp: help overlay list
PASS: gdb.base/help.exp: help overlay map
PASS: gdb.base/help.exp: help overlay unmap
PASS: gdb.base/help.exp: help overlay load
PASS: gdb.base/help.exp: help print "p" abbreviation
PASS: gdb.base/help.exp: help print
PASS: gdb.base/help.exp: help path
PASS: gdb.base/help.exp: help printcmds
PASS: gdb.base/help.exp: help printf
PASS: gdb.base/help.exp: help ptype
PASS: gdb.base/help.exp: help pwd
PASS: gdb.base/help.exp: help quit "q" abbreviation
PASS: gdb.base/help.exp: help quit
PASS: gdb.base/help.exp: help run "r" abbreviation
PASS: gdb.base/help.exp: help run
PASS: gdb.base/help.exp: help rbreak
PASS: gdb.base/help.exp: help restore
PASS: gdb.base/help.exp: help return
PASS: gdb.base/help.exp: help reverse-search
PASS: gdb.base/help.exp: help running
PASS: gdb.base/help.exp: help step "s" abbreviation
PASS: gdb.base/help.exp: help step #1
PASS: gdb.base/help.exp: help search
PASS: gdb.base/help.exp: help section
PASS: gdb.base/help.exp: help set annotate
PASS: gdb.base/help.exp: help set args
PASS: gdb.base/help.exp: help set check "c" abbreviation
PASS: gdb.base/help.exp: help set check "ch" abbreviation
PASS: gdb.base/help.exp: help set check
PASS: gdb.base/help.exp: help set check range
PASS: gdb.base/help.exp: help set check type
PASS: gdb.base/help.exp: help set complaints
PASS: gdb.base/help.exp: help set confirm
PASS: gdb.base/help.exp: help set editing
PASS: gdb.base/help.exp: help set environment
PASS: gdb.base/help.exp: help set height
PASS: gdb.base/help.exp: help set history expansion
PASS: gdb.base/help.exp: help set history filename
PASS: gdb.base/help.exp: help set history save
PASS: gdb.base/help.exp: help set history size
PASS: gdb.base/help.exp: help set history
PASS: gdb.base/help.exp: help set language
PASS: gdb.base/help.exp: help set listsize
PASS: gdb.base/help.exp: help set print "p" abbreviation
PASS: gdb.base/help.exp: help set print "pr" abbreviation
PASS: gdb.base/help.exp: help set print
PASS: gdb.base/help.exp: help set print address
PASS: gdb.base/help.exp: help set print array
PASS: gdb.base/help.exp: help set print asm-demangle
PASS: gdb.base/help.exp: help set print demangle
PASS: gdb.base/help.exp: help set print elements
PASS: gdb.base/help.exp: help set print object
PASS: gdb.base/help.exp: help set print pretty
PASS: gdb.base/help.exp: help set print sevenbit-strings
PASS: gdb.base/help.exp: help set print union
PASS: gdb.base/help.exp: help set print vtbl
PASS: gdb.base/help.exp: help set prompt
PASS: gdb.base/help.exp: help set radix
PASS: gdb.base/help.exp: help set symbol-reloading
PASS: gdb.base/help.exp: help set variable
PASS: gdb.base/help.exp: help set verbose
PASS: gdb.base/help.exp: help set width
PASS: gdb.base/help.exp: help set write
PASS: gdb.base/help.exp: help set
PASS: gdb.base/help.exp: help shell
PASS: gdb.base/help.exp: help show annotate
PASS: gdb.base/help.exp: help show args
PASS: gdb.base/help.exp: help show check "c" abbreviation
PASS: gdb.base/help.exp: help show check
PASS: gdb.base/help.exp: help show check range
PASS: gdb.base/help.exp: help show check type
PASS: gdb.base/help.exp: help show commands
PASS: gdb.base/help.exp: help show complaints
PASS: gdb.base/help.exp: help show confirm
PASS: gdb.base/help.exp: help show convenience
PASS: gdb.base/help.exp: help show directories
PASS: gdb.base/help.exp: help show editing
PASS: gdb.base/help.exp: help show environment
PASS: gdb.base/help.exp: help show height
PASS: gdb.base/help.exp: help show history expansion
PASS: gdb.base/help.exp: help show history filename
PASS: gdb.base/help.exp: help show history save
PASS: gdb.base/help.exp: help show history size
PASS: gdb.base/help.exp: help show history
PASS: gdb.base/help.exp: help show language
PASS: gdb.base/help.exp: help show listsize
PASS: gdb.base/help.exp: help show print "p" abbreviation
PASS: gdb.base/help.exp: help show print "pr" abbreviation
PASS: gdb.base/help.exp: help show print "p" abbreviation
PASS: gdb.base/help.exp: help show paths
PASS: gdb.base/help.exp: help show print address
PASS: gdb.base/help.exp: help show print array
PASS: gdb.base/help.exp: help show print asm-demangle
PASS: gdb.base/help.exp: help show print demangle
PASS: gdb.base/help.exp: help show print elements
PASS: gdb.base/help.exp: help show print object
PASS: gdb.base/help.exp: help show print pretty
PASS: gdb.base/help.exp: help show print sevenbit-strings
PASS: gdb.base/help.exp: help show print union
PASS: gdb.base/help.exp: help show print vtbl
PASS: gdb.base/help.exp: help show prompt
PASS: gdb.base/help.exp: help show radix
PASS: gdb.base/help.exp: help show symbol-reloading
PASS: gdb.base/help.exp: help show user
PASS: gdb.base/help.exp: help show values
PASS: gdb.base/help.exp: help show verbose
PASS: gdb.base/help.exp: help show version
PASS: gdb.base/help.exp: help show width
PASS: gdb.base/help.exp: help show write
PASS: gdb.base/help.exp: help show
PASS: gdb.base/help.exp: help step #2
PASS: gdb.base/help.exp: help stepi "si" abbreviation
PASS: gdb.base/help.exp: help stepi
PASS: gdb.base/help.exp: help signal
PASS: gdb.base/help.exp: help source
PASS: gdb.base/help.exp: help stack
PASS: gdb.base/help.exp: help status
PASS: gdb.base/help.exp: help support
PASS: gdb.base/help.exp: help symbol-file
PASS: gdb.base/help.exp: help target child
PASS: gdb.base/help.exp: help target procfs (procfs version)
PASS: gdb.base/help.exp: help target core
PASS: gdb.base/help.exp: help target exec
PASS: gdb.base/help.exp: help target remote
PASS: gdb.base/help.exp: help target
PASS: gdb.base/help.exp: help tbreak
PASS: gdb.base/help.exp: help thread
PASS: gdb.base/help.exp: help thread apply
PASS: gdb.base/help.exp: help thread find
PASS: gdb.base/help.exp: help thread name
PASS: gdb.base/help.exp: help tty
PASS: gdb.base/help.exp: help until "u" abbreviation
PASS: gdb.base/help.exp: help until
PASS: gdb.base/help.exp: help undisplay
PASS: gdb.base/help.exp: help unset environment
PASS: gdb.base/help.exp: help unset
PASS: gdb.base/help.exp: help up
PASS: gdb.base/help.exp: help up-silently
PASS: gdb.base/help.exp: help user-defined
PASS: gdb.base/help.exp: help watch
PASS: gdb.base/help.exp: help whatis
PASS: gdb.base/help.exp: help where
PASS: gdb.base/help.exp: help x
PASS: gdb.base/help.exp: help info bogus-gdb-command
PASS: gdb.base/help.exp: help gotcha
PASS: gdb.base/help.exp: apropos \(print[^ bsiedf\".-]\)
PASS: gdb.base/help.exp: apropos handle a signal
PASS: gdb.base/help.exp: apropos apropos
Running ../../../master/gdb/testsuite/gdb.base/hook-stop-continue.exp ...
PASS: gdb.base/hook-stop-continue.exp: breakpoint line number
PASS: gdb.base/hook-stop-continue.exp: print $do_continue = 1
PASS: gdb.base/hook-stop-continue.exp: define hook-stop command
PASS: gdb.base/hook-stop-continue.exp: next triggering hook-stop
PASS: gdb.base/hook-stop-continue.exp: next no hook-stop
Running ../../../master/gdb/testsuite/gdb.base/hook-stop-frame.exp ...
PASS: gdb.base/hook-stop-frame.exp: breakpoint line number
PASS: gdb.base/hook-stop-frame.exp: define hook-stop command
PASS: gdb.base/hook-stop-frame.exp: hook-stop runs before frame print
Running ../../../master/gdb/testsuite/gdb.base/huge.exp ...
PASS: gdb.base/huge.exp: print a very large data object
Running ../../../master/gdb/testsuite/gdb.base/ifelse.exp ...
PASS: gdb.base/ifelse.exp: if 1 with empty body
PASS: gdb.base/ifelse.exp: if 0 with empty body
PASS: gdb.base/ifelse.exp: if true else false #1
PASS: gdb.base/ifelse.exp: if 1 .. else with empty body
PASS: gdb.base/ifelse.exp: if true else false #2
PASS: gdb.base/ifelse.exp: if 0 .. else with empty body
PASS: gdb.base/ifelse.exp: if true else false #3
PASS: gdb.base/ifelse.exp: create define with empty else
PASS: gdb.base/ifelse.exp: call original define
PASS: gdb.base/ifelse.exp: replace define with if .. else with empty body
PASS: gdb.base/ifelse.exp: call replacement define
Running ../../../master/gdb/testsuite/gdb.base/included.exp ...
PASS: gdb.base/included.exp: set listsize 1
PASS: gdb.base/included.exp: list main
PASS: gdb.base/included.exp: list integer
PASS: gdb.base/included.exp: ptype integer
PASS: gdb.base/included.exp: info variables integer
Running ../../../master/gdb/testsuite/gdb.base/infnan.exp ...
PASS: gdb.base/infnan.exp: print a
PASS: gdb.base/infnan.exp: print b
Running ../../../master/gdb/testsuite/gdb.base/info-proc.exp ...
PASS: gdb.base/info-proc.exp: help info proc
PASS: gdb.base/info-proc.exp: info proc without a process
PASS: gdb.base/info-proc.exp: info proc with process
PASS: gdb.base/info-proc.exp: info proc mapping
Running ../../../master/gdb/testsuite/gdb.base/info-target.exp ...
PASS: gdb.base/info-target.exp: info target
Running ../../../master/gdb/testsuite/gdb.base/interact.exp ...
PASS: gdb.base/interact.exp: set interactive-mode auto
PASS: gdb.base/interact.exp: source script with interactive-mode auto
PASS: gdb.base/interact.exp: sanity check with interactive-mode auto
PASS: gdb.base/interact.exp: show interactive-mode (auto)
PASS: gdb.base/interact.exp: set interactive-mode on
PASS: gdb.base/interact.exp: source script with interactive-mode on
PASS: gdb.base/interact.exp: sanity check with interactive-mode on
PASS: gdb.base/interact.exp: show interactive-mode (on)
PASS: gdb.base/interact.exp: set interactive-mode off
PASS: gdb.base/interact.exp: source script with interactive-mode off
PASS: gdb.base/interact.exp: sanity check with interactive-mode off
PASS: gdb.base/interact.exp: show interactive-mode (off)
Running ../../../master/gdb/testsuite/gdb.base/interp.exp ...
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
PASS: gdb.base/interp.exp: interpreter-exec console "show version"
PASS: gdb.base/interp.exp: interpreter-exec mi "-var-update *"
Running ../../../master/gdb/testsuite/gdb.base/interrupt.exp ...
PASS: gdb.base/interrupt.exp: set interrupt character in interrupt.exp
PASS: gdb.base/interrupt.exp: child process is alive
PASS: gdb.base/interrupt.exp: child process ate our char
PASS: gdb.base/interrupt.exp: send_gdb control C
PASS: gdb.base/interrupt.exp: call function when asleep
PASS: gdb.base/interrupt.exp: call function a second time
PASS: gdb.base/interrupt.exp: continue
PASS: gdb.base/interrupt.exp: echo data
PASS: gdb.base/interrupt.exp: Send Control-C, second time
PASS: gdb.base/interrupt.exp: signal SIGINT
PASS: gdb.base/interrupt.exp: echo more data
PASS: gdb.base/interrupt.exp: send end of file
Running ../../../master/gdb/testsuite/gdb.base/jit.exp ...
PASS: one_jit_test-1 continue to breakpoint: break here 0
PASS: one_jit_test-1 set var argc = 2
PASS: one_jit_test-1 set var libname = "OBJDIR/gdb.base/jit-solib.so"
PASS: one_jit_test-1 set var count = 1
PASS: one_jit_test-1 continue to breakpoint: break here 1
PASS: one_jit_test-1 info function jit_function
PASS: one_jit_test-1 continue to breakpoint: break here 2
PASS: one_jit_test-1 set
PASS: one_jit_test-2 continue to breakpoint: break here 0
PASS: one_jit_test-2 set var argc = 2
PASS: one_jit_test-2 set var libname = "OBJDIR/gdb.base/jit-solib.so"
PASS: one_jit_test-2 set var count = 2
PASS: one_jit_test-2 continue to breakpoint: break here 1
PASS: one_jit_test-2 info function jit_function
PASS: one_jit_test-2 continue to breakpoint: break here 2
PASS: one_jit_test-2 set
Running ../../../master/gdb/testsuite/gdb.base/jump.exp ...
PASS: gdb.base/jump.exp: break before jump to non-call
PASS: gdb.base/jump.exp: jump to non-call
PASS: gdb.base/jump.exp: break before jump to call
PASS: gdb.base/jump.exp: jump to call
PASS: gdb.base/jump.exp: disable breakpoint on call
PASS: gdb.base/jump.exp: jump to call with disabled breakpoint
PASS: gdb.base/jump.exp: jump without argument disallowed
PASS: gdb.base/jump.exp: jump with trailing argument junk
PASS: gdb.base/jump.exp: aborted jump out of current function
PASS: gdb.base/jump.exp: jump out of current function
Running ../../../master/gdb/testsuite/gdb.base/kill-after-signal.exp ...
PASS: gdb.base/kill-after-signal.exp: handle SIGUSR1 stop print pass
PASS: gdb.base/kill-after-signal.exp: continue
PASS: gdb.base/kill-after-signal.exp: stepi
PASS: gdb.base/kill-after-signal.exp: kill
Running ../../../master/gdb/testsuite/gdb.base/label.exp ...
PASS: gdb.base/label.exp: breakpoint here
PASS: gdb.base/label.exp: breakpoint there
PASS: gdb.base/label.exp: continue to 'there'
PASS: gdb.base/label.exp: continue to 'here'
PASS: gdb.base/label.exp: rerun to main
PASS: gdb.base/label.exp: continue to 'there' after re-run
Running ../../../master/gdb/testsuite/gdb.base/langs.exp ...
PASS: gdb.base/langs.exp: break on nonexistent function in langs.exp
PASS: gdb.base/langs.exp: show language at csub in langs.exp
PASS: gdb.base/langs.exp: backtrace in langs.exp
PASS: gdb.base/langs.exp: up to foo in langs.exp
PASS: gdb.base/langs.exp: show language at foo in langs.exp
PASS: gdb.base/langs.exp: up to cppsub_ in langs.exp
PASS: gdb.base/langs.exp: show language at cppsub_ in langs.exp
PASS: gdb.base/langs.exp: up to fsub in langs.exp
PASS: gdb.base/langs.exp: show language at fsub in langs.exp
PASS: gdb.base/langs.exp: up to langs0__2do in langs.exp
PASS: gdb.base/langs.exp: show language at langs0__2do in langs.exp
PASS: gdb.base/langs.exp: up to main in langs.exp
PASS: gdb.base/langs.exp: show language at main in langs.exp
PASS: gdb.base/langs.exp: continue until exit at langs.exp
PASS: gdb.base/langs.exp: set lang to minimal
PASS: gdb.base/langs.exp: print parameter value
Running ../../../master/gdb/testsuite/gdb.base/lineinc.exp ...
PASS: gdb.base/lineinc.exp: tolerate macro info with multiple #inclusions per line
Running ../../../master/gdb/testsuite/gdb.base/list.exp ...
PASS: gdb.base/list.exp: set width 0
PASS: gdb.base/list.exp: show default list size
PASS: gdb.base/list.exp: list default lines around main
PASS: gdb.base/list.exp: setting listsize to 1 #1
PASS: gdb.base/list.exp: show listsize 1 #1
PASS: gdb.base/list.exp: list line 1 with listsize 1
PASS: gdb.base/list.exp: list line 2 with listsize 1
PASS: gdb.base/list.exp: setting listsize to 2 #2
PASS: gdb.base/list.exp: show listsize 2 #2
PASS: gdb.base/list.exp: list line 1 with listsize 2
PASS: gdb.base/list.exp: list line 2 with listsize 2
PASS: gdb.base/list.exp: list line 3 with listsize 2
PASS: gdb.base/list.exp: setting listsize to 3 #3
PASS: gdb.base/list.exp: show listsize 3 #3
PASS: gdb.base/list.exp: list line 1 with listsize 3
PASS: gdb.base/list.exp: list line 2 with listsize 3
PASS: gdb.base/list.exp: list line 3 with listsize 3
PASS: gdb.base/list.exp: setting listsize to 4 #4
PASS: gdb.base/list.exp: show listsize 4 #4
PASS: gdb.base/list.exp: list line 1 with listsize 4
PASS: gdb.base/list.exp: list line 2 with listsize 4
PASS: gdb.base/list.exp: list line 3 with listsize 4
PASS: gdb.base/list.exp: list line 4 with listsize 4
PASS: gdb.base/list.exp: setting listsize to 100 #5
PASS: gdb.base/list.exp: show listsize 100 #5
PASS: gdb.base/list.exp: list line 1 with listsize 100
PASS: gdb.base/list.exp: list line 10 with listsize 100
PASS: gdb.base/list.exp: setting listsize to 0 #6
PASS: gdb.base/list.exp: show listsize unlimited #6
PASS: gdb.base/list.exp: listsize of 0 suppresses output
PASS: gdb.base/list.exp: setting listsize to -1 #7
PASS: gdb.base/list.exp: show listsize unlimited #7
XFAIL: gdb.base/list.exp: list line 1 with unlimited listsize
PASS: gdb.base/list.exp: setting listsize to 10 #8
PASS: gdb.base/list.exp: show listsize 10 #8
PASS: gdb.base/list.exp: list line 1 in include file
PASS: gdb.base/list.exp: list message for lines past EOF
PASS: gdb.base/list.exp: list filename:number (4 tests)
PASS: gdb.base/list.exp: list function in source file 1
PASS: gdb.base/list.exp: list function in source file 2
PASS: gdb.base/list.exp: list function in include file
PASS: gdb.base/list.exp: successive list commands to page forward (4 tests)
PASS: gdb.base/list.exp: 4 successive "list -" commands to page backwards
PASS: gdb.base/list.exp: repeat list commands to page forward using 'return' (4 tests)
PASS: gdb.base/list.exp: list range; filename:line1,filename:line2
PASS: gdb.base/list.exp: list range; line1,line2
PASS: gdb.base/list.exp: list range; upper bound past EOF
PASS: gdb.base/list.exp: list range; both bounds past EOF
PASS: gdb.base/list.exp: list range, must be same files
PASS: gdb.base/list.exp: list filename:function (5 tests)
PASS: gdb.base/list.exp: list 'list0.c:main'
XFAIL: gdb.base/list.exp: list filename:function; wrong filename rejected
PASS: gdb.base/list.exp: list filename:function; nonexistant file
PASS: gdb.base/list.exp: list filename:function; nonexistant function
PASS: gdb.base/list.exp: set listsize 4
PASS: gdb.base/list.exp: list long_line
PASS: gdb.base/list.exp: search 4321
PASS: gdb.base/list.exp: search 6789
PASS: gdb.base/list.exp: search extremely long line (> 5000 chars)
Running ../../../master/gdb/testsuite/gdb.base/logical.exp ...
PASS: gdb.base/logical.exp: evaluate x; variables x = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x; variables x = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !!x; variables x = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x; variables x = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x; variables x = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !!x; variables x = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 0, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 0, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 0, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 0, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 1, y = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 1, y = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x && y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x && !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || !y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x < y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x <= y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x == y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x != y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y; variables x = 1, y = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y; variables x = 1, y = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 0, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 0, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 0, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 0, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 0, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 0, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 0, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 1, z = 0; expecting 0
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 1, z = 0; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x && y || z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || y || z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate x || !y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && z; variables x = 1, y = 1, z = 1; expecting 1
PASS: gdb.base/logical.exp: evaluate !x || y && !z; variables x = 1, y = 1, z = 1; expecting 0
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 1, y = 2, w = 3, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 1, y = 2, w = 3, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 1, y = 2, w = 3, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 1, y = 2, w = 1, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 1, y = 2, w = 1, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 1, y = 2, w = 1, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate x > y || w == z; variables x = 2, y = 2, w = 2, z = 3; expecting 0
PASS: gdb.base/logical.exp: evaluate x >= y && w != z; variables x = 2, y = 2, w = 2, z = 3; expecting 1
PASS: gdb.base/logical.exp: evaluate ! x > y || w + z; variables x = 2, y = 2, w = 2, z = 3; expecting 1
Running ../../../master/gdb/testsuite/gdb.base/long_long.exp ...
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (char)" (1)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (short)" (2)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long long)" (8)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (void *)" (4)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (double)" (8)
PASS: gdb.base/long_long.exp: get integer valueof "sizeof (long double)" (12)
PASS: gdb.base/long_long.exp: continue to breakpoint: Stop here and look
PASS: gdb.base/long_long.exp: hex print p/x
PASS: gdb.base/long_long.exp: decimal print p/x
PASS: gdb.base/long_long.exp: default print val.dec
PASS: gdb.base/long_long.exp: default print val.bin
PASS: gdb.base/long_long.exp: default print val.oct
PASS: gdb.base/long_long.exp: default print hex
PASS: gdb.base/long_long.exp: decimal print p/u
PASS: gdb.base/long_long.exp: binary print
PASS: gdb.base/long_long.exp: octal print
PASS: gdb.base/long_long.exp: print +ve long long
PASS: gdb.base/long_long.exp: decimal print p/d
PASS: gdb.base/long_long.exp: p/d val.oct
PASS: gdb.base/long_long.exp: p/u val.oct
PASS: gdb.base/long_long.exp: p/o val.oct
PASS: gdb.base/long_long.exp: p/t val.oct
PASS: gdb.base/long_long.exp: p/a val.oct
PASS: gdb.base/long_long.exp: p/c val.oct
PASS: gdb.base/long_long.exp: p/f val.oct
PASS: gdb.base/long_long.exp: p/x *(char *)c
PASS: gdb.base/long_long.exp: p/d *(char *)c
PASS: gdb.base/long_long.exp: p/u *(char *)c
PASS: gdb.base/long_long.exp: p/o *(char *)c
PASS: gdb.base/long_long.exp: p/t *(char *)c
PASS: gdb.base/long_long.exp: p/a *(char *)c
PASS: gdb.base/long_long.exp: p/f *(char *)c
PASS: gdb.base/long_long.exp: p/c *(char *)c
PASS: gdb.base/long_long.exp: p/x *(short *)s
PASS: gdb.base/long_long.exp: p/d *(short *)s
PASS: gdb.base/long_long.exp: p/u *(short *)s
PASS: gdb.base/long_long.exp: p/o *(short *)s
PASS: gdb.base/long_long.exp: p/t *(short *)s
PASS: gdb.base/long_long.exp: p/a *(short *)s
PASS: gdb.base/long_long.exp: p/f *(short *)s
PASS: gdb.base/long_long.exp: p/c *(short *)s
PASS: gdb.base/long_long.exp: p/x *(int *)i
PASS: gdb.base/long_long.exp: p/d *(int *)i
PASS: gdb.base/long_long.exp: p/u *(int *)i
PASS: gdb.base/long_long.exp: p/o *(int *)i
PASS: gdb.base/long_long.exp: p/t *(int *)i
PASS: gdb.base/long_long.exp: p/a *(int *)i
PASS: gdb.base/long_long.exp: p/f *(int *)i
PASS: gdb.base/long_long.exp: p/c *(int *)i
PASS: gdb.base/long_long.exp: p/x *(long *)l
PASS: gdb.base/long_long.exp: p/d *(long *)l
PASS: gdb.base/long_long.exp: p/u *(long *)l
PASS: gdb.base/long_long.exp: p/o *(long *)l
PASS: gdb.base/long_long.exp: p/t *(long *)l
PASS: gdb.base/long_long.exp: p/a *(long *)l
PASS: gdb.base/long_long.exp: p/f *(long *)l
PASS: gdb.base/long_long.exp: p/c *(long *)l
PASS: gdb.base/long_long.exp: p/x *(long long *)ll
PASS: gdb.base/long_long.exp: p/d *(long long *)ll
PASS: gdb.base/long_long.exp: p/u *(long long *)ll
PASS: gdb.base/long_long.exp: p/o *(long long *)ll
PASS: gdb.base/long_long.exp: p/t *(long long *)ll
PASS: gdb.base/long_long.exp: p/a *(long long *)ll
PASS: gdb.base/long_long.exp: p/f *(long long *)ll
PASS: gdb.base/long_long.exp: p/c *(long long *)ll
PASS: gdb.base/long_long.exp: set examine size to w
PASS: gdb.base/long_long.exp: x/x w
PASS: gdb.base/long_long.exp: x/d w
PASS: gdb.base/long_long.exp: x/u w
PASS: gdb.base/long_long.exp: x/o w
PASS: gdb.base/long_long.exp: x/t w
PASS: gdb.base/long_long.exp: x/a
PASS: gdb.base/long_long.exp: x/c b
PASS: gdb.base/long_long.exp: x/f &val.oct
PASS: gdb.base/long_long.exp: set examine size to g
PASS: gdb.base/long_long.exp: x/2x g
PASS: gdb.base/long_long.exp: x/2d g
PASS: gdb.base/long_long.exp: x/2u g
PASS: gdb.base/long_long.exp: x/2o g
PASS: gdb.base/long_long.exp: x/2t g
PASS: gdb.base/long_long.exp: x/2a
PASS: gdb.base/long_long.exp: x/2c b
PASS: gdb.base/long_long.exp: x/2f &val.oct
PASS: gdb.base/long_long.exp: x/2bx b
PASS: gdb.base/long_long.exp: x/2bd b
PASS: gdb.base/long_long.exp: x/2bu b
PASS: gdb.base/long_long.exp: x/2bo b
PASS: gdb.base/long_long.exp: x/2bt b
PASS: gdb.base/long_long.exp: x/2ba b
PASS: gdb.base/long_long.exp: x/2bc b
PASS: gdb.base/long_long.exp: x/2bf b
PASS: gdb.base/long_long.exp: x/2hx h
PASS: gdb.base/long_long.exp: x/2hd h
PASS: gdb.base/long_long.exp: x/2hu h
PASS: gdb.base/long_long.exp: x/2ho h
PASS: gdb.base/long_long.exp: x/2ht h
PASS: gdb.base/long_long.exp: x/2ha h
PASS: gdb.base/long_long.exp: x/2hc h
PASS: gdb.base/long_long.exp: x/2hf h
PASS: gdb.base/long_long.exp: x/2wx w
PASS: gdb.base/long_long.exp: x/2wd w
PASS: gdb.base/long_long.exp: x/2wu w
PASS: gdb.base/long_long.exp: x/2wo w
PASS: gdb.base/long_long.exp: x/2wt w
PASS: gdb.base/long_long.exp: x/2wa w
PASS: gdb.base/long_long.exp: x/2wc w
PASS: gdb.base/long_long.exp: x/2wf w
PASS: gdb.base/long_long.exp: x/2gx g
PASS: gdb.base/long_long.exp: x/2gd g
PASS: gdb.base/long_long.exp: x/2gu g
PASS: gdb.base/long_long.exp: x/2go g
PASS: gdb.base/long_long.exp: x/2gt g
PASS: gdb.base/long_long.exp: x/2ga g
PASS: gdb.base/long_long.exp: x/2gc g
PASS: gdb.base/long_long.exp: x/2gf g
Running ../../../master/gdb/testsuite/gdb.base/longjmp.exp ...
PASS: gdb.base/longjmp.exp: breakpoint at pattern 1 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 1 start
PASS: gdb.base/longjmp.exp: breakpoint at miss_step_1
PASS: gdb.base/longjmp.exp: next over setjmp (1)
PASS: gdb.base/longjmp.exp: next to longjmp (1)
FAIL: gdb.base/longjmp.exp: next over longjmp(1)
PASS: gdb.base/longjmp.exp: breakpoint at pattern 2 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 2 start
PASS: gdb.base/longjmp.exp: breakpoint at miss_step_2
PASS: gdb.base/longjmp.exp: next over setjmp (2)
FAIL: gdb.base/longjmp.exp: next over call_longjmp (2)
PASS: gdb.base/longjmp.exp: breakpoint at pattern 3 start
PASS: gdb.base/longjmp.exp: continue to breakpoint at pattern 3 start
FAIL: gdb.base/longjmp.exp: next over patt3
Running ../../../master/gdb/testsuite/gdb.base/macscp.exp ...
PASS: gdb.base/macscp.exp: list main for support check
PASS: gdb.base/macscp.exp: list main for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list main'
PASS: gdb.base/macscp.exp: list macscp2_2 for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp2_2'
PASS: gdb.base/macscp.exp: list macscp3_2 for WHERE
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp3_2'
PASS: gdb.base/macscp.exp: info macro FROM_COMMANDLINE
PASS: gdb.base/macscp.exp: list macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE after `list macscp_4_2_from_macscp2'
PASS: gdb.base/macscp.exp: list macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE after `list macscp_4_2_from_macscp3' (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: break macscp1_1
PASS: gdb.base/macscp.exp: break macscp2_1
PASS: gdb.base/macscp.exp: break macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: break macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: break macscp2_2
PASS: gdb.base/macscp.exp: break macscp1_2
PASS: gdb.base/macscp.exp: break macscp3_1
PASS: gdb.base/macscp.exp: break macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: break macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: break macscp3_2
PASS: gdb.base/macscp.exp: break macscp1_3
PASS: gdb.base/macscp.exp: continue to macscp1_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp1_1
PASS: gdb.base/macscp.exp: continue to macscp2_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp2_1
PASS: gdb.base/macscp.exp: continue to macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp2
PASS: gdb.base/macscp.exp: continue to macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp2
PASS: gdb.base/macscp.exp: continue to macscp2_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp2_2
PASS: gdb.base/macscp.exp: continue to macscp1_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp1_2
PASS: gdb.base/macscp.exp: continue to macscp3_1
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp3_1
PASS: gdb.base/macscp.exp: continue to macscp4_1_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_1_from_macscp3 (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_1_from_macscp3 (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_1_from_macscp3
PASS: gdb.base/macscp.exp: continue to macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: info macro WHERE stopped in macscp4_2_from_macscp3 (gdb/555) (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp4_2_from_macscp3
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
KFAIL: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp4_2_from_macscp3 (PRMS: gdb/555)
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp4_2_from_macscp3
PASS: gdb.base/macscp.exp: continue to macscp3_2
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_3 defined/undefined when stopped at macscp3_2
PASS: gdb.base/macscp.exp: continue to macscp1_3
PASS: gdb.base/macscp.exp: info macro WHERE stopped in macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP2_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP2_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP1_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP1_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_1 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_1_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP4_2_FROM_MACSCP3 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: BEFORE_MACSCP3_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: UNTIL_MACSCP3_2 defined/undefined when stopped at macscp1_3
PASS: gdb.base/macscp.exp: breakpoint macscp_expr
PASS: gdb.base/macscp.exp: continue to macsp_expr
PASS: gdb.base/macscp.exp: print address.addr
PASS: gdb.base/macscp.exp: print expression with macro before define.
PASS: gdb.base/macscp.exp: next to definition 1
PASS: gdb.base/macscp.exp: print expression with macro in scope.
PASS: gdb.base/macscp.exp: user macro override
PASS: gdb.base/macscp.exp: choose user macro
PASS: gdb.base/macscp.exp: remove user override
PASS: gdb.base/macscp.exp: print expression with macro after removing override
PASS: gdb.base/macscp.exp: next to definition 2
PASS: gdb.base/macscp.exp: print expression with macro after undef.
PASS: gdb.base/macscp.exp: basic macro define
PASS: gdb.base/macscp.exp: expansion of defined macro
PASS: gdb.base/macscp.exp: basic macro list
PASS: gdb.base/macscp.exp: basic redefine, macro with args
PASS: gdb.base/macscp.exp: expansion of macro with arguments
PASS: gdb.base/macscp.exp: basic macro undef
PASS: gdb.base/macscp.exp: print expression with macro after user undef.
PASS: gdb.base/macscp.exp: macro define with no arguments
PASS: gdb.base/macscp.exp: macro undef with no arguments
PASS: gdb.base/macscp.exp: complete 'p FIFTY_SEVEN'
PASS: gdb.base/macscp.exp: complete 'p TWENTY_'
PASS: gdb.base/macscp.exp: complete 'p FORTY_'
PASS: gdb.base/macscp.exp: defining TWENTY_THREE
PASS: gdb.base/macscp.exp: complete 'p TWENTY_THREE'
PASS: gdb.base/macscp.exp: basic macro splicing
PASS: gdb.base/macscp.exp: define splice helper
PASS: gdb.base/macscp.exp: splicing plus expansion
PASS: gdb.base/macscp.exp: define first varargs helper
PASS: gdb.base/macscp.exp: define second varargs helper
PASS: gdb.base/macscp.exp: define third varargs helper
PASS: gdb.base/macscp.exp: define fourth varargs helper
PASS: gdb.base/macscp.exp: c99 varargs expansion
PASS: gdb.base/macscp.exp: c99 varargs expansion without an argument
PASS: gdb.base/macscp.exp: c99 varargs expansion, multiple formal arguments
PASS: gdb.base/macscp.exp: gnu varargs expansion
PASS: gdb.base/macscp.exp: gnu varargs expansion without an argument
PASS: gdb.base/macscp.exp: gnu varargs expansion special splicing without an argument
PASS: gdb.base/macscp.exp: define stringification macro
PASS: gdb.base/macscp.exp: define first stringification helper
PASS: gdb.base/macscp.exp: define second stringification helper
PASS: gdb.base/macscp.exp: simple stringify
PASS: gdb.base/macscp.exp: stringify with one space
PASS: gdb.base/macscp.exp: stringify with many spaces
PASS: gdb.base/macscp.exp: stringify with quotes
PASS: gdb.base/macscp.exp: stringify with backslashes
PASS: gdb.base/macscp.exp: stringify without substitution
PASS: gdb.base/macscp.exp: stringify with substitution
PASS: gdb.base/macscp.exp: define si_addr macro
PASS: gdb.base/macscp.exp: macro expand siginfo.si_addr
Running ../../../master/gdb/testsuite/gdb.base/maint.exp ...
PASS: gdb.base/maint.exp: set height 0
PASS: gdb.base/maint.exp: maint print registers
PASS: gdb.base/maint.exp: maint check-symtabs
PASS: gdb.base/maint.exp: maint space
PASS: gdb.base/maint.exp: maint space 1
PASS: gdb.base/maint.exp: maint time
PASS: gdb.base/maint.exp: maint time 1
PASS: gdb.base/maint.exp: maint time 0
PASS: gdb.base/maint.exp: maint space 0
PASS: gdb.base/maint.exp: maint demangle
PASS: gdb.base/maint.exp: maint demangle main
PASS: gdb.base/maint.exp: maint print statistics
PASS: gdb.base/maint.exp: maint print dummy-frames
PASS: gdb.base/maint.exp: maint print objfiles: header
PASS: gdb.base/maint.exp: maint print objfiles: psymtabs
PASS: gdb.base/maint.exp: maint print objfiles: symtabs
PASS: gdb.base/maint.exp: maint print psymbols w/o args
PASS: gdb.base/maint.exp: maint print psymbols 1
PASS: gdb.base/maint.exp: shell rm -f psymbols_output
PASS: gdb.base/maint.exp: maint print msymbols w/o args
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output
PASS: gdb.base/maint.exp: cd to objdir
PASS: gdb.base/maint.exp: maint print msymbols
PASS: gdb.base/maint.exp: shell rm -f msymbols_output2
PASS: gdb.base/maint.exp: cd to mydir
PASS: gdb.base/maint.exp: maint print symbols w/o args
PASS: gdb.base/maint.exp: maint print symbols
PASS: gdb.base/maint.exp: shell rm -f symbols_output
PASS: gdb.base/maint.exp: maint print type
PASS: gdb.base/maint.exp: maint info sections
PASS: gdb.base/maint.exp: maint info sections .text
PASS: gdb.base/maint.exp: maint info sections CODE
PASS: gdb.base/maint.exp: maint info sections DATA
PASS: gdb.base/maint.exp: maint info breakpoints
PASS: gdb.base/maint.exp: maint print w/o args
PASS: gdb.base/maint.exp: maint info w/o args
PASS: gdb.base/maint.exp: maint w/o args
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: help maint check-symtabs
PASS: gdb.base/maint.exp: help maint space
PASS: gdb.base/maint.exp: help maint time
PASS: gdb.base/maint.exp: help maint demangle
PASS: gdb.base/maint.exp: help maint dump-me
PASS: gdb.base/maint.exp: help maint internal-error
PASS: gdb.base/maint.exp: help maint internal-warning
PASS: gdb.base/maint.exp: help maint print statistics
PASS: gdb.base/maint.exp: help maint print dummy-frames
PASS: gdb.base/maint.exp: help maint print objfiles
PASS: gdb.base/maint.exp: help maint print psymbols
PASS: gdb.base/maint.exp: help maint print msymbols
PASS: gdb.base/maint.exp: help maint print symbols
PASS: gdb.base/maint.exp: help maint print type
PASS: gdb.base/maint.exp: help maint info sections
PASS: gdb.base/maint.exp: help maint info breakpoints
PASS: gdb.base/maint.exp: help maint info
PASS: gdb.base/maint.exp: help maint print
PASS: gdb.base/maint.exp: help maint
PASS: gdb.base/maint.exp: maint dump-me
PASS: gdb.base/maint.exp: maint internal-error
PASS: gdb.base/maint.exp: internal-error resync
Running ../../../master/gdb/testsuite/gdb.base/memattr.exp ...
PASS: gdb.base/memattr.exp: create mem region 1
PASS: gdb.base/memattr.exp: create mem region 2
PASS: gdb.base/memattr.exp: create mem region 3
PASS: gdb.base/memattr.exp: create mem region 4
PASS: gdb.base/memattr.exp: create mem region 5
PASS: gdb.base/memattr.exp: info mem (1)
PASS: gdb.base/memattr.exp: mem1 cannot be read
PASS: gdb.base/memattr.exp: mem1 can be written
PASS: gdb.base/memattr.exp: mem2 cannot be written
PASS: gdb.base/memattr.exp: mem2 can be read
PASS: gdb.base/memattr.exp: disable mem 1
PASS: gdb.base/memattr.exp: mem 1 was disabled
PASS: gdb.base/memattr.exp: enable mem 1
PASS: gdb.base/memattr.exp: mem 1 was enabled
PASS: gdb.base/memattr.exp: disable mem 2 4
PASS: gdb.base/memattr.exp: mem 2 and 4 were disabled
PASS: gdb.base/memattr.exp: enable mem 2-4
PASS: gdb.base/memattr.exp: mem 2-4 were enabled
PASS: gdb.base/memattr.exp: disable mem
PASS: gdb.base/memattr.exp: mem 1 to 5 were disabled
PASS: gdb.base/memattr.exp: enable mem
PASS: gdb.base/memattr.exp: mem 1 to 5 were enabled
PASS: gdb.base/memattr.exp: disable non-existant regions
PASS: gdb.base/memattr.exp: delete mem 1
PASS: gdb.base/memattr.exp: mem 1 was deleted
PASS: gdb.base/memattr.exp: delete mem 2 4
PASS: gdb.base/memattr.exp: mem 2 and 4 were deleted
PASS: gdb.base/memattr.exp: delete mem 2-4
PASS: gdb.base/memattr.exp: mem 2-4 were deleted
PASS: gdb.base/memattr.exp: delete non-existant region
Running ../../../master/gdb/testsuite/gdb.base/mips_pro.exp ...
PASS: gdb.base/mips_pro.exp: backtrace
Running ../../../master/gdb/testsuite/gdb.base/miscexprs.exp ...
PASS: gdb.base/miscexprs.exp: continue to marker1
PASS: gdb.base/miscexprs.exp: up from marker1
PASS: gdb.base/miscexprs.exp: print value of &ibig.i[0]
PASS: gdb.base/miscexprs.exp: print value of &cbig.c[0]
PASS: gdb.base/miscexprs.exp: print value of &fbig.f[0]
PASS: gdb.base/miscexprs.exp: print value of &dbig.d[0]
PASS: gdb.base/miscexprs.exp: print value of &sbig.s[0]
PASS: gdb.base/miscexprs.exp: print value of &lbig.l[0]
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] | 1
PASS: gdb.base/miscexprs.exp: print value of sbig.s[90] & 127
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !sbig.s[90]
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !ibig.i[100]
PASS: gdb.base/miscexprs.exp: print value of !sbig.s[90] * 10
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] * sbig.s[90]
PASS: gdb.base/miscexprs.exp: print value of fbig.f[100] * dbig.d[202]
PASS: gdb.base/miscexprs.exp: print value of !(sbig.s[90] * 2)
PASS: gdb.base/miscexprs.exp: print value of sizeof sbig
PASS: gdb.base/miscexprs.exp: print value of sizeof cbig
PASS: gdb.base/miscexprs.exp: print value of sizeof lbig / sizeof long
PASS: gdb.base/miscexprs.exp: print value of ibig.i[100] << 2
PASS: gdb.base/miscexprs.exp: print value of sbig.s[90] >> 4
PASS: gdb.base/miscexprs.exp: print value of lbig.l[333] >> 6
Running ../../../master/gdb/testsuite/gdb.base/morestack.exp ...
gdb compile failed, cc1: error: unrecognized command line option "-fsplit-stack"
UNTESTED: gdb.base/morestack.exp: morestack.exp
Running ../../../master/gdb/testsuite/gdb.base/moribund-step.exp ...
PASS: gdb.base/moribund-step.exp: set non-stop on
PASS: gdb.base/moribund-step.exp: step
Running ../../../master/gdb/testsuite/gdb.base/multi-forks.exp ...
PASS: gdb.base/multi-forks.exp: set follow-fork child
PASS: gdb.base/multi-forks.exp: run to exit 2
PASS: gdb.base/multi-forks.exp: follow child, print pids
PASS: gdb.base/multi-forks.exp: run to exit 2
PASS: gdb.base/multi-forks.exp: follow parent, print pids
PASS: gdb.base/multi-forks.exp: help set detach
PASS: gdb.base/multi-forks.exp: show detach default on
PASS: gdb.base/multi-forks.exp: set detach off
PASS: gdb.base/multi-forks.exp: Run to exit 1
PASS: gdb.base/multi-forks.exp: info inferior 1
PASS: gdb.base/multi-forks.exp: inferior 1
PASS: gdb.base/multi-forks.exp: Run to exit 2
PASS: gdb.base/multi-forks.exp: info inferior 2
PASS: gdb.base/multi-forks.exp: inferior 2
PASS: gdb.base/multi-forks.exp: Run to exit 3
PASS: gdb.base/multi-forks.exp: info inferior 3
PASS: gdb.base/multi-forks.exp: inferior 3
PASS: gdb.base/multi-forks.exp: Run to exit 4
PASS: gdb.base/multi-forks.exp: info inferior 4
PASS: gdb.base/multi-forks.exp: inferior 4
PASS: gdb.base/multi-forks.exp: Run to exit 5
PASS: gdb.base/multi-forks.exp: info inferior 5
PASS: gdb.base/multi-forks.exp: inferior 5
PASS: gdb.base/multi-forks.exp: Run to exit 6
PASS: gdb.base/multi-forks.exp: info inferior 6
PASS: gdb.base/multi-forks.exp: inferior 6
PASS: gdb.base/multi-forks.exp: Run to exit 7
PASS: gdb.base/multi-forks.exp: info inferior 7
PASS: gdb.base/multi-forks.exp: inferior 7
PASS: gdb.base/multi-forks.exp: Run to exit 8
PASS: gdb.base/multi-forks.exp: info inferior 8
PASS: gdb.base/multi-forks.exp: inferior 8
PASS: gdb.base/multi-forks.exp: Run to exit 9
PASS: gdb.base/multi-forks.exp: info inferior 9
PASS: gdb.base/multi-forks.exp: inferior 9
PASS: gdb.base/multi-forks.exp: Run to exit 10
PASS: gdb.base/multi-forks.exp: info inferior 10
PASS: gdb.base/multi-forks.exp: inferior 10
PASS: gdb.base/multi-forks.exp: Run to exit 11
PASS: gdb.base/multi-forks.exp: info inferior 11
PASS: gdb.base/multi-forks.exp: inferior 11
PASS: gdb.base/multi-forks.exp: Run to exit 12
PASS: gdb.base/multi-forks.exp: info inferior 12
PASS: gdb.base/multi-forks.exp: inferior 12
PASS: gdb.base/multi-forks.exp: Run to exit 13
PASS: gdb.base/multi-forks.exp: info inferior 13
PASS: gdb.base/multi-forks.exp: inferior 13
PASS: gdb.base/multi-forks.exp: Run to exit 14
PASS: gdb.base/multi-forks.exp: info inferior 14
PASS: gdb.base/multi-forks.exp: inferior 14
PASS: gdb.base/multi-forks.exp: Run to exit 15
PASS: gdb.base/multi-forks.exp: info inferior 15
PASS: gdb.base/multi-forks.exp: inferior 15
PASS: gdb.base/multi-forks.exp: Run to exit 16
PASS: gdb.base/multi-forks.exp: info inferior 16
PASS: gdb.base/multi-forks.exp: restart final
PASS: gdb.base/multi-forks.exp: Detach 2
PASS: gdb.base/multi-forks.exp: Detach 3
PASS: gdb.base/multi-forks.exp: Detach 4
PASS: gdb.base/multi-forks.exp: Detach 5
PASS: gdb.base/multi-forks.exp: Kill 6
PASS: gdb.base/multi-forks.exp: Did kill 6
PASS: gdb.base/multi-forks.exp: Kill 7
PASS: gdb.base/multi-forks.exp: Did kill 7
PASS: gdb.base/multi-forks.exp: Kill 8
PASS: gdb.base/multi-forks.exp: Did kill 8
PASS: gdb.base/multi-forks.exp: Kill 9
PASS: gdb.base/multi-forks.exp: Did kill 9
PASS: gdb.base/multi-forks.exp: Kill 10
PASS: gdb.base/multi-forks.exp: Did kill 10
PASS: gdb.base/multi-forks.exp: Kill 11
PASS: gdb.base/multi-forks.exp: Did kill 11
PASS: gdb.base/multi-forks.exp: Kill 12
PASS: gdb.base/multi-forks.exp: Did kill 12
PASS: gdb.base/multi-forks.exp: Kill 13
PASS: gdb.base/multi-forks.exp: Did kill 13
PASS: gdb.base/multi-forks.exp: Kill 14
PASS: gdb.base/multi-forks.exp: Did kill 14
PASS: gdb.base/multi-forks.exp: Kill 15
PASS: gdb.base/multi-forks.exp: Did kill 15
PASS: gdb.base/multi-forks.exp: Kill 16
PASS: gdb.base/multi-forks.exp: Did kill 16
Running ../../../master/gdb/testsuite/gdb.base/nodebug.exp ...
PASS: gdb.base/nodebug.exp: p top
PASS: gdb.base/nodebug.exp: whatis top
PASS: gdb.base/nodebug.exp: ptype top
PASS: gdb.base/nodebug.exp: p middle
PASS: gdb.base/nodebug.exp: whatis middle
PASS: gdb.base/nodebug.exp: ptype middle
PASS: gdb.base/nodebug.exp: p dataglobal
PASS: gdb.base/nodebug.exp: whatis dataglobal
PASS: gdb.base/nodebug.exp: ptype dataglobal
PASS: gdb.base/nodebug.exp: p datalocal
PASS: gdb.base/nodebug.exp: whatis datalocal
PASS: gdb.base/nodebug.exp: ptype datalocal
PASS: gdb.base/nodebug.exp: p bssglobal
PASS: gdb.base/nodebug.exp: whatis bssglobal
PASS: gdb.base/nodebug.exp: ptype bssglobal
PASS: gdb.base/nodebug.exp: p bsslocal
PASS: gdb.base/nodebug.exp: whatis bsslocal
PASS: gdb.base/nodebug.exp: ptype bsslocal
PASS: gdb.base/nodebug.exp: backtrace from inner in nodebug.exp
PASS: gdb.base/nodebug.exp: p/c array_index("abcdef",2)
PASS: gdb.base/nodebug.exp: backtrace from middle in nodebug.exp
Running ../../../master/gdb/testsuite/gdb.base/nofield.exp ...
PASS: gdb.base/nofield.exp: ptype struct not_empty
PASS: gdb.base/nofield.exp: ptype struct empty
PASS: gdb.base/nofield.exp: ptype union empty_union
Running ../../../master/gdb/testsuite/gdb.base/nostdlib.exp ...
PASS: gdb.base/nostdlib.exp: stop at run
PASS: gdb.base/nostdlib.exp: continue to marker
Running ../../../master/gdb/testsuite/gdb.base/opaque.exp ...
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (statically)
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (statically)
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically)
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 1
PASS: gdb.base/opaque.exp: whatis on opaque struct pointer (dynamically) 1
PASS: gdb.base/opaque.exp: ptype on opaque struct pointer (dynamically) 2
PASS: gdb.base/opaque.exp: whatis on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct instance (dynamically) 2
PASS: gdb.base/opaque.exp: ptype on opaque struct tagname (dynamically) 2
Running ../../../master/gdb/testsuite/gdb.base/overlays.exp ...
Running ../../../master/gdb/testsuite/gdb.base/page.exp ...
PASS: gdb.base/page.exp: set pagination off
PASS: gdb.base/page.exp: pagination is off
PASS: gdb.base/page.exp: unpaged help
PASS: gdb.base/page.exp: set pagination on
PASS: gdb.base/page.exp: pagination is on
PASS: gdb.base/page.exp: set height 10
PASS: gdb.base/page.exp: paged help
PASS: gdb.base/page.exp: q
Running ../../../master/gdb/testsuite/gdb.base/pc-fp.exp ...
PASS: gdb.base/pc-fp.exp: get hexadecimal valueof "$pc"
PASS: gdb.base/pc-fp.exp: get hexadecimal valueof "$fp"
PASS: gdb.base/pc-fp.exp: display/i $pc
PASS: gdb.base/pc-fp.exp: display/w $fp
Running ../../../master/gdb/testsuite/gdb.base/pending.exp ...
PASS: gdb.base/pending.exp: set pending breakpoint (without symbols)
PASS: gdb.base/pending.exp: single pending breakpoint info (without symbols)
PASS: gdb.base/pending.exp: run to resolved breakpoint 1 (without symbols)
PASS: gdb.base/pending.exp: set pending breakpoint
PASS: gdb.base/pending.exp: single pending breakpoint info
PASS: gdb.base/pending.exp: breakpoint function
PASS: gdb.base/pending.exp: pending plus real breakpoint info
PASS: gdb.base/pending.exp: Don't set pending breakpoint
PASS: gdb.base/pending.exp: condition 1 k == 1
PASS: gdb.base/pending.exp: pending plus condition
PASS: gdb.base/pending.exp: disable 1
PASS: gdb.base/pending.exp: pending disabled
PASS: gdb.base/pending.exp: Set commands for pending breakpoint
PASS: gdb.base/pending.exp: pending disabled plus commands
PASS: gdb.base/pending.exp: Set pending breakpoint 2
PASS: gdb.base/pending.exp: multiple pending breakpoints
PASS: gdb.base/pending.exp: Set pending breakpoint 3
PASS: gdb.base/pending.exp: set ignore count on pending breakpoint 3
PASS: gdb.base/pending.exp: multiple pending breakpoints 2
PASS: gdb.base/pending.exp: running to main
PASS: gdb.base/pending.exp: re-enabling pending breakpoint that can resolve instantly
PASS: gdb.base/pending.exp: continue to resolved breakpoint 2
PASS: gdb.base/pending.exp: continue to resolved breakpoint 1
PASS: gdb.base/pending.exp: Disable other breakpoints
PASS: gdb.base/pending.exp: Disable other breakpoints
PASS: gdb.base/pending.exp: continue to resolved breakpoint 3
PASS: gdb.base/pending.exp: set imaginary pending breakpoint
PASS: gdb.base/pending.exp: rerun to main
PASS: gdb.base/pending.exp: verify pending breakpoint after restart
Running ../../../master/gdb/testsuite/gdb.base/permissions.exp ...
PASS: gdb.base/permissions.exp: show may-write-registers
PASS: gdb.base/permissions.exp: show may-write-memory
PASS: gdb.base/permissions.exp: show may-insert-breakpoints
PASS: gdb.base/permissions.exp: show may-insert-tracepoints
PASS: gdb.base/permissions.exp: show may-insert-fast-tracepoints
PASS: gdb.base/permissions.exp: show may-interrupt
PASS: gdb.base/permissions.exp: enable observer mode
PASS: gdb.base/permissions.exp: show may-write-memory
PASS: gdb.base/permissions.exp: show may-write-registers
PASS: gdb.base/permissions.exp: show may-insert-breakpoints
PASS: gdb.base/permissions.exp: show may-insert-tracepoints
PASS: gdb.base/permissions.exp: show may-insert-fast-tracepoints
PASS: gdb.base/permissions.exp: show may-interrupt
PASS: gdb.base/permissions.exp: disable observer mode
PASS: gdb.base/permissions.exp: set non-stop off
PASS: gdb.base/permissions.exp: set a global
PASS: gdb.base/permissions.exp: print x
PASS: gdb.base/permissions.exp: set may-write-memory off
PASS: gdb.base/permissions.exp: try to set a global
PASS: gdb.base/permissions.exp: print x
Running ../../../master/gdb/testsuite/gdb.base/pie-execl.exp ...
PASS: gdb.base/pie-execl.exp: set args OBJDIR/gdb.base/pie-execl2
PASS: gdb.base/pie-execl.exp: pie_execl_marker address first
PASS: gdb.base/pie-execl.exp: continue
PASS: gdb.base/pie-execl.exp: pie_execl_marker address second
PASS: gdb.base/pie-execl.exp: pie_execl_marker address has changed
Running ../../../master/gdb/testsuite/gdb.base/pointers.exp ...
PASS: gdb.base/pointers.exp: continuing after dummy()
PASS: gdb.base/pointers.exp: set pointer to beginning of array
PASS: gdb.base/pointers.exp: set pointer to end of array
PASS: gdb.base/pointers.exp: print object pointed to
PASS: gdb.base/pointers.exp: print object pointed to #2
PASS: gdb.base/pointers.exp: pointer1==pointer2
PASS: gdb.base/pointers.exp: pointer1!=pointer2
PASS: gdb.base/pointers.exp: pointer1<=pointer2
PASS: gdb.base/pointers.exp: pointer1>=pointer2
PASS: gdb.base/pointers.exp: pointer1<pointer2
PASS: gdb.base/pointers.exp: pointer1>pointer2
PASS: gdb.base/pointers.exp: set y = *v_int_pointer++
PASS: gdb.base/pointers.exp: pointer assignment
PASS: gdb.base/pointers.exp: and post-increment
PASS: gdb.base/pointers.exp: set y = *--v_int_pointer2
PASS: gdb.base/pointers.exp: pointer assignment
PASS: gdb.base/pointers.exp: and pre-decrement
PASS: gdb.base/pointers.exp: set y =v_int_pointer-v_int_pointer2
PASS: gdb.base/pointers.exp: pointer1-pointer2
PASS: gdb.base/pointers.exp: set v_int_pointer=v_int_array
PASS: gdb.base/pointers.exp: print array element through pointer
PASS: gdb.base/pointers.exp: print array element through pointer #2
PASS: gdb.base/pointers.exp: print array element through pointer #3
PASS: gdb.base/pointers.exp: print array element through pointer #4
PASS: gdb.base/pointers.exp: print array element through pointer #5
PASS: gdb.base/pointers.exp: increment rptr
PASS: gdb.base/pointers.exp: print array element through pointer #6
PASS: gdb.base/pointers.exp: print array element through pointer #7
PASS: gdb.base/pointers.exp: print array element through pointer #8
PASS: gdb.base/pointers.exp: print array element w/ pointer arithmetic
PASS: gdb.base/pointers.exp: print through ptr to ptr
PASS: gdb.base/pointers.exp: continue
PASS: gdb.base/pointers.exp: up from marker1
PASS: gdb.base/pointers.exp: print value of *pUC
PASS: gdb.base/pointers.exp: ptype pUC
PASS: gdb.base/pointers.exp: print value of *pS
PASS: gdb.base/pointers.exp: ptype pS
PASS: gdb.base/pointers.exp: print value of *pUS
PASS: gdb.base/pointers.exp: ptype pUS
PASS: gdb.base/pointers.exp: print value of *pI
PASS: gdb.base/pointers.exp: ptype pI
PASS: gdb.base/pointers.exp: print value of *pUI
PASS: gdb.base/pointers.exp: ptype pUI
PASS: gdb.base/pointers.exp: print value of *pL
PASS: gdb.base/pointers.exp: ptype pL
PASS: gdb.base/pointers.exp: print value of *pUL
PASS: gdb.base/pointers.exp: ptype pUL
PASS: gdb.base/pointers.exp: print value of *pF
PASS: gdb.base/pointers.exp: ptype pF
PASS: gdb.base/pointers.exp: print value of *pD
PASS: gdb.base/pointers.exp: ptype pD
PASS: gdb.base/pointers.exp: print value of ******ppppppC
PASS: gdb.base/pointers.exp: ptype pC
PASS: gdb.base/pointers.exp: ptype ppC
PASS: gdb.base/pointers.exp: ptype pppC
PASS: gdb.base/pointers.exp: ptype ppppC
PASS: gdb.base/pointers.exp: ptype pppppC
PASS: gdb.base/pointers.exp: ptype ppppppC
PASS: gdb.base/pointers.exp: p instance.array_variable + 0
Running ../../../master/gdb/testsuite/gdb.base/pr10179.exp ...
PASS: gdb.base/pr10179.exp: rbreak foo.*
PASS: gdb.base/pr10179.exp: rbreak pr10179-a.c:foo.*
PASS: gdb.base/pr10179.exp: rbreak pr10179-a.c : .*
Running ../../../master/gdb/testsuite/gdb.base/pr11022.exp ...
PASS: gdb.base/pr11022.exp: set breakpoint
PASS: gdb.base/pr11022.exp: set watchpoint
PASS: gdb.base/pr11022.exp: breakpoint hit
PASS: gdb.base/pr11022.exp: watchpoint hit
PASS: gdb.base/pr11022.exp: breakpoint hit 2
PASS: gdb.base/pr11022.exp: set var x = 1
PASS: gdb.base/pr11022.exp: watchpoint hit 2
Running ../../../master/gdb/testsuite/gdb.base/prelink.exp ...
PASS: gdb.base/prelink.exp: ldd prelinkt
PASS: gdb.base/prelink.exp: ldd prelinkt output contains libs
PASS: gdb.base/prelink.exp: copy ld-2.13.so to ld-linux.so.2
PASS: gdb.base/prelink.exp: copy prelink.so to prelink.so
PASS: gdb.base/prelink.exp: copy libm-2.13.so to libm.so.6
PASS: gdb.base/prelink.exp: copy libc-2.13.so to libc.so.6
PASS: gdb.base/prelink.exp: split debug of executable
PASS: gdb.base/prelink.exp: unprelink libc.so.6 pre-unprelink (missing /usr/sbin/prelink)
XFAIL: gdb.base/prelink.exp: prelink libc.so.6 (missing /usr/sbin/prelink)
Running ../../../master/gdb/testsuite/gdb.base/printcmds.exp ...
PASS: gdb.base/printcmds.exp: print $pc
PASS: gdb.base/printcmds.exp: print "abc"
PASS: gdb.base/printcmds.exp: print sizeof ("abc")
PASS: gdb.base/printcmds.exp: ptype "abc"
PASS: gdb.base/printcmds.exp: print $cvar = "abc"
PASS: gdb.base/printcmds.exp: print sizeof ($cvar)
PASS: gdb.base/printcmds.exp: print $pc (with file)
PASS: gdb.base/printcmds.exp: set print sevenbit-strings
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set width 0
PASS: gdb.base/printcmds.exp: p ctable1[120] #1
PASS: gdb.base/printcmds.exp: p 123
PASS: gdb.base/printcmds.exp: p -123
PASS: gdb.base/printcmds.exp: p/d 123
PASS: gdb.base/printcmds.exp: p 0123
PASS: gdb.base/printcmds.exp: p 00123
PASS: gdb.base/printcmds.exp: p -0123
PASS: gdb.base/printcmds.exp: p/o 0123
PASS: gdb.base/printcmds.exp: p 0x123
PASS: gdb.base/printcmds.exp: p -0x123
PASS: gdb.base/printcmds.exp: p 0x0123
PASS: gdb.base/printcmds.exp: p -0x0123
PASS: gdb.base/printcmds.exp: p 0xABCDEF
PASS: gdb.base/printcmds.exp: p 0xabcdef
PASS: gdb.base/printcmds.exp: p 0xAbCdEf
PASS: gdb.base/printcmds.exp: p/x 0x123
PASS: gdb.base/printcmds.exp: p 0b0
PASS: gdb.base/printcmds.exp: p 0b1111
PASS: gdb.base/printcmds.exp: p 0B1111
PASS: gdb.base/printcmds.exp: p -0b1111
PASS: gdb.base/printcmds.exp: reject p 0x
PASS: gdb.base/printcmds.exp: reject p 0b
PASS: gdb.base/printcmds.exp: p ''
PASS: gdb.base/printcmds.exp: p '''
PASS: gdb.base/printcmds.exp: reject p '\'
PASS: gdb.base/printcmds.exp: reject p '\\\'
PASS: gdb.base/printcmds.exp: reject p DEADBEEF
PASS: gdb.base/printcmds.exp: reject p 09
PASS: gdb.base/printcmds.exp: reject p 079
PASS: gdb.base/printcmds.exp: reject p 0xG
PASS: gdb.base/printcmds.exp: reject p 0xAG
PASS: gdb.base/printcmds.exp: reject p 0b2
PASS: gdb.base/printcmds.exp: reject p 0b12
PASS: gdb.base/printcmds.exp: check for floating addition
PASS: gdb.base/printcmds.exp: p 1.
PASS: gdb.base/printcmds.exp: p 1.5
PASS: gdb.base/printcmds.exp: p 1.f
PASS: gdb.base/printcmds.exp: p 1.5f
PASS: gdb.base/printcmds.exp: p 1.l
PASS: gdb.base/printcmds.exp: p 1.5l
PASS: gdb.base/printcmds.exp: p 0x1.1
PASS: gdb.base/printcmds.exp: reject p 123DEADBEEF
PASS: gdb.base/printcmds.exp: reject p 123foobar.bazfoo3
PASS: gdb.base/printcmds.exp: reject p 123EEEEEEEEEEEEEEEEE33333k333
PASS: gdb.base/printcmds.exp: reject p 1.1x
PASS: gdb.base/printcmds.exp: reject p 1.1ff
PASS: gdb.base/printcmds.exp: reject p 1.1ll
PASS: gdb.base/printcmds.exp: p 'a'
PASS: gdb.base/printcmds.exp: p/c 'a'
PASS: gdb.base/printcmds.exp: p/x 'a'
PASS: gdb.base/printcmds.exp: p/d 'a'
PASS: gdb.base/printcmds.exp: p/t 'a'
PASS: gdb.base/printcmds.exp: p '\141'
PASS: gdb.base/printcmds.exp: p/x '\377'
PASS: gdb.base/printcmds.exp: p '\''
PASS: gdb.base/printcmds.exp: p '\\'
PASS: gdb.base/printcmds.exp: p ctable1[0]
PASS: gdb.base/printcmds.exp: p ctable1[1]
PASS: gdb.base/printcmds.exp: p ctable1[2]
PASS: gdb.base/printcmds.exp: p ctable1[3]
PASS: gdb.base/printcmds.exp: p ctable1[4]
PASS: gdb.base/printcmds.exp: p ctable1[5]
PASS: gdb.base/printcmds.exp: p ctable1[6]
PASS: gdb.base/printcmds.exp: p ctable1[7]
PASS: gdb.base/printcmds.exp: p ctable1[8]
PASS: gdb.base/printcmds.exp: p ctable1[9]
PASS: gdb.base/printcmds.exp: p ctable1[10]
PASS: gdb.base/printcmds.exp: p ctable1[11]
PASS: gdb.base/printcmds.exp: p ctable1[12]
PASS: gdb.base/printcmds.exp: p ctable1[13]
PASS: gdb.base/printcmds.exp: p ctable1[14]
PASS: gdb.base/printcmds.exp: p ctable1[15]
PASS: gdb.base/printcmds.exp: p ctable1[16]
PASS: gdb.base/printcmds.exp: p ctable1[17]
PASS: gdb.base/printcmds.exp: p ctable1[18]
PASS: gdb.base/printcmds.exp: p ctable1[19]
PASS: gdb.base/printcmds.exp: p ctable1[20]
PASS: gdb.base/printcmds.exp: p ctable1[21]
PASS: gdb.base/printcmds.exp: p ctable1[22]
PASS: gdb.base/printcmds.exp: p ctable1[23]
PASS: gdb.base/printcmds.exp: p ctable1[24]
PASS: gdb.base/printcmds.exp: p ctable1[25]
PASS: gdb.base/printcmds.exp: p ctable1[26]
PASS: gdb.base/printcmds.exp: p ctable1[27]
PASS: gdb.base/printcmds.exp: p ctable1[28]
PASS: gdb.base/printcmds.exp: p ctable1[29]
PASS: gdb.base/printcmds.exp: p ctable1[30]
PASS: gdb.base/printcmds.exp: p ctable1[31]
PASS: gdb.base/printcmds.exp: p ctable1[32]
PASS: gdb.base/printcmds.exp: p ctable1[33]
PASS: gdb.base/printcmds.exp: p ctable1[34]
PASS: gdb.base/printcmds.exp: p ctable1[35]
PASS: gdb.base/printcmds.exp: p ctable1[36]
PASS: gdb.base/printcmds.exp: p ctable1[37]
PASS: gdb.base/printcmds.exp: p ctable1[38]
PASS: gdb.base/printcmds.exp: p ctable1[39]
PASS: gdb.base/printcmds.exp: p ctable1[40]
PASS: gdb.base/printcmds.exp: p ctable1[41]
PASS: gdb.base/printcmds.exp: p ctable1[42]
PASS: gdb.base/printcmds.exp: p ctable1[43]
PASS: gdb.base/printcmds.exp: p ctable1[44]
PASS: gdb.base/printcmds.exp: p ctable1[45]
PASS: gdb.base/printcmds.exp: p ctable1[46]
PASS: gdb.base/printcmds.exp: p ctable1[47]
PASS: gdb.base/printcmds.exp: p ctable1[48]
PASS: gdb.base/printcmds.exp: p ctable1[49]
PASS: gdb.base/printcmds.exp: p ctable1[50]
PASS: gdb.base/printcmds.exp: p ctable1[51]
PASS: gdb.base/printcmds.exp: p ctable1[52]
PASS: gdb.base/printcmds.exp: p ctable1[53]
PASS: gdb.base/printcmds.exp: p ctable1[54]
PASS: gdb.base/printcmds.exp: p ctable1[55]
PASS: gdb.base/printcmds.exp: p ctable1[56]
PASS: gdb.base/printcmds.exp: p ctable1[57]
PASS: gdb.base/printcmds.exp: p ctable1[58]
PASS: gdb.base/printcmds.exp: p ctable1[59]
PASS: gdb.base/printcmds.exp: p ctable1[60]
PASS: gdb.base/printcmds.exp: p ctable1[61]
PASS: gdb.base/printcmds.exp: p ctable1[62]
PASS: gdb.base/printcmds.exp: p ctable1[63]
PASS: gdb.base/printcmds.exp: p ctable1[64]
PASS: gdb.base/printcmds.exp: p ctable1[65]
PASS: gdb.base/printcmds.exp: p ctable1[66]
PASS: gdb.base/printcmds.exp: p ctable1[67]
PASS: gdb.base/printcmds.exp: p ctable1[68]
PASS: gdb.base/printcmds.exp: p ctable1[69]
PASS: gdb.base/printcmds.exp: p ctable1[70]
PASS: gdb.base/printcmds.exp: p ctable1[71]
PASS: gdb.base/printcmds.exp: p ctable1[72]
PASS: gdb.base/printcmds.exp: p ctable1[73]
PASS: gdb.base/printcmds.exp: p ctable1[74]
PASS: gdb.base/printcmds.exp: p ctable1[75]
PASS: gdb.base/printcmds.exp: p ctable1[76]
PASS: gdb.base/printcmds.exp: p ctable1[77]
PASS: gdb.base/printcmds.exp: p ctable1[78]
PASS: gdb.base/printcmds.exp: p ctable1[79]
PASS: gdb.base/printcmds.exp: p ctable1[80]
PASS: gdb.base/printcmds.exp: p ctable1[81]
PASS: gdb.base/printcmds.exp: p ctable1[82]
PASS: gdb.base/printcmds.exp: p ctable1[83]
PASS: gdb.base/printcmds.exp: p ctable1[84]
PASS: gdb.base/printcmds.exp: p ctable1[85]
PASS: gdb.base/printcmds.exp: p ctable1[86]
PASS: gdb.base/printcmds.exp: p ctable1[87]
PASS: gdb.base/printcmds.exp: p ctable1[88]
PASS: gdb.base/printcmds.exp: p ctable1[89]
PASS: gdb.base/printcmds.exp: p ctable1[90]
PASS: gdb.base/printcmds.exp: p ctable1[91]
PASS: gdb.base/printcmds.exp: p ctable1[92]
PASS: gdb.base/printcmds.exp: p ctable1[93]
PASS: gdb.base/printcmds.exp: p ctable1[94]
PASS: gdb.base/printcmds.exp: p ctable1[95]
PASS: gdb.base/printcmds.exp: p ctable1[96]
PASS: gdb.base/printcmds.exp: p ctable1[97]
PASS: gdb.base/printcmds.exp: p ctable1[98]
PASS: gdb.base/printcmds.exp: p ctable1[99]
PASS: gdb.base/printcmds.exp: p ctable1[100]
PASS: gdb.base/printcmds.exp: p ctable1[101]
PASS: gdb.base/printcmds.exp: p ctable1[102]
PASS: gdb.base/printcmds.exp: p ctable1[103]
PASS: gdb.base/printcmds.exp: p ctable1[104]
PASS: gdb.base/printcmds.exp: p ctable1[105]
PASS: gdb.base/printcmds.exp: p ctable1[106]
PASS: gdb.base/printcmds.exp: p ctable1[107]
PASS: gdb.base/printcmds.exp: p ctable1[108]
PASS: gdb.base/printcmds.exp: p ctable1[109]
PASS: gdb.base/printcmds.exp: p ctable1[110]
PASS: gdb.base/printcmds.exp: p ctable1[111]
PASS: gdb.base/printcmds.exp: p ctable1[112]
PASS: gdb.base/printcmds.exp: p ctable1[113]
PASS: gdb.base/printcmds.exp: p ctable1[114]
PASS: gdb.base/printcmds.exp: p ctable1[115]
PASS: gdb.base/printcmds.exp: p ctable1[116]
PASS: gdb.base/printcmds.exp: p ctable1[117]
PASS: gdb.base/printcmds.exp: p ctable1[118]
PASS: gdb.base/printcmds.exp: p ctable1[119]
PASS: gdb.base/printcmds.exp: p ctable1[120]
PASS: gdb.base/printcmds.exp: p ctable1[121]
PASS: gdb.base/printcmds.exp: p ctable1[122]
PASS: gdb.base/printcmds.exp: p ctable1[123]
PASS: gdb.base/printcmds.exp: p ctable1[124]
PASS: gdb.base/printcmds.exp: p ctable1[125]
PASS: gdb.base/printcmds.exp: p ctable1[126]
PASS: gdb.base/printcmds.exp: p ctable1[127]
PASS: gdb.base/printcmds.exp: p ctable1[128]
PASS: gdb.base/printcmds.exp: p ctable1[129]
PASS: gdb.base/printcmds.exp: p ctable1[130]
PASS: gdb.base/printcmds.exp: p ctable1[131]
PASS: gdb.base/printcmds.exp: p ctable1[132]
PASS: gdb.base/printcmds.exp: p ctable1[133]
PASS: gdb.base/printcmds.exp: p ctable1[134]
PASS: gdb.base/printcmds.exp: p ctable1[135]
PASS: gdb.base/printcmds.exp: p ctable1[136]
PASS: gdb.base/printcmds.exp: p ctable1[137]
PASS: gdb.base/printcmds.exp: p ctable1[138]
PASS: gdb.base/printcmds.exp: p ctable1[139]
PASS: gdb.base/printcmds.exp: p ctable1[140]
PASS: gdb.base/printcmds.exp: p ctable1[141]
PASS: gdb.base/printcmds.exp: p ctable1[142]
PASS: gdb.base/printcmds.exp: p ctable1[143]
PASS: gdb.base/printcmds.exp: p ctable1[144]
PASS: gdb.base/printcmds.exp: p ctable1[145]
PASS: gdb.base/printcmds.exp: p ctable1[146]
PASS: gdb.base/printcmds.exp: p ctable1[147]
PASS: gdb.base/printcmds.exp: p ctable1[148]
PASS: gdb.base/printcmds.exp: p ctable1[149]
PASS: gdb.base/printcmds.exp: p ctable1[150]
PASS: gdb.base/printcmds.exp: p ctable1[151]
PASS: gdb.base/printcmds.exp: p ctable1[152]
PASS: gdb.base/printcmds.exp: p ctable1[153]
PASS: gdb.base/printcmds.exp: p ctable1[154]
PASS: gdb.base/printcmds.exp: p ctable1[155]
PASS: gdb.base/printcmds.exp: p ctable1[156]
PASS: gdb.base/printcmds.exp: p ctable1[157]
PASS: gdb.base/printcmds.exp: p ctable1[158]
PASS: gdb.base/printcmds.exp: p ctable1[159]
PASS: gdb.base/printcmds.exp: p ctable1[160]
PASS: gdb.base/printcmds.exp: p ctable1[161]
PASS: gdb.base/printcmds.exp: p ctable1[162]
PASS: gdb.base/printcmds.exp: p ctable1[163]
PASS: gdb.base/printcmds.exp: p ctable1[164]
PASS: gdb.base/printcmds.exp: p ctable1[165]
PASS: gdb.base/printcmds.exp: p ctable1[166]
PASS: gdb.base/printcmds.exp: p ctable1[167]
PASS: gdb.base/printcmds.exp: p ctable1[168]
PASS: gdb.base/printcmds.exp: p ctable1[169]
PASS: gdb.base/printcmds.exp: p ctable1[170]
PASS: gdb.base/printcmds.exp: p ctable1[171]
PASS: gdb.base/printcmds.exp: p ctable1[172]
PASS: gdb.base/printcmds.exp: p ctable1[173]
PASS: gdb.base/printcmds.exp: p ctable1[174]
PASS: gdb.base/printcmds.exp: p ctable1[175]
PASS: gdb.base/printcmds.exp: p ctable1[176]
PASS: gdb.base/printcmds.exp: p ctable1[177]
PASS: gdb.base/printcmds.exp: p ctable1[178]
PASS: gdb.base/printcmds.exp: p ctable1[179]
PASS: gdb.base/printcmds.exp: p ctable1[180]
PASS: gdb.base/printcmds.exp: p ctable1[181]
PASS: gdb.base/printcmds.exp: p ctable1[182]
PASS: gdb.base/printcmds.exp: p ctable1[183]
PASS: gdb.base/printcmds.exp: p ctable1[184]
PASS: gdb.base/printcmds.exp: p ctable1[185]
PASS: gdb.base/printcmds.exp: p ctable1[186]
PASS: gdb.base/printcmds.exp: p ctable1[187]
PASS: gdb.base/printcmds.exp: p ctable1[188]
PASS: gdb.base/printcmds.exp: p ctable1[189]
PASS: gdb.base/printcmds.exp: p ctable1[190]
PASS: gdb.base/printcmds.exp: p ctable1[191]
PASS: gdb.base/printcmds.exp: p ctable1[192]
PASS: gdb.base/printcmds.exp: p ctable1[193]
PASS: gdb.base/printcmds.exp: p ctable1[194]
PASS: gdb.base/printcmds.exp: p ctable1[195]
PASS: gdb.base/printcmds.exp: p ctable1[196]
PASS: gdb.base/printcmds.exp: p ctable1[197]
PASS: gdb.base/printcmds.exp: p ctable1[198]
PASS: gdb.base/printcmds.exp: p ctable1[199]
PASS: gdb.base/printcmds.exp: p ctable1[200]
PASS: gdb.base/printcmds.exp: p ctable1[201]
PASS: gdb.base/printcmds.exp: p ctable1[202]
PASS: gdb.base/printcmds.exp: p ctable1[203]
PASS: gdb.base/printcmds.exp: p ctable1[204]
PASS: gdb.base/printcmds.exp: p ctable1[205]
PASS: gdb.base/printcmds.exp: p ctable1[206]
PASS: gdb.base/printcmds.exp: p ctable1[207]
PASS: gdb.base/printcmds.exp: p ctable1[208]
PASS: gdb.base/printcmds.exp: p ctable1[209]
PASS: gdb.base/printcmds.exp: p ctable1[210]
PASS: gdb.base/printcmds.exp: p ctable1[211]
PASS: gdb.base/printcmds.exp: p ctable1[212]
PASS: gdb.base/printcmds.exp: p ctable1[213]
PASS: gdb.base/printcmds.exp: p ctable1[214]
PASS: gdb.base/printcmds.exp: p ctable1[215]
PASS: gdb.base/printcmds.exp: p ctable1[216]
PASS: gdb.base/printcmds.exp: p ctable1[217]
PASS: gdb.base/printcmds.exp: p ctable1[218]
PASS: gdb.base/printcmds.exp: p ctable1[219]
PASS: gdb.base/printcmds.exp: p ctable1[220]
PASS: gdb.base/printcmds.exp: p ctable1[221]
PASS: gdb.base/printcmds.exp: p ctable1[222]
PASS: gdb.base/printcmds.exp: p ctable1[223]
PASS: gdb.base/printcmds.exp: p ctable1[224]
PASS: gdb.base/printcmds.exp: p ctable1[225]
PASS: gdb.base/printcmds.exp: p ctable1[226]
PASS: gdb.base/printcmds.exp: p ctable1[227]
PASS: gdb.base/printcmds.exp: p ctable1[228]
PASS: gdb.base/printcmds.exp: p ctable1[229]
PASS: gdb.base/printcmds.exp: p ctable1[230]
PASS: gdb.base/printcmds.exp: p ctable1[231]
PASS: gdb.base/printcmds.exp: p ctable1[232]
PASS: gdb.base/printcmds.exp: p ctable1[233]
PASS: gdb.base/printcmds.exp: p ctable1[234]
PASS: gdb.base/printcmds.exp: p ctable1[235]
PASS: gdb.base/printcmds.exp: p ctable1[236]
PASS: gdb.base/printcmds.exp: p ctable1[237]
PASS: gdb.base/printcmds.exp: p ctable1[238]
PASS: gdb.base/printcmds.exp: p ctable1[239]
PASS: gdb.base/printcmds.exp: p ctable1[240]
PASS: gdb.base/printcmds.exp: p ctable1[241]
PASS: gdb.base/printcmds.exp: p ctable1[242]
PASS: gdb.base/printcmds.exp: p ctable1[243]
PASS: gdb.base/printcmds.exp: p ctable1[244]
PASS: gdb.base/printcmds.exp: p ctable1[245]
PASS: gdb.base/printcmds.exp: p ctable1[246]
PASS: gdb.base/printcmds.exp: p ctable1[247]
PASS: gdb.base/printcmds.exp: p ctable1[248]
PASS: gdb.base/printcmds.exp: p ctable1[249]
PASS: gdb.base/printcmds.exp: p ctable1[250]
PASS: gdb.base/printcmds.exp: p ctable1[251]
PASS: gdb.base/printcmds.exp: p ctable1[252]
PASS: gdb.base/printcmds.exp: p ctable1[253]
PASS: gdb.base/printcmds.exp: p ctable1[254]
PASS: gdb.base/printcmds.exp: p ctable1[255]
PASS: gdb.base/printcmds.exp: set print elements 1
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 1
PASS: gdb.base/printcmds.exp: set print elements 2
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 2
PASS: gdb.base/printcmds.exp: set print elements 3
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 3
PASS: gdb.base/printcmds.exp: set print elements 4
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 4
PASS: gdb.base/printcmds.exp: set print elements 5
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 5
PASS: gdb.base/printcmds.exp: set print elements 6
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 6
PASS: gdb.base/printcmds.exp: set print elements 7
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 7
PASS: gdb.base/printcmds.exp: set print elements 8
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 8
PASS: gdb.base/printcmds.exp: set print elements 9
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 9
PASS: gdb.base/printcmds.exp: set print elements 10
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 10
PASS: gdb.base/printcmds.exp: set print elements 11
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 11
PASS: gdb.base/printcmds.exp: set print elements 12
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 12
PASS: gdb.base/printcmds.exp: set print elements 13
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 13
PASS: gdb.base/printcmds.exp: set print elements 14
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 14
PASS: gdb.base/printcmds.exp: set print elements 15
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 15
PASS: gdb.base/printcmds.exp: set print elements 16
PASS: gdb.base/printcmds.exp: p &ctable2[0*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[1*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[2*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[3*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[4*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[5*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[6*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[7*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[8*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[9*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[10*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[11*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[12*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[13*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[14*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: p &ctable2[15*16] with print elements set to 16
PASS: gdb.base/printcmds.exp: correct element repeats in array embedded at offset > 0
PASS: gdb.base/printcmds.exp: set print elements 0
PASS: gdb.base/printcmds.exp: p teststring with elements set to 0
PASS: gdb.base/printcmds.exp: set print elements 1
PASS: gdb.base/printcmds.exp: p teststring with elements set to 1
PASS: gdb.base/printcmds.exp: set print elements 5
PASS: gdb.base/printcmds.exp: p teststring with elements set to 5
PASS: gdb.base/printcmds.exp: set print elements 19
PASS: gdb.base/printcmds.exp: p teststring with elements set to 19
PASS: gdb.base/printcmds.exp: set print elements 20
PASS: gdb.base/printcmds.exp: p teststring with elements set to 20
PASS: gdb.base/printcmds.exp: set print elements 8
PASS: gdb.base/printcmds.exp: p &ctable1[0]
PASS: gdb.base/printcmds.exp: p &ctable1[1]
PASS: gdb.base/printcmds.exp: p &ctable1[1*8]
PASS: gdb.base/printcmds.exp: p &ctable1[2*8]
PASS: gdb.base/printcmds.exp: p &ctable1[3*8]
PASS: gdb.base/printcmds.exp: p &ctable1[4*8]
PASS: gdb.base/printcmds.exp: p &ctable1[5*8]
PASS: gdb.base/printcmds.exp: p &ctable1[6*8]
PASS: gdb.base/printcmds.exp: p &ctable1[7*8]
PASS: gdb.base/printcmds.exp: p &ctable1[8*8]
PASS: gdb.base/printcmds.exp: p &ctable1[9*8]
PASS: gdb.base/printcmds.exp: p &ctable1[10*8]
PASS: gdb.base/printcmds.exp: p &ctable1[11*8]
PASS: gdb.base/printcmds.exp: p &ctable1[12*8]
PASS: gdb.base/printcmds.exp: p &ctable1[13*8]
PASS: gdb.base/printcmds.exp: p &ctable1[14*8]
PASS: gdb.base/printcmds.exp: p &ctable1[15*8]
PASS: gdb.base/printcmds.exp: p &ctable1[16*8]
PASS: gdb.base/printcmds.exp: p &ctable1[17*8]
PASS: gdb.base/printcmds.exp: p &ctable1[18*8]
PASS: gdb.base/printcmds.exp: p &ctable1[19*8]
PASS: gdb.base/printcmds.exp: p &ctable1[20*8]
PASS: gdb.base/printcmds.exp: p &ctable1[21*8]
PASS: gdb.base/printcmds.exp: p &ctable1[22*8]
PASS: gdb.base/printcmds.exp: p &ctable1[23*8]
PASS: gdb.base/printcmds.exp: p &ctable1[24*8]
PASS: gdb.base/printcmds.exp: p &ctable1[25*8]
PASS: gdb.base/printcmds.exp: p &ctable1[26*8]
PASS: gdb.base/printcmds.exp: p &ctable1[27*8]
PASS: gdb.base/printcmds.exp: p &ctable1[28*8]
PASS: gdb.base/printcmds.exp: p &ctable1[29*8]
PASS: gdb.base/printcmds.exp: p &ctable1[30*8]
PASS: gdb.base/printcmds.exp: p &ctable1[31*8]
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: p a1[0]
PASS: gdb.base/printcmds.exp: p a1[9]
PASS: gdb.base/printcmds.exp: p a2
PASS: gdb.base/printcmds.exp: p a2[0]
PASS: gdb.base/printcmds.exp: p a2[3]
PASS: gdb.base/printcmds.exp: set print null-stop on
PASS: gdb.base/printcmds.exp: print a2 with null-stop on
PASS: gdb.base/printcmds.exp: set print null-stop off
PASS: gdb.base/printcmds.exp: p int1dim[0]@2
PASS: gdb.base/printcmds.exp: p int1dim[0]@2@3
PASS: gdb.base/printcmds.exp: set print elements 24
PASS: gdb.base/printcmds.exp: set print address on
PASS: gdb.base/printcmds.exp: p arrays
PASS: gdb.base/printcmds.exp: p parrays
PASS: gdb.base/printcmds.exp: p parrays->array1
PASS: gdb.base/printcmds.exp: p &parrays->array1
PASS: gdb.base/printcmds.exp: p parrays->array2
PASS: gdb.base/printcmds.exp: p &parrays->array2
PASS: gdb.base/printcmds.exp: p parrays->array3
PASS: gdb.base/printcmds.exp: p &parrays->array3
PASS: gdb.base/printcmds.exp: p parrays->array4
PASS: gdb.base/printcmds.exp: p &parrays->array4
PASS: gdb.base/printcmds.exp: p parrays->array5
PASS: gdb.base/printcmds.exp: p &parrays->array5
PASS: gdb.base/printcmds.exp: set print address off
PASS: gdb.base/printcmds.exp: set print elements 50
PASS: gdb.base/printcmds.exp: p "a string"
PASS: gdb.base/printcmds.exp: p "embedded \000 null"
PASS: gdb.base/printcmds.exp: p "abcd"[2]
PASS: gdb.base/printcmds.exp: p sizeof ("abcdef")
PASS: gdb.base/printcmds.exp: ptype "foo"
PASS: gdb.base/printcmds.exp: p *"foo"
PASS: gdb.base/printcmds.exp: ptype *"foo"
PASS: gdb.base/printcmds.exp: p &*"foo"
PASS: gdb.base/printcmds.exp: ptype &*"foo"
PASS: gdb.base/printcmds.exp: p (char *)"foo"
PASS: gdb.base/printcmds.exp: print {'a','b','c'}
PASS: gdb.base/printcmds.exp: print {4,5,6}[2]
PASS: gdb.base/printcmds.exp: print *&{4,5,6}[1]
PASS: gdb.base/printcmds.exp: print some_volatile_enum
PASS: gdb.base/printcmds.exp: printf "x=%d,y=%d,z=%d\n", 5, 6, 7
PASS: gdb.base/printcmds.exp: printf "string=%.4sxx\n", teststring
PASS: gdb.base/printcmds.exp: printf "string=%sxx\n", teststring
PASS: gdb.base/printcmds.exp: printf "%f is fun\n", 1.0
PASS: gdb.base/printcmds.exp: printf "x=%d,y=%f,z=%d\n", 5, 6.0, 7
PASS: gdb.base/printcmds.exp: printf "%x %f, %c %x, %x, %f\n", 0xbad, -99.541, 'z', 0xfeedface, 0xdeadbeef, 5.0
PASS: gdb.base/printcmds.exp: printf "%c\n", "x"[1,0]
PASS: gdb.base/printcmds.exp: printf "%%%d%%\n", 5
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1.2df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.234567df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1.234567df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1234567.df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",-1234567.df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E1df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E10df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E-10df
PASS: gdb.base/printcmds.exp: printf "%Hf\n",1.2E96df
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1.2dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.234567890123456dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1.234567890123456dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1234567890123456.dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",-1234567890123456.dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E1dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E10dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E-10dd
PASS: gdb.base/printcmds.exp: printf "%Df\n",1.2E384dd
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1.2dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.234567890123456789012345678901234dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1.234567890123456789012345678901234dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1234567890123456789012345678901234.dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",-1234567890123456789012345678901234.dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E1dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E10dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E-10dl
PASS: gdb.base/printcmds.exp: printf "%DDf\n",1.2E6144dl
Running ../../../master/gdb/testsuite/gdb.base/prologue.exp ...
PASS: gdb.base/prologue.exp: setting breakpoint at marker
PASS: gdb.base/prologue.exp: continue to marker
PASS: gdb.base/prologue.exp: reading $pc: marker
PASS: gdb.base/prologue.exp: setting breakpoint at other
PASS: gdb.base/prologue.exp: continue to other
PASS: gdb.base/prologue.exp: reading $pc: other
PASS: gdb.base/prologue.exp: same pc from minimal symbol
Running ../../../master/gdb/testsuite/gdb.base/psymtab.exp ...
PASS: gdb.base/psymtab.exp: psymtab pending setup
PASS: gdb.base/psymtab.exp: Don't search past end of psymtab.
Running ../../../master/gdb/testsuite/gdb.base/ptr-typedef.exp ...
PASS: gdb.base/ptr-typedef.exp: print foo_ptr
PASS: gdb.base/ptr-typedef.exp: print foz_ptr
Running ../../../master/gdb/testsuite/gdb.base/ptype.exp ...
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member
PASS: gdb.base/ptype.exp: ptype structure
PASS: gdb.base/ptype.exp: ptype v_struct1.v_float_member
PASS: gdb.base/ptype.exp: ptype v_struct1->v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p.v_float_member
PASS: gdb.base/ptype.exp: ptype v_t_struct_p->v_float_member
PASS: gdb.base/ptype.exp: ptype linked list structure
PASS: gdb.base/ptype.exp: ptype union
PASS: gdb.base/ptype.exp: ptype linked list union
PASS: gdb.base/ptype.exp: ptype unnamed enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration
PASS: gdb.base/ptype.exp: ptype unnamed typedef'd enumeration
PASS: gdb.base/ptype.exp: list main
PASS: gdb.base/ptype.exp: whatis unnamed typedef'd enum (compiler bug in IBM's xlc)
PASS: gdb.base/ptype.exp: printing typedef'd struct
PASS: gdb.base/ptype.exp: printing typedef'd union
PASS: gdb.base/ptype.exp: ptype named typedef'd enumf'd enum
PASS: gdb.base/ptype.exp: ptype misordered enumeration
PASS: gdb.base/ptype.exp: ptype named enumeration member
PASS: gdb.base/ptype.exp: ptype unnamed enumeration member #2
PASS: gdb.base/ptype.exp: ptype short
PASS: gdb.base/ptype.exp: ptype int
PASS: gdb.base/ptype.exp: ptype t_char_array
PASS: gdb.base/ptype.exp: ptype outer structure
PASS: gdb.base/ptype.exp: ptype inner structure
PASS: gdb.base/ptype.exp: ptype inner union
PASS: gdb.base/ptype.exp: ptype nested structure
PASS: gdb.base/ptype.exp: ptype outer int
PASS: gdb.base/ptype.exp: ptype nested structure #2
PASS: gdb.base/ptype.exp: ptype inner int
PASS: gdb.base/ptype.exp: ptype nested union
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype the_highest
PASS: gdb.base/ptype.exp: ptype func_type
PASS: gdb.base/ptype.exp: ptype old_fptr
PASS: gdb.base/ptype.exp: ptype new_fptr
PASS: gdb.base/ptype.exp: ptype fptr
PASS: gdb.base/ptype.exp: ptype fptr2
PASS: gdb.base/ptype.exp: ptype xptr
PASS: gdb.base/ptype.exp: ptype ffptr
PASS: gdb.base/ptype.exp: ptype fffptr
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after first list of charfoo
PASS: gdb.base/ptype.exp: list intfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of intfoo
PASS: gdb.base/ptype.exp: list charfoo
PASS: gdb.base/ptype.exp: ptype foo typedef after second list of charfoo
PASS: gdb.base/ptype.exp: ptype "abc"
PASS: gdb.base/ptype.exp: ptype {'a','b','c'}
PASS: gdb.base/ptype.exp: ptype {0,1,2}
PASS: gdb.base/ptype.exp: ptype {(long)0,(long)1,(long)2}
PASS: gdb.base/ptype.exp: ptype {(float)0,(float)1,(float)2}
PASS: gdb.base/ptype.exp: ptype {{0,1,2},{3,4,5}}
PASS: gdb.base/ptype.exp: ptype {4,5,6}[2]
PASS: gdb.base/ptype.exp: ptype *&{4,5,6}[1]
PASS: gdb.base/ptype.exp: ptype $pc
Running ../../../master/gdb/testsuite/gdb.base/radix.exp ...
PASS: gdb.base/radix.exp: initialize radix, input radix 2
PASS: gdb.base/radix.exp: set input-radix 2
PASS: gdb.base/radix.exp: show radix, input radix 2
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 2
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 2
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 2
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 2
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 2
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 2
PASS: gdb.base/radix.exp: print 10; expect 2; input radix 2
PASS: gdb.base/radix.exp: print 11; expect 3; input radix 2
PASS: gdb.base/radix.exp: print -10; expect -2; input radix 2
PASS: gdb.base/radix.exp: print -11; expect -3; input radix 2
PASS: gdb.base/radix.exp: print 100; expect 4; input radix 2
PASS: gdb.base/radix.exp: print 101; expect 5; input radix 2
PASS: gdb.base/radix.exp: print -100; expect -4; input radix 2
PASS: gdb.base/radix.exp: print -101; expect -5; input radix 2
PASS: gdb.base/radix.exp: print 10101; expect 21; input radix 2
PASS: gdb.base/radix.exp: print 4; expect Invalid number "4"\.; input radix 2
PASS: gdb.base/radix.exp: print -2; expect Invalid number "2"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 3
PASS: gdb.base/radix.exp: set input-radix 3
PASS: gdb.base/radix.exp: show radix, input radix 3
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 3
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 3
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 3
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 3
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 3
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 3
PASS: gdb.base/radix.exp: print 10; expect 3; input radix 3
PASS: gdb.base/radix.exp: print 11; expect 4; input radix 3
PASS: gdb.base/radix.exp: print -10; expect -3; input radix 3
PASS: gdb.base/radix.exp: print -11; expect -4; input radix 3
PASS: gdb.base/radix.exp: print 100; expect 9; input radix 3
PASS: gdb.base/radix.exp: print 101; expect 10; input radix 3
PASS: gdb.base/radix.exp: print -100; expect -9; input radix 3
PASS: gdb.base/radix.exp: print -101; expect -10; input radix 3
PASS: gdb.base/radix.exp: print 10101; expect 91; input radix 3
PASS: gdb.base/radix.exp: print 2; expect 2; input radix 3
PASS: gdb.base/radix.exp: print 20; expect 6; input radix 3
PASS: gdb.base/radix.exp: print 3; expect Invalid number "3"\.; input radix 3
PASS: gdb.base/radix.exp: print 30; expect Invalid number "30"\.; input radix 2
PASS: gdb.base/radix.exp: initialize radix, input radix 8
PASS: gdb.base/radix.exp: set input-radix 8
PASS: gdb.base/radix.exp: show radix, input radix 8
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 8
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 8
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 8
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 8
PASS: gdb.base/radix.exp: print 10; expect 8; input radix 8
PASS: gdb.base/radix.exp: print 11; expect 9; input radix 8
PASS: gdb.base/radix.exp: print -10; expect -8; input radix 8
PASS: gdb.base/radix.exp: print -11; expect -9; input radix 8
PASS: gdb.base/radix.exp: print 100; expect 64; input radix 8
PASS: gdb.base/radix.exp: print 101; expect 65; input radix 8
PASS: gdb.base/radix.exp: print -100; expect -64; input radix 8
PASS: gdb.base/radix.exp: print -101; expect -65; input radix 8
PASS: gdb.base/radix.exp: print 10101; expect 4161; input radix 8
PASS: gdb.base/radix.exp: print 20; expect 16; input radix 8
PASS: gdb.base/radix.exp: print -20; expect -16; input radix 8
PASS: gdb.base/radix.exp: print 8; expect Invalid number "8".; input radix 8
PASS: gdb.base/radix.exp: print -9; expect Invalid number "9".; input radix 8
PASS: gdb.base/radix.exp: initialize radix, input radix 10
PASS: gdb.base/radix.exp: set input-radix 10
PASS: gdb.base/radix.exp: show radix, input radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 10
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 10
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 10
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; input radix 10
PASS: gdb.base/radix.exp: print 11; expect 11; input radix 10
PASS: gdb.base/radix.exp: print -10; expect -10; input radix 10
PASS: gdb.base/radix.exp: print -11; expect -11; input radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; input radix 10
PASS: gdb.base/radix.exp: print 101; expect 101; input radix 10
PASS: gdb.base/radix.exp: print -100; expect -100; input radix 10
PASS: gdb.base/radix.exp: print -101; expect -101; input radix 10
PASS: gdb.base/radix.exp: print 10101; expect 10101; input radix 10
PASS: gdb.base/radix.exp: print -12; expect -12; input radix 10
PASS: gdb.base/radix.exp: initialize radix, input radix 16
PASS: gdb.base/radix.exp: set input-radix 16
PASS: gdb.base/radix.exp: show radix, input radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; input radix 16
PASS: gdb.base/radix.exp: print 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; input radix 16
PASS: gdb.base/radix.exp: print 0xf; expect 15; input radix 16
PASS: gdb.base/radix.exp: print 0; expect 0; input radix 16
PASS: gdb.base/radix.exp: print 1; expect 1; input radix 16
PASS: gdb.base/radix.exp: print -1; expect -1; input radix 16
PASS: gdb.base/radix.exp: print 10; expect 16; input radix 16
PASS: gdb.base/radix.exp: print 11; expect 17; input radix 16
PASS: gdb.base/radix.exp: print -10; expect -16; input radix 16
PASS: gdb.base/radix.exp: print -11; expect -17; input radix 16
PASS: gdb.base/radix.exp: print 100; expect 256; input radix 16
PASS: gdb.base/radix.exp: print 101; expect 257; input radix 16
PASS: gdb.base/radix.exp: print -100; expect -256; input radix 16
PASS: gdb.base/radix.exp: print -101; expect -257; input radix 16
PASS: gdb.base/radix.exp: print 10101; expect 65793; input radix 16
PASS: gdb.base/radix.exp: initialize radix, output radix 8
PASS: gdb.base/radix.exp: set output-radix 8
PASS: gdb.base/radix.exp: show radix, output radix 8
PASS: gdb.base/radix.exp: print 010; expect 010; output radix 8
PASS: gdb.base/radix.exp: print 0xf; expect 17; output radix 8
PASS: gdb.base/radix.exp: print 10; expect 12; output radix 8
PASS: gdb.base/radix.exp: print 100; expect 144; output radix 8
KFAIL: gdb.base/radix.exp: print 20.; expect 24; output radix 8 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 24; output radix 8
PASS: gdb.base/radix.exp: initialize radix, output radix 10
PASS: gdb.base/radix.exp: set output-radix 10
PASS: gdb.base/radix.exp: show radix, output radix 10
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 10
PASS: gdb.base/radix.exp: print 0xf; expect 15; output radix 10
PASS: gdb.base/radix.exp: print 10; expect 10; output radix 10
PASS: gdb.base/radix.exp: print 100; expect 100; output radix 10
PASS: gdb.base/radix.exp: print 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: print (int) 20.; expect 20; output radix 10
PASS: gdb.base/radix.exp: initialize radix, output radix 16
PASS: gdb.base/radix.exp: set output-radix 16
PASS: gdb.base/radix.exp: show radix, output radix 16
PASS: gdb.base/radix.exp: print 010; expect 8; output radix 16
PASS: gdb.base/radix.exp: print 0xf; expect f; output radix 16
PASS: gdb.base/radix.exp: print 10; expect a; output radix 16
PASS: gdb.base/radix.exp: print 100; expect 64; output radix 16
KFAIL: gdb.base/radix.exp: print 20.; expect 14; output radix 16 (PRMS: gdb/1715)
PASS: gdb.base/radix.exp: print (int) 20.; expect 14; output radix 16
PASS: gdb.base/radix.exp: Reset radices
PASS: gdb.base/radix.exp: Reject input-radix 0
PASS: gdb.base/radix.exp: Input radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject input-radix 1
PASS: gdb.base/radix.exp: Input radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: Reject output-radix 0
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 0
PASS: gdb.base/radix.exp: Reject output-radix 1
PASS: gdb.base/radix.exp: Output radix unchanged after rejecting 1
PASS: gdb.base/radix.exp: set radix 7 rejected
PASS: gdb.base/radix.exp: Output radix unchanged after rejection through set radix command
Running ../../../master/gdb/testsuite/gdb.base/randomize.exp ...
PASS: gdb.base/randomize.exp: set disable-randomization off
PASS: gdb.base/randomize.exp: show disable-randomization off
PASS: gdb.base/randomize.exp: continue to breakpoint: randomized first address - address set
PASS: gdb.base/randomize.exp: randomized first address
PASS: gdb.base/randomize.exp: continue to breakpoint: randomized second address - address set
PASS: gdb.base/randomize.exp: randomized second address
PASS: gdb.base/randomize.exp: randomized addresses should not match
PASS: gdb.base/randomize.exp: set disable-randomization on
PASS: gdb.base/randomize.exp: show disable-randomization on
PASS: gdb.base/randomize.exp: continue to breakpoint: fixed first address - address set
PASS: gdb.base/randomize.exp: fixed first address
PASS: gdb.base/randomize.exp: continue to breakpoint: fixed second address - address set
PASS: gdb.base/randomize.exp: fixed second address
PASS: gdb.base/randomize.exp: fixed addresses should match
Running ../../../master/gdb/testsuite/gdb.base/readline-ask.exp ...
PASS: gdb.base/readline-ask.exp: set width 50
PASS: gdb.base/readline-ask.exp: set height 3
PASS: gdb.base/readline-ask.exp: bell for more message
PASS: gdb.base/readline-ask.exp: more message for 01 and 02
PASS: gdb.base/readline-ask.exp: more message for 03
PASS: gdb.base/readline-ask.exp: more finish for 04
PASS: gdb.base/readline-ask.exp: abort more message
PASS: gdb.base/readline-ask.exp: bell for ask message
PASS: gdb.base/readline-ask.exp: ask message
PASS: gdb.base/readline-ask.exp: ask message for 01 and 02
PASS: gdb.base/readline-ask.exp: ask message no
PASS: gdb.base/readline-ask.exp: abort ask message
Running ../../../master/gdb/testsuite/gdb.base/readline.exp ...
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 1
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 2
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 3
PASS: gdb.base/readline.exp: Simple operate-and-get-next - final prompt
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - send end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-p to if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for if 1 > 0
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for p 5
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - C-o for end
PASS: gdb.base/readline.exp: operate-and-get-next with secondary prompt - final prompt
PASS: gdb.base/readline.exp: print 42
PASS: gdb.base/readline.exp: arrow keys with secondary prompt
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - send p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-p to p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 7
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 8
PASS: gdb.base/readline.exp: Simple operate-and-get-next - C-o for p 9
PASS: gdb.base/readline.exp: Simple operate-and-get-next - final prompt
Running ../../../master/gdb/testsuite/gdb.base/recurse.exp ...
PASS: gdb.base/recurse.exp: next over b = 0 in first instance
PASS: gdb.base/recurse.exp: set first instance watchpoint
PASS: gdb.base/recurse.exp: continue to first instance watchpoint, first time
PASS: gdb.base/recurse.exp: continue to recurse (a = 9)
PASS: gdb.base/recurse.exp: continue to recurse (a = 8)
PASS: gdb.base/recurse.exp: continue to recurse (a = 7)
PASS: gdb.base/recurse.exp: continue to recurse (a = 6)
PASS: gdb.base/recurse.exp: continue to recurse (a = 5)
PASS: gdb.base/recurse.exp: next over b = 0 in second instance
PASS: gdb.base/recurse.exp: set second instance watchpoint
PASS: gdb.base/recurse.exp: continue to second instance watchpoint, first time
PASS: gdb.base/recurse.exp: continue to recurse (a = 4)
PASS: gdb.base/recurse.exp: continue to recurse (a = 3)
PASS: gdb.base/recurse.exp: continue to recurse (a = 2)
PASS: gdb.base/recurse.exp: continue to recurse (a = 1)
PASS: gdb.base/recurse.exp: continue to second instance watchpoint, second time
PASS: gdb.base/recurse.exp: second instance watchpoint deleted when leaving scope
PASS: gdb.base/recurse.exp: continue to first instance watchpoint, second time
PASS: gdb.base/recurse.exp: first instance watchpoint deleted when leaving scope
Running ../../../master/gdb/testsuite/gdb.base/regs.exp ...
Running ../../../master/gdb/testsuite/gdb.base/relational.exp ...
PASS: gdb.base/relational.exp: set variable x=14
PASS: gdb.base/relational.exp: set variable y=2
PASS: gdb.base/relational.exp: set variable z=2
PASS: gdb.base/relational.exp: set variable w=3
PASS: gdb.base/relational.exp: print value of x
PASS: gdb.base/relational.exp: print value of y
PASS: gdb.base/relational.exp: print value of z
PASS: gdb.base/relational.exp: print value of w
PASS: gdb.base/relational.exp: print value of x<y
PASS: gdb.base/relational.exp: print value of x<=y
PASS: gdb.base/relational.exp: print value of x>y
PASS: gdb.base/relational.exp: print value of x>=y
PASS: gdb.base/relational.exp: print value of x==y
PASS: gdb.base/relational.exp: print value of x!=y
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y<z
PASS: gdb.base/relational.exp: print value of x<=y<=z
PASS: gdb.base/relational.exp: print value of x>y>z
PASS: gdb.base/relational.exp: print value of x>=y>=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x==y==z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x!=y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y==z
PASS: gdb.base/relational.exp: print value of x<y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable y
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y<=z
PASS: gdb.base/relational.exp: print value of x<y>=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x<y>z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x>y>=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>y!=z
PASS: gdb.base/relational.exp: set x to 4
PASS: gdb.base/relational.exp: print value of x>y<=z
PASS: gdb.base/relational.exp: print value of x>=y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x>=y!=z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>=y<=z
PASS: gdb.base/relational.exp: print value of x<=y==z
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: print value of x<=y!=z
PASS: gdb.base/relational.exp: print value of x==y!=z
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of x>=(y<z)
PASS: gdb.base/relational.exp: print value of x>=(y!=z)
PASS: gdb.base/relational.exp: print value of x==(y==z)
PASS: gdb.base/relational.exp: set variable x
PASS: gdb.base/relational.exp: set variable z
PASS: gdb.base/relational.exp: print value of (x==y)<z
Running ../../../master/gdb/testsuite/gdb.base/relativedebug.exp ...
PASS: gdb.base/relativedebug.exp: continue
PASS: gdb.base/relativedebug.exp: pause found in backtrace
Running ../../../master/gdb/testsuite/gdb.base/relocate.exp ...
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o 0
PASS: gdb.base/relocate.exp: get address of static_foo
PASS: gdb.base/relocate.exp: get address of static_bar
PASS: gdb.base/relocate.exp: static variables have different addresses
PASS: gdb.base/relocate.exp: get address of global_foo
PASS: gdb.base/relocate.exp: get address of global_bar
PASS: gdb.base/relocate.exp: global variables have different addresses
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: get address of function_bar
PASS: gdb.base/relocate.exp: functions have different addresses
PASS: gdb.base/relocate.exp: set $offset = 0x10000
PASS: gdb.base/relocate.exp: add-symbol-file relocate.o $offset
PASS: gdb.base/relocate.exp: get address of function_foo
PASS: gdb.base/relocate.exp: function foo has a different address
PASS: gdb.base/relocate.exp: print static_foo
PASS: gdb.base/relocate.exp: print static_bar
PASS: gdb.base/relocate.exp: print global_foo
PASS: gdb.base/relocate.exp: print global_bar
Running ../../../master/gdb/testsuite/gdb.base/remote.exp ...
Running ../../../master/gdb/testsuite/gdb.base/remotetimeout.exp ...
PASS: gdb.base/remotetimeout.exp: correct remotetimeout printed
Running ../../../master/gdb/testsuite/gdb.base/reread.exp ...
PASS: gdb.base/reread.exp: breakpoint foo in first file
PASS: gdb.base/reread.exp: run to foo()
PASS: gdb.base/reread.exp: run to foo() second time
PASS: gdb.base/reread.exp: second pass: breakpoint foo in first file
PASS: gdb.base/reread.exp: second pass: run to foo()
PASS: gdb.base/reread.exp: continue until exit at second pass
PASS: gdb.base/reread.exp: second pass: run to foo() second time
Running ../../../master/gdb/testsuite/gdb.base/restore.exp ...
PASS: gdb.base/restore.exp: tbreak caller1
PASS: gdb.base/restore.exp: run to caller1
PASS: gdb.base/restore.exp: caller1 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller1 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller1 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller1 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller1 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: tbreak caller2
PASS: gdb.base/restore.exp: run to caller2
PASS: gdb.base/restore.exp: caller2 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller2 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller2 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller2 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller2 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller2 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: tbreak caller3
PASS: gdb.base/restore.exp: run to caller3
PASS: gdb.base/restore.exp: caller3 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller3 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller3 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller3 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller3 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: tbreak caller4
PASS: gdb.base/restore.exp: run to caller4
PASS: gdb.base/restore.exp: caller4 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee1; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee2; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee3; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee4; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller4 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller4 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller4 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller4 calls callee5; return restored l4 to 32495
PASS: gdb.base/restore.exp: tbreak caller5
PASS: gdb.base/restore.exp: run to caller5
PASS: gdb.base/restore.exp: caller5 calls callee1; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee1; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee1; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee1; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee2; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee2; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee2; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee2; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee3; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee3; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee3; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee3; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee4; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee4; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee4; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee4; return restored l5 to 32496
PASS: gdb.base/restore.exp: caller5 calls callee5; tbreak callee
PASS: gdb.base/restore.exp: caller5 calls callee5; continue to callee
PASS: gdb.base/restore.exp: caller5 calls callee5; return callee now
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l1 to 32492
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l2 to 32493
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l3 to 32494
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l4 to 32495
PASS: gdb.base/restore.exp: caller5 calls callee5; return restored l5 to 32496
PASS: gdb.base/restore.exp: run to completion
Running ../../../master/gdb/testsuite/gdb.base/return-nodebug.exp ...
PASS: gdb.base/return-nodebug.exp: signed-char: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: signed-char: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: signed-char: advance to marker
PASS: gdb.base/return-nodebug.exp: signed-char: full width of the returned result
PASS: gdb.base/return-nodebug.exp: short: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: short: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: short: advance to marker
PASS: gdb.base/return-nodebug.exp: short: full width of the returned result
PASS: gdb.base/return-nodebug.exp: int: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: int: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: int: advance to marker
PASS: gdb.base/return-nodebug.exp: int: full width of the returned result
PASS: gdb.base/return-nodebug.exp: long: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: long: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: long: advance to marker
PASS: gdb.base/return-nodebug.exp: long: full width of the returned result
PASS: gdb.base/return-nodebug.exp: long-long: return from function with no debug info without a cast
PASS: gdb.base/return-nodebug.exp: long-long: return from function with no debug info with a cast
PASS: gdb.base/return-nodebug.exp: long-long: advance to marker
PASS: gdb.base/return-nodebug.exp: long-long: full width of the returned result
Running ../../../master/gdb/testsuite/gdb.base/return.exp ...
PASS: gdb.base/return.exp: simple return
PASS: gdb.base/return.exp: break func2
PASS: gdb.base/return.exp: break func3
PASS: gdb.base/return.exp: continue to return of -5
PASS: gdb.base/return.exp: next over call to func2
PASS: gdb.base/return.exp: correct value returned (integer test)
PASS: gdb.base/return.exp: continue to return of -5.0
PASS: gdb.base/return.exp: next over call to func3
PASS: gdb.base/return.exp: correct value returned double test (known problem with sparc solaris)
Running ../../../master/gdb/testsuite/gdb.base/return2.exp ...
PASS: gdb.base/return2.exp: set break on void_func
PASS: gdb.base/return2.exp: continue to void_func
PASS: gdb.base/return2.exp: return from void_func
PASS: gdb.base/return2.exp: void function returned successfully
PASS: gdb.base/return2.exp: set break on char_func
PASS: gdb.base/return2.exp: continue to char_func
PASS: gdb.base/return2.exp: return from char_func
PASS: gdb.base/return2.exp: char value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on short_func
PASS: gdb.base/return2.exp: continue to short_func
PASS: gdb.base/return2.exp: return from short_func
PASS: gdb.base/return2.exp: short value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on int_func
PASS: gdb.base/return2.exp: continue to int_func
PASS: gdb.base/return2.exp: return from int_func
PASS: gdb.base/return2.exp: int value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on long_func
PASS: gdb.base/return2.exp: continue to long_func
PASS: gdb.base/return2.exp: return from long_func
PASS: gdb.base/return2.exp: long value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on long_long_func
PASS: gdb.base/return2.exp: continue to long_long_func
PASS: gdb.base/return2.exp: return from long_long_func
PASS: gdb.base/return2.exp: long_long value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on float_func
PASS: gdb.base/return2.exp: continue to float_func
PASS: gdb.base/return2.exp: return from float_func
PASS: gdb.base/return2.exp: float value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
PASS: gdb.base/return2.exp: set break on double_func
PASS: gdb.base/return2.exp: continue to double_func
PASS: gdb.base/return2.exp: return from double_func
PASS: gdb.base/return2.exp: double value returned successfully
PASS: gdb.base/return2.exp: validate result value not equal to program return value
Running ../../../master/gdb/testsuite/gdb.base/savedregs.exp ...
PASS: gdb.base/savedregs.exp: advance thrower
PASS: gdb.base/savedregs.exp: Get main info frame
PASS: gdb.base/savedregs.exp: handle SIGSEGV pass print nostop
PASS: gdb.base/savedregs.exp: advance catcher
PASS: gdb.base/savedregs.exp: Get sigtramp info frame
PASS: gdb.base/savedregs.exp: Get thrower info frame
PASS: gdb.base/savedregs.exp: Check main info frame; stack contains catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: break caller
PASS: gdb.base/savedregs.exp: call caller (1,2,3,4,5,6,7,8)
PASS: gdb.base/savedregs.exp: Get dummy info frame
PASS: gdb.base/savedregs.exp: Get catcher info frame
PASS: gdb.base/savedregs.exp: Check sigtramp info frame; stack contains caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check thrower info frame; stack contains caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check main info frame; stack contains caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: advance callee
PASS: gdb.base/savedregs.exp: Get caller info frame
PASS: gdb.base/savedregs.exp: Check dummy info frame; stack contains callee caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check catcher info frame; stack contains callee caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check sigtramp info frame; stack contains callee caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check thrower info frame; stack contains callee caller dummy catcher sigtramp thrower main
PASS: gdb.base/savedregs.exp: Check main info frame; stack contains callee caller dummy catcher sigtramp thrower main
Running ../../../master/gdb/testsuite/gdb.base/scope.exp ...
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss before run
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal before run
PASS: gdb.base/scope.exp: next over init0() in main
PASS: gdb.base/scope.exp: print filelocal
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at main
PASS: gdb.base/scope.exp: print filelocal_bss
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_main
PASS: gdb.base/scope.exp: print filelocal_ro in test_at_main
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro
PASS: gdb.base/scope.exp: print foo::funclocal
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal
PASS: gdb.base/scope.exp: print foo::funclocal_ro
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro
PASS: gdb.base/scope.exp: print bar::funclocal
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro
PASS: gdb.base/scope.exp: print filelocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal at foo
PASS: gdb.base/scope.exp: print filelocal_bss at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss at foo
PASS: gdb.base/scope.exp: print filelocal_ro at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro at foo
PASS: gdb.base/scope.exp: print funclocal at foo
PASS: gdb.base/scope.exp: print foo::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal at foo
PASS: gdb.base/scope.exp: print funclocal_bss at foo
PASS: gdb.base/scope.exp: print foo::funclocal_bss at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_bss at foo
PASS: gdb.base/scope.exp: print funclocal_ro at foo
PASS: gdb.base/scope.exp: print foo::funclocal_ro at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro at foo
PASS: gdb.base/scope.exp: print bar::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal at foo
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal at bar
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_bss in test_at_bar
PASS: gdb.base/scope.exp: print 'scope0.c'::filelocal_ro at bar
PASS: gdb.base/scope.exp: print filelocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal at bar
PASS: gdb.base/scope.exp: print filelocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_bss at bar
PASS: gdb.base/scope.exp: print filelocal_ro in test_at_bar
PASS: gdb.base/scope.exp: print 'scope1.c'::filelocal_ro at bar
PASS: gdb.base/scope.exp: print foo::funclocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal at bar
PASS: gdb.base/scope.exp: print foo::funclocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_bss at bar
PASS: gdb.base/scope.exp: print foo::funclocal_ro at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::foo::funclocal_ro at bar
PASS: gdb.base/scope.exp: print funclocal at bar
PASS: gdb.base/scope.exp: print bar::funclocal at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal at bar
PASS: gdb.base/scope.exp: print funclocal_bss at bar
PASS: gdb.base/scope.exp: print bar::funclocal_bss at bar
PASS: gdb.base/scope.exp: print 'scope1.c'::bar::funclocal_bss at bar
PASS: gdb.base/scope.exp: continue to marker2
PASS: gdb.base/scope.exp: up from marker2 in scopes.exp
PASS: gdb.base/scope.exp: print localval, outer scope
PASS: gdb.base/scope.exp: print localval1, outer scope
PASS: gdb.base/scope.exp: print localval2, outer scope
PASS: gdb.base/scope.exp: print localval3, outer scope
PASS: gdb.base/scope.exp: continue to marker3 in scope.exp
PASS: gdb.base/scope.exp: up from marker3 in scope.exp
PASS: gdb.base/scope.exp: print localval, first nested scope
PASS: gdb.base/scope.exp: print localval1, first nested scope
PASS: gdb.base/scope.exp: print localval2, first nested scope
PASS: gdb.base/scope.exp: print localval3, first nested scope
PASS: gdb.base/scope.exp: continue to marker4 in scope.exp
PASS: gdb.base/scope.exp: up from marker4 in scope.exp
PASS: gdb.base/scope.exp: print localval, innermost scope
PASS: gdb.base/scope.exp: print localval1, innermost scope
PASS: gdb.base/scope.exp: print localval2, innermost scope
PASS: gdb.base/scope.exp: print localval3, innermost scope
PASS: gdb.base/scope.exp: continue to marker1
PASS: gdb.base/scope.exp: up from marker1 in scope.exp
PASS: gdb.base/scope.exp: 100 auto variables correctly initialized
PASS: gdb.base/scope.exp: args in correct order
Running ../../../master/gdb/testsuite/gdb.base/sect-cmd.exp ...
Running ../../../master/gdb/testsuite/gdb.base/sep.exp ...
PASS: gdb.base/sep.exp: list using location inside included file
PASS: gdb.base/sep.exp: breakpoint inside included file
Running ../../../master/gdb/testsuite/gdb.base/sepdebug.exp ...
PASS: gdb.base/sepdebug.exp: breakpoint function
PASS: gdb.base/sepdebug.exp: breakpoint quoted function
PASS: gdb.base/sepdebug.exp: breakpoint function in file
PASS: gdb.base/sepdebug.exp: use `list' to establish default source file
PASS: gdb.base/sepdebug.exp: breakpoint line number
PASS: gdb.base/sepdebug.exp: breakpoint duplicate
PASS: gdb.base/sepdebug.exp: breakpoint line number in file
PASS: gdb.base/sepdebug.exp: breakpoint at start of multi line if conditional
PASS: gdb.base/sepdebug.exp: breakpoint at start of multi line while conditional
PASS: gdb.base/sepdebug.exp: breakpoint info
PASS: gdb.base/sepdebug.exp: run until function breakpoint
PASS: gdb.base/sepdebug.exp: run until breakpoint set at a line number
PASS: gdb.base/sepdebug.exp: run until file:function(6) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(5) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(4) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(3) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(2) breakpoint
PASS: gdb.base/sepdebug.exp: run until file:function(1) breakpoint
PASS: gdb.base/sepdebug.exp: run until quoted breakpoint
PASS: gdb.base/sepdebug.exp: run until file:linenum breakpoint
PASS: gdb.base/sepdebug.exp: breakpoint offset +1
PASS: gdb.base/sepdebug.exp: step onto breakpoint
PASS: gdb.base/sepdebug.exp: Temporary breakpoint function
PASS: gdb.base/sepdebug.exp: Temporary breakpoint function in file
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number #1
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number #2
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number in file #1
PASS: gdb.base/sepdebug.exp: Temporary breakpoint line number in file #2
PASS: gdb.base/sepdebug.exp: Temporary breakpoint info
PASS: gdb.base/sepdebug.exp: catch requires an event name
PASS: gdb.base/sepdebug.exp: set catch fork, never expected to trigger
PASS: gdb.base/sepdebug.exp: set catch vfork, never expected to trigger
PASS: gdb.base/sepdebug.exp: set catch exec, never expected to trigger
PASS: gdb.base/sepdebug.exp: break on non-existent source line
PASS: gdb.base/sepdebug.exp: until bp_location1
PASS: gdb.base/sepdebug.exp: break on default location, 1st time
PASS: gdb.base/sepdebug.exp: break on default location, 2nd time
PASS: gdb.base/sepdebug.exp: break on default location, 3rd time
PASS: gdb.base/sepdebug.exp: break on default location, 4th time
PASS: gdb.base/sepdebug.exp: set to-be-silent break bp_location1
PASS: gdb.base/sepdebug.exp: set silent break bp_location1
PASS: gdb.base/sepdebug.exp: info silent break bp_location1
PASS: gdb.base/sepdebug.exp: hit silent break bp_location1
PASS: gdb.base/sepdebug.exp: stopped for silent break bp_location1
PASS: gdb.base/sepdebug.exp: thread-specific breakpoint on non-existent thread disallowed
PASS: gdb.base/sepdebug.exp: thread-specific breakpoint on bogus thread ID disallowed
PASS: gdb.base/sepdebug.exp: breakpoint with trailing garbage disallowed
PASS: gdb.base/sepdebug.exp: step over breakpoint
PASS: gdb.base/sepdebug.exp: clear line has no breakpoint disallowed
PASS: gdb.base/sepdebug.exp: clear current line has no breakpoint disallowed
PASS: gdb.base/sepdebug.exp: break marker3 #1
PASS: gdb.base/sepdebug.exp: break marker3 #2
PASS: gdb.base/sepdebug.exp: clear marker3
PASS: gdb.base/sepdebug.exp: set convenience variable $foo to bp_location11
PASS: gdb.base/sepdebug.exp: set breakpoint via convenience variable
PASS: gdb.base/sepdebug.exp: set convenience variable $foo to 81.5
PASS: gdb.base/sepdebug.exp: set breakpoint via non-integer convenience variable disallowed
PASS: gdb.base/sepdebug.exp: set breakpoint on to-be-called function
PASS: gdb.base/sepdebug.exp: hit breakpoint on called function
PASS: gdb.base/sepdebug.exp: backtrace while in called function
PASS: gdb.base/sepdebug.exp: finish from called function
PASS: gdb.base/sepdebug.exp: finish with arguments disallowed
PASS: gdb.base/sepdebug.exp: finish from outermost frame disallowed
PASS: gdb.base/sepdebug.exp: kill program
PASS: gdb.base/sepdebug.exp: break at factorial
PASS: gdb.base/sepdebug.exp: continue to factorial(5)
PASS: gdb.base/sepdebug.exp: backtrace from factorial(5)
PASS: gdb.base/sepdebug.exp: next to recursive call
PASS: gdb.base/sepdebug.exp: next over recursive call
PASS: gdb.base/sepdebug.exp: backtrace from factorial(5.1)
PASS: gdb.base/sepdebug.exp: continue until exit at recursive next test
PASS: gdb.base/sepdebug.exp: debuglink: set separate debug location
PASS: gdb.base/sepdebug.exp: debuglink: breakpoint function, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: breakpoint small function, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: run until function breakpoint, optimized file
PASS: gdb.base/sepdebug.exp: debuglink: run until breakpoint set at small function, optimized file
PASS: gdb.base/sepdebug.exp: CRC mismatch is reported
PASS: gdb.base/sepdebug.exp: build-id support by binutils
PASS: gdb.base/sepdebug.exp: build-id: set separate debug location
PASS: gdb.base/sepdebug.exp: build-id: breakpoint function, optimized file
PASS: gdb.base/sepdebug.exp: build-id: breakpoint small function, optimized file
PASS: gdb.base/sepdebug.exp: build-id: run until function breakpoint, optimized file
PASS: gdb.base/sepdebug.exp: build-id: run until breakpoint set at small function, optimized file
PASS: gdb.base/sepdebug.exp: multiple-dirs: set separate debug location
PASS: gdb.base/sepdebug.exp: multiple-dirs: breakpoint function, optimized file
PASS: gdb.base/sepdebug.exp: multiple-dirs: breakpoint small function, optimized file
PASS: gdb.base/sepdebug.exp: multiple-dirs: run until function breakpoint, optimized file
PASS: gdb.base/sepdebug.exp: multiple-dirs: run until breakpoint set at small function, optimized file
Running ../../../master/gdb/testsuite/gdb.base/sepsymtab.exp ...
PASS: gdb.base/sepsymtab.exp: info sym main
Running ../../../master/gdb/testsuite/gdb.base/set-lang-auto.exp ...
PASS: gdb.base/set-lang-auto.exp: show lang after loading binary
PASS: gdb.base/set-lang-auto.exp: forcing the language to ada
PASS: gdb.base/set-lang-auto.exp: show lang after switching language to ada
PASS: gdb.base/set-lang-auto.exp: switching the language back to auto
PASS: gdb.base/set-lang-auto.exp: show lang after having switched back to auto
Running ../../../master/gdb/testsuite/gdb.base/setshow.exp ...
PASS: gdb.base/setshow.exp: default annotation_level is zero
PASS: gdb.base/setshow.exp: set annotate 2
PASS: gdb.base/setshow.exp: show annotate 2
PASS: gdb.base/setshow.exp: annotation_level 2
PASS: gdb.base/setshow.exp: set annotate 1
PASS: gdb.base/setshow.exp: show annotate (1)
PASS: gdb.base/setshow.exp: annotation_level 1
PASS: gdb.base/setshow.exp: set annotate 0
PASS: gdb.base/setshow.exp: show annotate (0)
PASS: gdb.base/setshow.exp: annotation_level 0
PASS: gdb.base/setshow.exp: set args
PASS: gdb.base/setshow.exp: show args
PASS: gdb.base/setshow.exp: continuing
PASS: gdb.base/setshow.exp: passing args
PASS: gdb.base/setshow.exp: set check range on
PASS: gdb.base/setshow.exp: show check range (on)
PASS: gdb.base/setshow.exp: set check range off
PASS: gdb.base/setshow.exp: show check range (off)
PASS: gdb.base/setshow.exp: set check range auto
PASS: gdb.base/setshow.exp: show check range (auto)
PASS: gdb.base/setshow.exp: set check type on
PASS: gdb.base/setshow.exp: show check type (on)
PASS: gdb.base/setshow.exp: set check type off
PASS: gdb.base/setshow.exp: show check type (off)
PASS: gdb.base/setshow.exp: set check type auto
PASS: gdb.base/setshow.exp: show check type (auto)
PASS: gdb.base/setshow.exp: set complaints 100
PASS: gdb.base/setshow.exp: show complaints (100)
PASS: gdb.base/setshow.exp: set complaints 0
PASS: gdb.base/setshow.exp: show complaints (0)
PASS: gdb.base/setshow.exp: set confirm off
PASS: gdb.base/setshow.exp: show confirm (off)
PASS: gdb.base/setshow.exp: set confirm on
PASS: gdb.base/setshow.exp: show confirm (on)
PASS: gdb.base/setshow.exp: set editing off
PASS: gdb.base/setshow.exp: show editing (off)
PASS: gdb.base/setshow.exp: set environment FOOBARBAZ
PASS: gdb.base/setshow.exp: show environment FOOBARBAZ
PASS: gdb.base/setshow.exp: set height 100
PASS: gdb.base/setshow.exp: show height
PASS: gdb.base/setshow.exp: set history expansion on
PASS: gdb.base/setshow.exp: show history expansion
PASS: gdb.base/setshow.exp: set history filename foobar.baz
PASS: gdb.base/setshow.exp: show history filename (foobar.baz)
PASS: gdb.base/setshow.exp: set history save on
PASS: gdb.base/setshow.exp: show history save (on)
PASS: gdb.base/setshow.exp: set history size 100
PASS: gdb.base/setshow.exp: show history size (100)
PASS: gdb.base/setshow.exp: set language asm
PASS: gdb.base/setshow.exp: show language (asm)
PASS: gdb.base/setshow.exp: set language java
PASS: gdb.base/setshow.exp: show language (java)
PASS: gdb.base/setshow.exp: complete set language minimal
PASS: gdb.base/setshow.exp: set language auto
PASS: gdb.base/setshow.exp: show language (auto)
PASS: gdb.base/setshow.exp: set listsize 100
PASS: gdb.base/setshow.exp: show listsize (100)
PASS: gdb.base/setshow.exp: set prompt FooBarBaz
PASS: gdb.base/setshow.exp: show prompt FooBarBaz
PASS: gdb.base/setshow.exp: set prompt gdb
PASS: gdb.base/setshow.exp: set radix 11
PASS: gdb.base/setshow.exp: set radix 16
PASS: gdb.base/setshow.exp: show radix (16)
PASS: gdb.base/setshow.exp: set radix 10
PASS: gdb.base/setshow.exp: show radix (10)
PASS: gdb.base/setshow.exp: set width 90
PASS: gdb.base/setshow.exp: show width (90)
PASS: gdb.base/setshow.exp: set write on
PASS: gdb.base/setshow.exp: show write (on)
PASS: gdb.base/setshow.exp: set symbol-reloading on
PASS: gdb.base/setshow.exp: show symbol-reloading (on)
PASS: gdb.base/setshow.exp: show user
PASS: gdb.base/setshow.exp: set verbose on
PASS: gdb.base/setshow.exp: show verbose (on)
PASS: gdb.base/setshow.exp: set verbose off
PASS: gdb.base/setshow.exp: show verbose (off)
Running ../../../master/gdb/testsuite/gdb.base/setvar.exp ...
PASS: gdb.base/setvar.exp: set print sevenbit-strings
PASS: gdb.base/setvar.exp: set variable char=0
PASS: gdb.base/setvar.exp: set variable char=1
PASS: gdb.base/setvar.exp: set variable char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable char=65 ('A')
PASS: gdb.base/setvar.exp: set variable char=97 ('a')
PASS: gdb.base/setvar.exp: set variable char=126 ('~')
PASS: gdb.base/setvar.exp: set variable char=127 (8-bit)
PASS: gdb.base/setvar.exp: set variable signed char=0
PASS: gdb.base/setvar.exp: set variable signed char=1
PASS: gdb.base/setvar.exp: set variable signed char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable signed char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable signed char=65 ('A')
PASS: gdb.base/setvar.exp: set variable signed char=97 ('a')
PASS: gdb.base/setvar.exp: set variable signed char=126 ('~')
PASS: gdb.base/setvar.exp: set variable signed char=127 (8-bit)
PASS: gdb.base/setvar.exp: set variable v_signed_char=-1
PASS: gdb.base/setvar.exp: set variable signed char=-1 (-1)
PASS: gdb.base/setvar.exp: set variable v_signed_char=0xFF
PASS: gdb.base/setvar.exp: set variable signed char=0xFF (0xFF)
PASS: gdb.base/setvar.exp: set variable unsigned char=0
PASS: gdb.base/setvar.exp: set variable unsigned char=1
PASS: gdb.base/setvar.exp: set variable unsigned char=7 (Bel)
PASS: gdb.base/setvar.exp: set variable unsigned char=32 (SPC)
PASS: gdb.base/setvar.exp: set variable unsigned char=65 ('A')
PASS: gdb.base/setvar.exp: set variable unsigned char=97 ('a')
PASS: gdb.base/setvar.exp: set variable unsigned char=126 ('~')
PASS: gdb.base/setvar.exp: set variable unsigned char=255 (8-bit)
PASS: gdb.base/setvar.exp: set variable short=0
PASS: gdb.base/setvar.exp: set variable short=1
PASS: gdb.base/setvar.exp: set variable short=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed short=0
PASS: gdb.base/setvar.exp: set variable signed short=1
PASS: gdb.base/setvar.exp: set variable signed short=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned short=0
PASS: gdb.base/setvar.exp: set variable unsigned short=1
PASS: gdb.base/setvar.exp: set variable unsigned short=~0 (minus)
PASS: gdb.base/setvar.exp: set variable int=0
PASS: gdb.base/setvar.exp: set variable int=1
PASS: gdb.base/setvar.exp: set variable int=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed int=0
PASS: gdb.base/setvar.exp: set variable signed int=1
PASS: gdb.base/setvar.exp: set variable signed int=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned int=0
PASS: gdb.base/setvar.exp: set variable unsigned int=1
PASS: gdb.base/setvar.exp: set variable unsigned int=~0 (minus)
PASS: gdb.base/setvar.exp: set variable long=0
PASS: gdb.base/setvar.exp: set variable long=1
PASS: gdb.base/setvar.exp: set variable long=-1 (minus)
PASS: gdb.base/setvar.exp: set variable signed long=0
PASS: gdb.base/setvar.exp: set variable signed long=1
PASS: gdb.base/setvar.exp: set variable signed long=-1 (minus)
PASS: gdb.base/setvar.exp: set variable unsigned long=0
PASS: gdb.base/setvar.exp: set variable unsigned long=1
PASS: gdb.base/setvar.exp: set variable unsigned long=~0 (minus)
PASS: gdb.base/setvar.exp: set variable float=0
PASS: gdb.base/setvar.exp: set variable float=1
PASS: gdb.base/setvar.exp: set variable float=-1 (minus)
PASS: gdb.base/setvar.exp: set variable double=0
PASS: gdb.base/setvar.exp: set variable double=1
PASS: gdb.base/setvar.exp: set variable double=-1 (minus)
PASS: gdb.base/setvar.exp: set variable char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable signed char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable unsigned char array="hi" (string)
PASS: gdb.base/setvar.exp: set variable short array
PASS: gdb.base/setvar.exp: set variable signed short array
PASS: gdb.base/setvar.exp: set variable unsigned short array
PASS: gdb.base/setvar.exp: set variable int array
PASS: gdb.base/setvar.exp: set variable signed int array
PASS: gdb.base/setvar.exp: set variable unsigned int array
PASS: gdb.base/setvar.exp: set variable long array
PASS: gdb.base/setvar.exp: set variable signed long array
PASS: gdb.base/setvar.exp: set variable unsigned long array
PASS: gdb.base/setvar.exp: set variable float array
PASS: gdb.base/setvar.exp: set variable double array
PASS: gdb.base/setvar.exp: set variable char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable signed char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable signed char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable unsigned char pointer="hi" (string)
PASS: gdb.base/setvar.exp: set variable unsigned char pointer="hi" (string) (#2)
PASS: gdb.base/setvar.exp: set variable short pointer
PASS: gdb.base/setvar.exp: set variable short pointer (#2)
PASS: gdb.base/setvar.exp: set v_signed_short_pointer=v_signed_short_array
PASS: gdb.base/setvar.exp: set variable *(v_signed_short_pointer)=123
PASS: gdb.base/setvar.exp: set variable *(v_signed_short_pointer+1)=-456
PASS: gdb.base/setvar.exp: set variable signed short pointer
PASS: gdb.base/setvar.exp: print *(v_signed_short_pointer+1)
PASS: gdb.base/setvar.exp: set v_unsigned_short_pointer=v_unsigned_short_array
PASS: gdb.base/setvar.exp: set variable *(v_unsigned_short_pointer)=123
PASS: gdb.base/setvar.exp: set variable *(v_unsigned_short_pointer+1)=-456
PASS: gdb.base/setvar.exp: set variable unsigned short pointer
PASS: gdb.base/setvar.exp: print *(v_unsigned_short_pointer+1)
PASS: gdb.base/setvar.exp: set variable int pointer
PASS: gdb.base/setvar.exp: set variable int pointer (#2)
PASS: gdb.base/setvar.exp: set variable signed int pointer
PASS: gdb.base/setvar.exp: set variable signed int pointer (#2)
PASS: gdb.base/setvar.exp: set variable unsigned int pointer
PASS: gdb.base/setvar.exp: print variable unsigned int pointer+1
PASS: gdb.base/setvar.exp: set variable long pointer
PASS: gdb.base/setvar.exp: set variable long pointer (#2)
PASS: gdb.base/setvar.exp: set variable signed long pointer
PASS: gdb.base/setvar.exp: set variable signed long pointer (#2)
PASS: gdb.base/setvar.exp: set variable unsigned long pointer
PASS: gdb.base/setvar.exp: set variable unsigned long pointer (#2)
PASS: gdb.base/setvar.exp: set variable float pointer
PASS: gdb.base/setvar.exp: set variable float pointer (#2)
PASS: gdb.base/setvar.exp: set variable double pointer
PASS: gdb.base/setvar.exp: set variable double pointer (#2)
PASS: gdb.base/setvar.exp: set variable structure char member
PASS: gdb.base/setvar.exp: set variable structure short member
PASS: gdb.base/setvar.exp: set variable structure int member
PASS: gdb.base/setvar.exp: set variable structure long member
PASS: gdb.base/setvar.exp: set variable structure float member
PASS: gdb.base/setvar.exp: set variable structure double member
PASS: gdb.base/setvar.exp: set print structure #1
PASS: gdb.base/setvar.exp: set print structure #2
PASS: gdb.base/setvar.exp: set print structure #3
PASS: gdb.base/setvar.exp: print sef.field=sm1
PASS: gdb.base/setvar.exp: print sef.field (sm1)
PASS: gdb.base/setvar.exp: print sef.field=s1
PASS: gdb.base/setvar.exp: print sef.field (s1)
PASS: gdb.base/setvar.exp: print uef.field=u2
PASS: gdb.base/setvar.exp: print uef.field (u2)
PASS: gdb.base/setvar.exp: print uef.field=u1
PASS: gdb.base/setvar.exp: print uef.field (u1)
PASS: gdb.base/setvar.exp: print sef.field=7
PASS: gdb.base/setvar.exp: print uef.field=6
Running ../../../master/gdb/testsuite/gdb.base/shlib-call.exp ...
PASS: gdb.base/shlib-call.exp: set print sevenbit-strings
PASS: gdb.base/shlib-call.exp: set print address off
PASS: gdb.base/shlib-call.exp: set width 0
PASS: gdb.base/shlib-call.exp: next to shr1
PASS: gdb.base/shlib-call.exp: print g
PASS: gdb.base/shlib-call.exp: next over shr1
PASS: gdb.base/shlib-call.exp: print g
PASS: gdb.base/shlib-call.exp: print shr1(1)
PASS: gdb.base/shlib-call.exp: print shr1(g)
PASS: gdb.base/shlib-call.exp: breakpoint function shr2
PASS: gdb.base/shlib-call.exp: run until breakpoint set at a function
PASS: gdb.base/shlib-call.exp: print shr1(1) 2nd time
PASS: gdb.base/shlib-call.exp: print mainshr1(1) from shlib func
PASS: gdb.base/shlib-call.exp: step out of shr2 to main (stopped in shr2 epilogue)
PASS: gdb.base/shlib-call.exp: step out of shr2 epilogue to main
PASS: gdb.base/shlib-call.exp: print mainshr1(1)
PASS: gdb.base/shlib-call.exp: step into mainshr1
PASS: gdb.base/shlib-call.exp: set print sevenbit-strings
PASS: gdb.base/shlib-call.exp: set print address off
PASS: gdb.base/shlib-call.exp: set width 0
PASS: gdb.base/shlib-call.exp: run to bp in shared library
PASS: gdb.base/shlib-call.exp: continue until exit
PASS: gdb.base/shlib-call.exp: re-run to bp in shared library (PR's 16495, 18213)
PASS: gdb.base/shlib-call.exp: continue until exit
Running ../../../master/gdb/testsuite/gdb.base/shreloc.exp ...
PASS: gdb.base/shreloc.exp: get address of fn_1
PASS: gdb.base/shreloc.exp: get address of fn_2
PASS: gdb.base/shreloc.exp: relocated extern functions have different addresses
PASS: gdb.base/shreloc.exp: get address of extern_var_1
PASS: gdb.base/shreloc.exp: get address of extern_var_2
PASS: gdb.base/shreloc.exp: relocated extern variables have different addresses
PASS: gdb.base/shreloc.exp: get address of static_var_1
PASS: gdb.base/shreloc.exp: get address of static_var_2
PASS: gdb.base/shreloc.exp: relocated static variables have different addresses
PASS: gdb.base/shreloc.exp: get_msym_addrs static_var_[12]
PASS: gdb.base/shreloc.exp: (msymbol) relocated static vars have different addresses
PASS: gdb.base/shreloc.exp: get_msym_addrs extern_var_[12]
PASS: gdb.base/shreloc.exp: (msymbol) relocated extern vars have different addresses
PASS: gdb.base/shreloc.exp: get_msym_addrs fn_[12]
PASS: gdb.base/shreloc.exp: (msymbol) relocated functions have different addresses
Running ../../../master/gdb/testsuite/gdb.base/sigall.exp ...
PASS: gdb.base/sigall.exp: handle SIGABRT stop print
PASS: gdb.base/sigall.exp: b handle_ABRT
PASS: gdb.base/sigall.exp: b gen_HUP
PASS: gdb.base/sigall.exp: get signal ABRT
PASS: gdb.base/sigall.exp: send signal ABRT
PASS: gdb.base/sigall.exp: advance to HUP
PASS: gdb.base/sigall.exp: handle SIGHUP stop print
PASS: gdb.base/sigall.exp: b handle_HUP
PASS: gdb.base/sigall.exp: b gen_QUIT
PASS: gdb.base/sigall.exp: get signal HUP
PASS: gdb.base/sigall.exp: send signal HUP
PASS: gdb.base/sigall.exp: advance to QUIT
PASS: gdb.base/sigall.exp: handle SIGQUIT stop print
PASS: gdb.base/sigall.exp: b handle_QUIT
PASS: gdb.base/sigall.exp: b gen_ILL
PASS: gdb.base/sigall.exp: get signal QUIT
PASS: gdb.base/sigall.exp: send signal QUIT
PASS: gdb.base/sigall.exp: advance to ILL
PASS: gdb.base/sigall.exp: handle SIGILL stop print
PASS: gdb.base/sigall.exp: b handle_ILL
PASS: gdb.base/sigall.exp: b gen_EMT
PASS: gdb.base/sigall.exp: get signal ILL
PASS: gdb.base/sigall.exp: send signal ILL
PASS: gdb.base/sigall.exp: advance to EMT
PASS: gdb.base/sigall.exp: handle SIGEMT stop print
PASS: gdb.base/sigall.exp: b handle_EMT
PASS: gdb.base/sigall.exp: b gen_FPE
PASS: gdb.base/sigall.exp: send signal EMT
PASS: gdb.base/sigall.exp: advance to FPE
PASS: gdb.base/sigall.exp: handle SIGFPE stop print
PASS: gdb.base/sigall.exp: b handle_FPE
PASS: gdb.base/sigall.exp: b gen_BUS
PASS: gdb.base/sigall.exp: get signal FPE
PASS: gdb.base/sigall.exp: send signal FPE
PASS: gdb.base/sigall.exp: advance to BUS
PASS: gdb.base/sigall.exp: handle SIGBUS stop print
PASS: gdb.base/sigall.exp: b handle_BUS
PASS: gdb.base/sigall.exp: b gen_SEGV
PASS: gdb.base/sigall.exp: get signal BUS
PASS: gdb.base/sigall.exp: send signal BUS
PASS: gdb.base/sigall.exp: advance to SEGV
PASS: gdb.base/sigall.exp: handle SIGSEGV stop print
PASS: gdb.base/sigall.exp: b handle_SEGV
PASS: gdb.base/sigall.exp: b gen_SYS
PASS: gdb.base/sigall.exp: get signal SEGV
PASS: gdb.base/sigall.exp: send signal SEGV
PASS: gdb.base/sigall.exp: advance to SYS
PASS: gdb.base/sigall.exp: handle SIGSYS stop print
PASS: gdb.base/sigall.exp: b handle_SYS
PASS: gdb.base/sigall.exp: b gen_PIPE
PASS: gdb.base/sigall.exp: get signal SYS
PASS: gdb.base/sigall.exp: send signal SYS
PASS: gdb.base/sigall.exp: advance to PIPE
PASS: gdb.base/sigall.exp: handle SIGPIPE stop print
PASS: gdb.base/sigall.exp: b handle_PIPE
PASS: gdb.base/sigall.exp: b gen_ALRM
PASS: gdb.base/sigall.exp: get signal PIPE
PASS: gdb.base/sigall.exp: send signal PIPE
PASS: gdb.base/sigall.exp: advance to ALRM
PASS: gdb.base/sigall.exp: handle SIGALRM stop print
PASS: gdb.base/sigall.exp: b handle_ALRM
PASS: gdb.base/sigall.exp: b gen_URG
PASS: gdb.base/sigall.exp: get signal ALRM
PASS: gdb.base/sigall.exp: send signal ALRM
PASS: gdb.base/sigall.exp: advance to URG
PASS: gdb.base/sigall.exp: handle SIGURG stop print
PASS: gdb.base/sigall.exp: b handle_URG
PASS: gdb.base/sigall.exp: b gen_TSTP
PASS: gdb.base/sigall.exp: get signal URG
PASS: gdb.base/sigall.exp: send signal URG
PASS: gdb.base/sigall.exp: advance to TSTP
PASS: gdb.base/sigall.exp: handle SIGTSTP stop print
PASS: gdb.base/sigall.exp: b handle_TSTP
PASS: gdb.base/sigall.exp: b gen_CONT
PASS: gdb.base/sigall.exp: get signal TSTP
PASS: gdb.base/sigall.exp: send signal TSTP
PASS: gdb.base/sigall.exp: advance to CONT
PASS: gdb.base/sigall.exp: handle SIGCONT stop print
PASS: gdb.base/sigall.exp: b handle_CONT
PASS: gdb.base/sigall.exp: b gen_CHLD
PASS: gdb.base/sigall.exp: get signal CONT
PASS: gdb.base/sigall.exp: send signal CONT
PASS: gdb.base/sigall.exp: advance to CHLD
PASS: gdb.base/sigall.exp: handle SIGCHLD stop print
PASS: gdb.base/sigall.exp: b handle_CHLD
PASS: gdb.base/sigall.exp: b gen_TTIN
PASS: gdb.base/sigall.exp: get signal CHLD
PASS: gdb.base/sigall.exp: send signal CHLD
PASS: gdb.base/sigall.exp: advance to TTIN
PASS: gdb.base/sigall.exp: handle SIGTTIN stop print
PASS: gdb.base/sigall.exp: b handle_TTIN
PASS: gdb.base/sigall.exp: b gen_TTOU
PASS: gdb.base/sigall.exp: get signal TTIN
PASS: gdb.base/sigall.exp: send signal TTIN
PASS: gdb.base/sigall.exp: advance to TTOU
PASS: gdb.base/sigall.exp: handle SIGTTOU stop print
PASS: gdb.base/sigall.exp: b handle_TTOU
PASS: gdb.base/sigall.exp: b gen_IO
PASS: gdb.base/sigall.exp: get signal TTOU
PASS: gdb.base/sigall.exp: send signal TTOU
PASS: gdb.base/sigall.exp: advance to IO
PASS: gdb.base/sigall.exp: handle SIGIO stop print
PASS: gdb.base/sigall.exp: b handle_IO
PASS: gdb.base/sigall.exp: b gen_XCPU
PASS: gdb.base/sigall.exp: get signal IO
PASS: gdb.base/sigall.exp: send signal IO
PASS: gdb.base/sigall.exp: advance to XCPU
PASS: gdb.base/sigall.exp: handle SIGXCPU stop print
PASS: gdb.base/sigall.exp: b handle_XCPU
PASS: gdb.base/sigall.exp: b gen_XFSZ
PASS: gdb.base/sigall.exp: get signal XCPU
PASS: gdb.base/sigall.exp: send signal XCPU
PASS: gdb.base/sigall.exp: advance to XFSZ
PASS: gdb.base/sigall.exp: handle SIGXFSZ stop print
PASS: gdb.base/sigall.exp: b handle_XFSZ
PASS: gdb.base/sigall.exp: b gen_VTALRM
PASS: gdb.base/sigall.exp: get signal XFSZ
PASS: gdb.base/sigall.exp: send signal XFSZ
PASS: gdb.base/sigall.exp: advance to VTALRM
PASS: gdb.base/sigall.exp: handle SIGVTALRM stop print
PASS: gdb.base/sigall.exp: b handle_VTALRM
PASS: gdb.base/sigall.exp: b gen_PROF
PASS: gdb.base/sigall.exp: get signal VTALRM
PASS: gdb.base/sigall.exp: send signal VTALRM
PASS: gdb.base/sigall.exp: advance to PROF
PASS: gdb.base/sigall.exp: handle SIGPROF stop print
PASS: gdb.base/sigall.exp: b handle_PROF
PASS: gdb.base/sigall.exp: b gen_WINCH
PASS: gdb.base/sigall.exp: get signal PROF
PASS: gdb.base/sigall.exp: send signal PROF
PASS: gdb.base/sigall.exp: advance to WINCH
PASS: gdb.base/sigall.exp: handle SIGWINCH stop print
PASS: gdb.base/sigall.exp: b handle_WINCH
PASS: gdb.base/sigall.exp: b gen_LOST
PASS: gdb.base/sigall.exp: get signal WINCH
PASS: gdb.base/sigall.exp: send signal WINCH
PASS: gdb.base/sigall.exp: advance to LOST
PASS: gdb.base/sigall.exp: handle SIGLOST stop print
PASS: gdb.base/sigall.exp: b handle_LOST
PASS: gdb.base/sigall.exp: b gen_USR1
PASS: gdb.base/sigall.exp: send signal LOST
PASS: gdb.base/sigall.exp: advance to USR1
PASS: gdb.base/sigall.exp: handle SIGUSR1 stop print
PASS: gdb.base/sigall.exp: b handle_USR1
PASS: gdb.base/sigall.exp: b gen_USR2
PASS: gdb.base/sigall.exp: get signal USR1
PASS: gdb.base/sigall.exp: send signal USR1
PASS: gdb.base/sigall.exp: advance to USR2
PASS: gdb.base/sigall.exp: handle SIGUSR2 stop print
PASS: gdb.base/sigall.exp: b handle_USR2
PASS: gdb.base/sigall.exp: b gen_PWR
PASS: gdb.base/sigall.exp: get signal USR2
PASS: gdb.base/sigall.exp: send signal USR2
PASS: gdb.base/sigall.exp: advance to PWR
PASS: gdb.base/sigall.exp: handle SIGPWR stop print
PASS: gdb.base/sigall.exp: b handle_PWR
PASS: gdb.base/sigall.exp: b gen_POLL
PASS: gdb.base/sigall.exp: get signal PWR
PASS: gdb.base/sigall.exp: send signal PWR
PASS: gdb.base/sigall.exp: advance to POLL
PASS: gdb.base/sigall.exp: handle SIGPOLL stop print
PASS: gdb.base/sigall.exp: b handle_POLL
PASS: gdb.base/sigall.exp: b gen_WIND
PASS: gdb.base/sigall.exp: send signal POLL
PASS: gdb.base/sigall.exp: advance to WIND
PASS: gdb.base/sigall.exp: handle SIGWIND stop print
PASS: gdb.base/sigall.exp: b handle_WIND
PASS: gdb.base/sigall.exp: b gen_PHONE
PASS: gdb.base/sigall.exp: send signal WIND
PASS: gdb.base/sigall.exp: advance to PHONE
PASS: gdb.base/sigall.exp: handle SIGPHONE stop print
PASS: gdb.base/sigall.exp: b handle_PHONE
PASS: gdb.base/sigall.exp: b gen_WAITING
PASS: gdb.base/sigall.exp: send signal PHONE
PASS: gdb.base/sigall.exp: advance to WAITING
PASS: gdb.base/sigall.exp: handle SIGWAITING stop print
PASS: gdb.base/sigall.exp: b handle_WAITING
PASS: gdb.base/sigall.exp: b gen_LWP
PASS: gdb.base/sigall.exp: send signal WAITING
PASS: gdb.base/sigall.exp: advance to LWP
PASS: gdb.base/sigall.exp: handle SIGLWP stop print
PASS: gdb.base/sigall.exp: b handle_LWP
PASS: gdb.base/sigall.exp: b gen_DANGER
PASS: gdb.base/sigall.exp: send signal LWP
PASS: gdb.base/sigall.exp: advance to DANGER
PASS: gdb.base/sigall.exp: handle SIGDANGER stop print
PASS: gdb.base/sigall.exp: b handle_DANGER
PASS: gdb.base/sigall.exp: b gen_GRANT
PASS: gdb.base/sigall.exp: send signal DANGER
PASS: gdb.base/sigall.exp: advance to GRANT
PASS: gdb.base/sigall.exp: handle SIGGRANT stop print
PASS: gdb.base/sigall.exp: b handle_GRANT
PASS: gdb.base/sigall.exp: b gen_RETRACT
PASS: gdb.base/sigall.exp: send signal GRANT
PASS: gdb.base/sigall.exp: advance to RETRACT
PASS: gdb.base/sigall.exp: handle SIGRETRACT stop print
PASS: gdb.base/sigall.exp: b handle_RETRACT
PASS: gdb.base/sigall.exp: b gen_MSG
PASS: gdb.base/sigall.exp: send signal RETRACT
PASS: gdb.base/sigall.exp: advance to MSG
PASS: gdb.base/sigall.exp: handle SIGMSG stop print
PASS: gdb.base/sigall.exp: b handle_MSG
PASS: gdb.base/sigall.exp: b gen_SOUND
PASS: gdb.base/sigall.exp: send signal MSG
PASS: gdb.base/sigall.exp: advance to SOUND
PASS: gdb.base/sigall.exp: handle SIGSOUND stop print
PASS: gdb.base/sigall.exp: b handle_SOUND
PASS: gdb.base/sigall.exp: b gen_SAK
PASS: gdb.base/sigall.exp: send signal SOUND
PASS: gdb.base/sigall.exp: advance to SAK
PASS: gdb.base/sigall.exp: handle SIGSAK stop print
PASS: gdb.base/sigall.exp: b handle_SAK
PASS: gdb.base/sigall.exp: b gen_PRIO
PASS: gdb.base/sigall.exp: send signal SAK
PASS: gdb.base/sigall.exp: advance to PRIO
PASS: gdb.base/sigall.exp: handle SIGPRIO stop print
PASS: gdb.base/sigall.exp: b handle_PRIO
PASS: gdb.base/sigall.exp: b gen_33
PASS: gdb.base/sigall.exp: send signal PRIO
PASS: gdb.base/sigall.exp: advance to 33
PASS: gdb.base/sigall.exp: handle SIG33 stop print
PASS: gdb.base/sigall.exp: b handle_33
PASS: gdb.base/sigall.exp: b gen_34
PASS: gdb.base/sigall.exp: send signal 33
PASS: gdb.base/sigall.exp: advance to 34
PASS: gdb.base/sigall.exp: handle SIG34 stop print
PASS: gdb.base/sigall.exp: b handle_34
PASS: gdb.base/sigall.exp: b gen_35
PASS: gdb.base/sigall.exp: send signal 34
PASS: gdb.base/sigall.exp: advance to 35
PASS: gdb.base/sigall.exp: handle SIG35 stop print
PASS: gdb.base/sigall.exp: b handle_35
PASS: gdb.base/sigall.exp: b gen_36
PASS: gdb.base/sigall.exp: send signal 35
PASS: gdb.base/sigall.exp: advance to 36
PASS: gdb.base/sigall.exp: handle SIG36 stop print
PASS: gdb.base/sigall.exp: b handle_36
PASS: gdb.base/sigall.exp: b gen_37
PASS: gdb.base/sigall.exp: send signal 36
PASS: gdb.base/sigall.exp: advance to 37
PASS: gdb.base/sigall.exp: handle SIG37 stop print
PASS: gdb.base/sigall.exp: b handle_37
PASS: gdb.base/sigall.exp: b gen_38
PASS: gdb.base/sigall.exp: send signal 37
PASS: gdb.base/sigall.exp: advance to 38
PASS: gdb.base/sigall.exp: handle SIG38 stop print
PASS: gdb.base/sigall.exp: b handle_38
PASS: gdb.base/sigall.exp: b gen_39
PASS: gdb.base/sigall.exp: send signal 38
PASS: gdb.base/sigall.exp: advance to 39
PASS: gdb.base/sigall.exp: handle SIG39 stop print
PASS: gdb.base/sigall.exp: b handle_39
PASS: gdb.base/sigall.exp: b gen_40
PASS: gdb.base/sigall.exp: send signal 39
PASS: gdb.base/sigall.exp: advance to 40
PASS: gdb.base/sigall.exp: handle SIG40 stop print
PASS: gdb.base/sigall.exp: b handle_40
PASS: gdb.base/sigall.exp: b gen_41
PASS: gdb.base/sigall.exp: send signal 40
PASS: gdb.base/sigall.exp: advance to 41
PASS: gdb.base/sigall.exp: handle SIG41 stop print
PASS: gdb.base/sigall.exp: b handle_41
PASS: gdb.base/sigall.exp: b gen_42
PASS: gdb.base/sigall.exp: send signal 41
PASS: gdb.base/sigall.exp: advance to 42
PASS: gdb.base/sigall.exp: handle SIG42 stop print
PASS: gdb.base/sigall.exp: b handle_42
PASS: gdb.base/sigall.exp: b gen_43
PASS: gdb.base/sigall.exp: send signal 42
PASS: gdb.base/sigall.exp: advance to 43
PASS: gdb.base/sigall.exp: handle SIG43 stop print
PASS: gdb.base/sigall.exp: b handle_43
PASS: gdb.base/sigall.exp: b gen_44
PASS: gdb.base/sigall.exp: send signal 43
PASS: gdb.base/sigall.exp: advance to 44
PASS: gdb.base/sigall.exp: handle SIG44 stop print
PASS: gdb.base/sigall.exp: b handle_44
PASS: gdb.base/sigall.exp: b gen_45
PASS: gdb.base/sigall.exp: send signal 44
PASS: gdb.base/sigall.exp: advance to 45
PASS: gdb.base/sigall.exp: handle SIG45 stop print
PASS: gdb.base/sigall.exp: b handle_45
PASS: gdb.base/sigall.exp: b gen_46
PASS: gdb.base/sigall.exp: send signal 45
PASS: gdb.base/sigall.exp: advance to 46
PASS: gdb.base/sigall.exp: handle SIG46 stop print
PASS: gdb.base/sigall.exp: b handle_46
PASS: gdb.base/sigall.exp: b gen_47
PASS: gdb.base/sigall.exp: send signal 46
PASS: gdb.base/sigall.exp: advance to 47
PASS: gdb.base/sigall.exp: handle SIG47 stop print
PASS: gdb.base/sigall.exp: b handle_47
PASS: gdb.base/sigall.exp: b gen_48
PASS: gdb.base/sigall.exp: send signal 47
PASS: gdb.base/sigall.exp: advance to 48
PASS: gdb.base/sigall.exp: handle SIG48 stop print
PASS: gdb.base/sigall.exp: b handle_48
PASS: gdb.base/sigall.exp: b gen_49
PASS: gdb.base/sigall.exp: send signal 48
PASS: gdb.base/sigall.exp: advance to 49
PASS: gdb.base/sigall.exp: handle SIG49 stop print
PASS: gdb.base/sigall.exp: b handle_49
PASS: gdb.base/sigall.exp: b gen_50
PASS: gdb.base/sigall.exp: send signal 49
PASS: gdb.base/sigall.exp: advance to 50
PASS: gdb.base/sigall.exp: handle SIG50 stop print
PASS: gdb.base/sigall.exp: b handle_50
PASS: gdb.base/sigall.exp: b gen_51
PASS: gdb.base/sigall.exp: send signal 50
PASS: gdb.base/sigall.exp: advance to 51
PASS: gdb.base/sigall.exp: handle SIG51 stop print
PASS: gdb.base/sigall.exp: b handle_51
PASS: gdb.base/sigall.exp: b gen_52
PASS: gdb.base/sigall.exp: send signal 51
PASS: gdb.base/sigall.exp: advance to 52
PASS: gdb.base/sigall.exp: handle SIG52 stop print
PASS: gdb.base/sigall.exp: b handle_52
PASS: gdb.base/sigall.exp: b gen_53
PASS: gdb.base/sigall.exp: send signal 52
PASS: gdb.base/sigall.exp: advance to 53
PASS: gdb.base/sigall.exp: handle SIG53 stop print
PASS: gdb.base/sigall.exp: b handle_53
PASS: gdb.base/sigall.exp: b gen_54
PASS: gdb.base/sigall.exp: send signal 53
PASS: gdb.base/sigall.exp: advance to 54
PASS: gdb.base/sigall.exp: handle SIG54 stop print
PASS: gdb.base/sigall.exp: b handle_54
PASS: gdb.base/sigall.exp: b gen_55
PASS: gdb.base/sigall.exp: send signal 54
PASS: gdb.base/sigall.exp: advance to 55
PASS: gdb.base/sigall.exp: handle SIG55 stop print
PASS: gdb.base/sigall.exp: b handle_55
PASS: gdb.base/sigall.exp: b gen_56
PASS: gdb.base/sigall.exp: send signal 55
PASS: gdb.base/sigall.exp: advance to 56
PASS: gdb.base/sigall.exp: handle SIG56 stop print
PASS: gdb.base/sigall.exp: b handle_56
PASS: gdb.base/sigall.exp: b gen_57
PASS: gdb.base/sigall.exp: send signal 56
PASS: gdb.base/sigall.exp: advance to 57
PASS: gdb.base/sigall.exp: handle SIG57 stop print
PASS: gdb.base/sigall.exp: b handle_57
PASS: gdb.base/sigall.exp: b gen_58
PASS: gdb.base/sigall.exp: send signal 57
PASS: gdb.base/sigall.exp: advance to 58
PASS: gdb.base/sigall.exp: handle SIG58 stop print
PASS: gdb.base/sigall.exp: b handle_58
PASS: gdb.base/sigall.exp: b gen_59
PASS: gdb.base/sigall.exp: send signal 58
PASS: gdb.base/sigall.exp: advance to 59
PASS: gdb.base/sigall.exp: handle SIG59 stop print
PASS: gdb.base/sigall.exp: b handle_59
PASS: gdb.base/sigall.exp: b gen_60
PASS: gdb.base/sigall.exp: send signal 59
PASS: gdb.base/sigall.exp: advance to 60
PASS: gdb.base/sigall.exp: handle SIG60 stop print
PASS: gdb.base/sigall.exp: b handle_60
PASS: gdb.base/sigall.exp: b gen_61
PASS: gdb.base/sigall.exp: send signal 60
PASS: gdb.base/sigall.exp: advance to 61
PASS: gdb.base/sigall.exp: handle SIG61 stop print
PASS: gdb.base/sigall.exp: b handle_61
PASS: gdb.base/sigall.exp: b gen_62
PASS: gdb.base/sigall.exp: send signal 61
PASS: gdb.base/sigall.exp: advance to 62
PASS: gdb.base/sigall.exp: handle SIG62 stop print
PASS: gdb.base/sigall.exp: b handle_62
PASS: gdb.base/sigall.exp: b gen_63
PASS: gdb.base/sigall.exp: send signal 62
PASS: gdb.base/sigall.exp: advance to 63
PASS: gdb.base/sigall.exp: handle SIG63 stop print
PASS: gdb.base/sigall.exp: b handle_63
PASS: gdb.base/sigall.exp: b gen_TERM
PASS: gdb.base/sigall.exp: send signal 63
PASS: gdb.base/sigall.exp: advance to TERM
PASS: gdb.base/sigall.exp: handle SIGTERM stop print
PASS: gdb.base/sigall.exp: b handle_TERM
PASS: gdb.base/sigall.exp: get signal TERM
PASS: gdb.base/sigall.exp: send signal TERM
PASS: gdb.base/sigall.exp: continue until exit at continue to sigall exit
Running ../../../master/gdb/testsuite/gdb.base/sigaltstack.exp ...
PASS: gdb.base/sigaltstack.exp: handle SIGALRM print pass nostop
PASS: gdb.base/sigaltstack.exp: handle SIGVTALRM print pass nostop
PASS: gdb.base/sigaltstack.exp: handle SIGPROF print pass nostop
PASS: gdb.base/sigaltstack.exp: break catcher if level == INNER
PASS: gdb.base/sigaltstack.exp: continue to catch
PASS: gdb.base/sigaltstack.exp: next
PASS: gdb.base/sigaltstack.exp: backtrace
PASS: gdb.base/sigaltstack.exp: finish from catch LEAF
PASS: gdb.base/sigaltstack.exp: finish to throw INNER
PASS: gdb.base/sigaltstack.exp: finish to catch INNER
PASS: gdb.base/sigaltstack.exp: finish from catch INNER
PASS: gdb.base/sigaltstack.exp: finish to OUTER
PASS: gdb.base/sigaltstack.exp: finish to catch MAIN
PASS: gdb.base/sigaltstack.exp: finish to MAIN
Running ../../../master/gdb/testsuite/gdb.base/sigbpt.exp ...
PASS: gdb.base/sigbpt.exp: break keeper
PASS: gdb.base/sigbpt.exp: display/i $pc
PASS: gdb.base/sigbpt.exp: advance to the bowler
PASS: gdb.base/sigbpt.exp: stepping to fault
PASS: gdb.base/sigbpt.exp: get insn after fault
PASS: gdb.base/sigbpt.exp: Verify that SIGSEGV occurs at the last STEPI insn
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: stepi; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi; nopass SIGSEGV
KFAIL: gdb.base/sigbpt.exp: stepi; stepi out of handler (corrupt pc) (PRMS: gdb/1702)
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: stepi bp before segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp before segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp before segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp before segv; set breakpoint 0 of 1
KFAIL: gdb.base/sigbpt.exp: stepi bp before segv; stepi out of handler (corrupt pc) (PRMS: gdb/1702)
PASS: gdb.base/sigbpt.exp: stepi bp before segv; clear breakpoint 0 of 1
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: stepi bp at segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp at segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp at segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp at segv; set breakpoint 0 of 1
KFAIL: gdb.base/sigbpt.exp: stepi bp at segv; stepi out of handler (corrupt pc) (PRMS: gdb/1702)
PASS: gdb.base/sigbpt.exp: stepi bp at segv; clear breakpoint 0 of 1
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; continue to keeper
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; set breakpoint 0 of 2
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; set breakpoint 1 of 2
KFAIL: gdb.base/sigbpt.exp: stepi bp before and at segv; stepi out of handler (corrupt pc) (PRMS: gdb/1702)
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; clear breakpoint 0 of 2
PASS: gdb.base/sigbpt.exp: stepi bp before and at segv; clear breakpoint 1 of 2
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: cont; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont; continue to keeper
PASS: gdb.base/sigbpt.exp: cont; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont; set breakpoint 0  of 1
PASS: gdb.base/sigbpt.exp: cont; continue to breakpoint at fault
PASS: gdb.base/sigbpt.exp: cont; stepi fault
PASS: gdb.base/sigbpt.exp: cont; clear breakpoint 0 of 1
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: cont bp after segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont bp after segv; continue to keeper
PASS: gdb.base/sigbpt.exp: cont bp after segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont bp after segv; set breakpoint 0  of 2
PASS: gdb.base/sigbpt.exp: cont bp after segv; set breakpoint 1  of 2
PASS: gdb.base/sigbpt.exp: cont bp after segv; continue to breakpoint at fault
PASS: gdb.base/sigbpt.exp: cont bp after segv; stepi fault
PASS: gdb.base/sigbpt.exp: cont bp after segv; clear breakpoint 0 of 2
PASS: gdb.base/sigbpt.exp: cont bp after segv; clear breakpoint 1 of 2
PASS: gdb.base/sigbpt.exp: rerun to main
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; pass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; continue to keeper
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; nopass SIGSEGV
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 0  of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 1  of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; set breakpoint 2  of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; continue to breakpoint at fault
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; stepi fault
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 0 of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 1 of 3
PASS: gdb.base/sigbpt.exp: cont bp before and after segv; clear breakpoint 2 of 3
Running ../../../master/gdb/testsuite/gdb.base/sigchld.exp ...
PASS: gdb.base/sigchld.exp: set breakpoint at success exit
PASS: gdb.base/sigchld.exp: set breakpoint at failure exit
PASS: gdb.base/sigchld.exp: SIGCHLD blocked in inferior
Running ../../../master/gdb/testsuite/gdb.base/siginfo-addr.exp ...
PASS: gdb.base/siginfo-addr.exp: display/i $pc
PASS: gdb.base/siginfo-addr.exp: continue to signal
PASS: gdb.base/siginfo-addr.exp: si_addr value
Running ../../../master/gdb/testsuite/gdb.base/siginfo-infcall.exp ...
PASS: gdb.base/siginfo-infcall.exp: continue to SIGUSR1
PASS: gdb.base/siginfo-infcall.exp: p callme ()
PASS: gdb.base/siginfo-infcall.exp: continue to the handler
Running ../../../master/gdb/testsuite/gdb.base/siginfo-obj.exp ...
PASS: gdb.base/siginfo-obj.exp: continue to signal
PASS: gdb.base/siginfo-obj.exp: Extract si_addr
PASS: gdb.base/siginfo-obj.exp: Extract si_errno
PASS: gdb.base/siginfo-obj.exp: Extract si_code
PASS: gdb.base/siginfo-obj.exp: Extract si_signo
PASS: gdb.base/siginfo-obj.exp: break 38
PASS: gdb.base/siginfo-obj.exp: continue to handler
PASS: gdb.base/siginfo-obj.exp: p ssi_addr
PASS: gdb.base/siginfo-obj.exp: p ssi_errno
PASS: gdb.base/siginfo-obj.exp: p ssi_code
PASS: gdb.base/siginfo-obj.exp: p ssi_signo
PASS: gdb.base/siginfo-obj.exp: continue to signal
PASS: gdb.base/siginfo-obj.exp: p $_siginfo._sifields._sigfault.si_addr = 0x666
PASS: gdb.base/siginfo-obj.exp: p $_siginfo.si_errno = 666
PASS: gdb.base/siginfo-obj.exp: p $_siginfo.si_code = 999
PASS: gdb.base/siginfo-obj.exp: p $_siginfo.si_signo = 11
PASS: gdb.base/siginfo-obj.exp: break 38
PASS: gdb.base/siginfo-obj.exp: continue to handler
PASS: gdb.base/siginfo-obj.exp: p ssi_addr
PASS: gdb.base/siginfo-obj.exp: p ssi_errno
PASS: gdb.base/siginfo-obj.exp: p ssi_code
PASS: gdb.base/siginfo-obj.exp: p ssi_signo
Running ../../../master/gdb/testsuite/gdb.base/siginfo.exp ...
PASS: gdb.base/siginfo.exp: display/i $pc
PASS: gdb.base/siginfo.exp: break handler
PASS: gdb.base/siginfo.exp: continue to stepi handler
PASS: gdb.base/siginfo.exp: backtrace for nexti
PASS: gdb.base/siginfo.exp: step out of handler
Running ../../../master/gdb/testsuite/gdb.base/signals.exp ...
PASS: gdb.base/signals.exp: handle all print
PASS: gdb.base/signals.exp: set variable count = 0
PASS: gdb.base/signals.exp: break handler if 0
PASS: gdb.base/signals.exp: set $handler_breakpoint_number = $bpnum
PASS: gdb.base/signals.exp: next to signal
PASS: gdb.base/signals.exp: next to alarm #1
PASS: gdb.base/signals.exp: next to ++count #1
PASS: gdb.base/signals.exp: p func1 () #1
PASS: gdb.base/signals.exp: p count #1
PASS: gdb.base/signals.exp: condition $handler_breakpoint_number
PASS: gdb.base/signals.exp: next to alarm #2
PASS: gdb.base/signals.exp: next to ++count #2
PASS: gdb.base/signals.exp: p func1 () #2
PASS: gdb.base/signals.exp: backtrace from handler when calling func1
PASS: gdb.base/signals.exp: continue
PASS: gdb.base/signals.exp: p count #2
PASS: gdb.base/signals.exp: info signals
PASS: gdb.base/signals.exp: info signal SIGTRAP
PASS: gdb.base/signals.exp: info signal 5
PASS: gdb.base/signals.exp: handle without arguments
PASS: gdb.base/signals.exp: handle with bogus SIG
PASS: gdb.base/signals.exp: handle SIG with bogus action
PASS: gdb.base/signals.exp: handle SIG with multiple conflicting actions
PASS: gdb.base/signals.exp: handle SIG parses all legal actions
PASS: gdb.base/signals.exp: handle multiple SIGs
PASS: gdb.base/signals.exp: override SIGTRAP
PASS: gdb.base/signals.exp: invalid signal number rejected
PASS: gdb.base/signals.exp: handle multiple SIGs via integer range
PASS: gdb.base/signals.exp: handle multiple SIGs via reverse integer range
PASS: gdb.base/signals.exp: override SIGINT
PASS: gdb.base/signals.exp: signal without arguments disallowed
PASS: gdb.base/signals.exp: signal SIGUSR1
PASS: gdb.base/signals.exp: backtrace for SIGUSR1
Running ../../../master/gdb/testsuite/gdb.base/signest.exp ...
PASS: gdb.base/signest.exp: continue to fault
PASS: gdb.base/signest.exp: set conditional breakpoint
PASS: gdb.base/signest.exp: pass SIGSEGV
PASS: gdb.base/signest.exp: pass SIGBUS
PASS: gdb.base/signest.exp: run through nested faults
Running ../../../master/gdb/testsuite/gdb.base/signull.exp ...
PASS: gdb.base/signull.exp: set for function pointer probe
PASS: gdb.base/signull.exp: probe function pointer (function entry-point)
PASS: gdb.base/signull.exp: rerun to main
PASS: gdb.base/signull.exp: break bowler
PASS: gdb.base/signull.exp: break keeper
PASS: gdb.base/signull.exp: handle SIGSEGV
PASS: gdb.base/signull.exp: handle SIGBUS
PASS: gdb.base/signull.exp: data read; start with the bowler
PASS: gdb.base/signull.exp: data read; select the pointer type
PASS: gdb.base/signull.exp: data read; take the SIGSEGV
PASS: gdb.base/signull.exp: data read; backtrace from SIGSEGV
PASS: gdb.base/signull.exp: data read; continue to the keeper
PASS: gdb.base/signull.exp: data read; backtrace from keeper through SIGSEGV
PASS: gdb.base/signull.exp: data write; start with the bowler
PASS: gdb.base/signull.exp: data write; select the pointer type
PASS: gdb.base/signull.exp: data write; take the SIGSEGV
PASS: gdb.base/signull.exp: data write; backtrace from SIGSEGV
PASS: gdb.base/signull.exp: data write; continue to the keeper
PASS: gdb.base/signull.exp: data write; backtrace from keeper through SIGSEGV
PASS: gdb.base/signull.exp: code; start with the bowler
PASS: gdb.base/signull.exp: code; select the pointer type
PASS: gdb.base/signull.exp: code; take the SIGSEGV
PASS: gdb.base/signull.exp: code; backtrace from SIGSEGV
PASS: gdb.base/signull.exp: code; continue to the keeper
PASS: gdb.base/signull.exp: code; backtrace from keeper through SIGSEGV
Running ../../../master/gdb/testsuite/gdb.base/sigrepeat.exp ...
PASS: gdb.base/sigrepeat.exp: advance to infinite loop
PASS: gdb.base/sigrepeat.exp: next
Running ../../../master/gdb/testsuite/gdb.base/sigstep.exp ...
PASS: gdb.base/sigstep.exp: display/i $pc
PASS: gdb.base/sigstep.exp: break handler
PASS: gdb.base/sigstep.exp: continue to stepi handler
PASS: gdb.base/sigstep.exp: backtrace for nexti
PASS: gdb.base/sigstep.exp: step from handler; continue to handler
PASS: gdb.base/sigstep.exp: step from handler; leave handler
PASS: gdb.base/sigstep.exp: stepi from handleri; continue to handler
PASS: gdb.base/sigstep.exp: stepi from handleri; leave handler
PASS: gdb.base/sigstep.exp: stepi from handleri; leave signal trampoline (in main)
PASS: gdb.base/sigstep.exp: next from handler; continue to handler
PASS: gdb.base/sigstep.exp: next from handler; leave handler
PASS: gdb.base/sigstep.exp: nexti from handleri; continue to handler
PASS: gdb.base/sigstep.exp: nexti from handleri; leave handler
PASS: gdb.base/sigstep.exp: nexti from handleri; leave signal trampoline (in main)
PASS: gdb.base/sigstep.exp: finish from handleri; continue to handler
PASS: gdb.base/sigstep.exp: finish from handleri; leave handler
PASS: gdb.base/sigstep.exp: finish from handleri; leave signal trampoline (in main)
PASS: gdb.base/sigstep.exp: return from handleri; continue to handler
PASS: gdb.base/sigstep.exp: return from handleri; leave handler
PASS: gdb.base/sigstep.exp: return from handleri; leave signal trampoline (in main)
PASS: gdb.base/sigstep.exp: Set done as return will have skipped it
PASS: gdb.base/sigstep.exp: set itimer = itimer_real
PASS: gdb.base/sigstep.exp: break 79
PASS: gdb.base/sigstep.exp: step to handler; resync
PASS: gdb.base/sigstep.exp: step to handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: step to handler; break handler
PASS: gdb.base/sigstep.exp: step to handler; performing step
PASS: gdb.base/sigstep.exp: step to handler; clear handler
PASS: gdb.base/sigstep.exp: next to handler; resync
PASS: gdb.base/sigstep.exp: next to handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: next to handler; break handler
PASS: gdb.base/sigstep.exp: next to handler; performing next
PASS: gdb.base/sigstep.exp: next to handler; clear handler
PASS: gdb.base/sigstep.exp: continue to handler; resync
PASS: gdb.base/sigstep.exp: continue to handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: continue to handler; break handler
PASS: gdb.base/sigstep.exp: continue to handler; performing continue
PASS: gdb.base/sigstep.exp: continue to handler; clear handler
PASS: gdb.base/sigstep.exp: step to handler entry; resync
PASS: gdb.base/sigstep.exp: step to handler entry; advance to infinite loop
PASS: gdb.base/sigstep.exp: step to handler entry; break handler
PASS: gdb.base/sigstep.exp: step to handler entry; performing step
PASS: gdb.base/sigstep.exp: step to handler entry; clear handler
PASS: gdb.base/sigstep.exp: next to handler entry; resync
PASS: gdb.base/sigstep.exp: next to handler entry; advance to infinite loop
PASS: gdb.base/sigstep.exp: next to handler entry; break handler
PASS: gdb.base/sigstep.exp: next to handler entry; performing next
PASS: gdb.base/sigstep.exp: next to handler entry; clear handler
PASS: gdb.base/sigstep.exp: continue to handler entry; resync
PASS: gdb.base/sigstep.exp: continue to handler entry; advance to infinite loop
PASS: gdb.base/sigstep.exp: continue to handler entry; break handler
PASS: gdb.base/sigstep.exp: continue to handler entry; performing continue
PASS: gdb.base/sigstep.exp: continue to handler entry; clear handler
PASS: gdb.base/sigstep.exp: step over handler; resync
PASS: gdb.base/sigstep.exp: step over handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: step over handler; performing step
PASS: gdb.base/sigstep.exp: next over handler; resync
PASS: gdb.base/sigstep.exp: next over handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: next over handler; performing next
PASS: gdb.base/sigstep.exp: continue over handler; resync
PASS: gdb.base/sigstep.exp: continue over handler; advance to infinite loop
PASS: gdb.base/sigstep.exp: continue over handler; performing continue
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; resync
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; break infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; break handler
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; continue to infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; performing step
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; clear infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler; clear handler
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; resync
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; break infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; break handler
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; continue to infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; performing next
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; clear infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler; clear handler
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; resync
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; break infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; break handler
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; continue to infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; performing continue
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; clear infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler; clear handler
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; resync
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; break infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; break handler
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; continue to infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; performing step
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; clear infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, to handler entry; clear handler
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; resync
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; break infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; break handler
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; continue to infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; performing next
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; clear infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, to handler entry; clear handler
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; resync
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; break infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; break handler
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; continue to infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; performing continue
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; clear infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, to handler entry; clear handler
PASS: gdb.base/sigstep.exp: step on breakpoint, skip handler; resync
PASS: gdb.base/sigstep.exp: step on breakpoint, skip handler; break infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, skip handler; continue to infinite loop
PASS: gdb.base/sigstep.exp: step on breakpoint, skip handler; performing step
PASS: gdb.base/sigstep.exp: step on breakpoint, skip handler; clear infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, skip handler; resync
PASS: gdb.base/sigstep.exp: next on breakpoint, skip handler; break infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, skip handler; continue to infinite loop
PASS: gdb.base/sigstep.exp: next on breakpoint, skip handler; performing next
PASS: gdb.base/sigstep.exp: next on breakpoint, skip handler; clear infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, skip handler; resync
PASS: gdb.base/sigstep.exp: continue on breakpoint, skip handler; break infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, skip handler; continue to infinite loop
PASS: gdb.base/sigstep.exp: continue on breakpoint, skip handler; performing continue
PASS: gdb.base/sigstep.exp: continue on breakpoint, skip handler; clear infinite loop
Running ../../../master/gdb/testsuite/gdb.base/sizeof.exp ...
PASS: gdb.base/sizeof.exp: next
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (char)" (1)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (short)" (2)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (int)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long long)" (8)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (void *)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (void (*)(void))" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (float)" (4)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (double)" (8)
PASS: gdb.base/sizeof.exp: get integer valueof "sizeof (long double)" (12)
PASS: gdb.base/sizeof.exp: check sizeof "char"
PASS: gdb.base/sizeof.exp: check sizeof "short"
PASS: gdb.base/sizeof.exp: check sizeof "int"
PASS: gdb.base/sizeof.exp: check sizeof "long"
PASS: gdb.base/sizeof.exp: check sizeof "long long"
PASS: gdb.base/sizeof.exp: check sizeof "void *"
PASS: gdb.base/sizeof.exp: check sizeof "void (*)(void)"
PASS: gdb.base/sizeof.exp: check sizeof "float"
PASS: gdb.base/sizeof.exp: check sizeof "double"
PASS: gdb.base/sizeof.exp: check sizeof "long double"
PASS: gdb.base/sizeof.exp: get integer valueof "'\377'" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (char) -1" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (signed char) -1" (-1)
PASS: gdb.base/sizeof.exp: get integer valueof "(int) (unsigned char) -1" (255)
PASS: gdb.base/sizeof.exp: check valueof "'\377'"
PASS: gdb.base/sizeof.exp: check valueof "(int) (char) -1"
PASS: gdb.base/sizeof.exp: check valueof "(int) (signed char) -1"
PASS: gdb.base/sizeof.exp: check valueof "(int) (unsigned char) -1"
PASS: gdb.base/sizeof.exp: set padding_char.v = 1
PASS: gdb.base/sizeof.exp: print padding_char.p1
PASS: gdb.base/sizeof.exp: print/d padding_char.v
PASS: gdb.base/sizeof.exp: print padding_char.p2
PASS: gdb.base/sizeof.exp: set padding_short.v = 2
PASS: gdb.base/sizeof.exp: print padding_short.p1
PASS: gdb.base/sizeof.exp: print/d padding_short.v
PASS: gdb.base/sizeof.exp: print padding_short.p2
PASS: gdb.base/sizeof.exp: set padding_int.v = 4
PASS: gdb.base/sizeof.exp: print padding_int.p1
PASS: gdb.base/sizeof.exp: print/d padding_int.v
PASS: gdb.base/sizeof.exp: print padding_int.p2
PASS: gdb.base/sizeof.exp: set padding_long.v = 4
PASS: gdb.base/sizeof.exp: print padding_long.p1
PASS: gdb.base/sizeof.exp: print/d padding_long.v
PASS: gdb.base/sizeof.exp: print padding_long.p2
PASS: gdb.base/sizeof.exp: set padding_long_long.v = 8
PASS: gdb.base/sizeof.exp: print padding_long_long.p1
PASS: gdb.base/sizeof.exp: print/d padding_long_long.v
PASS: gdb.base/sizeof.exp: print padding_long_long.p2
PASS: gdb.base/sizeof.exp: set padding_float.v = 1
PASS: gdb.base/sizeof.exp: print padding_float.p1
PASS: gdb.base/sizeof.exp: print/f padding_float.v
PASS: gdb.base/sizeof.exp: print padding_float.p2
PASS: gdb.base/sizeof.exp: set padding_double.v = 2
PASS: gdb.base/sizeof.exp: print padding_double.p1
PASS: gdb.base/sizeof.exp: print/f padding_double.v
PASS: gdb.base/sizeof.exp: print padding_double.p2
PASS: gdb.base/sizeof.exp: set padding_long_double.v = 4
PASS: gdb.base/sizeof.exp: print padding_long_double.p1
PASS: gdb.base/sizeof.exp: print/f padding_long_double.v
PASS: gdb.base/sizeof.exp: print padding_long_double.p2
PASS: gdb.base/sizeof.exp: maint print arch
Running ../../../master/gdb/testsuite/gdb.base/so-impl-ld.exp ...
PASS: gdb.base/so-impl-ld.exp: step over solib call
PASS: gdb.base/so-impl-ld.exp: step into solib call
PASS: gdb.base/so-impl-ld.exp: step in solib call
PASS: gdb.base/so-impl-ld.exp: step out of solib call
Running ../../../master/gdb/testsuite/gdb.base/so-indr-cl.exp ...
Running ../../../master/gdb/testsuite/gdb.base/solib-corrupted.exp ...
PASS: gdb.base/solib-corrupted.exp: normal list
XFAIL: gdb.base/solib-corrupted.exp: make solibs looping
UNTESTED: gdb.base/solib-corrupted.exp: solib-corrupted.exp
Running ../../../master/gdb/testsuite/gdb.base/solib-disc.exp ...
Running ../../../master/gdb/testsuite/gdb.base/solib-display.exp ...
PASS: gdb.base/solib-display.exp: NO: display a_global
PASS: gdb.base/solib-display.exp: NO: display b_global
PASS: gdb.base/solib-display.exp: NO: display c_global
PASS: gdb.base/solib-display.exp: NO: after rerun
PASS: gdb.base/solib-display.exp: NO: after rerun (2)
PASS: gdb.base/solib-display.exp: NO: break 25
PASS: gdb.base/solib-display.exp: NO: continue
PASS: gdb.base/solib-display.exp: NO: display main_global
PASS: gdb.base/solib-display.exp: NO: display a_local
PASS: gdb.base/solib-display.exp: NO: display a_static
PASS: gdb.base/solib-display.exp: NO: break 25
PASS: gdb.base/solib-display.exp: NO: continue
PASS: gdb.base/solib-display.exp: IN: display a_global
PASS: gdb.base/solib-display.exp: IN: display b_global
PASS: gdb.base/solib-display.exp: IN: display c_global
PASS: gdb.base/solib-display.exp: IN: after rerun
PASS: gdb.base/solib-display.exp: IN: after rerun (2)
PASS: gdb.base/solib-display.exp: IN: break 25
PASS: gdb.base/solib-display.exp: IN: continue
PASS: gdb.base/solib-display.exp: IN: display main_global
PASS: gdb.base/solib-display.exp: IN: display a_local
PASS: gdb.base/solib-display.exp: IN: display a_static
PASS: gdb.base/solib-display.exp: IN: break 25
PASS: gdb.base/solib-display.exp: IN: continue
PASS: gdb.base/solib-display.exp: SEP: split solib
PASS: gdb.base/solib-display.exp: SEP: display a_global
PASS: gdb.base/solib-display.exp: SEP: display b_global
PASS: gdb.base/solib-display.exp: SEP: display c_global
PASS: gdb.base/solib-display.exp: SEP: after rerun
PASS: gdb.base/solib-display.exp: SEP: split solib second time
PASS: gdb.base/solib-display.exp: SEP: after rerun (2)
PASS: gdb.base/solib-display.exp: SEP: break 25
PASS: gdb.base/solib-display.exp: SEP: continue
PASS: gdb.base/solib-display.exp: SEP: display main_global
PASS: gdb.base/solib-display.exp: SEP: display a_local
PASS: gdb.base/solib-display.exp: SEP: display a_static
PASS: gdb.base/solib-display.exp: SEP: break 25
PASS: gdb.base/solib-display.exp: SEP: continue
Running ../../../master/gdb/testsuite/gdb.base/solib-nodir.exp ...
PASS: gdb.base/solib-nodir.exp: set env LD_LIBRARY_PATH=:
PASS: gdb.base/solib-nodir.exp: cd OBJDIR/gdb.base
PASS: gdb.base/solib-nodir.exp: library loaded
Running ../../../master/gdb/testsuite/gdb.base/solib-overlap.exp ...
UNTESTED: gdb.base/solib-overlap.exp: 0x40000000: Could not prelink OBJDIR/gdb.base/solib-overlap-lib1-0x40000000.so or OBJDIR/gdb.base/solib-overlap-lib2-0x40000000.so.
Running ../../../master/gdb/testsuite/gdb.base/solib-symbol.exp ...
PASS: gdb.base/solib-symbol.exp: foo2 in main
PASS: gdb.base/solib-symbol.exp: foo in libmd
PASS: gdb.base/solib-symbol.exp: continue
PASS: gdb.base/solib-symbol.exp: foo2 in mdlib
Running ../../../master/gdb/testsuite/gdb.base/solib-weak.exp ...
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 nodebug, lib2 nodebug, lib1 first
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 nodebug, lib2 nodebug, lib2 first
KFAIL: gdb.base/solib-weak.exp: run to breakpoint - lib1 nodebug, lib2 debug, lib1 first (the program exited) (PRMS: gdb/1824)
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 nodebug, lib2 debug, lib2 first
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 debug, lib2 nodebug, lib1 first
KFAIL: gdb.base/solib-weak.exp: run to breakpoint - lib1 debug, lib2 nodebug, lib2 first (the program exited) (PRMS: gdb/1824)
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 debug, lib2 debug, lib1 first
PASS: gdb.base/solib-weak.exp: run to breakpoint - lib1 debug, lib2 debug, lib2 first
Running ../../../master/gdb/testsuite/gdb.base/solib.exp ...
Running ../../../master/gdb/testsuite/gdb.base/source.exp ...
PASS: gdb.base/source.exp: script contains error
PASS: gdb.base/source.exp: source -v
PASS: gdb.base/source.exp: source after -v
PASS: gdb.base/source.exp: dir ../../../master/gdb/testsuite/gdb.base
PASS: gdb.base/source.exp: source -s
PASS: gdb.base/source.exp: source -s -v
PASS: gdb.base/source.exp: source -v -s
Running ../../../master/gdb/testsuite/gdb.base/stack-checking.exp ...
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for small frame
PASS: gdb.base/stack-checking.exp: bt
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for medium frame
PASS: gdb.base/stack-checking.exp: bt
PASS: gdb.base/stack-checking.exp: continue to breakpoint: breakpoint for big frame
PASS: gdb.base/stack-checking.exp: bt
Running ../../../master/gdb/testsuite/gdb.base/start.exp ...
PASS: gdb.base/start.exp: start
Running ../../../master/gdb/testsuite/gdb.base/step-break.exp ...
PASS: gdb.base/step-break.exp: breakpoint line number
PASS: gdb.base/step-break.exp: run until breakpoint set at a line number
PASS: gdb.base/step-break.exp: next 2 (1)
PASS: gdb.base/step-break.exp: next 2 (2)
PASS: gdb.base/step-break.exp: next 2 (3)
PASS: gdb.base/step-break.exp: next 2 (4)
PASS: gdb.base/step-break.exp: next 2 (5)
PASS: gdb.base/step-break.exp: next 2 (6)
Running ../../../master/gdb/testsuite/gdb.base/step-bt.exp ...
PASS: gdb.base/step-bt.exp: breakpoint at first instruction of hello()
PASS: gdb.base/step-bt.exp: run to hello()
PASS: gdb.base/step-bt.exp: step first instruction
PASS: gdb.base/step-bt.exp: backtrace after first instruction step
PASS: gdb.base/step-bt.exp: step second instruction
PASS: gdb.base/step-bt.exp: backtrace after second instruction step
Running ../../../master/gdb/testsuite/gdb.base/step-line.exp ...
PASS: gdb.base/step-line.exp: break f1
PASS: gdb.base/step-line.exp: continue to f1
PASS: gdb.base/step-line.exp: next over dummy 1
PASS: gdb.base/step-line.exp: next to dummy 2
PASS: gdb.base/step-line.exp: next over dummy 2
PASS: gdb.base/step-line.exp: step into f2
PASS: gdb.base/step-line.exp: next over dummy 4
PASS: gdb.base/step-line.exp: next to dummy 5
PASS: gdb.base/step-line.exp: next to dummy 6
PASS: gdb.base/step-line.exp: next over dummy 6
PASS: gdb.base/step-line.exp: next to dummy 7
PASS: gdb.base/step-line.exp: next to dummy 8
PASS: gdb.base/step-line.exp: next over dummy 8
PASS: gdb.base/step-line.exp: next to dummy 9
PASS: gdb.base/step-line.exp: next to dummy 10
PASS: gdb.base/step-line.exp: next over dummy 10
Running ../../../master/gdb/testsuite/gdb.base/step-resume-infcall.exp ...
PASS: gdb.base/step-resume-infcall.exp: step
PASS: gdb.base/step-resume-infcall.exp: up
PASS: gdb.base/step-resume-infcall.exp: set $b=$pc
PASS: gdb.base/step-resume-infcall.exp: print $bpnum
PASS: gdb.base/step-resume-infcall.exp: disass/m
PASS: gdb.base/step-resume-infcall.exp: info breakpoints
PASS: gdb.base/step-resume-infcall.exp: next
PASS: gdb.base/step-resume-infcall.exp: p cond_hit
Running ../../../master/gdb/testsuite/gdb.base/step-test.exp ...
PASS: gdb.base/step-test.exp: next 1
PASS: gdb.base/step-test.exp: step 1
PASS: gdb.base/step-test.exp: next 2
PASS: gdb.base/step-test.exp: step 3
PASS: gdb.base/step-test.exp: next 3
PASS: gdb.base/step-test.exp: next over
PASS: gdb.base/step-test.exp: step into
PASS: gdb.base/step-test.exp: step out
PASS: gdb.base/step-test.exp: stepi to next line
PASS: gdb.base/step-test.exp: stepi into function
PASS: gdb.base/step-test.exp: stepi into function's first source line
PASS: gdb.base/step-test.exp: stepi: finish call
PASS: gdb.base/step-test.exp: nexti over function
PASS: gdb.base/step-test.exp: set breakpoint at call to large_struct_by_value
PASS: gdb.base/step-test.exp: run to pass large struct
PASS: gdb.base/step-test.exp: large struct by value
PASS: gdb.base/step-test.exp: continue until exit at step-test.exp
Running ../../../master/gdb/testsuite/gdb.base/store.exp ...
PASS: gdb.base/store.exp: tbreak wack_charest
PASS: gdb.base/store.exp: continue to wack_charest
PASS: gdb.base/store.exp: var charest l; next charest
PASS: gdb.base/store.exp: var charest l; print old l, expecting -1 .*
PASS: gdb.base/store.exp: var charest l; print old r, expecting -2 .*
PASS: gdb.base/store.exp: var charest l; setting l to 4
PASS: gdb.base/store.exp: var charest l; print new l, expecting 4 ..004.
PASS: gdb.base/store.exp: var charest l; next over add call
PASS: gdb.base/store.exp: var charest l; print incremented l, expecting 2 ..002.
PASS: gdb.base/store.exp: tbreak wack_short
PASS: gdb.base/store.exp: continue to wack_short
PASS: gdb.base/store.exp: var short l; next short
PASS: gdb.base/store.exp: var short l; print old l, expecting -1
PASS: gdb.base/store.exp: var short l; print old r, expecting -2
PASS: gdb.base/store.exp: var short l; setting l to 4
PASS: gdb.base/store.exp: var short l; print new l, expecting 4
PASS: gdb.base/store.exp: var short l; next over add call
PASS: gdb.base/store.exp: var short l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_int
PASS: gdb.base/store.exp: continue to wack_int
PASS: gdb.base/store.exp: var int l; next int
PASS: gdb.base/store.exp: var int l; print old l, expecting -1
PASS: gdb.base/store.exp: var int l; print old r, expecting -2
PASS: gdb.base/store.exp: var int l; setting l to 4
PASS: gdb.base/store.exp: var int l; print new l, expecting 4
PASS: gdb.base/store.exp: var int l; next over add call
PASS: gdb.base/store.exp: var int l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_long
PASS: gdb.base/store.exp: continue to wack_long
PASS: gdb.base/store.exp: var long l; next long
PASS: gdb.base/store.exp: var long l; print old l, expecting -1
PASS: gdb.base/store.exp: var long l; print old r, expecting -2
PASS: gdb.base/store.exp: var long l; setting l to 4
PASS: gdb.base/store.exp: var long l; print new l, expecting 4
PASS: gdb.base/store.exp: var long l; next over add call
PASS: gdb.base/store.exp: var long l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_longest
PASS: gdb.base/store.exp: continue to wack_longest
PASS: gdb.base/store.exp: var longest l; next longest
PASS: gdb.base/store.exp: var longest l; print old l, expecting -1
PASS: gdb.base/store.exp: var longest l; print old r, expecting -2
PASS: gdb.base/store.exp: var longest l; setting l to 4
PASS: gdb.base/store.exp: var longest l; print new l, expecting 4
PASS: gdb.base/store.exp: var longest l; next over add call
PASS: gdb.base/store.exp: var longest l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_float
PASS: gdb.base/store.exp: continue to wack_float
PASS: gdb.base/store.exp: var float l; next float
PASS: gdb.base/store.exp: var float l; print old l, expecting -1
PASS: gdb.base/store.exp: var float l; print old r, expecting -2
PASS: gdb.base/store.exp: var float l; setting l to 4
PASS: gdb.base/store.exp: var float l; print new l, expecting 4
PASS: gdb.base/store.exp: var float l; next over add call
PASS: gdb.base/store.exp: var float l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_double
PASS: gdb.base/store.exp: continue to wack_double
PASS: gdb.base/store.exp: var double l; next double
PASS: gdb.base/store.exp: var double l; print old l, expecting -1
PASS: gdb.base/store.exp: var double l; print old r, expecting -2
PASS: gdb.base/store.exp: var double l; setting l to 4
PASS: gdb.base/store.exp: var double l; print new l, expecting 4
PASS: gdb.base/store.exp: var double l; next over add call
PASS: gdb.base/store.exp: var double l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak wack_doublest
PASS: gdb.base/store.exp: continue to wack_doublest
PASS: gdb.base/store.exp: var doublest l; next doublest
PASS: gdb.base/store.exp: var doublest l; print old l, expecting -1
PASS: gdb.base/store.exp: var doublest l; print old r, expecting -2
PASS: gdb.base/store.exp: var doublest l; setting l to 4
PASS: gdb.base/store.exp: var doublest l; print new l, expecting 4
PASS: gdb.base/store.exp: var doublest l; next over add call
PASS: gdb.base/store.exp: var doublest l; print incremented l, expecting 2
PASS: gdb.base/store.exp: tbreak add_charest
PASS: gdb.base/store.exp: continue to add_charest
PASS: gdb.base/store.exp: upvar charest l; up
PASS: gdb.base/store.exp: upvar charest l; print old l, expecting -1 .*
PASS: gdb.base/store.exp: upvar charest l; print old r, expecting -2 .*
PASS: gdb.base/store.exp: upvar charest l; set l to 4
PASS: gdb.base/store.exp: upvar charest l; print new l, expecting 4 ..004.
PASS: gdb.base/store.exp: tbreak add_short
PASS: gdb.base/store.exp: continue to add_short
PASS: gdb.base/store.exp: upvar short l; up
PASS: gdb.base/store.exp: upvar short l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar short l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar short l; set l to 4
PASS: gdb.base/store.exp: upvar short l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_int
PASS: gdb.base/store.exp: continue to add_int
PASS: gdb.base/store.exp: upvar int l; up
PASS: gdb.base/store.exp: upvar int l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar int l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar int l; set l to 4
PASS: gdb.base/store.exp: upvar int l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_long
PASS: gdb.base/store.exp: continue to add_long
PASS: gdb.base/store.exp: upvar long l; up
PASS: gdb.base/store.exp: upvar long l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar long l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar long l; set l to 4
PASS: gdb.base/store.exp: upvar long l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_longest
PASS: gdb.base/store.exp: continue to add_longest
PASS: gdb.base/store.exp: upvar longest l; up
PASS: gdb.base/store.exp: upvar longest l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar longest l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar longest l; set l to 4
PASS: gdb.base/store.exp: upvar longest l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_float
PASS: gdb.base/store.exp: continue to add_float
PASS: gdb.base/store.exp: upvar float l; up
PASS: gdb.base/store.exp: upvar float l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar float l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar float l; set l to 4
PASS: gdb.base/store.exp: upvar float l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_double
PASS: gdb.base/store.exp: continue to add_double
PASS: gdb.base/store.exp: upvar double l; up
PASS: gdb.base/store.exp: upvar double l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar double l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar double l; set l to 4
PASS: gdb.base/store.exp: upvar double l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak add_doublest
PASS: gdb.base/store.exp: continue to add_doublest
PASS: gdb.base/store.exp: upvar doublest l; up
PASS: gdb.base/store.exp: upvar doublest l; print old l, expecting -1
PASS: gdb.base/store.exp: upvar doublest l; print old r, expecting -2
PASS: gdb.base/store.exp: upvar doublest l; set l to 4
PASS: gdb.base/store.exp: upvar doublest l; print new l, expecting 4
PASS: gdb.base/store.exp: tbreak wack_struct_1
PASS: gdb.base/store.exp: continue to wack_struct_1
PASS: gdb.base/store.exp: var struct 1 u; next to add_struct_1 call
PASS: gdb.base/store.exp: var struct 1 u; print old u, expecting {s = \{0}}
PASS: gdb.base/store.exp: var struct 1 u; set u to s_1
PASS: gdb.base/store.exp: var struct 1 u; print new u, expecting {s = \{1}}
PASS: gdb.base/store.exp: tbreak wack_struct_2
PASS: gdb.base/store.exp: continue to wack_struct_2
PASS: gdb.base/store.exp: var struct 2 u; next to add_struct_2 call
PASS: gdb.base/store.exp: var struct 2 u; print old u, expecting {s = \{0, 0}}
PASS: gdb.base/store.exp: var struct 2 u; set u to s_2
PASS: gdb.base/store.exp: var struct 2 u; print new u, expecting {s = \{1, 2}}
PASS: gdb.base/store.exp: tbreak wack_struct_3
PASS: gdb.base/store.exp: continue to wack_struct_3
PASS: gdb.base/store.exp: var struct 3 u; next to add_struct_3 call
PASS: gdb.base/store.exp: var struct 3 u; print old u, expecting {s = \{0, 0, 0}}
PASS: gdb.base/store.exp: var struct 3 u; set u to s_3
PASS: gdb.base/store.exp: var struct 3 u; print new u, expecting {s = \{1, 2, 3}}
PASS: gdb.base/store.exp: tbreak wack_struct_4
PASS: gdb.base/store.exp: continue to wack_struct_4
PASS: gdb.base/store.exp: var struct 4 u; next to add_struct_4 call
PASS: gdb.base/store.exp: var struct 4 u; print old u, expecting {s = \{0, 0, 0, 0}}
PASS: gdb.base/store.exp: var struct 4 u; set u to s_4
PASS: gdb.base/store.exp: var struct 4 u; print new u, expecting {s = \{1, 2, 3, 4}}
PASS: gdb.base/store.exp: tbreak add_struct_1
PASS: gdb.base/store.exp: continue to add_struct_1
PASS: gdb.base/store.exp: up struct 1 u; up
PASS: gdb.base/store.exp: up struct 1 u; print old u, expecting {s = \{0}}
PASS: gdb.base/store.exp: up struct 1 u; set u to s_1
PASS: gdb.base/store.exp: up struct 1 u; print new u, expecting {s = \{1}}
PASS: gdb.base/store.exp: tbreak add_struct_2
PASS: gdb.base/store.exp: continue to add_struct_2
PASS: gdb.base/store.exp: up struct 2 u; up
PASS: gdb.base/store.exp: up struct 2 u; print old u, expecting {s = \{0, 0}}
PASS: gdb.base/store.exp: up struct 2 u; set u to s_2
PASS: gdb.base/store.exp: up struct 2 u; print new u, expecting {s = \{1, 2}}
PASS: gdb.base/store.exp: tbreak add_struct_3
PASS: gdb.base/store.exp: continue to add_struct_3
PASS: gdb.base/store.exp: up struct 3 u; up
PASS: gdb.base/store.exp: up struct 3 u; print old u, expecting {s = \{0, 0, 0}}
PASS: gdb.base/store.exp: up struct 3 u; set u to s_3
PASS: gdb.base/store.exp: up struct 3 u; print new u, expecting {s = \{1, 2, 3}}
PASS: gdb.base/store.exp: tbreak add_struct_4
PASS: gdb.base/store.exp: continue to add_struct_4
PASS: gdb.base/store.exp: up struct 4 u; up
PASS: gdb.base/store.exp: up struct 4 u; print old u, expecting {s = \{0, 0, 0, 0}}
PASS: gdb.base/store.exp: up struct 4 u; set u to s_4
PASS: gdb.base/store.exp: up struct 4 u; print new u, expecting {s = \{1, 2, 3, 4}}
PASS: gdb.base/store.exp: tbreak wack_field_1
PASS: gdb.base/store.exp: continue field 1
PASS: gdb.base/store.exp: next field 1
PASS: gdb.base/store.exp: old field 1
PASS: gdb.base/store.exp: set variable u = F_1
PASS: gdb.base/store.exp: new field 1
PASS: gdb.base/store.exp: set variable u = F_1, u.i = f_1.i
PASS: gdb.base/store.exp: f_1.i
PASS: gdb.base/store.exp: set variable u = F_1, u.j = f_1.j
PASS: gdb.base/store.exp: f_1.j
PASS: gdb.base/store.exp: set variable u = F_1, u.k = f_1.k
PASS: gdb.base/store.exp: f_1.k
PASS: gdb.base/store.exp: set variable u = f_1, u.i = F_1.i
PASS: gdb.base/store.exp: F_1.i
PASS: gdb.base/store.exp: set variable u = f_1, u.j = F_1.j
PASS: gdb.base/store.exp: F_1.j
PASS: gdb.base/store.exp: set variable u = f_1, u.k = F_1.k
PASS: gdb.base/store.exp: F_1.k
PASS: gdb.base/store.exp: tbreak wack_field_2
PASS: gdb.base/store.exp: continue field 2
PASS: gdb.base/store.exp: next field 2
PASS: gdb.base/store.exp: old field 2
PASS: gdb.base/store.exp: set variable u = F_2
PASS: gdb.base/store.exp: new field 2
PASS: gdb.base/store.exp: set variable u = F_2, u.i = f_2.i
PASS: gdb.base/store.exp: f_2.i
PASS: gdb.base/store.exp: set variable u = F_2, u.j = f_2.j
PASS: gdb.base/store.exp: f_2.j
PASS: gdb.base/store.exp: set variable u = F_2, u.k = f_2.k
PASS: gdb.base/store.exp: f_2.k
PASS: gdb.base/store.exp: set variable u = f_2, u.i = F_2.i
PASS: gdb.base/store.exp: F_2.i
PASS: gdb.base/store.exp: set variable u = f_2, u.j = F_2.j
PASS: gdb.base/store.exp: F_2.j
PASS: gdb.base/store.exp: set variable u = f_2, u.k = F_2.k
PASS: gdb.base/store.exp: F_2.k
PASS: gdb.base/store.exp: tbreak wack_field_3
PASS: gdb.base/store.exp: continue field 3
PASS: gdb.base/store.exp: next field 3
PASS: gdb.base/store.exp: old field 3
PASS: gdb.base/store.exp: set variable u = F_3
PASS: gdb.base/store.exp: new field 3
PASS: gdb.base/store.exp: set variable u = F_3, u.i = f_3.i
PASS: gdb.base/store.exp: f_3.i
PASS: gdb.base/store.exp: set variable u = F_3, u.j = f_3.j
PASS: gdb.base/store.exp: f_3.j
PASS: gdb.base/store.exp: set variable u = F_3, u.k = f_3.k
PASS: gdb.base/store.exp: f_3.k
PASS: gdb.base/store.exp: set variable u = f_3, u.i = F_3.i
PASS: gdb.base/store.exp: F_3.i
PASS: gdb.base/store.exp: set variable u = f_3, u.j = F_3.j
PASS: gdb.base/store.exp: F_3.j
PASS: gdb.base/store.exp: set variable u = f_3, u.k = F_3.k
PASS: gdb.base/store.exp: F_3.k
PASS: gdb.base/store.exp: tbreak wack_field_4
PASS: gdb.base/store.exp: continue field 4
PASS: gdb.base/store.exp: next field 4
PASS: gdb.base/store.exp: old field 4
PASS: gdb.base/store.exp: set variable u = F_4
PASS: gdb.base/store.exp: new field 4
PASS: gdb.base/store.exp: set variable u = F_4, u.i = f_4.i
PASS: gdb.base/store.exp: f_4.i
PASS: gdb.base/store.exp: set variable u = F_4, u.j = f_4.j
PASS: gdb.base/store.exp: f_4.j
PASS: gdb.base/store.exp: set variable u = F_4, u.k = f_4.k
PASS: gdb.base/store.exp: f_4.k
PASS: gdb.base/store.exp: set variable u = f_4, u.i = F_4.i
PASS: gdb.base/store.exp: F_4.i
PASS: gdb.base/store.exp: set variable u = f_4, u.j = F_4.j
PASS: gdb.base/store.exp: F_4.j
PASS: gdb.base/store.exp: set variable u = f_4, u.k = F_4.k
PASS: gdb.base/store.exp: F_4.k
Running ../../../master/gdb/testsuite/gdb.base/structs.exp ...
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: continue to breakpoint: chartest-done
PASS: gdb.base/structs.exp: p chartest
PASS: gdb.base/structs.exp: ptype foo1; structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 7 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 7 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 7 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 8 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 8 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 8 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 9 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 9 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 9 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 10 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 10 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 10 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 11 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 11 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 11 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 12 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 12 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 12 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 13 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 13 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 13 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 14 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 14 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 14 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 15 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 15 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 15 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 16 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 16 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 16 structs-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 17 structs-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 17 structs-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 17 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 3 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 3 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 3 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 3 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 3 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 3 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 3 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 3 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 3 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 4 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 4 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 4 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 4 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 4 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 4 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 4 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 4 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 4 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 5 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 5 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 5 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 5 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 5 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 5 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 5 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 5 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 5 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 6 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 6 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 6 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 6 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 6 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 6 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 6 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 6 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 6 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 7 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 7 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 7 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 7 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 7 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 7 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 7 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 7 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 7 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 8 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 8 structs-tc
PASS: gdb.base/structs.exp: return foo<n>; return 8 structs-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 8 structs-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 8 structs-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 8 structs-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 8 structs-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 8 structs-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 8 structs-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 3 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 3 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 3 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 3 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 3 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 3 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 3 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 3 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 3 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 4 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 4 structs-ts
PASS: gdb.base/structs.exp: return foo<n>; return 4 structs-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 4 structs-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 4 structs-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 4 structs-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 4 structs-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 4 structs-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 4 structs-ts
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-ti
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ti
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ti
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tl
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tl
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tl
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tll
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tll
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tll
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tll
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tll
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tll
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tll
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tll
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tll
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tll
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tf
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-td
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-td
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-td
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-td
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-td
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-td
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-td
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-td
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-td
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-td
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo1; structs-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 1 structs-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 1 structs-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 1 structs-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tld
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 1 structs-tld
PASS: gdb.base/structs.exp: zed L<n> for return; return 1 structs-tld
PASS: gdb.base/structs.exp: return foo<n>; return 1 structs-tld
PASS: gdb.base/structs.exp: value foo<n> returned; return 1 structs-tld
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 1 structs-tld
PASS: gdb.base/structs.exp: zed L<n> for finish; return 1 structs-tld
PASS: gdb.base/structs.exp: finish foo<n>; return 1 structs-tld
PASS: gdb.base/structs.exp: value foo<n> finished; return 1 structs-tld
PASS: gdb.base/structs.exp: return value known implies finish value known; return 1 structs-tld
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 7 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 7 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 7 structs-ts-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 8 structs-ts-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 8 structs-ts-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 8 structs-ts-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ts-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-ti-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-ti-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-ti-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-ti-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-ti-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tl-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tl-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tl-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tl-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tl-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tll-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tll-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tll-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tll-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tf-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tf-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tf-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tf-tc
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-td-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tld-tc
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tld-tc
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tld-tc
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tld-tc
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 5 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 5 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 5 structs-tc-ts
PASS: gdb.base/structs.exp: p/c fun<n>(); call 6 structs-tc-ts
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 6 structs-tc-ts
PASS: gdb.base/structs.exp: p/c L<n>; call 6 structs-tc-ts
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-ts
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-ti
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-ti
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-ti
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-ti
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-ti
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-tl
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-tl
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-tl
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-tl
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tc-tl
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tll
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tll
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tll
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tll
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 3 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 3 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 3 structs-tc-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 4 structs-tc-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 4 structs-tc-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 4 structs-tc-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-td
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tc-tld
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tc-tld
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tc-tld
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tc-tld
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-td-tf
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-td-tf
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-td-tf
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-td-tf
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-td-tf
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-td-tf
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-td-tf
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-td-tf
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-td-tf
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-td-tf
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-td-tf
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-td-tf
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-td-tf
PASS: gdb.base/structs.exp: set print sevenbit-strings
PASS: gdb.base/structs.exp: set print address off
PASS: gdb.base/structs.exp: set width 0
PASS: gdb.base/structs.exp: set print elements 300
PASS: gdb.base/structs.exp: ptype foo2; structs-tf-td
PASS: gdb.base/structs.exp: p/c fun<n>(); call 2 structs-tf-td
PASS: gdb.base/structs.exp: call Fun<n>(foo<n>); call 2 structs-tf-td
PASS: gdb.base/structs.exp: p/c L<n>; call 2 structs-tf-td
PASS: gdb.base/structs.exp: advance to fun<n> for return; return 2 structs-tf-td
PASS: gdb.base/structs.exp: zed L<n> for return; return 2 structs-tf-td
PASS: gdb.base/structs.exp: return foo<n>; return 2 structs-tf-td
PASS: gdb.base/structs.exp: value foo<n> returned; return 2 structs-tf-td
PASS: gdb.base/structs.exp: advance to fun<n> for finish; return 2 structs-tf-td
PASS: gdb.base/structs.exp: zed L<n> for finish; return 2 structs-tf-td
PASS: gdb.base/structs.exp: finish foo<n>; return 2 structs-tf-td
PASS: gdb.base/structs.exp: value foo<n> finished; return 2 structs-tf-td
PASS: gdb.base/structs.exp: return value known implies finish value known; return 2 structs-tf-td
Running ../../../master/gdb/testsuite/gdb.base/structs2.exp ...
PASS: gdb.base/structs2.exp: set width 0
PASS: gdb.base/structs2.exp: structs2 sanity check
PASS: gdb.base/structs2.exp: structs2 breakpoint set
PASS: gdb.base/structs2.exp: structs2 continue1
PASS: gdb.base/structs2.exp: structs2 continue2
Running ../../../master/gdb/testsuite/gdb.base/structs3.exp ...
PASS: gdb.base/structs3.exp: print two
PASS: gdb.base/structs3.exp: print *twop
PASS: gdb.base/structs3.exp: print *(struct Two *)onep
PASS: gdb.base/structs3.exp: print *(tTwo *)onep
Running ../../../master/gdb/testsuite/gdb.base/subst.exp ...
PASS: gdb.base/subst.exp: deactivate GDB's confirmation interface
PASS: gdb.base/subst.exp: show substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: show substitute-path, too many arguments
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path from, no rule entered yet
PASS: gdb.base/subst.exp: unset substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too many arguments
PASS: gdb.base/subst.exp: set substitute-path, too few arguments
PASS: gdb.base/subst.exp: set substitute-path, first argument is empty string
PASS: gdb.base/subst.exp: add from -> to substitution rule
PASS: gdb.base/subst.exp: add from1 -> to1 substitution rule
PASS: gdb.base/subst.exp: add source -> destination substitution rule
PASS: gdb.base/subst.exp: add depuis -> vers substitution rule
PASS: gdb.base/subst.exp: add substitution rule to empty string
PASS: gdb.base/subst.exp: show substitute-path after all paths added
PASS: gdb.base/subst.exp: show substitute-path from, after all paths added
PASS: gdb.base/subst.exp: show substitute-path depuis, after all paths added
PASS: gdb.base/subst.exp: show substitute-path garbage, after all paths added
PASS: gdb.base/subst.exp: unset substitute-path from
PASS: gdb.base/subst.exp: show substitute-path from, after unsetting it
PASS: gdb.base/subst.exp: show substitute-path after from rule removed
PASS: gdb.base/subst.exp: unset substitute-path from after the rule was removed
PASS: gdb.base/subst.exp: unset substitute-path depuis (middle of list)
PASS: gdb.base/subst.exp: show substitute-path after depuis rule removed
PASS: gdb.base/subst.exp: unset substitute-path empty (end of list)
PASS: gdb.base/subst.exp: show substitute-path after empty rule removed
PASS: gdb.base/subst.exp: remove all remaining substitution rules
PASS: gdb.base/subst.exp: show substitute-path after all remaining rules removed
Running ../../../master/gdb/testsuite/gdb.base/symbol-without-target_section.exp ...
PASS: gdb.base/symbol-without-target_section.exp: add-symbol-file
PASS: gdb.base/symbol-without-target_section.exp: list main
PASS: gdb.base/symbol-without-target_section.exp: print symbol_without_target_section
Running ../../../master/gdb/testsuite/gdb.base/term.exp ...
PASS: gdb.base/term.exp: set print sevenbit-strings
PASS: gdb.base/term.exp: set print address off
PASS: gdb.base/term.exp: set width 0
PASS: gdb.base/term.exp: test info terminal
PASS: gdb.base/term.exp: test info terminal #2
PASS: gdb.base/term.exp: info terminal at breakpoint
Running ../../../master/gdb/testsuite/gdb.base/trace-commands.exp ...
PASS: gdb.base/trace-commands.exp: show trace-commands says off
PASS: gdb.base/trace-commands.exp: source -v
PASS: gdb.base/trace-commands.exp: set trace-commands
PASS: gdb.base/trace-commands.exp: show trace-commands says on
PASS: gdb.base/trace-commands.exp: simple trace-commands test
PASS: gdb.base/trace-commands.exp: nested trace-commands test
PASS: gdb.base/trace-commands.exp: define user command
PASS: gdb.base/trace-commands.exp: nested trace-commands test with source
PASS: gdb.base/trace-commands.exp: depth resets on error part 1
PASS: gdb.base/trace-commands.exp: depth resets on error part 2
Running ../../../master/gdb/testsuite/gdb.base/tui-layout.exp ...
PASS: gdb.base/tui-layout.exp: layout asm
Running ../../../master/gdb/testsuite/gdb.base/twice.exp ...
PASS: gdb.base/twice.exp: step
Running ../../../master/gdb/testsuite/gdb.base/type-opaque.exp ...
PASS: gdb.base/type-opaque.exp: opaque struct type resolving
PASS: gdb.base/type-opaque.exp: empty struct type resolving
PASS: gdb.base/type-opaque.exp: filled struct type resolving
PASS: gdb.base/type-opaque.exp: opaque union type resolving
PASS: gdb.base/type-opaque.exp: empty union type resolving
PASS: gdb.base/type-opaque.exp: filled union type resolving
Running ../../../master/gdb/testsuite/gdb.base/ui-redirect.exp ...
PASS: gdb.base/ui-redirect.exp: commands
PASS: gdb.base/ui-redirect.exp: print 1
PASS: gdb.base/ui-redirect.exp: end
PASS: gdb.base/ui-redirect.exp: set logging file /dev/null
PASS: gdb.base/ui-redirect.exp: set logging on
PASS: gdb.base/ui-redirect.exp: save breakpoints /dev/null
PASS: gdb.base/ui-redirect.exp: set logging off
PASS: gdb.base/ui-redirect.exp: help
Running ../../../master/gdb/testsuite/gdb.base/unload.exp ...
PASS: gdb.base/unload.exp: pending breakpoint info before run
PASS: gdb.base/unload.exp: running program
PASS: gdb.base/unload.exp: pending breakpoint info on first run at shrfunc1
PASS: gdb.base/unload.exp: continuing to unloaded libfile
PASS: gdb.base/unload.exp: print y from libfile
PASS: gdb.base/unload.exp: rerun to shared library breakpoint
PASS: gdb.base/unload.exp: pending breakpoint info on second run at shrfunc1
PASS: gdb.base/unload.exp: continuing to unloaded libfile
PASS: gdb.base/unload.exp: continue to shrfunc2
PASS: gdb.base/unload.exp: pending breakpoint info on second run at shrfunc2
PASS: gdb.base/unload.exp: continuing to unloaded libfile2
PASS: gdb.base/unload.exp: print y from libfile2
Running ../../../master/gdb/testsuite/gdb.base/until.exp ...
PASS: gdb.base/until.exp: until line number
PASS: gdb.base/until.exp: malformed until
PASS: gdb.base/until.exp: until factorial, recursive function
PASS: gdb.base/until.exp: until func, not called by current frame
Running ../../../master/gdb/testsuite/gdb.base/unwindonsignal.exp ...
PASS: gdb.base/unwindonsignal.exp: break stop_here
PASS: gdb.base/unwindonsignal.exp: continue to breakpoint at stop_here
PASS: gdb.base/unwindonsignal.exp: setting unwindonsignal
PASS: gdb.base/unwindonsignal.exp: showing unwindonsignal
PASS: gdb.base/unwindonsignal.exp: unwindonsignal, inferior function call signaled
PASS: gdb.base/unwindonsignal.exp: unwindonsignal, stack unwound
PASS: gdb.base/unwindonsignal.exp: unwindonsignal, dummy frame removed
Running ../../../master/gdb/testsuite/gdb.base/valgrind-db-attach.exp ...
UNSUPPORTED: gdb.base/valgrind-db-attach.exp: spawn valgrind
Running ../../../master/gdb/testsuite/gdb.base/value-double-free.exp ...
PASS: gdb.base/value-double-free.exp: watch var
PASS: gdb.base/value-double-free.exp: continue
PASS: gdb.base/value-double-free.exp: print empty()
PASS: gdb.base/value-double-free.exp: help help
Running ../../../master/gdb/testsuite/gdb.base/varargs.exp ...
PASS: gdb.base/varargs.exp: set print sevenbit-strings
PASS: gdb.base/varargs.exp: set print address off
PASS: gdb.base/varargs.exp: set width 0
PASS: gdb.base/varargs.exp: print find_max1(5,1,2,3,4,5)
PASS: gdb.base/varargs.exp: print find_max1(1,3)
PASS: gdb.base/varargs.exp: print find_max1(10,1,2,3,4,5,6,7,8,29,0)
PASS: gdb.base/varargs.exp: print find_max2(3,1,2,3)
PASS: gdb.base/varargs.exp: print find_max_double(5,1.0,17.0,2.0,3.0,4.0)
PASS: gdb.base/varargs.exp: print find_max_float_real(4, fc1, fc2, fc3, fc4)
KFAIL: gdb.base/varargs.exp: print find_max_double_real(4, dc1, dc2, dc3, dc4) (PRMS: gdb/12776)
KFAIL: gdb.base/varargs.exp: print find_max_long_double_real(4, ldc1, ldc2, ldc3, ldc4) (PRMS: gdb/12776)
Running ../../../master/gdb/testsuite/gdb.base/volatile.exp ...
PASS: gdb.base/volatile.exp: continue to marker1
PASS: gdb.base/volatile.exp: up from marker1
PASS: gdb.base/volatile.exp: ptype vox
PASS: gdb.base/volatile.exp: ptype victuals
PASS: gdb.base/volatile.exp: ptype vixen
PASS: gdb.base/volatile.exp: ptype vitriol
PASS: gdb.base/volatile.exp: ptype vellum
PASS: gdb.base/volatile.exp: ptype valve
PASS: gdb.base/volatile.exp: ptype vacuity
PASS: gdb.base/volatile.exp: ptype vertigo
PASS: gdb.base/volatile.exp: ptype vampire
PASS: gdb.base/volatile.exp: ptype viper
PASS: gdb.base/volatile.exp: ptype vigour
PASS: gdb.base/volatile.exp: ptype vapour
PASS: gdb.base/volatile.exp: ptype ventricle
PASS: gdb.base/volatile.exp: ptype vigintillion
PASS: gdb.base/volatile.exp: ptype vocation
PASS: gdb.base/volatile.exp: ptype veracity
PASS: gdb.base/volatile.exp: ptype vapidity
PASS: gdb.base/volatile.exp: ptype velocity
PASS: gdb.base/volatile.exp: ptype veneer
PASS: gdb.base/volatile.exp: ptype video
PASS: gdb.base/volatile.exp: ptype vacuum
PASS: gdb.base/volatile.exp: ptype veniality
PASS: gdb.base/volatile.exp: ptype vitality
PASS: gdb.base/volatile.exp: ptype voracity
PASS: gdb.base/volatile.exp: ptype victor
PASS: gdb.base/volatile.exp: ptype vicar
PASS: gdb.base/volatile.exp: ptype victory
PASS: gdb.base/volatile.exp: ptype vicarage
PASS: gdb.base/volatile.exp: ptype vein
PASS: gdb.base/volatile.exp: ptype vogue
PASS: gdb.base/volatile.exp: ptype cavern
PASS: gdb.base/volatile.exp: ptype coverlet
PASS: gdb.base/volatile.exp: ptype caveat
PASS: gdb.base/volatile.exp: ptype covenant
PASS: gdb.base/volatile.exp: ptype vizier
PASS: gdb.base/volatile.exp: ptype vanadium
PASS: gdb.base/volatile.exp: ptype vane
PASS: gdb.base/volatile.exp: ptype veldt
PASS: gdb.base/volatile.exp: ptype cove
PASS: gdb.base/volatile.exp: ptype cavity
PASS: gdb.base/volatile.exp: ptype vagus
PASS: gdb.base/volatile.exp: ptype vagrancy
PASS: gdb.base/volatile.exp: ptype vagary
PASS: gdb.base/volatile.exp: ptype vendor
PASS: gdb.base/volatile.exp: ptype qux2
Running ../../../master/gdb/testsuite/gdb.base/watch-cond-infcall.exp ...
PASS: gdb.base/watch-cond-infcall.exp: hw: watch var if return_1 ()
PASS: gdb.base/watch-cond-infcall.exp: hw: continue
PASS: gdb.base/watch-cond-infcall.exp: sw: watch var if return_1 ()
PASS: gdb.base/watch-cond-infcall.exp: sw: continue
Running ../../../master/gdb/testsuite/gdb.base/watch-cond.exp ...
PASS: gdb.base/watch-cond.exp: set write watchpoint on global variable, local condition
PASS: gdb.base/watch-cond.exp: watchpoint with global expression, local condition evaluates in correct frame
PASS: gdb.base/watch-cond.exp: set write watchpoint on local variable, local condition
PASS: gdb.base/watch-cond.exp: watchpoint with local expression, local condition evaluates in correct frame
PASS: gdb.base/watch-cond.exp: set write watchpoint on global2 variable
PASS: gdb.base/watch-cond.exp: watchpoint on global2 variable triggers
PASS: gdb.base/watch-cond.exp: condition of watchpoint 2 changes
PASS: gdb.base/watch-cond.exp: watchpoint stops with untestable local expression
Running ../../../master/gdb/testsuite/gdb.base/watch-non-mem.exp ...
PASS: gdb.base/watch-non-mem.exp: set write watchpoint on $pc
PASS: gdb.base/watch-non-mem.exp: watchpoint on $pc works
Running ../../../master/gdb/testsuite/gdb.base/watch-read.exp ...
PASS: gdb.base/watch-read.exp: set hardware read watchpoint on global variable
PASS: gdb.base/watch-read.exp: read watchpoint triggers on first read
PASS: gdb.base/watch-read.exp: read watchpoint triggers on read after value changed
PASS: gdb.base/watch-read.exp: set write watchpoint on global variable
PASS: gdb.base/watch-read.exp: write watchpoint triggers
PASS: gdb.base/watch-read.exp: only write watchpoint triggers when value changes
PASS: gdb.base/watch-read.exp: read watchpoint triggers when value doesn't change, trapping reads and writes
PASS: gdb.base/watch-read.exp: only read watchpoint triggers when value doesn't change
Running ../../../master/gdb/testsuite/gdb.base/watch-vfork.exp ...
PASS: gdb.base/watch-vfork.exp: Watchpoint on global variable (hw)
PASS: gdb.base/watch-vfork.exp: Watchpoint triggers after vfork (hw)
PASS: gdb.base/watch-vfork.exp: Watchpoint on global variable (sw)
FAIL: gdb.base/watch-vfork.exp: Watchpoint triggers after vfork (sw) (timeout)
Running ../../../master/gdb/testsuite/gdb.base/watch_thread_num.exp ...
PASS: gdb.base/watch_thread_num.exp: successfully compiled posix threads test case
PASS: gdb.base/watch_thread_num.exp: Watchpoint on invalid thread
PASS: gdb.base/watch_thread_num.exp: Invalid watch syntax
PASS: gdb.base/watch_thread_num.exp: Next 5
PASS: gdb.base/watch_thread_num.exp: Set breakpoint at thread_function
PASS: gdb.base/watch_thread_num.exp: Stopped in thread_function
PASS: gdb.base/watch_thread_num.exp: Thread command
PASS: gdb.base/watch_thread_num.exp: Disable breakpoint 2
PASS: gdb.base/watch_thread_num.exp: Watchpoint on shared variable
PASS: gdb.base/watch_thread_num.exp: info breakpoint 3
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 1
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 1
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 2
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 2
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 3
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 3
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 4
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 4
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 5
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 5
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 6
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 6
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 7
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 7
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 8
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 8
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 9
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 9
PASS: gdb.base/watch_thread_num.exp: Watchpoint triggered iteration 10
PASS: gdb.base/watch_thread_num.exp: Check thread that triggered iteration 10
Running ../../../master/gdb/testsuite/gdb.base/watchpoint-cond-gone.exp ...
PASS: gdb.base/watchpoint-cond-gone.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-cond-gone.exp: continue to breakpoint: Place to set the watchpoint
PASS: gdb.base/watchpoint-cond-gone.exp: Place the watchpoint
PASS: gdb.base/watchpoint-cond-gone.exp: Catch the no longer valid watchpoint
Running ../../../master/gdb/testsuite/gdb.base/watchpoint-delete.exp ...
PASS: gdb.base/watchpoint-delete.exp: set can-use-hw-watchpoints 0
PASS: gdb.base/watchpoint-delete.exp: continue to breakpoint: break-here
PASS: gdb.base/watchpoint-delete.exp: watch x
PASS: gdb.base/watchpoint-delete.exp: delete $bpnum
Running ../../../master/gdb/testsuite/gdb.base/watchpoint-hw-hit-once.exp ...
PASS: gdb.base/watchpoint-hw-hit-once.exp: rwatch watchee
PASS: gdb.base/watchpoint-hw-hit-once.exp: continue
PASS: gdb.base/watchpoint-hw-hit-once.exp: continue to break-at-exit
Running ../../../master/gdb/testsuite/gdb.base/watchpoint-hw.exp ...
PASS: gdb.base/watchpoint-hw.exp: watch watchee
PASS: gdb.base/watchpoint-hw.exp: start
PASS: gdb.base/watchpoint-hw.exp: info watchpoints
Running ../../../master/gdb/testsuite/gdb.base/watchpoint-solib.exp ...
PASS: gdb.base/watchpoint-solib.exp: set pending breakpoint
PASS: gdb.base/watchpoint-solib.exp: continue to foo
PASS: gdb.base/watchpoint-solib.exp: set watchpoint on g
PASS: gdb.base/watchpoint-solib.exp: continue to watchpoint hit
PASS: gdb.base/watchpoint-solib.exp: rerun to main
PASS: gdb.base/watchpoint-solib.exp: continue to foo again
PASS: gdb.base/watchpoint-solib.exp: continue to watchpoint hit again
Running ../../../master/gdb/testsuite/gdb.base/watchpoint.exp ...
PASS: gdb.base/watchpoint.exp: set breakpoint at marker1
PASS: gdb.base/watchpoint.exp: set breakpoint at marker2
PASS: gdb.base/watchpoint.exp: info break in watchpoint.exp
PASS: gdb.base/watchpoint.exp: set watchpoint on ival3
PASS: gdb.base/watchpoint.exp: watchpoint found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: run to marker1 in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: enable watchpoint
PASS: gdb.base/watchpoint.exp: break func1
PASS: gdb.base/watchpoint.exp: set $func1_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: continue to breakpoint at func1
PASS: gdb.base/watchpoint.exp: watchpoint hit, first time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 1
PASS: gdb.base/watchpoint.exp: delete $func1_breakpoint_number
PASS: gdb.base/watchpoint.exp: watchpoint hit, second time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 2
PASS: gdb.base/watchpoint.exp: watchpoint hit, third time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 3
PASS: gdb.base/watchpoint.exp: watchpoint hit, fourth time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 4
PASS: gdb.base/watchpoint.exp: watchpoint hit, fifth time
PASS: gdb.base/watchpoint.exp: Watchpoint hit count is 5
PASS: gdb.base/watchpoint.exp: continue to marker2
PASS: gdb.base/watchpoint.exp: watchpoint disabled
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_simple_watchpoint
PASS: gdb.base/watchpoint.exp: watchpoints found in watchpoint/breakpoint table
PASS: gdb.base/watchpoint.exp: disable watchpoint in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: run to marker1 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watchpoint enabled
PASS: gdb.base/watchpoint.exp: watchpoint hit in test_disabling_watchpoints, first time
PASS: gdb.base/watchpoint.exp: watchpoint hit in test_disabling_watchpoints, second time
PASS: gdb.base/watchpoint.exp: disable watchpoint #2 in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watchpoint disabled in table
PASS: gdb.base/watchpoint.exp: disabled watchpoint skipped
PASS: gdb.base/watchpoint.exp: continue until exit at continue to exit in test_disabling_watchpoints
PASS: gdb.base/watchpoint.exp: watch ival2
PASS: gdb.base/watchpoint.exp: break func2 if 0
PASS: gdb.base/watchpoint.exp: p $func2_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: calling function with watchpoint enabled
PASS: gdb.base/watchpoint.exp: finish from marker1
PASS: gdb.base/watchpoint.exp: back at main from marker1
PASS: gdb.base/watchpoint.exp: next to `for' in watchpoint.exp
PASS: gdb.base/watchpoint.exp: until to ival1 assignment
PASS: gdb.base/watchpoint.exp: until to ival3 assignment
PASS: gdb.base/watchpoint.exp: until out of loop
PASS: gdb.base/watchpoint.exp: step to ival2 assignment
PASS: gdb.base/watchpoint.exp: watchpoint refused to insert on nonexistent struct member
PASS: gdb.base/watchpoint.exp: watch global_ptr
PASS: gdb.base/watchpoint.exp: watch *(int *) 0
PASS: gdb.base/watchpoint.exp: watch -location *global_ptr
PASS: gdb.base/watchpoint.exp: watch *global_ptr
PASS: gdb.base/watchpoint.exp: set $global_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: global_ptr next
PASS: gdb.base/watchpoint.exp: next over ptr init
PASS: gdb.base/watchpoint.exp: next over buffer set
PASS: gdb.base/watchpoint.exp: delete $global_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: watch **global_ptr_ptr
PASS: gdb.base/watchpoint.exp: set $global_ptr_ptr_breakpoint_number = $bpnum
PASS: gdb.base/watchpoint.exp: gloabl_ptr_ptr next
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr init
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr buffer set
PASS: gdb.base/watchpoint.exp: next over global_ptr_ptr pointer advance
PASS: gdb.base/watchpoint.exp: delete $global_ptr_ptr_breakpoint_number
PASS: gdb.base/watchpoint.exp: disable fast watches
PASS: gdb.base/watchpoint.exp: show disable fast watches
PASS: gdb.base/watchpoint.exp: set slow conditional watch
PASS: gdb.base/watchpoint.exp: trigger slow conditional watch
PASS: gdb.base/watchpoint.exp: rwatch disallowed when can-set-hw-watchpoints cleared
PASS: gdb.base/watchpoint.exp: continue to breakpoint: second x assignment
PASS: gdb.base/watchpoint.exp: watch x
PASS: gdb.base/watchpoint.exp: next after watch x
PASS: gdb.base/watchpoint.exp: delete watch x
PASS: gdb.base/watchpoint.exp: watch buf
PASS: gdb.base/watchpoint.exp: watchpoint on buf hit
PASS: gdb.base/watchpoint.exp: delete watch buf
PASS: gdb.base/watchpoint.exp: number is constant
PASS: gdb.base/watchpoint.exp: marker1 is constant
PASS: gdb.base/watchpoint.exp: watch count + 6
PASS: gdb.base/watchpoint.exp: delete watchpoint `count + 6'
PASS: gdb.base/watchpoint.exp: watch 7 + count
PASS: gdb.base/watchpoint.exp: delete watchpoint `7 + count'
PASS: gdb.base/watchpoint.exp: continue to breakpoint: func5 breakpoint here
PASS: gdb.base/watchpoint.exp: watch -location .x
PASS: gdb.base/watchpoint.exp: continue with watch -location
PASS: gdb.base/watchpoint.exp: delete watch -location
Running ../../../master/gdb/testsuite/gdb.base/watchpoints.exp ...
PASS: gdb.base/watchpoints.exp: watchpoint hit, first time
PASS: gdb.base/watchpoints.exp: watchpoint hit, first time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 1
PASS: gdb.base/watchpoints.exp: watchpoint ival1 hit, second time
PASS: gdb.base/watchpoints.exp: Watchpoint ival1 hit count is 2
PASS: gdb.base/watchpoints.exp: watchpoint hit, second time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 2
PASS: gdb.base/watchpoints.exp: watchpoint ival1 hit, third time
PASS: gdb.base/watchpoints.exp: Watchpoint ival1 hit count is 3
PASS: gdb.base/watchpoints.exp: watchpoint hit, third time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 3
PASS: gdb.base/watchpoints.exp: watchpoint hit, fourth time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 4
PASS: gdb.base/watchpoints.exp: watchpoint hit, fifth time
PASS: gdb.base/watchpoints.exp: Watchpoint hit count is 5
Running ../../../master/gdb/testsuite/gdb.base/wchar.exp ...
PASS: gdb.base/wchar.exp: print narrow
PASS: gdb.base/wchar.exp: print single
PASS: gdb.base/wchar.exp: print simple
PASS: gdb.base/wchar.exp: print difficile
PASS: gdb.base/wchar.exp: print simple[2]
PASS: gdb.base/wchar.exp: print difficile[2]
Running ../../../master/gdb/testsuite/gdb.base/whatis-exp.exp ...
PASS: gdb.base/whatis-exp.exp: set variable x=14
PASS: gdb.base/whatis-exp.exp: set variable y=2
PASS: gdb.base/whatis-exp.exp: set variable z=2
PASS: gdb.base/whatis-exp.exp: set variable w=3
PASS: gdb.base/whatis-exp.exp: print value of x
PASS: gdb.base/whatis-exp.exp: print value of y
PASS: gdb.base/whatis-exp.exp: print value of z
PASS: gdb.base/whatis-exp.exp: print value of w
PASS: gdb.base/whatis-exp.exp: whatis value of x+y
PASS: gdb.base/whatis-exp.exp: whatis value of x-y
PASS: gdb.base/whatis-exp.exp: whatis value of x*y
PASS: gdb.base/whatis-exp.exp: whatis value of x/y
PASS: gdb.base/whatis-exp.exp: whatis value of x%y
PASS: gdb.base/whatis-exp.exp: whatis value of x=y
PASS: gdb.base/whatis-exp.exp: whatis value of x+=2
PASS: gdb.base/whatis-exp.exp: whatis value of  ++x
PASS: gdb.base/whatis-exp.exp: whatis value of  --x
PASS: gdb.base/whatis-exp.exp: whatis value of  x++
PASS: gdb.base/whatis-exp.exp: whatis value of  x--
Running ../../../master/gdb/testsuite/gdb.base/whatis.exp ...
PASS: gdb.base/whatis.exp: whatis char
PASS: gdb.base/whatis.exp: whatis signed char
PASS: gdb.base/whatis.exp: whatis unsigned char
PASS: gdb.base/whatis.exp: whatis short
PASS: gdb.base/whatis.exp: whatis signed short
PASS: gdb.base/whatis.exp: whatis unsigned short
PASS: gdb.base/whatis.exp: whatis int
PASS: gdb.base/whatis.exp: whatis signed int
PASS: gdb.base/whatis.exp: whatis unsigned int
PASS: gdb.base/whatis.exp: whatis long
PASS: gdb.base/whatis.exp: whatis signed long
PASS: gdb.base/whatis.exp: whatis unsigned long
PASS: gdb.base/whatis.exp: whatis unsigned long long
PASS: gdb.base/whatis.exp: whatis float
PASS: gdb.base/whatis.exp: whatis double
PASS: gdb.base/whatis.exp: whatis char array
PASS: gdb.base/whatis.exp: whatis signed char array
PASS: gdb.base/whatis.exp: whatis unsigned char array
PASS: gdb.base/whatis.exp: whatis short array
PASS: gdb.base/whatis.exp: whatis signed short array
PASS: gdb.base/whatis.exp: whatis unsigned short array
PASS: gdb.base/whatis.exp: whatis int array
PASS: gdb.base/whatis.exp: whatis signed int array
PASS: gdb.base/whatis.exp: whatis unsigned int array
PASS: gdb.base/whatis.exp: whatis long array
PASS: gdb.base/whatis.exp: whatis signed long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis unsigned long array
PASS: gdb.base/whatis.exp: whatis float array
PASS: gdb.base/whatis.exp: whatis double array
PASS: gdb.base/whatis.exp: whatis char pointer
PASS: gdb.base/whatis.exp: whatis signed char pointer
PASS: gdb.base/whatis.exp: whatis unsigned char pointer
PASS: gdb.base/whatis.exp: whatis short pointer
PASS: gdb.base/whatis.exp: whatis signed short pointer
PASS: gdb.base/whatis.exp: whatis unsigned short pointer
PASS: gdb.base/whatis.exp: whatis int pointer
PASS: gdb.base/whatis.exp: whatis signed int pointer
PASS: gdb.base/whatis.exp: whatis unsigned int pointer
PASS: gdb.base/whatis.exp: whatis long pointer
PASS: gdb.base/whatis.exp: whatis signed long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long pointer
PASS: gdb.base/whatis.exp: whatis long long pointer
PASS: gdb.base/whatis.exp: whatis signed long long pointer
PASS: gdb.base/whatis.exp: whatis unsigned long long pointer
PASS: gdb.base/whatis.exp: whatis float pointer
PASS: gdb.base/whatis.exp: whatis double pointer
PASS: gdb.base/whatis.exp: whatis named structure
PASS: gdb.base/whatis.exp: whatis named structure using type name
PASS: gdb.base/whatis.exp: whatis unnamed structure
PASS: gdb.base/whatis.exp: whatis named union
PASS: gdb.base/whatis.exp: whatis named union using type name
PASS: gdb.base/whatis.exp: whatis unnamed union
PASS: gdb.base/whatis.exp: whatis char function
PASS: gdb.base/whatis.exp: whatis signed char function
PASS: gdb.base/whatis.exp: whatis unsigned char function
PASS: gdb.base/whatis.exp: whatis short function
PASS: gdb.base/whatis.exp: whatis signed short function
PASS: gdb.base/whatis.exp: whatis unsigned short function
PASS: gdb.base/whatis.exp: whatis int function
PASS: gdb.base/whatis.exp: whatis signed int function
PASS: gdb.base/whatis.exp: whatis unsigned int function
PASS: gdb.base/whatis.exp: whatis long function
PASS: gdb.base/whatis.exp: whatis signed long function
PASS: gdb.base/whatis.exp: whatis unsigned long function
PASS: gdb.base/whatis.exp: whatis long long function
PASS: gdb.base/whatis.exp: whatis signed long long function
PASS: gdb.base/whatis.exp: whatis unsigned long long function
PASS: gdb.base/whatis.exp: whatis float function
PASS: gdb.base/whatis.exp: whatis double function
PASS: gdb.base/whatis.exp: whatis complicated structure
PASS: gdb.base/whatis.exp: whatis complicated union
PASS: gdb.base/whatis.exp: whatis enumeration
PASS: gdb.base/whatis.exp: whatis enumeration using type name
PASS: gdb.base/whatis.exp: whatis outer structure
PASS: gdb.base/whatis.exp: whatis outer structure member
PASS: gdb.base/whatis.exp: whatis inner structure
PASS: gdb.base/whatis.exp: whatis inner structure member
PASS: gdb.base/whatis.exp: whatis inner union
PASS: gdb.base/whatis.exp: whatis inner union member
PASS: gdb.base/whatis.exp: whatis using typedef type name
PASS: gdb.base/whatis.exp: whatis applied to variable defined by typedef
Running ../../../master/gdb/testsuite/gdb.cell/arch.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/break.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/bt.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/core.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/data.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/dwarfaddr.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/ea-cache.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/ea-standalone.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/ea-test.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/f-regs.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/fork.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/gcore.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/mem-access.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/ptype.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/registers.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/sizeof.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/solib-symbol.exp ...
Running ../../../master/gdb/testsuite/gdb.cell/solib.exp ...
Running ../../../master/gdb/testsuite/gdb.cp/abstract-origin.exp ...
PASS: gdb.cp/abstract-origin.exp: continue to breakpoint: break-here
PASS: gdb.cp/abstract-origin.exp: p problem
Running ../../../master/gdb/testsuite/gdb.cp/ambiguous.exp ...
Running ../../../master/gdb/testsuite/gdb.cp/annota2.exp ...
PASS: gdb.cp/annota2.exp: set height 0
PASS: gdb.cp/annota2.exp: breakpoint main
PASS: gdb.cp/annota2.exp: annotation set at level 2
PASS: gdb.cp/annota2.exp: run until main breakpoint
PASS: gdb.cp/annota2.exp: print class
PASS: gdb.cp/annota2.exp: continue until exit
PASS: gdb.cp/annota2.exp: delete bps
PASS: gdb.cp/annota2.exp: breakpoint at main
PASS: gdb.cp/annota2.exp: run until main breakpoint
PASS: gdb.cp/annota2.exp: set watch on a.x
KFAIL: gdb.cp/annota2.exp: watch triggered on a.x (PRMS: gdb/38)
PASS: gdb.cp/annota2.exp: annotate-quit
Running ../../../master/gdb/testsuite/gdb.cp/annota3.exp ...
PASS: gdb.cp/annota3.exp: set height 0
PASS: gdb.cp/annota3.exp: breakpoint main
PASS: gdb.cp/annota3.exp: annotation set at level 3
PASS: gdb.cp/annota3.exp: first run until main breakpoint
PASS: gdb.cp/annota3.exp: print class
PASS: gdb.cp/annota3.exp: continue to exit
PASS: gdb.cp/annota3.exp: delete bps
PASS: gdb.cp/annota3.exp: break at main
PASS: gdb.cp/annota3.exp: second run until main breakpoint
PASS: gdb.cp/annota3.exp: set watch on a.x
KFAIL: gdb.cp/annota3.exp: watch triggered on a.x (PRMS: gdb/38)
PASS: gdb.cp/annota3.exp: annotate-quit
Running ../../../master/gdb/testsuite/gdb.cp/anon-ns.exp ...
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::doit1(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::doit1(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::doit1(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::doit1(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::one::one(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::one::one(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::one::one(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::one::one(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::doit2(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::doit2(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::doit2(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::doit2(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::two::two(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::two::two(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::two::two(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::two::two(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::doit1(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::doit1(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::doit1(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::doit1(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::one::one(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::one::one(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::one::one(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::one::one(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::doit2(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::doit2(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::doit2(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::doit2(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::two::two(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::two::two(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::two::two(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::two::two(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(int)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(int)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(int)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(int)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::doit1(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::doit1(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::doit1(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::doit1(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::one::one(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::one::one(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::one::one(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::one::one(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::doit2(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::doit2(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::doit2(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::doit2(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::two::two(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::two::two(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::two::two(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::two::two(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::doit3(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(char *)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(char *)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(char *)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::three(char *)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::one::doit(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::one::doit(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::one::doit(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::one::doit(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::two::doit(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::two::doit(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::two::doit(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::two::doit(void)'
PASS: gdb.cp/anon-ns.exp: list (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::doit(void)
PASS: gdb.cp/anon-ns.exp: list '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::doit(void)'
PASS: gdb.cp/anon-ns.exp: break (anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::doit(void)
PASS: gdb.cp/anon-ns.exp: break '(anonymous namespace)::A::(anonymous namespace)::(anonymous namespace)::three::doit(void)'
Running ../../../master/gdb/testsuite/gdb.cp/anon-struct.exp ...
PASS: gdb.cp/anon-struct.exp: print type of t::t
PASS: gdb.cp/anon-struct.exp: print type of X::t2::t2
PASS: gdb.cp/anon-struct.exp: print type of t3::~t3
Running ../../../master/gdb/testsuite/gdb.cp/anon-union.exp ...
PASS: gdb.cp/anon-union.exp: set width 0
PASS: gdb.cp/anon-union.exp: next 1
PASS: gdb.cp/anon-union.exp: print foo 1
PASS: gdb.cp/anon-union.exp: next 2
PASS: gdb.cp/anon-union.exp: print foo 2
PASS: gdb.cp/anon-union.exp: set var foo.cloth
PASS: gdb.cp/anon-union.exp: print foo 3
PASS: gdb.cp/anon-union.exp: next 3
PASS: gdb.cp/anon-union.exp: print foo 4
PASS: gdb.cp/anon-union.exp: set var foo.pebble
PASS: gdb.cp/anon-union.exp: print foo 5
PASS: gdb.cp/anon-union.exp: set var foo.qux
PASS: gdb.cp/anon-union.exp: print foo 6
PASS: gdb.cp/anon-union.exp: set var foo.mux
PASS: gdb.cp/anon-union.exp: print foo 7
PASS: gdb.cp/anon-union.exp: set var foo.x.rock
PASS: gdb.cp/anon-union.exp: print foo 8
PASS: gdb.cp/anon-union.exp: set var foo.x.rock2
PASS: gdb.cp/anon-union.exp: print foo 9
PASS: gdb.cp/anon-union.exp: next 4
PASS: gdb.cp/anon-union.exp: print w 1
PASS: gdb.cp/anon-union.exp: print z 1
PASS: gdb.cp/anon-union.exp: next 5
PASS: gdb.cp/anon-union.exp: print w 2
PASS: gdb.cp/anon-union.exp: print z 2
PASS: gdb.cp/anon-union.exp: set var z
PASS: gdb.cp/anon-union.exp: print w 3
PASS: gdb.cp/anon-union.exp: print z 3
Running ../../../master/gdb/testsuite/gdb.cp/arg-reference.exp ...
PASS: gdb.cp/arg-reference.exp: No false reference
Running ../../../master/gdb/testsuite/gdb.cp/bool.exp ...
PASS: gdb.cp/bool.exp: print return_true()
PASS: gdb.cp/bool.exp: print return_false()
Running ../../../master/gdb/testsuite/gdb.cp/breakpoint.exp ...
PASS: gdb.cp/breakpoint.exp: continue to C1::Nested::foo
PASS: gdb.cp/breakpoint.exp: conditional breakpoint in method
PASS: gdb.cp/breakpoint.exp: conditional breakpoint in method 2
PASS: gdb.cp/breakpoint.exp: continue to breakpoint
PASS: gdb.cp/breakpoint.exp: check the member variable
PASS: gdb.cp/breakpoint.exp: continue to breakpoint
PASS: gdb.cp/breakpoint.exp: check the member variable
Running ../../../master/gdb/testsuite/gdb.cp/bs15503.exp ...
PASS: gdb.cp/bs15503.exp: break StringTest<wchar_t>::testFunction
PASS: gdb.cp/bs15503.exp: continue to StringTest<wchar_t>
PASS: gdb.cp/bs15503.exp: continue to breakpoint: find position where blank needs to be inserted
PASS: gdb.cp/bs15503.exp: print s.length()
PASS: gdb.cp/bs15503.exp: print s[0]
PASS: gdb.cp/bs15503.exp: print s[s.length()-1]
PASS: gdb.cp/bs15503.exp: print (const char *) s
PASS: gdb.cp/bs15503.exp: print (const char *) s.substr(0,4)
PASS: gdb.cp/bs15503.exp: print (const char *) (s=s.substr(0,4))
Running ../../../master/gdb/testsuite/gdb.cp/call-c.exp ...
PASS: gdb.cp/call-c.exp: b 43
PASS: gdb.cp/call-c.exp: print foo(1)
PASS: gdb.cp/call-c.exp: continue to bp
PASS: gdb.cp/call-c.exp: print rf->func()
PASS: gdb.cp/call-c.exp: print handle->func()
Running ../../../master/gdb/testsuite/gdb.cp/casts.exp ...
PASS: gdb.cp/casts.exp: cast base class pointer to derived class pointer
PASS: gdb.cp/casts.exp: let compiler cast base class pointer to derived class pointer
PASS: gdb.cp/casts.exp: cast derived class pointer to base class pointer
PASS: gdb.cp/casts.exp: cast derived class reference to base class reference
PASS: gdb.cp/casts.exp: cast base class reference to derived class reference
PASS: gdb.cp/casts.exp: let compiler cast base class reference to derived class reference
PASS: gdb.cp/casts.exp: basic test of const_cast
PASS: gdb.cp/casts.exp: const_cast of 0
PASS: gdb.cp/casts.exp: basic test of static_cast
PASS: gdb.cp/casts.exp: static_cast to reference type
PASS: gdb.cp/casts.exp: basic test of reinterpret_cast
PASS: gdb.cp/casts.exp: test invalid reinterpret_cast
PASS: gdb.cp/casts.exp: reinterpret_cast to reference type
PASS: gdb.cp/casts.exp: invalid dynamic_cast
PASS: gdb.cp/casts.exp: dynamic_cast of 0 to void*
PASS: gdb.cp/casts.exp: dynamic_cast simple upcast
PASS: gdb.cp/casts.exp: dynamic_cast upcast to unique base
PASS: gdb.cp/casts.exp: dynamic_cast simple upcast to reference
PASS: gdb.cp/casts.exp: dynamic_cast simple downcast
PASS: gdb.cp/casts.exp: dynamic_cast simple downcast to intermediate class
PASS: gdb.cp/casts.exp: dynamic_cast to non-existing base
PASS: gdb.cp/casts.exp: dynamic_cast to reference to non-existing base
PASS: gdb.cp/casts.exp: dynamic_cast unique downcast
PASS: gdb.cp/casts.exp: dynamic_cast to sibling
Running ../../../master/gdb/testsuite/gdb.cp/class2.exp ...
PASS: gdb.cp/class2.exp: set print object off
PASS: gdb.cp/class2.exp: print alpha at marker return 0
PASS: gdb.cp/class2.exp: print beta at marker return 0
PASS: gdb.cp/class2.exp: print * aap at marker return 0
PASS: gdb.cp/class2.exp: print * bbp at marker return 0
PASS: gdb.cp/class2.exp: print * abp at marker return 0, s-p-o off
PASS: gdb.cp/class2.exp: print * (B *) abp at marker return 0
PASS: gdb.cp/class2.exp: print object with no data fields
PASS: gdb.cp/class2.exp: set print object on
PASS: gdb.cp/class2.exp: p acp
FAIL: gdb.cp/class2.exp: p acp->c1
FAIL: gdb.cp/class2.exp: p acp->c2
Running ../../../master/gdb/testsuite/gdb.cp/classes.exp ...
PASS: gdb.cp/classes.exp: ptype struct default_public_struct
PASS: gdb.cp/classes.exp: ptype struct explicit_public_struct
PASS: gdb.cp/classes.exp: ptype struct protected_struct
PASS: gdb.cp/classes.exp: ptype struct private_struct
PASS: gdb.cp/classes.exp: ptype struct mixed_protection_struct
PASS: gdb.cp/classes.exp: ptype class public_class
PASS: gdb.cp/classes.exp: ptype class protected_class
PASS: gdb.cp/classes.exp: ptype class default_private_class
PASS: gdb.cp/classes.exp: ptype class explicit_private_class
PASS: gdb.cp/classes.exp: ptype class mixed_protection_class
PASS: gdb.cp/classes.exp: ptype class A
PASS: gdb.cp/classes.exp: ptype class B
PASS: gdb.cp/classes.exp: ptype class C
PASS: gdb.cp/classes.exp: ptype class D
PASS: gdb.cp/classes.exp: ptype class E
PASS: gdb.cp/classes.exp: ptype class Static
PASS: gdb.cp/classes.exp: ptype class vA
PASS: gdb.cp/classes.exp: ptype class vB
PASS: gdb.cp/classes.exp: ptype class vC
PASS: gdb.cp/classes.exp: ptype class vD
PASS: gdb.cp/classes.exp: ptype class vE
PASS: gdb.cp/classes.exp: ptype class Base1
PASS: gdb.cp/classes.exp: ptype class Foo
PASS: gdb.cp/classes.exp: ptype class Bar
PASS: gdb.cp/classes.exp: print g_A.a
PASS: gdb.cp/classes.exp: print g_A.x
PASS: gdb.cp/classes.exp: print g_B.b
PASS: gdb.cp/classes.exp: print g_B.x
PASS: gdb.cp/classes.exp: print g_C.c
PASS: gdb.cp/classes.exp: print g_C.x
PASS: gdb.cp/classes.exp: print g_D.d
PASS: gdb.cp/classes.exp: print g_D.x
PASS: gdb.cp/classes.exp: print g_E.e
PASS: gdb.cp/classes.exp: print g_E.x
PASS: gdb.cp/classes.exp: print g_A.b
PASS: gdb.cp/classes.exp: print g_B.c
PASS: gdb.cp/classes.exp: print g_B.d
PASS: gdb.cp/classes.exp: print g_C.b
PASS: gdb.cp/classes.exp: print g_C.d
PASS: gdb.cp/classes.exp: print g_D.e
PASS: gdb.cp/classes.exp: print g_A.y
PASS: gdb.cp/classes.exp: print g_B.z
PASS: gdb.cp/classes.exp: print g_C.q
PASS: gdb.cp/classes.exp: print g_D.p
PASS: gdb.cp/classes.exp: call class_param.Aptr_a (&g_A)
PASS: gdb.cp/classes.exp: call class_param.Aptr_x (&g_A)
PASS: gdb.cp/classes.exp: call class_param.Aptr_a (&g_B)
PASS: gdb.cp/classes.exp: call class_param.Aptr_x (&g_B)
PASS: gdb.cp/classes.exp: call class_param.Aref_a (g_A)
PASS: gdb.cp/classes.exp: call class_param.Aref_x (g_A)
PASS: gdb.cp/classes.exp: call class_param.Aref_a (g_B)
PASS: gdb.cp/classes.exp: call class_param.Aref_x (g_B)
PASS: gdb.cp/classes.exp: call class_param.Aval_a (g_A)
PASS: gdb.cp/classes.exp: call class_param.Aval_x (g_A)
PASS: gdb.cp/classes.exp: call class_param.Aval_a (g_B)
PASS: gdb.cp/classes.exp: call class_param.Aval_x (g_B)
PASS: gdb.cp/classes.exp: unrelated class *param
PASS: gdb.cp/classes.exp: unrelated class &param
PASS: gdb.cp/classes.exp: unrelated class param
PASS: gdb.cp/classes.exp: continue to enums2(\(\)|)
PASS: gdb.cp/classes.exp: print obj_with_enum (1)
PASS: gdb.cp/classes.exp: next
PASS: gdb.cp/classes.exp: print obj_with_enum (2)
PASS: gdb.cp/classes.exp: print obj_with_enum.priv_enum
PASS: gdb.cp/classes.exp: ptype obj_with_enum.priv_enum
PASS: gdb.cp/classes.exp: ptype obj_with_enum
PASS: gdb.cp/classes.exp: print (ClassWithEnum::PrivEnum) 42
PASS: gdb.cp/classes.exp: print ('ClassWithEnum::PrivEnum') 42
PASS: gdb.cp/classes.exp: print Bar::z
PASS: gdb.cp/classes.exp: print &Foo::x
PASS: gdb.cp/classes.exp: print (int)&Foo::x
PASS: gdb.cp/classes.exp: print (int)&Bar::y == 2*sizeof(int)
PASS: gdb.cp/classes.exp: ptype Bar::z
PASS: gdb.cp/classes.exp: ptype &Bar::z
PASS: gdb.cp/classes.exp: print (int)pmi == sizeof(int)
PASS: gdb.cp/classes.exp: print Foo::st
PASS: gdb.cp/classes.exp: print bar.st
PASS: gdb.cp/classes.exp: print &foo.st
PASS: gdb.cp/classes.exp: print &Bar::st
PASS: gdb.cp/classes.exp: print *$
PASS: gdb.cp/classes.exp: set print static-members off
PASS: gdb.cp/classes.exp: print csi without static members
PASS: gdb.cp/classes.exp: print cnsi without static members
PASS: gdb.cp/classes.exp: set print static-members on
PASS: gdb.cp/classes.exp: print csi with static members
PASS: gdb.cp/classes.exp: print cnsi with static members
PASS: gdb.cp/classes.exp: finish from marker_reg1
PASS: gdb.cp/classes.exp: calling method for small class
PASS: gdb.cp/classes.exp: print ctor of typedef class
PASS: gdb.cp/classes.exp: print dtor of typedef class
PASS: gdb.cp/classes.exp: list ByAnyOtherName::times
Running ../../../master/gdb/testsuite/gdb.cp/cmpd-minsyms.exp ...
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::a() const'
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::b() volatile'
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at 'GDB<int>::c() const volatile'
PASS: gdb.cp/cmpd-minsyms.exp: set language c++
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::operator ==
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::operator==(GDB<int> const&)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<char>::harder(char)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::harder(int)
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at "int GDB<char>::even_harder<int>(char)"
PASS: gdb.cp/cmpd-minsyms.exp: setting breakpoint at GDB<int>::simple()
Running ../../../master/gdb/testsuite/gdb.cp/converts.exp ...
PASS: gdb.cp/converts.exp: continue to breakpoint: end of main
PASS: gdb.cp/converts.exp: typedef to another typedef
PASS: gdb.cp/converts.exp: typedef to typedef of a typedef
PASS: gdb.cp/converts.exp: Pointer-to-pointer-to-pointer derived to Pointer-to-pointer-to-pointer base.
PASS: gdb.cp/converts.exp: pointer to pointer
PASS: gdb.cp/converts.exp: pointer to array
PASS: gdb.cp/converts.exp: pointer to pointer of wrong type
PASS: gdb.cp/converts.exp: pointer to pointer of wrong type
PASS: gdb.cp/converts.exp: pointer to ancestor pointer
PASS: gdb.cp/converts.exp: pointer to void pointer
PASS: gdb.cp/converts.exp: pointer to void pointer pointer
PASS: gdb.cp/converts.exp: pointer to boolean
PASS: gdb.cp/converts.exp: pointer to long int
PASS: gdb.cp/converts.exp: pointer pointer to void pointer
PASS: gdb.cp/converts.exp: pointer pointer to pointer pointer
PASS: gdb.cp/converts.exp: pointer pointer to array of arrays
PASS: gdb.cp/converts.exp: pointer pointer to array of pointers
PASS: gdb.cp/converts.exp: pointer pointer to array of wrong pointers
Running ../../../master/gdb/testsuite/gdb.cp/cp-relocate.exp ...
PASS: gdb.cp/cp-relocate.exp: info functions
PASS: gdb.cp/cp-relocate.exp: get address of func<1>(int)
PASS: gdb.cp/cp-relocate.exp: get address of func<2>(int)
PASS: gdb.cp/cp-relocate.exp: get address of caller
PASS: gdb.cp/cp-relocate.exp: C++ functions have different addresses
PASS: gdb.cp/cp-relocate.exp: info file
PASS: gdb.cp/cp-relocate.exp: add-symbol-file cp-relocate.o
PASS: gdb.cp/cp-relocate.exp: break *func<1>(int)
PASS: gdb.cp/cp-relocate.exp: break *func<2>(int)
Running ../../../master/gdb/testsuite/gdb.cp/cpcompletion.exp ...
PASS: gdb.cp/cpcompletion.exp: complete class methods
PASS: gdb.cp/cpcompletion.exp: complete class methods beginning with F
PASS: gdb.cp/cpcompletion.exp: complete p foo1.g
PASS: gdb.cp/cpcompletion.exp: complete p foo1.base
PASS: gdb.cp/cpcompletion.exp: complete p foo1.Fo
PASS: gdb.cp/cpcompletion.exp: complete p a.g
Running ../../../master/gdb/testsuite/gdb.cp/cpexprs.exp ...
PASS: gdb.cp/cpexprs.exp: set listsize 1
PASS: gdb.cp/cpexprs.exp: print base1::a_function
PASS: gdb.cp/cpexprs.exp: print base1::base1(int)
PASS: gdb.cp/cpexprs.exp: print base1::base1(void)
PASS: gdb.cp/cpexprs.exp: print base2::a_function
PASS: gdb.cp/cpexprs.exp: print base2::base2
PASS: gdb.cp/cpexprs.exp: print base::base(int)
PASS: gdb.cp/cpexprs.exp: print base::base(void)
PASS: gdb.cp/cpexprs.exp: print base::operator char*
PASS: gdb.cp/cpexprs.exp: print base::operator delete
PASS: gdb.cp/cpexprs.exp: print base::operator delete[]
PASS: gdb.cp/cpexprs.exp: print base::operator fluff*
PASS: gdb.cp/cpexprs.exp: print base::operator fluff**
PASS: gdb.cp/cpexprs.exp: print base::operator int
PASS: gdb.cp/cpexprs.exp: print base::operator new
PASS: gdb.cp/cpexprs.exp: print base::operator new[]
PASS: gdb.cp/cpexprs.exp: print base::operator!
PASS: gdb.cp/cpexprs.exp: print base::operator!=
PASS: gdb.cp/cpexprs.exp: print base::operator%
PASS: gdb.cp/cpexprs.exp: print base::operator%=
PASS: gdb.cp/cpexprs.exp: print base::operator&
PASS: gdb.cp/cpexprs.exp: print base::operator&&
PASS: gdb.cp/cpexprs.exp: print base::operator&=
PASS: gdb.cp/cpexprs.exp: print base::operator()
PASS: gdb.cp/cpexprs.exp: print base::operator*
PASS: gdb.cp/cpexprs.exp: print base::operator*=
PASS: gdb.cp/cpexprs.exp: print base::operator+
PASS: gdb.cp/cpexprs.exp: print base::operator++
PASS: gdb.cp/cpexprs.exp: print base::operator+=
PASS: gdb.cp/cpexprs.exp: print base::operator-
PASS: gdb.cp/cpexprs.exp: print base::operator--
PASS: gdb.cp/cpexprs.exp: print base::operator-=
PASS: gdb.cp/cpexprs.exp: print base::operator/
PASS: gdb.cp/cpexprs.exp: print base::operator/=
PASS: gdb.cp/cpexprs.exp: print base::operator<
PASS: gdb.cp/cpexprs.exp: print base::operator<<
PASS: gdb.cp/cpexprs.exp: print base::operator<<=
PASS: gdb.cp/cpexprs.exp: print base::operator<=
PASS: gdb.cp/cpexprs.exp: print base::operator=
PASS: gdb.cp/cpexprs.exp: print base::operator==
PASS: gdb.cp/cpexprs.exp: print base::operator>
PASS: gdb.cp/cpexprs.exp: print base::operator>=
PASS: gdb.cp/cpexprs.exp: print base::operator>>
PASS: gdb.cp/cpexprs.exp: print base::operator>>=
PASS: gdb.cp/cpexprs.exp: print base::operator[]
PASS: gdb.cp/cpexprs.exp: print base::operator^
PASS: gdb.cp/cpexprs.exp: print base::operator^=
PASS: gdb.cp/cpexprs.exp: print base::operator|
PASS: gdb.cp/cpexprs.exp: print base::operator|=
PASS: gdb.cp/cpexprs.exp: print base::operator||
PASS: gdb.cp/cpexprs.exp: print base::operator~
PASS: gdb.cp/cpexprs.exp: print base::overload(base&) const
PASS: gdb.cp/cpexprs.exp: print base::overload(char*) const
PASS: gdb.cp/cpexprs.exp: print base::overload(int) const
PASS: gdb.cp/cpexprs.exp: print base::overload(long) const
PASS: gdb.cp/cpexprs.exp: print base::overload(short) const
PASS: gdb.cp/cpexprs.exp: print base::overload(void) const
PASS: gdb.cp/cpexprs.exp: print base::~base
PASS: gdb.cp/cpexprs.exp: print derived::a_function
PASS: gdb.cp/cpexprs.exp: print derived::derived
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, char, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, char, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, char, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, char, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, int, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, int, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, int, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, int, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, long, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, long, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, long, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, long, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, short, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, short, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, short, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, int, short, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, int, char>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, int, int>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, int, long>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: print flubber<int, int, short, short, int>
PASS: gdb.cp/cpexprs.exp: print flubber<long, short, long, short, long>
PASS: gdb.cp/cpexprs.exp: print flubber<short, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: print policy1::function
PASS: gdb.cp/cpexprs.exp: print policy1::policy
PASS: gdb.cp/cpexprs.exp: print policy2::function
PASS: gdb.cp/cpexprs.exp: print policy2::policy
PASS: gdb.cp/cpexprs.exp: print policy3::function
PASS: gdb.cp/cpexprs.exp: print policy3::policy
PASS: gdb.cp/cpexprs.exp: print policy4::function
PASS: gdb.cp/cpexprs.exp: print policy4::policy
PASS: gdb.cp/cpexprs.exp: print policyd1::function
PASS: gdb.cp/cpexprs.exp: print policyd1::policyd
PASS: gdb.cp/cpexprs.exp: print policyd1::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd2::function
PASS: gdb.cp/cpexprs.exp: print policyd2::policyd
PASS: gdb.cp/cpexprs.exp: print policyd2::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd3::function
PASS: gdb.cp/cpexprs.exp: print policyd3::policyd
PASS: gdb.cp/cpexprs.exp: print policyd3::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd4::function
PASS: gdb.cp/cpexprs.exp: print policyd4::policyd
PASS: gdb.cp/cpexprs.exp: print policyd4::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd5::function
PASS: gdb.cp/cpexprs.exp: print policyd5::policyd
PASS: gdb.cp/cpexprs.exp: print policyd5::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<base, operation_1<base> >::function
PASS: gdb.cp/cpexprs.exp: print policyd<base, operation_1<base> >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<base, operation_1<base> >::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<char, operation_1<char> >::function
PASS: gdb.cp/cpexprs.exp: print policyd<char, operation_1<char> >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<char, operation_1<char> >::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<int, operation_1<int> >::function
PASS: gdb.cp/cpexprs.exp: print policyd<int, operation_1<int> >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<int, operation_1<int> >::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<long, operation_1<long> >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<long, operation_1<long> >::~policyd
PASS: gdb.cp/cpexprs.exp: print policyd<tclass<int>, operation_1<tclass<int> > >::function
PASS: gdb.cp/cpexprs.exp: print policyd<tclass<int>, operation_1<tclass<int> > >::policyd
PASS: gdb.cp/cpexprs.exp: print policyd<tclass<int>, operation_1<tclass<int> > >::~policyd
PASS: gdb.cp/cpexprs.exp: print tclass<base>::do_something
PASS: gdb.cp/cpexprs.exp: print tclass<char>::do_something
PASS: gdb.cp/cpexprs.exp: print tclass<int>::do_something
PASS: gdb.cp/cpexprs.exp: print tclass<long>::do_something
PASS: gdb.cp/cpexprs.exp: print tclass<short>::do_something
PASS: gdb.cp/cpexprs.exp: print test_function
PASS: gdb.cp/cpexprs.exp: list base1::a_function
PASS: gdb.cp/cpexprs.exp: list base1::base1(int)
PASS: gdb.cp/cpexprs.exp: list base1::base1(void)
PASS: gdb.cp/cpexprs.exp: list base2::a_function
PASS: gdb.cp/cpexprs.exp: list base2::base2
PASS: gdb.cp/cpexprs.exp: list base::base(int)
PASS: gdb.cp/cpexprs.exp: list base::base(void)
PASS: gdb.cp/cpexprs.exp: list base::operator char*
PASS: gdb.cp/cpexprs.exp: list base::operator delete
PASS: gdb.cp/cpexprs.exp: list base::operator delete[]
PASS: gdb.cp/cpexprs.exp: list base::operator fluff*
PASS: gdb.cp/cpexprs.exp: list base::operator fluff**
PASS: gdb.cp/cpexprs.exp: list base::operator int
PASS: gdb.cp/cpexprs.exp: list base::operator new
PASS: gdb.cp/cpexprs.exp: list base::operator new[]
PASS: gdb.cp/cpexprs.exp: list base::operator!
PASS: gdb.cp/cpexprs.exp: list base::operator!=
PASS: gdb.cp/cpexprs.exp: list base::operator%
PASS: gdb.cp/cpexprs.exp: list base::operator%=
PASS: gdb.cp/cpexprs.exp: list base::operator&
PASS: gdb.cp/cpexprs.exp: list base::operator&&
PASS: gdb.cp/cpexprs.exp: list base::operator&=
PASS: gdb.cp/cpexprs.exp: list base::operator()
PASS: gdb.cp/cpexprs.exp: list base::operator*
PASS: gdb.cp/cpexprs.exp: list base::operator*=
PASS: gdb.cp/cpexprs.exp: list base::operator+
PASS: gdb.cp/cpexprs.exp: list base::operator++
PASS: gdb.cp/cpexprs.exp: list base::operator+=
PASS: gdb.cp/cpexprs.exp: list base::operator-
PASS: gdb.cp/cpexprs.exp: list base::operator--
PASS: gdb.cp/cpexprs.exp: list base::operator-=
PASS: gdb.cp/cpexprs.exp: list base::operator/
PASS: gdb.cp/cpexprs.exp: list base::operator/=
PASS: gdb.cp/cpexprs.exp: list base::operator<
PASS: gdb.cp/cpexprs.exp: list base::operator<<
PASS: gdb.cp/cpexprs.exp: list base::operator<<=
PASS: gdb.cp/cpexprs.exp: list base::operator<=
PASS: gdb.cp/cpexprs.exp: list base::operator=
PASS: gdb.cp/cpexprs.exp: list base::operator==
PASS: gdb.cp/cpexprs.exp: list base::operator>
PASS: gdb.cp/cpexprs.exp: list base::operator>=
PASS: gdb.cp/cpexprs.exp: list base::operator>>
PASS: gdb.cp/cpexprs.exp: list base::operator>>=
PASS: gdb.cp/cpexprs.exp: list base::operator[]
PASS: gdb.cp/cpexprs.exp: list base::operator^
PASS: gdb.cp/cpexprs.exp: list base::operator^=
PASS: gdb.cp/cpexprs.exp: list base::operator|
PASS: gdb.cp/cpexprs.exp: list base::operator|=
PASS: gdb.cp/cpexprs.exp: list base::operator||
PASS: gdb.cp/cpexprs.exp: list base::operator~
PASS: gdb.cp/cpexprs.exp: list base::overload(base&) const
PASS: gdb.cp/cpexprs.exp: list base::overload(char*) const
PASS: gdb.cp/cpexprs.exp: list base::overload(int) const
PASS: gdb.cp/cpexprs.exp: list base::overload(long) const
PASS: gdb.cp/cpexprs.exp: list base::overload(short) const
PASS: gdb.cp/cpexprs.exp: list base::overload(void) const
PASS: gdb.cp/cpexprs.exp: list base::~base
PASS: gdb.cp/cpexprs.exp: list derived::a_function
PASS: gdb.cp/cpexprs.exp: list derived::derived
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, char, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, char, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, char, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, char, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, int, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, int, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, int, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, int, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, long, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, long, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, long, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, long, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, short, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, short, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, short, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, int, short, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, int, char>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, int, int>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, int, long>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: list flubber<int, int, short, short, int>
PASS: gdb.cp/cpexprs.exp: list flubber<long, short, long, short, long>
PASS: gdb.cp/cpexprs.exp: list flubber<short, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: list policy1::function
PASS: gdb.cp/cpexprs.exp: list policy1::policy
PASS: gdb.cp/cpexprs.exp: list policy2::function
PASS: gdb.cp/cpexprs.exp: list policy2::policy
PASS: gdb.cp/cpexprs.exp: list policy3::function
PASS: gdb.cp/cpexprs.exp: list policy3::policy
PASS: gdb.cp/cpexprs.exp: list policy4::function
PASS: gdb.cp/cpexprs.exp: list policy4::policy
PASS: gdb.cp/cpexprs.exp: list policyd1::function
PASS: gdb.cp/cpexprs.exp: list policyd1::policyd
PASS: gdb.cp/cpexprs.exp: list policyd1::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd2::function
PASS: gdb.cp/cpexprs.exp: list policyd2::policyd
PASS: gdb.cp/cpexprs.exp: list policyd2::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd3::function
PASS: gdb.cp/cpexprs.exp: list policyd3::policyd
PASS: gdb.cp/cpexprs.exp: list policyd3::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd4::function
PASS: gdb.cp/cpexprs.exp: list policyd4::policyd
PASS: gdb.cp/cpexprs.exp: list policyd4::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd5::function
PASS: gdb.cp/cpexprs.exp: list policyd5::policyd
PASS: gdb.cp/cpexprs.exp: list policyd5::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<base, operation_1<base> >::function
PASS: gdb.cp/cpexprs.exp: list policyd<base, operation_1<base> >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<base, operation_1<base> >::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<char, operation_1<char> >::function
PASS: gdb.cp/cpexprs.exp: list policyd<char, operation_1<char> >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<char, operation_1<char> >::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<int, operation_1<int> >::function
PASS: gdb.cp/cpexprs.exp: list policyd<int, operation_1<int> >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<int, operation_1<int> >::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<long, operation_1<long> >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<long, operation_1<long> >::~policyd
PASS: gdb.cp/cpexprs.exp: list policyd<tclass<int>, operation_1<tclass<int> > >::function
PASS: gdb.cp/cpexprs.exp: list policyd<tclass<int>, operation_1<tclass<int> > >::policyd
PASS: gdb.cp/cpexprs.exp: list policyd<tclass<int>, operation_1<tclass<int> > >::~policyd
PASS: gdb.cp/cpexprs.exp: list tclass<base>::do_something
PASS: gdb.cp/cpexprs.exp: list tclass<char>::do_something
PASS: gdb.cp/cpexprs.exp: list tclass<int>::do_something
PASS: gdb.cp/cpexprs.exp: list tclass<long>::do_something
PASS: gdb.cp/cpexprs.exp: list tclass<short>::do_something
PASS: gdb.cp/cpexprs.exp: list test_function
PASS: gdb.cp/cpexprs.exp: continue to base1::a_function
PASS: gdb.cp/cpexprs.exp: continue to base1::base1(int)
PASS: gdb.cp/cpexprs.exp: continue to base1::base1(void)
PASS: gdb.cp/cpexprs.exp: continue to base2::a_function
PASS: gdb.cp/cpexprs.exp: continue to base2::base2
PASS: gdb.cp/cpexprs.exp: continue to base::base(int)
PASS: gdb.cp/cpexprs.exp: continue to base::base(void)
PASS: gdb.cp/cpexprs.exp: continue to base::operator char*
PASS: gdb.cp/cpexprs.exp: continue to base::operator delete
PASS: gdb.cp/cpexprs.exp: continue to base::operator delete[]
PASS: gdb.cp/cpexprs.exp: continue to base::operator fluff*
PASS: gdb.cp/cpexprs.exp: continue to base::operator fluff**
PASS: gdb.cp/cpexprs.exp: continue to base::operator int
PASS: gdb.cp/cpexprs.exp: continue to base::operator new
PASS: gdb.cp/cpexprs.exp: continue to base::operator new[]
PASS: gdb.cp/cpexprs.exp: continue to base::operator!
PASS: gdb.cp/cpexprs.exp: continue to base::operator!=
PASS: gdb.cp/cpexprs.exp: continue to base::operator%
PASS: gdb.cp/cpexprs.exp: continue to base::operator%=
PASS: gdb.cp/cpexprs.exp: continue to base::operator&
PASS: gdb.cp/cpexprs.exp: continue to base::operator&&
PASS: gdb.cp/cpexprs.exp: continue to base::operator&=
PASS: gdb.cp/cpexprs.exp: continue to base::operator()
PASS: gdb.cp/cpexprs.exp: continue to base::operator*
PASS: gdb.cp/cpexprs.exp: continue to base::operator*=
PASS: gdb.cp/cpexprs.exp: continue to base::operator+
PASS: gdb.cp/cpexprs.exp: continue to base::operator++
PASS: gdb.cp/cpexprs.exp: continue to base::operator+=
PASS: gdb.cp/cpexprs.exp: continue to base::operator-
PASS: gdb.cp/cpexprs.exp: continue to base::operator--
PASS: gdb.cp/cpexprs.exp: continue to base::operator-=
PASS: gdb.cp/cpexprs.exp: continue to base::operator/
PASS: gdb.cp/cpexprs.exp: continue to base::operator/=
PASS: gdb.cp/cpexprs.exp: continue to base::operator<
PASS: gdb.cp/cpexprs.exp: continue to base::operator<<
PASS: gdb.cp/cpexprs.exp: continue to base::operator<<=
PASS: gdb.cp/cpexprs.exp: continue to base::operator<=
PASS: gdb.cp/cpexprs.exp: continue to base::operator=
PASS: gdb.cp/cpexprs.exp: continue to base::operator==
PASS: gdb.cp/cpexprs.exp: continue to base::operator>
PASS: gdb.cp/cpexprs.exp: continue to base::operator>=
PASS: gdb.cp/cpexprs.exp: continue to base::operator>>
PASS: gdb.cp/cpexprs.exp: continue to base::operator>>=
PASS: gdb.cp/cpexprs.exp: continue to base::operator[]
PASS: gdb.cp/cpexprs.exp: continue to base::operator^
PASS: gdb.cp/cpexprs.exp: continue to base::operator^=
PASS: gdb.cp/cpexprs.exp: continue to base::operator|
PASS: gdb.cp/cpexprs.exp: continue to base::operator|=
PASS: gdb.cp/cpexprs.exp: continue to base::operator||
PASS: gdb.cp/cpexprs.exp: continue to base::operator~
PASS: gdb.cp/cpexprs.exp: continue to base::overload(base&) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(char*) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(int) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(long) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(short) const
PASS: gdb.cp/cpexprs.exp: continue to base::overload(void) const
PASS: gdb.cp/cpexprs.exp: continue to base::~base
PASS: gdb.cp/cpexprs.exp: continue to derived::a_function
PASS: gdb.cp/cpexprs.exp: continue to derived::derived
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, char, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, char, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, char, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, char, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, int, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, int, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, int, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, int, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, long, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, long, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, long, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, long, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, short, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, short, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, short, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, int, short, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, int, char>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, int, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, int, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: continue to flubber<int, int, short, short, int>
PASS: gdb.cp/cpexprs.exp: continue to flubber<long, short, long, short, long>
PASS: gdb.cp/cpexprs.exp: continue to flubber<short, int, short, int, short>
PASS: gdb.cp/cpexprs.exp: continue to policy1::function
PASS: gdb.cp/cpexprs.exp: continue to policy1::policy
PASS: gdb.cp/cpexprs.exp: continue to policy2::function
PASS: gdb.cp/cpexprs.exp: continue to policy2::policy
PASS: gdb.cp/cpexprs.exp: continue to policy3::function
PASS: gdb.cp/cpexprs.exp: continue to policy3::policy
PASS: gdb.cp/cpexprs.exp: continue to policy4::function
PASS: gdb.cp/cpexprs.exp: continue to policy4::policy
PASS: gdb.cp/cpexprs.exp: continue to policyd1::function
PASS: gdb.cp/cpexprs.exp: continue to policyd1::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd1::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd2::function
PASS: gdb.cp/cpexprs.exp: continue to policyd2::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd2::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd3::function
PASS: gdb.cp/cpexprs.exp: continue to policyd3::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd3::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd4::function
PASS: gdb.cp/cpexprs.exp: continue to policyd4::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd4::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd5::function
PASS: gdb.cp/cpexprs.exp: continue to policyd5::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd5::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<base, operation_1<base> >::function
PASS: gdb.cp/cpexprs.exp: continue to policyd<base, operation_1<base> >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<base, operation_1<base> >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<char, operation_1<char> >::function
PASS: gdb.cp/cpexprs.exp: continue to policyd<char, operation_1<char> >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<char, operation_1<char> >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<int, operation_1<int> >::function
PASS: gdb.cp/cpexprs.exp: continue to policyd<int, operation_1<int> >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<int, operation_1<int> >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<long, operation_1<long> >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<long, operation_1<long> >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<tclass<int>, operation_1<tclass<int> > >::function
PASS: gdb.cp/cpexprs.exp: continue to policyd<tclass<int>, operation_1<tclass<int> > >::policyd
PASS: gdb.cp/cpexprs.exp: continue to policyd<tclass<int>, operation_1<tclass<int> > >::~policyd
PASS: gdb.cp/cpexprs.exp: continue to tclass<base>::do_something
PASS: gdb.cp/cpexprs.exp: continue to tclass<char>::do_something
PASS: gdb.cp/cpexprs.exp: continue to tclass<int>::do_something
PASS: gdb.cp/cpexprs.exp: continue to tclass<long>::do_something
PASS: gdb.cp/cpexprs.exp: continue to tclass<short>::do_something
Running ../../../master/gdb/testsuite/gdb.cp/cplusfuncs.exp ...
PASS: gdb.cp/cplusfuncs.exp: set language c++
PASS: gdb.cp/cplusfuncs.exp: set width 0
PASS: gdb.cp/cplusfuncs.exp: detect dm_operator_comma
PASS: gdb.cp/cplusfuncs.exp: detect dm_operator_char_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_char_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_foo_ref
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_int_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_long_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_int
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_void
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_void_star
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_short
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_short
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_long
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_unsigned_long
PASS: gdb.cp/cplusfuncs.exp: detect dm_type_typedef
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(void)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(signed char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned char)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(short)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned short)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(long)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(unsigned long)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(float)'
PASS: gdb.cp/cplusfuncs.exp: print &'overload1arg(double)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &'overloadargs(int, int, int, int, int, int, int, int, int, int, int)'
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator*(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator%(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator-(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>>(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator!=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator|(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&&(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator!(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator++(int)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator+=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator*=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator%=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator>>=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator|=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator,(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator/(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator+(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<<(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator==(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator^(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator||(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator~(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator--(int)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator->(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator-=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator/=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator<<=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator&=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator^=(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator->*(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator[](foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator()(foo&)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator new
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator new[]
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator delete(void*)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator delete(void*)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator int(void)
PASS: gdb.cp/cplusfuncs.exp: print &foo::operator char*(void)
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc1
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc2
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc3
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc4
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc5
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc6
PASS: gdb.cp/cplusfuncs.exp: print &hairyfunc7
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\*("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator%("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator-("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>>("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator!=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator|("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&&("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator!("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator++("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator+=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\*=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator%=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator>>=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator|=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator,("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator/("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator+("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<<("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator==("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator^("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator||("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator~("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator--("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator->("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator-=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator/=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator<<=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator&=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator^=("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator->\*("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator\[\]("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator new("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator delete("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator int("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator()("
PASS: gdb.cp/cplusfuncs.exp: info function for "operator char\*("
PASS: gdb.cp/cplusfuncs.exp: list foo::operator int*
Running ../../../master/gdb/testsuite/gdb.cp/ctti.exp ...
PASS: gdb.cp/ctti.exp: continue to breakpoint: marker add1
PASS: gdb.cp/ctti.exp: print c
PASS: gdb.cp/ctti.exp: print f
PASS: gdb.cp/ctti.exp: print i
Running ../../../master/gdb/testsuite/gdb.cp/demangle.exp ...
PASS: gdb.cp/demangle.exp: set language c++
PASS: gdb.cp/demangle.exp: set width 0
PASS: gdb.cp/demangle.exp: lucid: set demangle-style
PASS: gdb.cp/demangle.exp: lucid: check demangling style
PASS: gdb.cp/demangle.exp: lucid: WS__FR7istream
PASS: gdb.cp/demangle.exp: lucid: __aa__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __aad__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ad__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __adv__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __adv__7complexF7complex
PASS: gdb.cp/demangle.exp: lucid: __aer__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __als__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amd__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ami__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amu__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __amu__7complexF7complex
PASS: gdb.cp/demangle.exp: lucid: __aor__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __apl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ars__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __as__18istream_withassignFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __as__18istream_withassignFR7istream
PASS: gdb.cp/demangle.exp: lucid: __as__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __as__3iosFR3ios
PASS: gdb.cp/demangle.exp: lucid: __cl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __cm__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __co__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __ct__10istrstreamFPc
PASS: gdb.cp/demangle.exp: lucid: __ct__10istrstreamFPci
PASS: gdb.cp/demangle.exp: lucid: __ct__10ostrstreamFPciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__10ostrstreamFv
PASS: gdb.cp/demangle.exp: lucid: __ct__10smanip_intFPFR3iosi_R3iosi
PASS: gdb.cp/demangle.exp: lucid: __ct__11c_exceptionFPcRC7complexT2
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFi
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__11fstreambaseFv
PASS: gdb.cp/demangle.exp: lucid: __ct__11smanip_longFPFR3iosl_R3iosl
PASS: gdb.cp/demangle.exp: lucid: __ct__11stdiostreamFP4FILE
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPFl_PvPFPv_v
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPUciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFPciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFi
PASS: gdb.cp/demangle.exp: lucid: __ct__12strstreambufFv
PASS: gdb.cp/demangle.exp: lucid: __ct__13strstreambaseFPciT1
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiN31
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiPCc
PASS: gdb.cp/demangle.exp: lucid: __ct__3fooFiR3fooT1T2T1T2
PASS: gdb.cp/demangle.exp: lucid: __ct__3iosFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7filebufFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7fstreamFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__7fstreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFP9streambufiP7ostream
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__7istreamFiT1P7ostream
PASS: gdb.cp/demangle.exp: lucid: __ct__7ostreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ct__7ostreamFiPc
PASS: gdb.cp/demangle.exp: lucid: __ct__8ifstreamFPCciT2
PASS: gdb.cp/demangle.exp: lucid: __ct__8ifstreamFiPcT1
PASS: gdb.cp/demangle.exp: lucid: __ct__Q23foo3barFv
PASS: gdb.cp/demangle.exp: lucid: __ct__Q33foo3bar4bellFv
PASS: gdb.cp/demangle.exp: lucid: __dl__3fooSFPv
PASS: gdb.cp/demangle.exp: lucid: __dl__FPv
PASS: gdb.cp/demangle.exp: lucid: __dt__10istrstreamFv
PASS: gdb.cp/demangle.exp: lucid: __dt__Q23foo3barFv
PASS: gdb.cp/demangle.exp: lucid: __dt__Q33foo3bar4bellFv
PASS: gdb.cp/demangle.exp: lucid: __dv__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __dv__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __er__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ge__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __gt__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __le__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ls__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPCc
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFPv
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFUi
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFUl
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFd
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFf
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFi
PASS: gdb.cp/demangle.exp: lucid: __ls__7ostreamFl
PASS: gdb.cp/demangle.exp: lucid: __ls__FR7ostream7complex
PASS: gdb.cp/demangle.exp: lucid: __lt__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __md__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __mi__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ml__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __ml__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: __mm__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __ne__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __nt__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __nw__3fooSFi
PASS: gdb.cp/demangle.exp: lucid: __nw__FUi
PASS: gdb.cp/demangle.exp: lucid: __nw__FUiPv
PASS: gdb.cp/demangle.exp: lucid: __oo__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __opPc__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __opi__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __or__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __pl__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __pp__3fooFi
PASS: gdb.cp/demangle.exp: lucid: __pt__3fooFv
PASS: gdb.cp/demangle.exp: lucid: __rm__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __rs__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPFR7istream_R7istream
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPUc
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFPc
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUi
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUl
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRUs
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRd
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRf
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRi
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRl
PASS: gdb.cp/demangle.exp: lucid: __rs__7istreamFRs
PASS: gdb.cp/demangle.exp: lucid: __rs__FR7istreamR7complex
PASS: gdb.cp/demangle.exp: lucid: __vc__3fooFR3foo
PASS: gdb.cp/demangle.exp: lucid: __vtbl__10istrstream
PASS: gdb.cp/demangle.exp: lucid: __vtbl__17ostream__iostream__19iostream_withassign
PASS: gdb.cp/demangle.exp: lucid: __vtbl__3ios
PASS: gdb.cp/demangle.exp: lucid: __vtbl__3ios__13strstreambase
KFAIL: gdb.cp/demangle.exp: lucid: __vtbl__3foo__vt_cc_main_ (PRMS: gdb/945)
PASS: gdb.cp/demangle.exp: lucid: abs__F7complex
PASS: gdb.cp/demangle.exp: lucid: allocate__9streambufFv
PASS: gdb.cp/demangle.exp: lucid: attach__11fstreambaseFi
PASS: gdb.cp/demangle.exp: lucid: bitalloc__3iosSFv
PASS: gdb.cp/demangle.exp: lucid: chr__FiT1
PASS: gdb.cp/demangle.exp: lucid: complex_error__FR11c_exception
PASS: gdb.cp/demangle.exp: lucid: complexfunc2__FPFPc_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc3__FPFPFPl_s_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc4__FPFPFPc_s_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc5__FPFPc_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc6__FPFPi_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complexfunc7__FPFPFPc_i_PFl_i
PASS: gdb.cp/demangle.exp: lucid: complicated_put__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: conv10__FlPc
PASS: gdb.cp/demangle.exp: lucid: conv16__FUlPc
PASS: gdb.cp/demangle.exp: lucid: dec__FR3ios
PASS: gdb.cp/demangle.exp: lucid: dec__Fli
PASS: gdb.cp/demangle.exp: lucid: dofield__FP7ostreamPciT2T3
PASS: gdb.cp/demangle.exp: lucid: flags__3iosFl
PASS: gdb.cp/demangle.exp: lucid: flags__3iosFv
PASS: gdb.cp/demangle.exp: lucid: foo__FiN31
PASS: gdb.cp/demangle.exp: lucid: foo__FiR3fooT1T2T1T2
PASS: gdb.cp/demangle.exp: lucid: foo___3barFl
PASS: gdb.cp/demangle.exp: lucid: form__FPCce
PASS: gdb.cp/demangle.exp: lucid: get__7istreamFPcic
PASS: gdb.cp/demangle.exp: lucid: get__7istreamFR9streambufc
PASS: gdb.cp/demangle.exp: lucid: get_complicated__7istreamFRUc
PASS: gdb.cp/demangle.exp: lucid: get_complicated__7istreamFRc
PASS: gdb.cp/demangle.exp: lucid: getline__7istreamFPUcic
PASS: gdb.cp/demangle.exp: lucid: getline__7istreamFPcic
PASS: gdb.cp/demangle.exp: lucid: ignore__7istreamFiT1
PASS: gdb.cp/demangle.exp: lucid: init__12strstreambufFPciT1
PASS: gdb.cp/demangle.exp: lucid: init__3iosFP9streambuf
PASS: gdb.cp/demangle.exp: lucid: initcount__13Iostream_init
PASS: gdb.cp/demangle.exp: lucid: ipfx__7istreamFi
PASS: gdb.cp/demangle.exp: lucid: ls_complicated__7ostreamFUc
PASS: gdb.cp/demangle.exp: lucid: ls_complicated__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: open__11fstreambaseFPCciT2
PASS: gdb.cp/demangle.exp: lucid: open__7filebufFPCciT2
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FSc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUi
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUl
PASS: gdb.cp/demangle.exp: lucid: overload1arg__FUs
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fc
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fd
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Ff
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fi
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fl
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fs
PASS: gdb.cp/demangle.exp: lucid: overload1arg__Fv
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN21
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN31
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN41
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN51
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN61
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN71
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN81
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN91
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiN91N11
PASS: gdb.cp/demangle.exp: lucid: overloadargs__FiT1
PASS: gdb.cp/demangle.exp: lucid: polar__FdT1
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexT1
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexd
PASS: gdb.cp/demangle.exp: lucid: pow__F7complexi
PASS: gdb.cp/demangle.exp: lucid: pow__Fd7complex
PASS: gdb.cp/demangle.exp: lucid: pstart__FPciT2
PASS: gdb.cp/demangle.exp: lucid: put__7ostreamFc
PASS: gdb.cp/demangle.exp: lucid: read__7istreamFPci
PASS: gdb.cp/demangle.exp: lucid: resetiosflags__FR3iosl
PASS: gdb.cp/demangle.exp: lucid: restore_errno__FRi
PASS: gdb.cp/demangle.exp: lucid: rs_complicated__7istreamFRUc
PASS: gdb.cp/demangle.exp: lucid: rs_complicated__7istreamFRc
PASS: gdb.cp/demangle.exp: lucid: seekg__7istreamFl8seek_dir
PASS: gdb.cp/demangle.exp: lucid: seekoff__12strstreambufFl8seek_diri
PASS: gdb.cp/demangle.exp: lucid: seekoff__9streambufFlQ2_3ios12ios_seek_diri
PASS: gdb.cp/demangle.exp: lucid: seekpos__9streambufFli
PASS: gdb.cp/demangle.exp: lucid: set_new_handler__FPFv_v
PASS: gdb.cp/demangle.exp: lucid: setb__9streambufFPcT1i
PASS: gdb.cp/demangle.exp: lucid: setb__FR3iosi
PASS: gdb.cp/demangle.exp: lucid: setbuf__11fstreambaseFPci
PASS: gdb.cp/demangle.exp: lucid: setbuf__9streambufFPUci
PASS: gdb.cp/demangle.exp: lucid: setbuf__9streambufFPciT2
PASS: gdb.cp/demangle.exp: lucid: setf__3iosFlT1
PASS: gdb.cp/demangle.exp: lucid: setfill__FR3iosi
PASS: gdb.cp/demangle.exp: lucid: setg__9streambufFPcN21
PASS: gdb.cp/demangle.exp: lucid: setp__9streambufFPcT1
PASS: gdb.cp/demangle.exp: lucid: sputn__9streambufFPCci
PASS: gdb.cp/demangle.exp: lucid: str__FPCci
PASS: gdb.cp/demangle.exp: lucid: tie__3iosFP7ostream
PASS: gdb.cp/demangle.exp: lucid: uconv10__FUlPc
PASS: gdb.cp/demangle.exp: lucid: write__7ostreamFPCci
PASS: gdb.cp/demangle.exp: lucid: xget__7istreamFPc
PASS: gdb.cp/demangle.exp: lucid: xsgetn__9streambufFPci
PASS: gdb.cp/demangle.exp: lucid: xsputn__9streambufFPCci
PASS: gdb.cp/demangle.exp: lucid: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: gnu: set demangle-style
PASS: gdb.cp/demangle.exp: gnu: check demangling style
PASS: gdb.cp/demangle.exp: gnu: Abort__FP6EditoriPCc
PASS: gdb.cp/demangle.exp: gnu: AddAlignment__9ivTSolverUiP12ivInteractorP7ivTGlue
PASS: gdb.cp/demangle.exp: gnu: Append__15NameChooserViewPCc
PASS: gdb.cp/demangle.exp: gnu: ArrowheadIntersects__9ArrowLineP9ArrowheadR6BoxObjP7Graphic
PASS: gdb.cp/demangle.exp: gnu: AtEnd__13ivRubberGroup
PASS: gdb.cp/demangle.exp: gnu: BgFilter__9ivTSolverP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: BitPatterntoa__FRC10BitPatternccc
PASS: gdb.cp/demangle.exp: gnu: Check__6UArrayi
PASS: gdb.cp/demangle.exp: gnu: CoreConstDecls__8TextCodeR7ostream
PASS: gdb.cp/demangle.exp: gnu: Detach__8StateVarP12StateVarView
PASS: gdb.cp/demangle.exp: gnu: Done__9ComponentG8Iterator
PASS: gdb.cp/demangle.exp: gnu: DrawDestinationTransformedImage__FP7_XImageiiT0iiUlUiiiUiUlUlP4_XGCRC13ivTransformeriiii
PASS: gdb.cp/demangle.exp: gnu: Edit__12StringEditorPCcii
PASS: gdb.cp/demangle.exp: gnu: Effect__11RelateManipR7ivEvent
PASS: gdb.cp/demangle.exp: gnu: FilterName__FPCc
PASS: gdb.cp/demangle.exp: gnu: Filter__6PSTextPCci
PASS: gdb.cp/demangle.exp: gnu: FindColor__7CatalogPCciii
PASS: gdb.cp/demangle.exp: gnu: FindFixed__FRP4CNetP4CNet
PASS: gdb.cp/demangle.exp: gnu: FindFont__7CatalogPCcN21
PASS: gdb.cp/demangle.exp: gnu: Fix48_abort__FR8twolongs
PASS: gdb.cp/demangle.exp: gnu: GetBarInfo__15iv2_6_VScrollerP13ivPerspectiveRiT2
PASS: gdb.cp/demangle.exp: gnu: GetBgColor__C9ivPainter
PASS: gdb.cp/demangle.exp: gnu: Iisdouble__FPC6IntRep
PASS: gdb.cp/demangle.exp: gnu: InsertBody__15H_PullrightMenuii
PASS: gdb.cp/demangle.exp: gnu: InsertCharacter__9TextManipc
PASS: gdb.cp/demangle.exp: gnu: InsertToplevel__7ivWorldP12ivInteractorT1
PASS: gdb.cp/demangle.exp: gnu: InsertToplevel__7ivWorldP12ivInteractorT1iiUi
PASS: gdb.cp/demangle.exp: gnu: IsADirectory__FPCcR4stat
PASS: gdb.cp/demangle.exp: gnu: IsAGroup__FP11GraphicViewP11GraphicComp
PASS: gdb.cp/demangle.exp: gnu: IsA__10ButtonCodeUl
PASS: gdb.cp/demangle.exp: gnu: ReadName__FR7istreamPc
PASS: gdb.cp/demangle.exp: gnu: Redraw__13StringBrowseriiii
PASS: gdb.cp/demangle.exp: gnu: Rotate__13ivTransformerf
PASS: gdb.cp/demangle.exp: gnu: Rotated__C13ivTransformerf
PASS: gdb.cp/demangle.exp: gnu: Round__Ff
PASS: gdb.cp/demangle.exp: gnu: SetExport__16MemberSharedNameUi
PASS: gdb.cp/demangle.exp: gnu: Set__14ivControlState13ControlStatusUi
PASS: gdb.cp/demangle.exp: gnu: Set__5DFacePcii
PASS: gdb.cp/demangle.exp: gnu: VConvert__9ivTSolverP12ivInteractorRP8TElementT2
PASS: gdb.cp/demangle.exp: gnu: VConvert__9ivTSolverP7ivTGlueRP8TElement
PASS: gdb.cp/demangle.exp: gnu: VOrder__9ivTSolverUiRP12ivInteractorT2
PASS: gdb.cp/demangle.exp: gnu: Valid__7CatalogPCcRP4Tool
PASS: gdb.cp/demangle.exp: gnu: _10PageButton$__both
PASS: gdb.cp/demangle.exp: gnu: _3RNG$singleMantissa
PASS: gdb.cp/demangle.exp: gnu: _5IComp$_release
PASS: gdb.cp/demangle.exp: gnu: _$_10BitmapComp
PASS: gdb.cp/demangle.exp: gnu: _$_9__io_defs
PASS: gdb.cp/demangle.exp: gnu: _$_Q23foo3bar
PASS: gdb.cp/demangle.exp: gnu: _$_Q33foo3bar4bell
PASS: gdb.cp/demangle.exp: gnu: __10ivTelltaleiP7ivGlyph
PASS: gdb.cp/demangle.exp: gnu: __10ivViewportiP12ivInteractorUi
PASS: gdb.cp/demangle.exp: gnu: __10ostrstream
PASS: gdb.cp/demangle.exp: gnu: __10ostrstreamPcii
PASS: gdb.cp/demangle.exp: gnu: __11BasicDialogiPCcP13ivButtonStateN22Ui
PASS: gdb.cp/demangle.exp: gnu: __11BitmapTablei
PASS: gdb.cp/demangle.exp: gnu: __12ViewportCodeP12ViewportComp
PASS: gdb.cp/demangle.exp: gnu: __12iv2_6_BorderiPCci
PASS: gdb.cp/demangle.exp: gnu: __12iv2_6_Borderii
PASS: gdb.cp/demangle.exp: gnu: __12ivBackgroundiP7ivGlyphPC7ivColor
PASS: gdb.cp/demangle.exp: gnu: __12ivBreak_Listl
PASS: gdb.cp/demangle.exp: gnu: __14TextInteractoriPCcUi
PASS: gdb.cp/demangle.exp: gnu: __14iv2_6_MenuItemiP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: __14iv2_6_MenuItemiPCcP12ivInteractor
PASS: gdb.cp/demangle.exp: gnu: __20DisplayList_IteratorR11DisplayList
PASS: gdb.cp/demangle.exp: gnu: __3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __3fooiN31
PASS: gdb.cp/demangle.exp: gnu: __3fooiPCc
PASS: gdb.cp/demangle.exp: gnu: __3fooiRT0iT2iT2
PASS: gdb.cp/demangle.exp: gnu: __6GetOptiPPcPCc
PASS: gdb.cp/demangle.exp: gnu: __6KeyMapPT0
PASS: gdb.cp/demangle.exp: gnu: __7ivWorldPCcRiPPcPC12ivOptionDescPC14ivPropertyData
PASS: gdb.cp/demangle.exp: gnu: __7procbufPCci
PASS: gdb.cp/demangle.exp: gnu: __8ArrowCmdP6EditorUiUi
PASS: gdb.cp/demangle.exp: gnu: __9F_EllipseiiiiP7Graphic
PASS: gdb.cp/demangle.exp: gnu: __9FrameDataP9FrameCompi
PASS: gdb.cp/demangle.exp: gnu: __9HVGraphicP9CanvasVarP7Graphic
PASS: gdb.cp/demangle.exp: gnu: __Q23foo3bar
PASS: gdb.cp/demangle.exp: gnu: __Q33foo3bar4bell
PASS: gdb.cp/demangle.exp: gnu: __aa__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aad__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ad__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __adv__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aer__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __als__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __amd__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ami__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __aml__3FixRT0
PASS: gdb.cp/demangle.exp: gnu: __aml__5Fix16i
PASS: gdb.cp/demangle.exp: gnu: __aml__5Fix32RT0
PASS: gdb.cp/demangle.exp: gnu: __aor__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __apl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ars__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __as__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __cl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __cl__6Normal
PASS: gdb.cp/demangle.exp: gnu: __cl__6Stringii
PASS: gdb.cp/demangle.exp: gnu: __cm__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __co__3foo
PASS: gdb.cp/demangle.exp: gnu: __dl__3fooPv
PASS: gdb.cp/demangle.exp: gnu: __dv__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __er__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ge__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __gt__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __le__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ls__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ls__FR7ostreamPFR3ios_R3ios
PASS: gdb.cp/demangle.exp: gnu: __ls__FR7ostreamR3Fix
PASS: gdb.cp/demangle.exp: gnu: __lt__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __md__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __mi__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ml__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __mm__3fooi
PASS: gdb.cp/demangle.exp: gnu: __ne__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC7ComplexT0
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC7Complexd
PASS: gdb.cp/demangle.exp: gnu: __ne__FRC9SubStringRC6String
PASS: gdb.cp/demangle.exp: gnu: __nt__3foo
PASS: gdb.cp/demangle.exp: gnu: __nw__3fooi
PASS: gdb.cp/demangle.exp: gnu: __oo__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __opPc__3foo
PASS: gdb.cp/demangle.exp: gnu: __opi__3foo
PASS: gdb.cp/demangle.exp: gnu: __or__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __pl__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __pp__3fooi
PASS: gdb.cp/demangle.exp: gnu: __rf__3foo
PASS: gdb.cp/demangle.exp: gnu: __rm__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __rs__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __vc__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: _gsub__6StringRC5RegexPCci
PASS: gdb.cp/demangle.exp: gnu: _new_Fix__FUs
PASS: gdb.cp/demangle.exp: gnu: _vt.foo
PASS: gdb.cp/demangle.exp: gnu: _vt.foo.bar
PASS: gdb.cp/demangle.exp: gnu: _vt$foo
PASS: gdb.cp/demangle.exp: gnu: _vt$foo$bar
PASS: gdb.cp/demangle.exp: gnu: append__7ivGlyphPT0
PASS: gdb.cp/demangle.exp: gnu: arg__FRC7Complex
PASS: gdb.cp/demangle.exp: gnu: clearok__FP7_win_sti
PASS: gdb.cp/demangle.exp: gnu: complexfunc2__FPFPc_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc3__FPFPFPl_s_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc4__FPFPFPc_s_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc5__FPFPc_PFl_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc6__FPFPi_PFl_i
PASS: gdb.cp/demangle.exp: gnu: complexfunc7__FPFPFPc_i_PFl_i
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRC10BitPattern
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRC12BitSubStringi
PASS: gdb.cp/demangle.exp: gnu: contains__C9BitStringRT0
PASS: gdb.cp/demangle.exp: gnu: div__FPC6IntRepT0P6IntRep
PASS: gdb.cp/demangle.exp: gnu: div__FPC6IntReplP6IntRep
PASS: gdb.cp/demangle.exp: gnu: div__FRC8RationalT0R8Rational
PASS: gdb.cp/demangle.exp: gnu: divide__FRC7IntegerT0R7IntegerT2
PASS: gdb.cp/demangle.exp: gnu: divide__FRC7IntegerlR7IntegerRl
PASS: gdb.cp/demangle.exp: gnu: enable__14DocumentViewerPCcUi
PASS: gdb.cp/demangle.exp: gnu: foo__FiN30
PASS: gdb.cp/demangle.exp: gnu: foo__FiR3fooiT1iT1
PASS: gdb.cp/demangle.exp: gnu: foo___3barl
PASS: gdb.cp/demangle.exp: gnu: insert__15ivClippingStacklRP8_XRegion
PASS: gdb.cp/demangle.exp: gnu: insert__16ChooserInfo_ListlR11ChooserInfo
PASS: gdb.cp/demangle.exp: gnu: insert__17FontFamilyRepListlRP15ivFontFamilyRep
PASS: gdb.cp/demangle.exp: gnu: leaveok__FP7_win_stc
PASS: gdb.cp/demangle.exp: gnu: left_mover__C7ivMFKitP12ivAdjustableP7ivStyle
PASS: gdb.cp/demangle.exp: gnu: matches__C9BitStringRC10BitPatterni
PASS: gdb.cp/demangle.exp: gnu: matches__C9SubStringRC5Regex
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FSc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUi
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUl
PASS: gdb.cp/demangle.exp: gnu: overload1arg__FUs
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fc
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fd
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Ff
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fi
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fl
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fs
PASS: gdb.cp/demangle.exp: gnu: overload1arg__Fv
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fi
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: overloadargs__Fiiiiiiiiiii
PASS: gdb.cp/demangle.exp: gnu: pick__13ivCompositionP8ivCanvasRC12ivAllocationiR5ivHit
PASS: gdb.cp/demangle.exp: gnu: pointer__C11ivHScrollerRC7ivEventRC12ivAllocation
PASS: gdb.cp/demangle.exp: gnu: poke__8ivRasterUlUlffff
PASS: gdb.cp/demangle.exp: gnu: polar__Fdd
PASS: gdb.cp/demangle.exp: gnu: read__10osStdInputRPCc
PASS: gdb.cp/demangle.exp: gnu: scale__13ivTransformerff
PASS: gdb.cp/demangle.exp: gnu: scanw__12CursesWindowPCce
PASS: gdb.cp/demangle.exp: gnu: scmp__FPCcT0
PASS: gdb.cp/demangle.exp: gnu: sgetn__7filebufPci
PASS: gdb.cp/demangle.exp: gnu: shift__FP5_FrepiT0
PASS: gdb.cp/demangle.exp: gnu: test__C6BitSeti
PASS: gdb.cp/demangle.exp: gnu: test__C6BitSetii
PASS: gdb.cp/demangle.exp: gnu: testbit__FRC7Integerl
PASS: gdb.cp/demangle.exp: gnu: text_source__8Documentl
PASS: gdb.cp/demangle.exp: gnu: variance__6Erlangd
PASS: gdb.cp/demangle.exp: gnu: vform__8iostreamPCcPc
PASS: gdb.cp/demangle.exp: gnu: view__14DocumentViewerP8ItemViewP11TabularItem
PASS: gdb.cp/demangle.exp: gnu: xy_extents__11ivExtensionffff
PASS: gdb.cp/demangle.exp: gnu: zero__8osMemoryPvUi
PASS: gdb.cp/demangle.exp: gnu: _2T4$N
PASS: gdb.cp/demangle.exp: gnu: _Q22T42t1$N
PASS: gdb.cp/demangle.exp: gnu: get__2T1
PASS: gdb.cp/demangle.exp: gnu: get__Q22T11a
PASS: gdb.cp/demangle.exp: gnu: get__Q32T11a1b
PASS: gdb.cp/demangle.exp: gnu: get__Q42T11a1b1c
PASS: gdb.cp/demangle.exp: gnu: get__Q52T11a1b1c1d
PASS: gdb.cp/demangle.exp: gnu: put__2T1i
PASS: gdb.cp/demangle.exp: gnu: put__Q22T11ai
PASS: gdb.cp/demangle.exp: gnu: put__Q32T11a1bi
PASS: gdb.cp/demangle.exp: gnu: put__Q42T11a1b1ci
PASS: gdb.cp/demangle.exp: gnu: put__Q52T11a1b1c1di
PASS: gdb.cp/demangle.exp: gnu: bar__3fooPv
PASS: gdb.cp/demangle.exp: gnu: bar__3fooPCv
PASS: gdb.cp/demangle.exp: gnu: bar__C3fooPv
PASS: gdb.cp/demangle.exp: gnu: bar__C3fooPCv
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRT0
PASS: gdb.cp/demangle.exp: gnu: __eq__3fooRC3foo
PASS: gdb.cp/demangle.exp: gnu: __eq__C3fooR3foo
PASS: gdb.cp/demangle.exp: gnu: __eq__C3fooRT0
PASS: gdb.cp/demangle.exp: gnu: elem__t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: elem__t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: __t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: __t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: _$_t6vector1Zdi
PASS: gdb.cp/demangle.exp: gnu: _$_t6vector1Zii
PASS: gdb.cp/demangle.exp: gnu: __nw__t2T11ZcUi
PASS: gdb.cp/demangle.exp: gnu: __nw__t2T11Z1tUi
PASS: gdb.cp/demangle.exp: gnu: __dl__t2T11ZcPv
PASS: gdb.cp/demangle.exp: gnu: __dl__t2T11Z1tPv
PASS: gdb.cp/demangle.exp: gnu: __t2T11Zci
PASS: gdb.cp/demangle.exp: gnu: __t2T11Zc
PASS: gdb.cp/demangle.exp: gnu: __t2T11Z1ti
PASS: gdb.cp/demangle.exp: gnu: __t2T11Z1t
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3PixPQ2t4List1Z10VHDLEntity7element
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity3PixRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity7elementRC10VHDLEntityPT0
PASS: gdb.cp/demangle.exp: gnu: __Q2t4List1Z10VHDLEntity7elementRCQ2t4List1Z10VHDLEntity7element
PASS: gdb.cp/demangle.exp: gnu: __cl__C11VHDLLibraryGt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct4List1Z10VHDLEntityRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4List1Z10VHDLEntityRCt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityP14VHDLLibraryRepGQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: __t4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntityRCt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: nextE__C11VHDLLibraryRt4PixX3Z11VHDLLibraryZ14VHDLLibraryRepZt4List1Z10VHDLEntity
PASS: gdb.cp/demangle.exp: gnu: next__Ct4List1Z10VHDLEntityRQ2t4List1Z10VHDLEntity3Pix
PASS: gdb.cp/demangle.exp: gnu: _GLOBAL_$D$set
PASS: gdb.cp/demangle.exp: gnu: _GLOBAL_$I$set
PASS: gdb.cp/demangle.exp: gnu: __as__t5ListS1ZUiRCt5ListS1ZUi
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct5ListS1ZUiRCQ2t5ListS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __cl__Ct5SetLS1ZUiRCQ2t5SetLS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __t10ListS_link1ZUiRCUiPT0
PASS: gdb.cp/demangle.exp: gnu: __t10ListS_link1ZUiRCt10ListS_link1ZUi
PASS: gdb.cp/demangle.exp: gnu: __t5ListS1ZUiRCt5ListS1ZUi
PASS: gdb.cp/demangle.exp: gnu: next__Ct5ListS1ZUiRQ2t5ListS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ2t5SetLS1ZUi3Vix
PASS: gdb.cp/demangle.exp: gnu: __t8ListElem1Z5LabelRt4List1Z5Label
PASS: gdb.cp/demangle.exp: gnu: __t8BDDHookV1ZPcRCPc
PASS: gdb.cp/demangle.exp: gnu: _vt$t8BDDHookV1ZPc
PASS: gdb.cp/demangle.exp: gnu: __ne__FPvRCQ211BDDFunction4VixB
PASS: gdb.cp/demangle.exp: gnu: __eq__FPvRCQ211BDDFunction4VixB
PASS: gdb.cp/demangle.exp: gnu: relativeId__CQ36T_phi210T_preserve8FPC_nextRCQ26T_phi210T_preserveRC10Parameters
PASS: gdb.cp/demangle.exp: gnu: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: gnu: foo__I40
PASS: gdb.cp/demangle.exp: gnu: foo__I_200_
PASS: gdb.cp/demangle.exp: gnu: foo__I_200
PASS: gdb.cp/demangle.exp: gnu: foo__I_4000000000000000000000000000000000000000000000000000000000000000000000000
PASS: gdb.cp/demangle.exp: gnu: __thunk_64__0RL__list__Q29CosNaming20_proxy_NamingContextUlRPt25_CORBA_Unbounded_Sequence1ZQ29CosNaming7BindingRPQ29CosNaming15BindingIterator
PASS: gdb.cp/demangle.exp: arm: set demangle-style
PASS: gdb.cp/demangle.exp: arm: check demangling style
PASS: gdb.cp/demangle.exp: arm: __dt__21T5__pt__11_PFiPPdPv_iFv
PASS: gdb.cp/demangle.exp: arm: __ct__1cFi
PASS: gdb.cp/demangle.exp: arm: __dt__11T5__pt__2_iFv
PASS: gdb.cp/demangle.exp: arm: __dt__11T5__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __ct__2T2Fi
PASS: gdb.cp/demangle.exp: arm: __dt__2T1Fv
PASS: gdb.cp/demangle.exp: arm: __dt__12T5__pt__3_1xFv
PASS: gdb.cp/demangle.exp: arm: __dt__17T5__pt__8_PFcPv_iFv
PASS: gdb.cp/demangle.exp: arm: g__FP1cPC1cT1
PASS: gdb.cp/demangle.exp: arm: g__FPUlPCUlT1
PASS: gdb.cp/demangle.exp: arm: g__FPUiPCUiT1
PASS: gdb.cp/demangle.exp: arm: g__FPUsPCUsT1
PASS: gdb.cp/demangle.exp: arm: g__FPUcPCUcT1
PASS: gdb.cp/demangle.exp: arm: g__F1TPlPClT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRlRClT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPiPCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRiRCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPsPCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRsRCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1TPcPCcT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRcRCcT2
PASS: gdb.cp/demangle.exp: arm: __ct__21T5__pt__11_PFiPPdPv_iFi
PASS: gdb.cp/demangle.exp: arm: __gt__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __ge__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __lt__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __le__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __ne__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __eq__FRC2T2c
PASS: gdb.cp/demangle.exp: arm: __amd__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __adv__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __amu__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __ami__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __apl__FR2T2i
PASS: gdb.cp/demangle.exp: arm: __nw__2T1SFUi
PASS: gdb.cp/demangle.exp: arm: __dl__2T1SFPv
PASS: gdb.cp/demangle.exp: arm: put__2T7SFi
PASS: gdb.cp/demangle.exp: arm: __dl__12T5__pt__3_1xSFPv
PASS: gdb.cp/demangle.exp: arm: h__FUc
PASS: gdb.cp/demangle.exp: arm: f__Fic
PASS: gdb.cp/demangle.exp: arm: h__FUi
PASS: gdb.cp/demangle.exp: arm: h__Fci
PASS: gdb.cp/demangle.exp: arm: h__FUl
PASS: gdb.cp/demangle.exp: arm: h__Fcl
PASS: gdb.cp/demangle.exp: arm: h__FUs
PASS: gdb.cp/demangle.exp: arm: h__Fcs
PASS: gdb.cp/demangle.exp: arm: __amd__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __adv__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __amu__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __ami__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __apl__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUlRPCUlT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUiRPCUiT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUsRPCUsT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPUcRPCUcT2
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPlRPClT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPiRPCiT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1SRPcRPCcT3
PASS: gdb.cp/demangle.exp: arm: X__12T5__pt__3_1x
PASS: gdb.cp/demangle.exp: arm: __ct__11T5__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__11T5__pt__2_cFi
PASS: gdb.cp/demangle.exp: arm: __gt__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __ge__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __lt__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __le__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __ne__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: __eq__FRC2T2T1
PASS: gdb.cp/demangle.exp: arm: g__FcR1cRC1cT2
PASS: gdb.cp/demangle.exp: arm: g__FcRPdRPCdT2
PASS: gdb.cp/demangle.exp: arm: g__FcRPfRPCfT2
PASS: gdb.cp/demangle.exp: arm: h__FcT1
PASS: gdb.cp/demangle.exp: arm: f__Ficd
PASS: gdb.cp/demangle.exp: arm: g__F1T1SdRPsRPCsT4
PASS: gdb.cp/demangle.exp: arm: g__F1cC1cT1
PASS: gdb.cp/demangle.exp: arm: g__FPdPCdT1
PASS: gdb.cp/demangle.exp: arm: g__FPfPCfT1
PASS: gdb.cp/demangle.exp: arm: g__FUlCUlT1
PASS: gdb.cp/demangle.exp: arm: g__FPlPClT1
PASS: gdb.cp/demangle.exp: arm: g__FUiCUiT1
PASS: gdb.cp/demangle.exp: arm: g__FPiPCiT1
PASS: gdb.cp/demangle.exp: arm: g__FUsCUsT1
PASS: gdb.cp/demangle.exp: arm: g__FPsPCsT1
PASS: gdb.cp/demangle.exp: arm: g__FUcCUcT1
PASS: gdb.cp/demangle.exp: arm: g__FPcPCcT1
PASS: gdb.cp/demangle.exp: arm: g__F1TlClT2
PASS: gdb.cp/demangle.exp: arm: g__F1TiCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1TsCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1TcCcT2
PASS: gdb.cp/demangle.exp: arm: __dl__17T5__pt__8_PFcPv_iSFPv
PASS: gdb.cp/demangle.exp: arm: printf__FPCce
PASS: gdb.cp/demangle.exp: arm: X__17T5__pt__8_PFcPv_i
PASS: gdb.cp/demangle.exp: arm: __ct__12T5__pt__3_1xFi
PASS: gdb.cp/demangle.exp: arm: g__F1SRUlRCUlT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPlRPClT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUiRCUiT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPiRPCiT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUsRCUsT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPsRPCsT2
PASS: gdb.cp/demangle.exp: arm: g__F1RRUcRCUcT2
PASS: gdb.cp/demangle.exp: arm: g__F1SRPcRPCcT2
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRlRClT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRiRCiT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRsRCsT3
PASS: gdb.cp/demangle.exp: arm: g__F1T1RRcRCcT3
PASS: gdb.cp/demangle.exp: arm: __dl__21T5__pt__11_PFiPPdPv_iSFPv
PASS: gdb.cp/demangle.exp: arm: __std__foo
PASS: gdb.cp/demangle.exp: arm: __sti__bar
PASS: gdb.cp/demangle.exp: arm: f__FicdPcPFci_v
PASS: gdb.cp/demangle.exp: arm: f__FicdPcPFic_v
PASS: gdb.cp/demangle.exp: arm: get__2T7SFv
PASS: gdb.cp/demangle.exp: arm: X__21T5__pt__11_PFiPPdPv_i
PASS: gdb.cp/demangle.exp: arm: g__FcRdRCdT2
PASS: gdb.cp/demangle.exp: arm: g__FcRfRCfT2
PASS: gdb.cp/demangle.exp: arm: __md__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __dv__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __ml__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __mi__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __pl__FC2T2i
PASS: gdb.cp/demangle.exp: arm: __dl__11T5__pt__2_iSFPv
PASS: gdb.cp/demangle.exp: arm: __dl__11T5__pt__2_cSFPv
PASS: gdb.cp/demangle.exp: arm: h__Fc
PASS: gdb.cp/demangle.exp: arm: h__Fd
PASS: gdb.cp/demangle.exp: arm: h__Ff
PASS: gdb.cp/demangle.exp: arm: h__Fi
PASS: gdb.cp/demangle.exp: arm: f__Fi
PASS: gdb.cp/demangle.exp: arm: h__Fl
PASS: gdb.cp/demangle.exp: arm: h__Fs
PASS: gdb.cp/demangle.exp: arm: __md__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __dv__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __ml__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __mi__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: __pl__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: arm: g__FcRP1cRPC1cT2
PASS: gdb.cp/demangle.exp: arm: X__11T5__pt__2_c
PASS: gdb.cp/demangle.exp: arm: X__11T5__pt__2_i
PASS: gdb.cp/demangle.exp: arm: g__FdCdT1
PASS: gdb.cp/demangle.exp: arm: g__FfCfT1
PASS: gdb.cp/demangle.exp: arm: g__FlClT1
PASS: gdb.cp/demangle.exp: arm: g__FiCiT1
PASS: gdb.cp/demangle.exp: arm: g__FsCsT1
PASS: gdb.cp/demangle.exp: arm: g__FcCcT1
PASS: gdb.cp/demangle.exp: arm: __ct__17T5__pt__8_PFcPv_iFi
PASS: gdb.cp/demangle.exp: arm: f__FicdPc
PASS: gdb.cp/demangle.exp: arm: __nw__FUi
PASS: gdb.cp/demangle.exp: arm: __ct__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: __dt__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: put__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: arm: get__Q2_2T11aSFv
PASS: gdb.cp/demangle.exp: arm: put__2T1SFi
PASS: gdb.cp/demangle.exp: arm: put__Q5_2T11a1b1c1dSFi
PASS: gdb.cp/demangle.exp: arm: get__Q4_2T11a1b1cSFv
PASS: gdb.cp/demangle.exp: arm: put__Q2_2T11aSFi
PASS: gdb.cp/demangle.exp: arm: put__Q4_2T11a1b1cSFi
PASS: gdb.cp/demangle.exp: arm: get__Q3_2T11a1bSFv
PASS: gdb.cp/demangle.exp: arm: get__2T1SFv
PASS: gdb.cp/demangle.exp: arm: get__Q5_2T11a1b1c1dSFv
PASS: gdb.cp/demangle.exp: arm: __dt__11T1__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __dt__12T1__pt__3_1tFv
PASS: gdb.cp/demangle.exp: arm: __dl__12T1__pt__3_1tSFPv
PASS: gdb.cp/demangle.exp: arm: __ct__11T1__pt__2_cFi
PASS: gdb.cp/demangle.exp: arm: __ct__11T1__pt__2_cFv
PASS: gdb.cp/demangle.exp: arm: __ct__12T1__pt__3_1tFi
PASS: gdb.cp/demangle.exp: arm: __ct__12T1__pt__3_1tFv
PASS: gdb.cp/demangle.exp: arm: __dl__11T1__pt__2_cSFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPCv
PASS: gdb.cp/demangle.exp: arm: bar__3fooCFPv
PASS: gdb.cp/demangle.exp: arm: bar__3fooCFPCv
PASS: gdb.cp/demangle.exp: arm: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooFRC3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooCFR3foo
PASS: gdb.cp/demangle.exp: arm: __eq__3fooCFRC3foo
PASS: gdb.cp/demangle.exp: arm: elem__15vector__pt__2_dFi
PASS: gdb.cp/demangle.exp: arm: elem__15vector__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__15vector__pt__2_dFi
PASS: gdb.cp/demangle.exp: arm: __ct__15vector__pt__2_iFi
PASS: gdb.cp/demangle.exp: arm: __ct__25DListNode__pt__9_R6RLabelFR6RLabelP25DListNode__pt__9_R6RLabelT2
PASS: gdb.cp/demangle.exp: arm: bar__3fooFiT16FooBar
PASS: gdb.cp/demangle.exp: arm: bar__3fooFPiN51PdN37PcN211T1iN215
PASS: gdb.cp/demangle.exp: arm: _Utf390_1__1_9223372036854775807__9223372036854775
PASS: gdb.cp/demangle.exp: hp: set demangle-style
PASS: gdb.cp/demangle.exp: hp: check demangling style
PASS: gdb.cp/demangle.exp: hp: g__FP1cPC1cT1
PASS: gdb.cp/demangle.exp: hp: g__FPUlPCUlT1
PASS: gdb.cp/demangle.exp: hp: g__FPUiPCUiT1
PASS: gdb.cp/demangle.exp: hp: g__FPUsPCUsT1
PASS: gdb.cp/demangle.exp: hp: g__FPUcPCUcT1
PASS: gdb.cp/demangle.exp: hp: g__F1TPlPClT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRlRClT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPiPCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRiRCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPsPCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRsRCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1TPcPCcT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRcRCcT2
PASS: gdb.cp/demangle.exp: hp: __gt__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __ge__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __lt__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __le__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __ne__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __eq__FRC2T2c
PASS: gdb.cp/demangle.exp: hp: __amd__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __adv__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __amu__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __ami__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __apl__FR2T2i
PASS: gdb.cp/demangle.exp: hp: __nw__2T1SFUi
PASS: gdb.cp/demangle.exp: hp: __dl__2T1SFPv
PASS: gdb.cp/demangle.exp: hp: put__2T7SFi
PASS: gdb.cp/demangle.exp: hp: h__FUc
PASS: gdb.cp/demangle.exp: hp: f__Fic
PASS: gdb.cp/demangle.exp: hp: h__FUi
PASS: gdb.cp/demangle.exp: hp: h__Fci
PASS: gdb.cp/demangle.exp: hp: h__FUl
PASS: gdb.cp/demangle.exp: hp: h__Fcl
PASS: gdb.cp/demangle.exp: hp: h__FUs
PASS: gdb.cp/demangle.exp: hp: h__Fcs
PASS: gdb.cp/demangle.exp: hp: __amd__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __adv__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __amu__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __ami__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __apl__FR2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUlRPCUlT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUiRPCUiT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUsRPCUsT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPUcRPCUcT2
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPlRPClT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPiRPCiT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1SRPcRPCcT3
PASS: gdb.cp/demangle.exp: hp: __gt__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __ge__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __lt__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __le__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __ne__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: __eq__FRC2T2T1
PASS: gdb.cp/demangle.exp: hp: g__FcR1cRC1cT2
PASS: gdb.cp/demangle.exp: hp: g__FcRPdRPCdT2
PASS: gdb.cp/demangle.exp: hp: g__FcRPfRPCfT2
PASS: gdb.cp/demangle.exp: hp: h__FcT1
PASS: gdb.cp/demangle.exp: hp: f__Ficd
PASS: gdb.cp/demangle.exp: hp: g__F1T1SdRPsRPCsT4
PASS: gdb.cp/demangle.exp: hp: g__F1cC1cT1
PASS: gdb.cp/demangle.exp: hp: g__FPdPCdT1
PASS: gdb.cp/demangle.exp: hp: g__FPfPCfT1
PASS: gdb.cp/demangle.exp: hp: g__FUlCUlT1
PASS: gdb.cp/demangle.exp: hp: g__FPlPClT1
PASS: gdb.cp/demangle.exp: hp: g__FUiCUiT1
PASS: gdb.cp/demangle.exp: hp: g__FPiPCiT1
PASS: gdb.cp/demangle.exp: hp: g__FUsCUsT1
PASS: gdb.cp/demangle.exp: hp: g__FPsPCsT1
PASS: gdb.cp/demangle.exp: hp: g__FUcCUcT1
PASS: gdb.cp/demangle.exp: hp: g__FPcPCcT1
PASS: gdb.cp/demangle.exp: hp: g__F1TlClT2
PASS: gdb.cp/demangle.exp: hp: g__F1TiCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1TsCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1TcCcT2
PASS: gdb.cp/demangle.exp: hp: printf__FPCce
PASS: gdb.cp/demangle.exp: hp: g__F1SRUlRCUlT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPlRPClT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUiRCUiT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPiRPCiT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUsRCUsT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPsRPCsT2
PASS: gdb.cp/demangle.exp: hp: g__F1RRUcRCUcT2
PASS: gdb.cp/demangle.exp: hp: g__F1SRPcRPCcT2
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRlRClT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRiRCiT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRsRCsT3
PASS: gdb.cp/demangle.exp: hp: g__F1T1RRcRCcT3
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFci_v
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFic_v
PASS: gdb.cp/demangle.exp: hp: get__2T7SFv
PASS: gdb.cp/demangle.exp: hp: g__FcRdRCdT2
PASS: gdb.cp/demangle.exp: hp: g__FcRfRCfT2
PASS: gdb.cp/demangle.exp: hp: __md__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __dv__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __ml__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __mi__FC2T2i
PASS: gdb.cp/demangle.exp: hp: __pl__FC2T2i
PASS: gdb.cp/demangle.exp: hp: h__Fc
PASS: gdb.cp/demangle.exp: hp: h__Fd
PASS: gdb.cp/demangle.exp: hp: h__Ff
PASS: gdb.cp/demangle.exp: hp: h__Fi
PASS: gdb.cp/demangle.exp: hp: f__Fi
PASS: gdb.cp/demangle.exp: hp: h__Fl
PASS: gdb.cp/demangle.exp: hp: h__Fs
PASS: gdb.cp/demangle.exp: hp: __md__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __dv__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __ml__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __mi__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: __pl__FC2T2RC2T2
PASS: gdb.cp/demangle.exp: hp: g__FcRP1cRPC1cT2
PASS: gdb.cp/demangle.exp: hp: g__FdCdT1
PASS: gdb.cp/demangle.exp: hp: g__FfCfT1
PASS: gdb.cp/demangle.exp: hp: g__FlClT1
PASS: gdb.cp/demangle.exp: hp: g__FiCiT1
PASS: gdb.cp/demangle.exp: hp: g__FsCsT1
PASS: gdb.cp/demangle.exp: hp: g__FcCcT1
PASS: gdb.cp/demangle.exp: hp: f__FicdPc
PASS: gdb.cp/demangle.exp: hp: __nw__FUi
PASS: gdb.cp/demangle.exp: hp: __ct__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: __dt__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: put__Q3_2T11a1bSFi
PASS: gdb.cp/demangle.exp: hp: get__Q2_2T11aSFv
PASS: gdb.cp/demangle.exp: hp: put__2T1SFi
PASS: gdb.cp/demangle.exp: hp: put__Q5_2T11a1b1c1dSFi
PASS: gdb.cp/demangle.exp: hp: get__Q4_2T11a1b1cSFv
PASS: gdb.cp/demangle.exp: hp: put__Q2_2T11aSFi
PASS: gdb.cp/demangle.exp: hp: put__Q4_2T11a1b1cSFi
PASS: gdb.cp/demangle.exp: hp: get__Q3_2T11a1bSFv
PASS: gdb.cp/demangle.exp: hp: get__2T1SFv
PASS: gdb.cp/demangle.exp: hp: get__Q5_2T11a1b1c1dSFv
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPv
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPCv
PASS: gdb.cp/demangle.exp: hp: bar__3fooCFPv
PASS: gdb.cp/demangle.exp: hp: bar__3fooCFPCv
PASS: gdb.cp/demangle.exp: hp: __eq__3fooFR3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooFRC3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooCFR3foo
PASS: gdb.cp/demangle.exp: hp: __eq__3fooCFRC3foo
PASS: gdb.cp/demangle.exp: hp: bar__3fooFiT16FooBar
PASS: gdb.cp/demangle.exp: hp: bar__3fooFPiN51PdN37PcN211T1iN215
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTPFiPPdPv_i__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__1cFi
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTi__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T2Fi
PASS: gdb.cp/demangle.exp: hp: __dt__2T1Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XT1x__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T5XTPFcPv_i__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFiPPdPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XT1x__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XT1x
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTc__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTPFcPv_i__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTPFcPv_i
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XT1x__Fi
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTPFiPPdPv_i__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTPFiPPdPv_i
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTi__SFPv
PASS: gdb.cp/demangle.exp: hp: __dl__2T5XTc__SFPv
PASS: gdb.cp/demangle.exp: hp: X__2T5XTc
PASS: gdb.cp/demangle.exp: hp: X__2T5XTi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: __dt__2T1XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __dt__2T1XT1t__Fv
PASS: gdb.cp/demangle.exp: hp: __dl__2T1XT1t__SFPv
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XTc__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XTc__Fv
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XT1t__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T1XT1t__Fv
PASS: gdb.cp/demangle.exp: hp: __dl__2T1XTc__SFPv
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTd__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__6vectorXTd__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__6vectorXTi__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__9DListNodeXTR6RLabel__FR6RLabelP9DListNodeXTR6RLabel_T2
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiUP34__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXUP2701Td__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSP334__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSM__SCFPPd
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67UP4000TRs__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN67TRdTFPv_i__Fi
PASS: gdb.cp/demangle.exp: hp: X__6vectorXTiSN67TdTPvUP5TRs
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiA3foo__Fi
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiA3fooTPvA5Label__FiPPvT2
PASS: gdb.cp/demangle.exp: hp: elem__6vectorXTiSN42A3foo__Fi
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi_2
PASS: gdb.cp/demangle.exp: hp: __ct__2T5XTPFcPv_i__Fi_19
PASS: gdb.cp/demangle.exp: hp: f__FicdPcPFci_v_34
PASS: gdb.cp/demangle.exp: hp: spec__13Spec<%1,%1.*>XTiTPi_FPi
PASS: gdb.cp/demangle.exp: hp: spec__16Spec<%1,%1.&,%1>XTiTRiTi_FPi
PASS: gdb.cp/demangle.exp: hp: add__XTc_FcT1
PASS: gdb.cp/demangle.exp: hp: add__XTcSP9A5label_FcPPlT1
PASS: gdb.cp/demangle.exp: hp: add__XTPfTFPd_f_FcT1
PASS: gdb.cp/demangle.exp: hp: unLink__12basic_stringXTcT18string_char_traitsXTc_T9allocator_Fv
PASS: gdb.cp/demangle.exp: hp: _Utf390_1__1_9223372036854775807__9223372036854775
Running ../../../master/gdb/testsuite/gdb.cp/derivation.exp ...
PASS: gdb.cp/derivation.exp: up from marker1
PASS: gdb.cp/derivation.exp: print value of a_instance
PASS: gdb.cp/derivation.exp: ptype a_instance
PASS: gdb.cp/derivation.exp: print value of d_instance
PASS: gdb.cp/derivation.exp: ptype d_instance
PASS: gdb.cp/derivation.exp: print value of e_instance
PASS: gdb.cp/derivation.exp: ptype e_instance
PASS: gdb.cp/derivation.exp: print value of f_instance
PASS: gdb.cp/derivation.exp: ptype f_instance
PASS: gdb.cp/derivation.exp: print value of d_instance.a
PASS: gdb.cp/derivation.exp: print value of d_instance.aa
PASS: gdb.cp/derivation.exp: print value of d_instance.b
PASS: gdb.cp/derivation.exp: print value of d_instance.bb
PASS: gdb.cp/derivation.exp: print value of d_instance.c
PASS: gdb.cp/derivation.exp: print value of d_instance.cc
PASS: gdb.cp/derivation.exp: print value of d_instance.d
PASS: gdb.cp/derivation.exp: print value of d_instance.dd
PASS: gdb.cp/derivation.exp: print value of g_instance.a
PASS: gdb.cp/derivation.exp: print value of g_instance.b
PASS: gdb.cp/derivation.exp: print value of g_instance.c
PASS: gdb.cp/derivation.exp: print value of g_instance.afoo()
PASS: gdb.cp/derivation.exp: re-selected 'main' frame after inferior call
PASS: gdb.cp/derivation.exp: print value of g_instance.bfoo()
PASS: gdb.cp/derivation.exp: print value of g_instance.cfoo()
Running ../../../master/gdb/testsuite/gdb.cp/exception.exp ...
PASS: gdb.cp/exception.exp: catch catch (before inferior run)
PASS: gdb.cp/exception.exp: catch throw (before inferior run)
PASS: gdb.cp/exception.exp: info breakpoints (before inferior run)
PASS: gdb.cp/exception.exp: Set temporary breakpoint at main
PASS: gdb.cp/exception.exp: Run to main
PASS: gdb.cp/exception.exp: info breakpoints (after inferior run)
PASS: gdb.cp/exception.exp: break catcher
PASS: gdb.cp/exception.exp: continue to first throw
PASS: gdb.cp/exception.exp: backtrace after first throw
PASS: gdb.cp/exception.exp: continue to first catch
PASS: gdb.cp/exception.exp: backtrace after first catch
PASS: gdb.cp/exception.exp: continue to catcher for the first time
PASS: gdb.cp/exception.exp: continue to second throw
PASS: gdb.cp/exception.exp: backtrace after second throw
PASS: gdb.cp/exception.exp: continue to second catch
PASS: gdb.cp/exception.exp: backtrace after second catch
PASS: gdb.cp/exception.exp: continue to catcher for the second time
Running ../../../master/gdb/testsuite/gdb.cp/expand-sals.exp ...
PASS: gdb.cp/expand-sals.exp: continue to breakpoint: func
PASS: gdb.cp/expand-sals.exp: up
PASS: gdb.cp/expand-sals.exp: break
PASS: gdb.cp/expand-sals.exp: continue to breakpoint: caller
PASS: gdb.cp/expand-sals.exp: bt from A
PASS: gdb.cp/expand-sals.exp: continue to breakpoint: next caller func
Running ../../../master/gdb/testsuite/gdb.cp/extern-c.exp ...
PASS: gdb.cp/extern-c.exp: setting breakpoint at c_func
PASS: gdb.cp/extern-c.exp: continue to breakpoint: c_func
PASS: gdb.cp/extern-c.exp: initialize counter
PASS: gdb.cp/extern-c.exp: rbreak c_funcs
PASS: gdb.cp/extern-c.exp: command details for multiple breakpoints
PASS: gdb.cp/extern-c.exp: set commands on multiple breakpoints
PASS: gdb.cp/extern-c.exp: continue to breakpoint: c_funcs_1
PASS: gdb.cp/extern-c.exp: verify counter at first breakpoint
PASS: gdb.cp/extern-c.exp: continue to breakpoint: c_funcs_2
PASS: gdb.cp/extern-c.exp: verify counter at second breakpoint
Running ../../../master/gdb/testsuite/gdb.cp/formatted-ref.exp ...
PASS: gdb.cp/formatted-ref.exp: print/x s
PASS: gdb.cp/formatted-ref.exp: print/x e
PASS: gdb.cp/formatted-ref.exp: print/x i
PASS: gdb.cp/formatted-ref.exp: print/x &s
PASS: gdb.cp/formatted-ref.exp: print/x &e
PASS: gdb.cp/formatted-ref.exp: print/x &i
PASS: gdb.cp/formatted-ref.exp: print/x *(&(&s))
PASS: gdb.cp/formatted-ref.exp: print/x *(&(&i))
PASS: gdb.cp/formatted-ref.exp: print/x *(&(&e))
PASS: gdb.cp/formatted-ref.exp: print s.x == 13
Running ../../../master/gdb/testsuite/gdb.cp/fpointer.exp ...
PASS: gdb.cp/fpointer.exp: p p1()
PASS: gdb.cp/fpointer.exp: p p2()
PASS: gdb.cp/fpointer.exp: p p[0]()
PASS: gdb.cp/fpointer.exp: p p[1]()
PASS: gdb.cp/fpointer.exp: p p3('a')
PASS: gdb.cp/fpointer.exp: p p4(1)
Running ../../../master/gdb/testsuite/gdb.cp/gdb1355.exp ...
PASS: gdb.cp/gdb1355.exp: ptype s1
PASS: gdb.cp/gdb1355.exp: print s1
Running ../../../master/gdb/testsuite/gdb.cp/gdb2384.exp ...
PASS: gdb.cp/gdb2384.exp: continue to breakpoint: set breakpoint here
PASS: gdb.cp/gdb2384.exp: print d1.meth ()
PASS: gdb.cp/gdb2384.exp: continue to breakpoint: set breakpoint here
PASS: gdb.cp/gdb2384.exp: gdb2384
PASS: gdb.cp/gdb2384.exp: continue to breakpoint: set breakpoint here (second)
PASS: gdb.cp/gdb2384.exp: print d2.meth()
PASS: gdb.cp/gdb2384.exp: continue to breakpoint: set breakpoint here (second)
PASS: gdb.cp/gdb2384.exp: gdb2384 (second)
Running ../../../master/gdb/testsuite/gdb.cp/gdb2495.exp ...
PASS: gdb.cp/gdb2495.exp: p exceptions.no_throw_function()
PASS: gdb.cp/gdb2495.exp: p exceptions.throw_function_with_handler()
PASS: gdb.cp/gdb2495.exp: Call a function that raises an exception without a handler.
PASS: gdb.cp/gdb2495.exp: bt after returning from a popped frame
PASS: gdb.cp/gdb2495.exp: info breakpoints
PASS: gdb.cp/gdb2495.exp: set unwinn-on-terminating-exception off
PASS: gdb.cp/gdb2495.exp: Turn off unwind on terminating exception flag
PASS: gdb.cp/gdb2495.exp: Call a function that raises an exception with unwinding off..
PASS: gdb.cp/gdb2495.exp: set unwindonsignal on
PASS: gdb.cp/gdb2495.exp: Turn on unwind on signal
PASS: gdb.cp/gdb2495.exp: p exceptions.raise_signal(1)
PASS: gdb.cp/gdb2495.exp: set unwindonsignal off
PASS: gdb.cp/gdb2495.exp: Turn off unwind on signal
PASS: gdb.cp/gdb2495.exp: p exceptions.raise_signal(1)
Running ../../../master/gdb/testsuite/gdb.cp/hang.exp ...
PASS: gdb.cp/hang.exp: doesn't overwrite struct type
PASS: gdb.cp/hang.exp: doesn't corrupt cv_type chain
Running ../../../master/gdb/testsuite/gdb.cp/infcall-dlopen.exp ...
PASS: gdb.cp/infcall-dlopen.exp: test 0
PASS: gdb.cp/infcall-dlopen.exp: test 0 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 0 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 1
PASS: gdb.cp/infcall-dlopen.exp: test 1 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 1 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 2
PASS: gdb.cp/infcall-dlopen.exp: test 2 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 2 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 3
PASS: gdb.cp/infcall-dlopen.exp: test 3 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 3 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 4
PASS: gdb.cp/infcall-dlopen.exp: test 4 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 4 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 5
PASS: gdb.cp/infcall-dlopen.exp: test 5 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 5 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 6
PASS: gdb.cp/infcall-dlopen.exp: test 6 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 6 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 7
PASS: gdb.cp/infcall-dlopen.exp: test 7 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 7 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 8
PASS: gdb.cp/infcall-dlopen.exp: test 8 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 8 stub 2
PASS: gdb.cp/infcall-dlopen.exp: test 9
PASS: gdb.cp/infcall-dlopen.exp: test 9 stub 1
PASS: gdb.cp/infcall-dlopen.exp: test 9 stub 2
Running ../../../master/gdb/testsuite/gdb.cp/inherit.exp ...
PASS: gdb.cp/inherit.exp: set language c++
PASS: gdb.cp/inherit.exp: set width 0
PASS: gdb.cp/inherit.exp: ptype A (FIXME)
PASS: gdb.cp/inherit.exp: ptype class A (FIXME)
PASS: gdb.cp/inherit.exp: ptype g_A (FIXME)
PASS: gdb.cp/inherit.exp: ptype B
PASS: gdb.cp/inherit.exp: ptype class B
PASS: gdb.cp/inherit.exp: ptype g_B
PASS: gdb.cp/inherit.exp: ptype C
PASS: gdb.cp/inherit.exp: ptype class C
PASS: gdb.cp/inherit.exp: ptype g_C
PASS: gdb.cp/inherit.exp: ptype tagless struct
PASS: gdb.cp/inherit.exp: ptype variable of type tagless struct
PASS: gdb.cp/inherit.exp: ptype D
PASS: gdb.cp/inherit.exp: ptype class D
PASS: gdb.cp/inherit.exp: ptype g_D
PASS: gdb.cp/inherit.exp: ptype E
PASS: gdb.cp/inherit.exp: ptype class E
PASS: gdb.cp/inherit.exp: ptype g_E
PASS: gdb.cp/inherit.exp: ptype vA
PASS: gdb.cp/inherit.exp: ptype class vA
PASS: gdb.cp/inherit.exp: ptype g_vA
PASS: gdb.cp/inherit.exp: ptype vB
PASS: gdb.cp/inherit.exp: ptype class vB
PASS: gdb.cp/inherit.exp: ptype g_vB
PASS: gdb.cp/inherit.exp: ptype vC
PASS: gdb.cp/inherit.exp: ptype class vC
PASS: gdb.cp/inherit.exp: ptype g_vC
PASS: gdb.cp/inherit.exp: ptype vD
PASS: gdb.cp/inherit.exp: ptype class vD
PASS: gdb.cp/inherit.exp: ptype g_vD
PASS: gdb.cp/inherit.exp: ptype vE
PASS: gdb.cp/inherit.exp: ptype class vE
PASS: gdb.cp/inherit.exp: ptype g_vE
PASS: gdb.cp/inherit.exp: print g_A.A::a
PASS: gdb.cp/inherit.exp: print g_A.A::x
PASS: gdb.cp/inherit.exp: print g_A.a
PASS: gdb.cp/inherit.exp: print g_A.x
PASS: gdb.cp/inherit.exp: print g_B.A::a
PASS: gdb.cp/inherit.exp: print g_B.A::x
PASS: gdb.cp/inherit.exp: print g_B.B::b
PASS: gdb.cp/inherit.exp: print g_B.B::x
PASS: gdb.cp/inherit.exp: print g_B.a
PASS: gdb.cp/inherit.exp: print g_B.b
PASS: gdb.cp/inherit.exp: print g_B.x
PASS: gdb.cp/inherit.exp: print g_C.A::a
PASS: gdb.cp/inherit.exp: print g_C.A::x
PASS: gdb.cp/inherit.exp: print g_C.C::c
PASS: gdb.cp/inherit.exp: print g_C.C::x
PASS: gdb.cp/inherit.exp: print g_C.a
PASS: gdb.cp/inherit.exp: print g_C.c
PASS: gdb.cp/inherit.exp: print g_C.x
PASS: gdb.cp/inherit.exp: print g_A
PASS: gdb.cp/inherit.exp: print g_B
PASS: gdb.cp/inherit.exp: print g_C
PASS: gdb.cp/inherit.exp: print g_A.A::a
PASS: gdb.cp/inherit.exp: print g_A.A::x
PASS: gdb.cp/inherit.exp: print g_B.A::a
PASS: gdb.cp/inherit.exp: print g_B.A::x
PASS: gdb.cp/inherit.exp: print g_B.B::b
PASS: gdb.cp/inherit.exp: print g_B.B::x
PASS: gdb.cp/inherit.exp: print g_C.A::a
PASS: gdb.cp/inherit.exp: print g_C.A::x
PASS: gdb.cp/inherit.exp: print g_C.C::c
PASS: gdb.cp/inherit.exp: print g_C.C::x
KFAIL: gdb.cp/inherit.exp: print g_D.A::a (PRMS: gdb/68)
KFAIL: gdb.cp/inherit.exp: print g_D.A::x (PRMS: gdb/68)
PASS: gdb.cp/inherit.exp: print g_D.B::b
PASS: gdb.cp/inherit.exp: print g_D.B::x
PASS: gdb.cp/inherit.exp: print g_D.C::c
PASS: gdb.cp/inherit.exp: print g_D.C::x
PASS: gdb.cp/inherit.exp: print g_D.D::d
PASS: gdb.cp/inherit.exp: print g_D.D::x
KFAIL: gdb.cp/inherit.exp: print g_E.A::a (PRMS: gdb/68)
KFAIL: gdb.cp/inherit.exp: print g_E.A::x (PRMS: gdb/68)
PASS: gdb.cp/inherit.exp: print g_E.B::b
PASS: gdb.cp/inherit.exp: print g_E.B::x
PASS: gdb.cp/inherit.exp: print g_E.C::c
PASS: gdb.cp/inherit.exp: print g_E.C::x
PASS: gdb.cp/inherit.exp: print g_E.D::d
PASS: gdb.cp/inherit.exp: print g_E.D::x
PASS: gdb.cp/inherit.exp: print g_E.E::e
PASS: gdb.cp/inherit.exp: print g_E.E::x
PASS: gdb.cp/inherit.exp: ptype g_D.b
PASS: gdb.cp/inherit.exp: ptype g_D.c
PASS: gdb.cp/inherit.exp: ptype g_D.d
PASS: gdb.cp/inherit.exp: ptype g_A.A::a
PASS: gdb.cp/inherit.exp: ptype g_A.A::x
PASS: gdb.cp/inherit.exp: ptype g_B.A::a
PASS: gdb.cp/inherit.exp: ptype g_B.A::x
PASS: gdb.cp/inherit.exp: ptype g_B.B::b
PASS: gdb.cp/inherit.exp: ptype g_B.B::x
PASS: gdb.cp/inherit.exp: ptype g_C.A::a
PASS: gdb.cp/inherit.exp: ptype g_C.A::x
PASS: gdb.cp/inherit.exp: ptype g_C.C::c
PASS: gdb.cp/inherit.exp: ptype g_C.C::x
KFAIL: gdb.cp/inherit.exp: ptype g_D.A::a (PRMS: gdb/68)
KFAIL: gdb.cp/inherit.exp: ptype g_D.A::x (PRMS: gdb/68)
PASS: gdb.cp/inherit.exp: ptype g_D.B::b
PASS: gdb.cp/inherit.exp: ptype g_D.B::x
PASS: gdb.cp/inherit.exp: ptype g_D.C::c
PASS: gdb.cp/inherit.exp: ptype g_D.C::x
PASS: gdb.cp/inherit.exp: ptype g_D.D::d
PASS: gdb.cp/inherit.exp: ptype g_D.D::x
KFAIL: gdb.cp/inherit.exp: ptype g_E.A::a (PRMS: gdb/68)
KFAIL: gdb.cp/inherit.exp: ptype g_E.A::x (PRMS: gdb/68)
PASS: gdb.cp/inherit.exp: ptype g_E.B::b
PASS: gdb.cp/inherit.exp: ptype g_E.B::x
PASS: gdb.cp/inherit.exp: ptype g_E.C::c
PASS: gdb.cp/inherit.exp: ptype g_E.C::x
PASS: gdb.cp/inherit.exp: ptype g_E.D::d
PASS: gdb.cp/inherit.exp: ptype g_E.D::x
PASS: gdb.cp/inherit.exp: ptype g_E.E::e
PASS: gdb.cp/inherit.exp: ptype g_E.E::x
PASS: gdb.cp/inherit.exp: print g_D
PASS: gdb.cp/inherit.exp: print g_E
PASS: gdb.cp/inherit.exp: print anonymous union member
PASS: gdb.cp/inherit.exp: print variable of type anonymous union
PASS: gdb.cp/inherit.exp: print type of anonymous union
PASS: gdb.cp/inherit.exp: print g_vA.vA::va
PASS: gdb.cp/inherit.exp: print g_vA.vA::vx
PASS: gdb.cp/inherit.exp: print g_vA.va
PASS: gdb.cp/inherit.exp: print g_vA.vx
PASS: gdb.cp/inherit.exp: print g_vB.vA::va
PASS: gdb.cp/inherit.exp: print g_vB.vA::vx
PASS: gdb.cp/inherit.exp: print g_vB.vB::vb
PASS: gdb.cp/inherit.exp: print g_vB.vB::vx
PASS: gdb.cp/inherit.exp: print g_vB.va
PASS: gdb.cp/inherit.exp: print g_vB.vb
PASS: gdb.cp/inherit.exp: print g_vB.vx
PASS: gdb.cp/inherit.exp: print g_vC.vA::va
PASS: gdb.cp/inherit.exp: print g_vC.vA::vx
PASS: gdb.cp/inherit.exp: print g_vC.vC::vc
PASS: gdb.cp/inherit.exp: print g_vC.vC::vx
PASS: gdb.cp/inherit.exp: print g_vC.va
PASS: gdb.cp/inherit.exp: print g_vC.vc
PASS: gdb.cp/inherit.exp: print g_vC.vx
PASS: gdb.cp/inherit.exp: print g_vA
PASS: gdb.cp/inherit.exp: print g_vB (FIXME v3 vtbl ptr)
PASS: gdb.cp/inherit.exp: print g_vC (FIXME v3 vtbl ptr)
PASS: gdb.cp/inherit.exp: print g_vD.vA::va
PASS: gdb.cp/inherit.exp: print g_vD.vA::vx
PASS: gdb.cp/inherit.exp: print g_vD.vB::vb
PASS: gdb.cp/inherit.exp: print g_vD.vB::vx
PASS: gdb.cp/inherit.exp: print g_vD.vC::vc
PASS: gdb.cp/inherit.exp: print g_vD.vC::vx
PASS: gdb.cp/inherit.exp: print g_vD.vD::vd
PASS: gdb.cp/inherit.exp: print g_vD.vD::vx
PASS: gdb.cp/inherit.exp: print g_vE.vA::va
PASS: gdb.cp/inherit.exp: print g_vE.vA::vx
PASS: gdb.cp/inherit.exp: print g_vE.vB::vb
PASS: gdb.cp/inherit.exp: print g_vE.vB::vx
PASS: gdb.cp/inherit.exp: print g_vE.vC::vc
PASS: gdb.cp/inherit.exp: print g_vE.vC::vx
PASS: gdb.cp/inherit.exp: print g_vE.vD::vd
PASS: gdb.cp/inherit.exp: print g_vE.vD::vx
PASS: gdb.cp/inherit.exp: print g_vE.vE::ve
PASS: gdb.cp/inherit.exp: print g_vE.vE::vx
PASS: gdb.cp/inherit.exp: print g_vD (FIXME v3 vtbl ptr)
PASS: gdb.cp/inherit.exp: print g_vE (FIXME v3 vtbl ptr)
Running ../../../master/gdb/testsuite/gdb.cp/koenig.exp ...
PASS: gdb.cp/koenig.exp: p first(c)
PASS: gdb.cp/koenig.exp: p second(0,0,c,0,0)
PASS: gdb.cp/koenig.exp: p first(0,c)
PASS: gdb.cp/koenig.exp: p first(b.c)
PASS: gdb.cp/koenig.exp: p foo(eo)
PASS: gdb.cp/koenig.exp: p foo(eo, eo)
PASS: gdb.cp/koenig.exp: p foo(eo, eo, 1)
PASS: gdb.cp/koenig.exp: p foo(fo, eo)
PASS: gdb.cp/koenig.exp: p foo(1 ,fo, eo)
PASS: gdb.cp/koenig.exp: p foo(go, fo, eo)
PASS: gdb.cp/koenig.exp: p fake(eo)
PASS: gdb.cp/koenig.exp: p foo (fake)
PASS: gdb.cp/koenig.exp: p foo(io)
PASS: gdb.cp/koenig.exp: p foo(ix)
PASS: gdb.cp/koenig.exp: p foo(ju)
PASS: gdb.cp/koenig.exp: p foo(js)
PASS: gdb.cp/koenig.exp: p foo(je)
XFAIL: gdb.cp/koenig.exp: p foo(jab)
PASS: gdb.cp/koenig.exp: p foo(jap)
PASS: gdb.cp/koenig.exp: p foo(japp)
PASS: gdb.cp/koenig.exp: p foo(jca)
PASS: gdb.cp/koenig.exp: p foo(ko,1)
PASS: gdb.cp/koenig.exp: p foo(ko,1.0f)
XFAIL: gdb.cp/koenig.exp: p bar(ko,1)
PASS: gdb.cp/koenig.exp: p foo(labo)
PASS: gdb.cp/koenig.exp: p ma.foo('a')
PASS: gdb.cp/koenig.exp: p foo(ma,'a')
PASS: gdb.cp/koenig.exp: p M::N::foo(ma,'a')
PASS: gdb.cp/koenig.exp: p M::FAKE::foo(ma,'a')
PASS: gdb.cp/koenig.exp: p M::N::fake(ma,'a')
PASS: gdb.cp/koenig.exp: p M::bar('a')
PASS: gdb.cp/koenig.exp: p M::N::bar('a')
PASS: gdb.cp/koenig.exp: p foo(ttoa, 'a')
PASS: gdb.cp/koenig.exp: p foo (p_union)
PASS: gdb.cp/koenig.exp: p q == 5
PASS: gdb.cp/koenig.exp: p q == 5.0f
PASS: gdb.cp/koenig.exp: p q != 5
PASS: gdb.cp/koenig.exp: p q != 5.0f
PASS: gdb.cp/koenig.exp: p q + 5.0f
PASS: gdb.cp/koenig.exp: p q + 5
PASS: gdb.cp/koenig.exp: p ++q
PASS: gdb.cp/koenig.exp: p r.rfoo()
PASS: gdb.cp/koenig.exp: continue to breakpoint: marker1
PASS: gdb.cp/koenig.exp: p rfoo()
PASS: gdb.cp/koenig.exp: p this->rfoo()
Running ../../../master/gdb/testsuite/gdb.cp/local.exp ...
PASS: gdb.cp/local.exp: up from marker1
PASS: gdb.cp/local.exp: ptype l
PASS: gdb.cp/local.exp: ptype Local
PASS: gdb.cp/local.exp: break marker2
PASS: gdb.cp/local.exp: continuing to marker2
PASS: gdb.cp/local.exp: up from marker2
PASS: gdb.cp/local.exp: Local out of scope
PASS: gdb.cp/local.exp: ptype InnerLocal (pattern 1)
PASS: gdb.cp/local.exp: ptype NestedInnerLocal
KFAIL: gdb.cp/local.exp: ptype InnerLocal::NestedInnerLocal (PRMS: gdb/482)
Running ../../../master/gdb/testsuite/gdb.cp/m-data.exp ...
PASS: gdb.cp/m-data.exp: continue to breakpoint: end of first constructors
PASS: gdb.cp/m-data.exp: simple object, const bool
PASS: gdb.cp/m-data.exp: simple object, const int
PASS: gdb.cp/m-data.exp: simple object, long
PASS: gdb.cp/m-data.exp: simple object, enum
PASS: gdb.cp/m-data.exp: derived template object, base const bool
PASS: gdb.cp/m-data.exp: derived template object, base const int
PASS: gdb.cp/m-data.exp: derived template object, base long
PASS: gdb.cp/m-data.exp: derived template object, base enum
PASS: gdb.cp/m-data.exp: derived template object, derived enum
PASS: gdb.cp/m-data.exp: template object, const bool
PASS: gdb.cp/m-data.exp: template object, const int
PASS: gdb.cp/m-data.exp: template object, long
PASS: gdb.cp/m-data.exp: template object, base enum
PASS: gdb.cp/m-data.exp: template object, derived enum
PASS: gdb.cp/m-data.exp: continue to breakpoint: continue to shadow breakpoint
PASS: gdb.cp/m-data.exp: shadowing member
PASS: gdb.cp/m-data.exp: shadowed global variable
Running ../../../master/gdb/testsuite/gdb.cp/m-static.exp ...
PASS: gdb.cp/m-static.exp: continue to breakpoint: end of constructors
PASS: gdb.cp/m-static.exp: simple object, static const bool
PASS: gdb.cp/m-static.exp: simple object, static const int
PASS: gdb.cp/m-static.exp: simple object, static long
PASS: gdb.cp/m-static.exp: simple object, static enum
PASS: gdb.cp/m-static.exp: derived template object, base static const bool
PASS: gdb.cp/m-static.exp: derived template object, base static const int
PASS: gdb.cp/m-static.exp: derived template object, base static long
PASS: gdb.cp/m-static.exp: derived template object, base static enum
PASS: gdb.cp/m-static.exp: derived template object, static enum
PASS: gdb.cp/m-static.exp: template object, static const bool
PASS: gdb.cp/m-static.exp: template object, static const int
PASS: gdb.cp/m-static.exp: template object, static long
PASS: gdb.cp/m-static.exp: template object, static enum
PASS: gdb.cp/m-static.exp: template object, static derived enum
PASS: gdb.cp/m-static.exp: static const int initialized elsewhere
PASS: gdb.cp/m-static.exp: static const int initialized nowhere
PASS: gdb.cp/m-static.exp: static const int initialized in class definition
PASS: gdb.cp/m-static.exp: static const float initialized in class definition
PASS: gdb.cp/m-static.exp: info variable everywhere
PASS: gdb.cp/m-static.exp: step
PASS: gdb.cp/m-static.exp: print svar
Running ../../../master/gdb/testsuite/gdb.cp/maint.exp ...
PASS: gdb.cp/maint.exp: help maintenance cplus
PASS: gdb.cp/maint.exp: help maint cp
PASS: gdb.cp/maint.exp: maint cp
PASS: gdb.cp/maint.exp: help maint cp first_component
PASS: gdb.cp/maint.exp: help maint cp namespace
PASS: gdb.cp/maint.exp: set complaints 1000
PASS: gdb.cp/maint.exp: maint cp first_component foo
PASS: gdb.cp/maint.exp: maint cp first_component operator<<
PASS: gdb.cp/maint.exp: maint cp first_component operator>>
PASS: gdb.cp/maint.exp: maint cp first_component operator ->
PASS: gdb.cp/maint.exp: maint cp first_component operator()
PASS: gdb.cp/maint.exp: maint cp first_component operator>
PASS: gdb.cp/maint.exp: maint cp first_component operator<
PASS: gdb.cp/maint.exp: maint cp first_component operator ->
PASS: gdb.cp/maint.exp: maint cp first_component operator  ->
PASS: gdb.cp/maint.exp: maint cp first_component foo()
PASS: gdb.cp/maint.exp: maint cp first_component foo(int)
PASS: gdb.cp/maint.exp: maint cp first_component foo(X::Y)
PASS: gdb.cp/maint.exp: maint cp first_component foo(X::Y, A::B)
PASS: gdb.cp/maint.exp: maint cp first_component foo(std::basic_streambuf<wchar_t,std::char_traits<wchar_t> >)
PASS: gdb.cp/maint.exp: maint cp first_component operator>(X::Y)
PASS: gdb.cp/maint.exp: maint cp first_component int operator<< <char>()
PASS: gdb.cp/maint.exp: maint cp first_component T<Cooperator>
PASS: gdb.cp/maint.exp: maint cp first_component int foo<&(operator<<(C, C))>()
PASS: gdb.cp/maint.exp: maint cp first_component int foo<&operator<<(C, C)>()
PASS: gdb.cp/maint.exp: maint cp first_component int foo<operator<<(C, C)>()
PASS: gdb.cp/maint.exp: maint cp first_component foo::bar
PASS: gdb.cp/maint.exp: maint cp first_component foo::bar::baz
PASS: gdb.cp/maint.exp: maint cp first_component C<A>::bar
PASS: gdb.cp/maint.exp: maint cp first_component C<std::basic_streambuf<wchar_t,std::char_traits<wchar_t> > >::bar
PASS: gdb.cp/maint.exp: maint cp first_component foo<
PASS: gdb.cp/maint.exp: maint cp first_component foo(
PASS: gdb.cp/maint.exp: maint cp first_component bool operator<<char>
PASS: gdb.cp/maint.exp: maint cp namespace
Running ../../../master/gdb/testsuite/gdb.cp/mb-ctor.exp ...
PASS: gdb.cp/mb-ctor.exp: set-breakpoint at ctor
PASS: gdb.cp/mb-ctor.exp: set-breakpoint at dtor
PASS: gdb.cp/mb-ctor.exp: run to breakpoint 1 v1
PASS: gdb.cp/mb-ctor.exp: continue to breakpoint: set breakpoint here
PASS: gdb.cp/mb-ctor.exp: run to breakpoint 1 v2
PASS: gdb.cp/mb-ctor.exp: continue to breakpoint: set breakpoint here
PASS: gdb.cp/mb-ctor.exp: run to breakpoint 3 v1
PASS: gdb.cp/mb-ctor.exp: run to breakpoint 3 v2
PASS: gdb.cp/mb-ctor.exp: run to exit
Running ../../../master/gdb/testsuite/gdb.cp/mb-inline.exp ...
PASS: gdb.cp/mb-inline.exp: set breakpoint
PASS: gdb.cp/mb-inline.exp: run to breakpoint
PASS: gdb.cp/mb-inline.exp: run to breakpoint 2
PASS: gdb.cp/mb-inline.exp: disabling location: disable
PASS: gdb.cp/mb-inline.exp: disabling location: run to breakpoint
PASS: gdb.cp/mb-inline.exp: disabled breakpoint 1.2
PASS: gdb.cp/mb-inline.exp: set multi_line_foo breakpoint
PASS: gdb.cp/mb-inline.exp: run to multi_line_foo breakpoint 4 afn
PASS: gdb.cp/mb-inline.exp: run to multi_line_foo breakpoint 4 bfn
Running ../../../master/gdb/testsuite/gdb.cp/mb-templates.exp ...
PASS: gdb.cp/mb-templates.exp: initial condition: set breakpoint
PASS: gdb.cp/mb-templates.exp: initial condition: run to breakpoint
PASS: gdb.cp/mb-templates.exp: initial condition: run to breakpoint 2
PASS: gdb.cp/mb-templates.exp: separate condition: set breakpoint
PASS: gdb.cp/mb-templates.exp: separate condition: set condition
PASS: gdb.cp/mb-templates.exp: separate condition: run to breakpoint
PASS: gdb.cp/mb-templates.exp: separate condition: run to breakpoint 2
PASS: gdb.cp/mb-templates.exp: disabling location: disable
PASS: gdb.cp/mb-templates.exp: disabling location: run to breakpoint
PASS: gdb.cp/mb-templates.exp: disabling location: enable
PASS: gdb.cp/mb-templates.exp: disable breakpoint: disable
PASS: gdb.cp/mb-templates.exp: disable breakpoint: run to breakpoint
PASS: gdb.cp/mb-templates.exp: instantiation: set breakpoint
PASS: gdb.cp/mb-templates.exp: instantiation: run to breakpoint
PASS: gdb.cp/mb-templates.exp: instantiation: run to breakpoint 2
PASS: gdb.cp/mb-templates.exp: set multi_line_foo breakpoint
PASS: gdb.cp/mb-templates.exp: run to multi_line_foo breakpoint 2 <int>
PASS: gdb.cp/mb-templates.exp: run to multi_line_foo breakpoint 2 <double>
Running ../../../master/gdb/testsuite/gdb.cp/member-ptr.exp ...
PASS: gdb.cp/member-ptr.exp: continue to breakpoint: continue to pmi = NULL
PASS: gdb.cp/member-ptr.exp: ptype pmi (A::j)
PASS: gdb.cp/member-ptr.exp: print pmi (A::j)
PASS: gdb.cp/member-ptr.exp: print a.*pmi (A::j)
PASS: gdb.cp/member-ptr.exp: print a_p->*pmi (A::j)
PASS: gdb.cp/member-ptr.exp: set var pmi = &A::jj
PASS: gdb.cp/member-ptr.exp: print pmi (A::jj)
PASS: gdb.cp/member-ptr.exp: print a.*pmi (A::jj)
PASS: gdb.cp/member-ptr.exp: set var pmi = &A::j
PASS: gdb.cp/member-ptr.exp: print a.*pmi (A::j) (again)
PASS: gdb.cp/member-ptr.exp: print a.*pmi = 33
PASS: gdb.cp/member-ptr.exp: print a.*pmi (A::j) (33)
PASS: gdb.cp/member-ptr.exp: print a (j = 33)
PASS: gdb.cp/member-ptr.exp: print a_p->*pmi = 44
PASS: gdb.cp/member-ptr.exp: print a_p->*pmi (44)
PASS: gdb.cp/member-ptr.exp: print a (j = 44)
PASS: gdb.cp/member-ptr.exp: ptype a.*pmi
PASS: gdb.cp/member-ptr.exp: print *pmi
PASS: gdb.cp/member-ptr.exp: ptype *pmi
PASS: gdb.cp/member-ptr.exp: print (int) pmi
PASS: gdb.cp/member-ptr.exp: print ((int) pmi) == ((char *) &a.j - (char *) &a)
PASS: gdb.cp/member-ptr.exp: ptype pmf
PASS: gdb.cp/member-ptr.exp: print pmf
PASS: gdb.cp/member-ptr.exp: ptype pmf_p
PASS: gdb.cp/member-ptr.exp: gdb/NNNN
PASS: gdb.cp/member-ptr.exp: print a.*pmf
PASS: gdb.cp/member-ptr.exp: print a_p->*pmf
PASS: gdb.cp/member-ptr.exp: set var pmf = &A::foo
PASS: gdb.cp/member-ptr.exp: print *pmf
PASS: gdb.cp/member-ptr.exp: ptype *pmf
PASS: gdb.cp/member-ptr.exp: print (a.*pmf)(3)
PASS: gdb.cp/member-ptr.exp: ptype a.*pmf
PASS: gdb.cp/member-ptr.exp: print diamond_pmi
PASS: gdb.cp/member-ptr.exp: print diamond.*diamond_pmi
PASS: gdb.cp/member-ptr.exp: print diamond.*left_pmf
PASS: gdb.cp/member-ptr.exp: print diamond.*right_pmf
PASS: gdb.cp/member-ptr.exp: print (diamond.*left_pmf) ()
PASS: gdb.cp/member-ptr.exp: print (diamond.*right_pmf) ()
PASS: gdb.cp/member-ptr.exp: print diamond.*left_vpmf
PASS: gdb.cp/member-ptr.exp: print diamond.*right_vpmf
PASS: gdb.cp/member-ptr.exp: print (diamond.*left_vpmf) ()
PASS: gdb.cp/member-ptr.exp: print (diamond.*left_base_vpmf) ()
PASS: gdb.cp/member-ptr.exp: print (diamond.*right_vpmf) ()
PASS: gdb.cp/member-ptr.exp: print left_vpmf
PASS: gdb.cp/member-ptr.exp: print right_vpmf
PASS: gdb.cp/member-ptr.exp: print base_vpmf
PASS: gdb.cp/member-ptr.exp: print diamond.*left_vpmf ()
PASS: gdb.cp/member-ptr.exp: print null_pmi
PASS: gdb.cp/member-ptr.exp: print null_pmi = &A::j
PASS: gdb.cp/member-ptr.exp: print null_pmi = 0
PASS: gdb.cp/member-ptr.exp: print null_pmf
PASS: gdb.cp/member-ptr.exp: print null_pmf = &A::foo
PASS: gdb.cp/member-ptr.exp: print null_pmf = 0
Running ../../../master/gdb/testsuite/gdb.cp/method.exp ...
PASS: gdb.cp/method.exp: break A::foo
PASS: gdb.cp/method.exp: continue to A::foo
PASS: gdb.cp/method.exp: print x in A::foo
PASS: gdb.cp/method.exp: print this in A::foo
PASS: gdb.cp/method.exp: break A::bar
PASS: gdb.cp/method.exp: continue to A::bar
PASS: gdb.cp/method.exp: print x in A::bar
PASS: gdb.cp/method.exp: print this in A::bar
PASS: gdb.cp/method.exp: break 21
PASS: gdb.cp/method.exp: continue to 21
PASS: gdb.cp/method.exp: print data_ in funk::getFunky
PASS: gdb.cp/method.exp: print this in funk::getFunky
PASS: gdb.cp/method.exp: print res in funk::getFunky
PASS: gdb.cp/method.exp: ptype A
PASS: gdb.cp/method.exp: finish program
Running ../../../master/gdb/testsuite/gdb.cp/method2.exp ...
PASS: gdb.cp/method2.exp: set multiple-symbols ask
PASS: gdb.cp/method2.exp: setting language c
PASS: gdb.cp/method2.exp: breaking in method (c)
PASS: gdb.cp/method2.exp: setting language c++
PASS: gdb.cp/method2.exp: breaking in method (c++)
PASS: gdb.cp/method2.exp: continue until exit at continue to end
Running ../../../master/gdb/testsuite/gdb.cp/minsym-fallback.exp ...
PASS: gdb.cp/minsym-fallback.exp: set breakpoint pending off
PASS: gdb.cp/minsym-fallback.exp: break C::f()
PASS: gdb.cp/minsym-fallback.exp: break C::operator()()
Running ../../../master/gdb/testsuite/gdb.cp/misc.exp ...
PASS: gdb.cp/misc.exp: deduced language is C++, before full symbols
PASS: gdb.cp/misc.exp: deduced language is C++, after full symbols
PASS: gdb.cp/misc.exp: print s.a for foo struct (known gcc 2.7.2 and earlier bug)
PASS: gdb.cp/misc.exp: print as bool (setup)
PASS: gdb.cp/misc.exp: print as bool (print 1 == 1)
PASS: gdb.cp/misc.exp: print as bool (print 1 == 2)
PASS: gdb.cp/misc.exp: print a bool var
PASS: gdb.cp/misc.exp: set a bool var (setup)
PASS: gdb.cp/misc.exp: set a bool var (print v_bool)
PASS: gdb.cp/misc.exp: print a bool array
PASS: gdb.cp/misc.exp: set a bool array elem (setup)
PASS: gdb.cp/misc.exp: set a bool array elem (print v_bool_array)
PASS: gdb.cp/misc.exp: print true
PASS: gdb.cp/misc.exp: print false
PASS: gdb.cp/misc.exp: 1 + true
PASS: gdb.cp/misc.exp: 3 + false
PASS: gdb.cp/misc.exp: 1 < 2 < 3
PASS: gdb.cp/misc.exp: 2 < 1 > 4
PASS: gdb.cp/misc.exp: (bool)43
PASS: gdb.cp/misc.exp: (bool)0
PASS: gdb.cp/misc.exp: (bool)17.93
PASS: gdb.cp/misc.exp: (bool)0.0
PASS: gdb.cp/misc.exp: (int)true
PASS: gdb.cp/misc.exp: (int)false
Running ../../../master/gdb/testsuite/gdb.cp/namespace-nested-import.exp ...
PASS: gdb.cp/namespace-nested-import.exp: print C::x
Running ../../../master/gdb/testsuite/gdb.cp/namespace.exp ...
PASS: gdb.cp/namespace.exp: up from marker1
PASS: gdb.cp/namespace.exp: print 'AAA::c'
PASS: gdb.cp/namespace.exp: print AAA::c
PASS: gdb.cp/namespace.exp: print ina
PASS: gdb.cp/namespace.exp: ptype ina
PASS: gdb.cp/namespace.exp: info func xyzq
PASS: gdb.cp/namespace.exp: print 'AAA::xyzq'('x')
PASS: gdb.cp/namespace.exp: print AAA::xyzq('x')
PASS: gdb.cp/namespace.exp: break AAA::xyzq
PASS: gdb.cp/namespace.exp: print 'BBB::CCC::xyzq'('x')
PASS: gdb.cp/namespace.exp: print BBB::CCC::xyzq('x')
PASS: gdb.cp/namespace.exp: break BBB::CCC::xyzq
PASS: gdb.cp/namespace.exp: print 'BBB::Class::xyzq'
PASS: gdb.cp/namespace.exp: print BBB::Class::xyzq
PASS: gdb.cp/namespace.exp: break BBB::Class::xyzq
PASS: gdb.cp/namespace.exp: whatis C::cOtherFileType
PASS: gdb.cp/namespace.exp: whatis ::C::cOtherFileType
PASS: gdb.cp/namespace.exp: whatis C::cOtherFileVar
PASS: gdb.cp/namespace.exp: whatis ::C::cOtherFileVar
PASS: gdb.cp/namespace.exp: print C::cOtherFileVar
PASS: gdb.cp/namespace.exp: print ::C::cOtherFileVar
PASS: gdb.cp/namespace.exp: whatis C::OtherFileClass::cOtherFileClassType
PASS: gdb.cp/namespace.exp: whatis ::C::OtherFileClass::cOtherFileClassType
PASS: gdb.cp/namespace.exp: print C::OtherFileClass::cOtherFileClassVar
PASS: gdb.cp/namespace.exp: print ::cOtherFileClassVar
PASS: gdb.cp/namespace.exp: print ::C::OtherFileClass::cOtherFileClassVar
PASS: gdb.cp/namespace.exp: print c
PASS: gdb.cp/namespace.exp: print cc
PASS: gdb.cp/namespace.exp: print 'C::cc'
PASS: gdb.cp/namespace.exp: print C::cc
PASS: gdb.cp/namespace.exp: print cd
PASS: gdb.cp/namespace.exp: print C::D::cd
PASS: gdb.cp/namespace.exp: print 'E::cde'
PASS: gdb.cp/namespace.exp: print E::cde
PASS: gdb.cp/namespace.exp: print shadow
PASS: gdb.cp/namespace.exp: print E::ce
PASS: gdb.cp/namespace.exp: ptype C
PASS: gdb.cp/namespace.exp: ptype E
PASS: gdb.cp/namespace.exp: ptype CClass
PASS: gdb.cp/namespace.exp: ptype CClass::NestedClass
PASS: gdb.cp/namespace.exp: ptype NestedClass
PASS: gdb.cp/namespace.exp: ptype ::C::CClass
PASS: gdb.cp/namespace.exp: ptype ::C::CClass::NestedClass
PASS: gdb.cp/namespace.exp: ptype ::C::NestedClass
PASS: gdb.cp/namespace.exp: ptype C::CClass
PASS: gdb.cp/namespace.exp: ptype C::CClass::NestedClass
PASS: gdb.cp/namespace.exp: ptype C::NestedClass
PASS: gdb.cp/namespace.exp: print cOtherFile
PASS: gdb.cp/namespace.exp: ptype OtherFileClass
PASS: gdb.cp/namespace.exp: ptype ::C::OtherFileClass
PASS: gdb.cp/namespace.exp: ptype C::OtherFileClass
PASS: gdb.cp/namespace.exp: ptype OtherFileClass typedefs
PASS: gdb.cp/namespace.exp: ptype ::C::OtherFileClass typedefs
PASS: gdb.cp/namespace.exp: print cX
PASS: gdb.cp/namespace.exp: print 'F::cXf'
PASS: gdb.cp/namespace.exp: print F::cXf
PASS: gdb.cp/namespace.exp: print F::cXfX
PASS: gdb.cp/namespace.exp: print X
PASS: gdb.cp/namespace.exp: print 'G::Xg'
PASS: gdb.cp/namespace.exp: print G::Xg
PASS: gdb.cp/namespace.exp: print G::XgX
PASS: gdb.cp/namespace.exp: print cXOtherFile
PASS: gdb.cp/namespace.exp: print XOtherFile
PASS: gdb.cp/namespace.exp: print AAA::ALPHA
PASS: gdb.cp/namespace.exp: whatis ::C::CClass::NestedClass
PASS: gdb.cp/namespace.exp: whatis ::C::CClass::NestedClass *
Running ../../../master/gdb/testsuite/gdb.cp/nextoverthrow.exp ...
PASS: gdb.cp/nextoverthrow.exp: check for unwinder hook
UNSUPPORTED: gdb.cp/nextoverthrow.exp: nextoverthrow.exp could not find _Unwind_DebugHook
Running ../../../master/gdb/testsuite/gdb.cp/no-dmgl-verbose.exp ...
PASS: gdb.cp/no-dmgl-verbose.exp: set breakpoint pending off
PASS: gdb.cp/no-dmgl-verbose.exp: DMGL_VERBOSE-demangled f(std::string) is not defined
Running ../../../master/gdb/testsuite/gdb.cp/noparam.exp ...
PASS: gdb.cp/noparam.exp: p C::m (int)
Running ../../../master/gdb/testsuite/gdb.cp/nsdecl.exp ...
PASS: gdb.cp/nsdecl.exp: print fakex
Running ../../../master/gdb/testsuite/gdb.cp/nsimport.exp ...
PASS: gdb.cp/nsimport.exp: print x
PASS: gdb.cp/nsimport.exp: print xx
PASS: gdb.cp/nsimport.exp: print xxx
Running ../../../master/gdb/testsuite/gdb.cp/nsnested.exp ...
PASS: gdb.cp/nsnested.exp: print ab
PASS: gdb.cp/nsnested.exp: continue to breakpoint: C::first
PASS: gdb.cp/nsnested.exp: print ab
PASS: gdb.cp/nsnested.exp: print C::D::ab
PASS: gdb.cp/nsnested.exp: continue to breakpoint: C::D::second
PASS: gdb.cp/nsnested.exp: print ab
Running ../../../master/gdb/testsuite/gdb.cp/nsnoimports.exp ...
PASS: gdb.cp/nsnoimports.exp: print A::_a
PASS: gdb.cp/nsnoimports.exp: print A::B::ab
PASS: gdb.cp/nsnoimports.exp: print A::B::C::abc
PASS: gdb.cp/nsnoimports.exp: print _a
PASS: gdb.cp/nsnoimports.exp: print ab
PASS: gdb.cp/nsnoimports.exp: print abc
PASS: gdb.cp/nsnoimports.exp: continue to breakpoint: A::B::first
PASS: gdb.cp/nsnoimports.exp: print A::_a
PASS: gdb.cp/nsnoimports.exp: print A::B::ab
PASS: gdb.cp/nsnoimports.exp: print A::B::C::abc
PASS: gdb.cp/nsnoimports.exp: print _a
PASS: gdb.cp/nsnoimports.exp: print ab
PASS: gdb.cp/nsnoimports.exp: print C::abc
PASS: gdb.cp/nsnoimports.exp: print abc
PASS: gdb.cp/nsnoimports.exp: continue to breakpoint: A::B::C::second
PASS: gdb.cp/nsnoimports.exp: print A::_a
PASS: gdb.cp/nsnoimports.exp: print A::B::ab
PASS: gdb.cp/nsnoimports.exp: print A::B::C::abc
PASS: gdb.cp/nsnoimports.exp: print _a
PASS: gdb.cp/nsnoimports.exp: print ab
PASS: gdb.cp/nsnoimports.exp: print abc
Running ../../../master/gdb/testsuite/gdb.cp/nsrecurs.exp ...
PASS: gdb.cp/nsrecurs.exp: print ax
PASS: gdb.cp/nsrecurs.exp: print dx
PASS: gdb.cp/nsrecurs.exp: print xx
KFAIL: gdb.cp/nsrecurs.exp: ptype G::GF (PRMS: gdb/10541)
KFAIL: gdb.cp/nsrecurs.exp: print G::GF::FE::ex (PRMS: gdb/10541)
Running ../../../master/gdb/testsuite/gdb.cp/nsstress.exp ...
PASS: gdb.cp/nsstress.exp: print y
Running ../../../master/gdb/testsuite/gdb.cp/nsusing.exp ...
PASS: gdb.cp/nsusing.exp: print _a
PASS: gdb.cp/nsusing.exp: continue to breakpoint: marker3
PASS: gdb.cp/nsusing.exp: Print _a without import
PASS: gdb.cp/nsusing.exp: continue to breakpoint: marker1 stop
PASS: gdb.cp/nsusing.exp: print _a in a nested scope
PASS: gdb.cp/nsusing.exp: print cc
PASS: gdb.cp/nsusing.exp: print B::_a
PASS: gdb.cp/nsusing.exp: print _a in namespace alias scope
PASS: gdb.cp/nsusing.exp: print x in namespace alias scope
PASS: gdb.cp/nsusing.exp: Print _a without import
PASS: gdb.cp/nsusing.exp: print dx
PASS: gdb.cp/nsusing.exp: print efx
PASS: gdb.cp/nsusing.exp: print ghx
PASS: gdb.cp/nsusing.exp: print jx
PASS: gdb.cp/nsusing.exp: continue to breakpoint: K::marker9
PASS: gdb.cp/nsusing.exp: print jx
PASS: gdb.cp/nsusing.exp: continue to breakpoint: marker10 stop
PASS: gdb.cp/nsusing.exp: print x (from M::x)
Running ../../../master/gdb/testsuite/gdb.cp/operator.exp ...
PASS: gdb.cp/operator.exp: global operator
PASS: gdb.cp/operator.exp: global operator overload
PASS: gdb.cp/operator.exp: ADL operator
PASS: gdb.cp/operator.exp: ADL operator overload
PASS: gdb.cp/operator.exp: Fully qualified explicit operator call
PASS: gdb.cp/operator.exp: anonymous namespace operator
PASS: gdb.cp/operator.exp: anonymous namespace operator overload
PASS: gdb.cp/operator.exp: anonymous namespace operator overload float
PASS: gdb.cp/operator.exp: imported operator
PASS: gdb.cp/operator.exp: imported operator overload
PASS: gdb.cp/operator.exp: imported operator overload float
PASS: gdb.cp/operator.exp: member operator
PASS: gdb.cp/operator.exp: member operator overload
PASS: gdb.cp/operator.exp: namespace alias
PASS: gdb.cp/operator.exp: imported declaration
PASS: gdb.cp/operator.exp: p l == 1
PASS: gdb.cp/operator.exp: p x[0]
Running ../../../master/gdb/testsuite/gdb.cp/oranking.exp ...
PASS: gdb.cp/oranking.exp: continue to breakpoint: end of main
KFAIL: gdb.cp/oranking.exp: p foo0(b) (PRMS: gdb/12096)
PASS: gdb.cp/oranking.exp: p test1()
PASS: gdb.cp/oranking.exp: p foo1(b)
PASS: gdb.cp/oranking.exp: p test2()
KFAIL: gdb.cp/oranking.exp: p foo2(b) (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test3()
PASS: gdb.cp/oranking.exp: p foo3(1.0f)
PASS: gdb.cp/oranking.exp: p test4()
KFAIL: gdb.cp/oranking.exp: p foo4(&a) (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test5()
PASS: gdb.cp/oranking.exp: p foo5(c)
PASS: gdb.cp/oranking.exp: p test6()
PASS: gdb.cp/oranking.exp: p foo6(bp)
PASS: gdb.cp/oranking.exp: p test7()
PASS: gdb.cp/oranking.exp: p foo7(cp)
PASS: gdb.cp/oranking.exp: p test8()
PASS: gdb.cp/oranking.exp: p foo8(co)
PASS: gdb.cp/oranking.exp: p test9()
PASS: gdb.cp/oranking.exp: p foo9(co)
PASS: gdb.cp/oranking.exp: p test10()
KFAIL: gdb.cp/oranking.exp: p foo10(amp) (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test101()
KFAIL: gdb.cp/oranking.exp: p foo101("abc") (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test11()
KFAIL: gdb.cp/oranking.exp: p foo11(d) (PRMS: gdb/12096)
PASS: gdb.cp/oranking.exp: p test12()
PASS: gdb.cp/oranking.exp: p foo12(1)
PASS: gdb.cp/oranking.exp: p test13()
KFAIL: gdb.cp/oranking.exp: p foo13(c) (PRMS: gdb/12098)
PASS: gdb.cp/oranking.exp: p test14()
KFAIL: gdb.cp/oranking.exp: p foo14(e) (PRMS: gdb/12096)
Running ../../../master/gdb/testsuite/gdb.cp/overload-const.exp ...
PASS: gdb.cp/overload-const.exp: set language c++
PASS: gdb.cp/overload-const.exp: setting breakpoint at myclass::func
Running ../../../master/gdb/testsuite/gdb.cp/overload.exp ...
PASS: gdb.cp/overload.exp: up from marker1
PASS: gdb.cp/overload.exp: print foo_instance1
PASS: gdb.cp/overload.exp: ptype foo_instance1 (shorter match)
PASS: gdb.cp/overload.exp: print foo_instance2
PASS: gdb.cp/overload.exp: print foo_instance3
PASS: gdb.cp/overload.exp: print call overloaded func 1 arg
PASS: gdb.cp/overload.exp: re-selected 'main' frame after inferior call
PASS: gdb.cp/overload.exp: print call overloaded func 2 args
PASS: gdb.cp/overload.exp: print call overloaded func 3 args
PASS: gdb.cp/overload.exp: print call overloaded func 4 args
PASS: gdb.cp/overload.exp: print call overloaded func 5 args
PASS: gdb.cp/overload.exp: print call overloaded func 6 args
PASS: gdb.cp/overload.exp: print call overloaded func 7 args
PASS: gdb.cp/overload.exp: print call overloaded func 8 args
PASS: gdb.cp/overload.exp: print call overloaded func 9 args
PASS: gdb.cp/overload.exp: print call overloaded func 10 args
PASS: gdb.cp/overload.exp: print call overloaded func 11 args
PASS: gdb.cp/overload.exp: print call overloaded func void arg
PASS: gdb.cp/overload.exp: print call overloaded func char arg
PASS: gdb.cp/overload.exp: print call overloaded func signed char arg
PASS: gdb.cp/overload.exp: print call overloaded func unsigned char arg
PASS: gdb.cp/overload.exp: print call overloaded func short arg
PASS: gdb.cp/overload.exp: print call overloaded func unsigned short arg
PASS: gdb.cp/overload.exp: print call overloaded func int arg
PASS: gdb.cp/overload.exp: print call overloaded func unsigned int arg
PASS: gdb.cp/overload.exp: print call overloaded func long arg
PASS: gdb.cp/overload.exp: print call overloaded func unsigned long arg
PASS: gdb.cp/overload.exp: print call overloaded func float arg
PASS: gdb.cp/overload.exp: print call overloaded func double arg
PASS: gdb.cp/overload.exp: print call overloaded func int\* arg
PASS: gdb.cp/overload.exp: print call overloaded func char\* arg
PASS: gdb.cp/overload.exp: print bar(a)
PASS: gdb.cp/overload.exp: print bar(b)
PASS: gdb.cp/overload.exp: print bar(c)
PASS: gdb.cp/overload.exp: print bar(d)
PASS: gdb.cp/overload.exp: list overloaded function with no args
PASS: gdb.cp/overload.exp: list overloaded function with int arg
PASS: gdb.cp/overload.exp: list overloaded function with function ptr args
PASS: gdb.cp/overload.exp: list overloaded function with function ptr args - quotes around argument
PASS: gdb.cp/overload.exp: list overload.cc:intToChar
PASS: gdb.cp/overload.exp: list overload.cc:intToChar(char)
PASS: gdb.cp/overload.exp: list overload.cc:'intToChar(char)'
PASS: gdb.cp/overload.exp: list 'overload.cc:intToChar(char)'
PASS: gdb.cp/overload.exp: list 'overload.cc':intToChar(char)
PASS: gdb.cp/overload.exp: list 'overload.cc':'intToChar(char)'
KFAIL: gdb.cp/overload.exp: list overload.cc:foo::overloadfnarg(int) (PRMS: gdb/11289)
KFAIL: gdb.cp/overload.exp: list overload.cc:'foo::overloadfnarg(int)' (PRMS: gdb/11289)
PASS: gdb.cp/overload.exp: print overloadNamespace(1)
PASS: gdb.cp/overload.exp: print overloadNamespace('a')
PASS: gdb.cp/overload.exp: print overloadNamespace(dummyInstance)
PASS: gdb.cp/overload.exp: print K::staticoverload ()
PASS: gdb.cp/overload.exp: print K::staticoverload (2)
PASS: gdb.cp/overload.exp: print K::staticoverload (2, 3)
PASS: gdb.cp/overload.exp: print N::nsoverload ()
PASS: gdb.cp/overload.exp: print N::nsoverload (2)
PASS: gdb.cp/overload.exp: print N::nsoverload (2, 3)
PASS: gdb.cp/overload.exp: print overloadNamespace(1) in XXX
PASS: gdb.cp/overload.exp: print overloadNamespace('a') in XXX
PASS: gdb.cp/overload.exp: print overloadNamespace(dummyInstance) in XXX
PASS: gdb.cp/overload.exp: print intToChar(1)
PASS: gdb.cp/overload.exp: print foo::overload1arg
PASS: gdb.cp/overload.exp: print foo::overload1arg(char***)
PASS: gdb.cp/overload.exp: print foo::overload1arg(void)
PASS: gdb.cp/overload.exp: print foo::overload1arg(char)
PASS: gdb.cp/overload.exp: print foo::overload1arg(signed char)
PASS: gdb.cp/overload.exp: print foo::overload1arg(unsigned char)
PASS: gdb.cp/overload.exp: print foo::overload1arg(short)
PASS: gdb.cp/overload.exp: print foo::overload1arg(unsigned short)
PASS: gdb.cp/overload.exp: print foo::overload1arg(int)
PASS: gdb.cp/overload.exp: print foo::overload1arg(unsigned int)
PASS: gdb.cp/overload.exp: print foo::overload1arg(long)
PASS: gdb.cp/overload.exp: print foo::overload1arg(unsigned long)
PASS: gdb.cp/overload.exp: print foo::overload1arg(float)
PASS: gdb.cp/overload.exp: print foo::overload1arg(double)
Running ../../../master/gdb/testsuite/gdb.cp/ovldbreak.exp ...
PASS: gdb.cp/ovldbreak.exp: set multiple-symbols ask
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 12
PASS: gdb.cp/ovldbreak.exp: set bp 2 on foo::overload1arg 12 line 111
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 11
PASS: gdb.cp/ovldbreak.exp: set bp 3 on foo::overload1arg 11 line 112
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 10
PASS: gdb.cp/ovldbreak.exp: set bp 4 on foo::overload1arg 10 line 113
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 9
PASS: gdb.cp/ovldbreak.exp: set bp 5 on foo::overload1arg 9 line 114
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 8
PASS: gdb.cp/ovldbreak.exp: set bp 6 on foo::overload1arg 8 line 115
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 7
PASS: gdb.cp/ovldbreak.exp: set bp 7 on foo::overload1arg 7 line 116
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 6
PASS: gdb.cp/ovldbreak.exp: set bp 8 on foo::overload1arg 6 line 117
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 5
PASS: gdb.cp/ovldbreak.exp: set bp 9 on foo::overload1arg 5 line 118
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 4
PASS: gdb.cp/ovldbreak.exp: set bp 10 on foo::overload1arg 4 line 119
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 3
PASS: gdb.cp/ovldbreak.exp: set bp 11 on foo::overload1arg 3 line 120
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 2
PASS: gdb.cp/ovldbreak.exp: set bp 12 on foo::overload1arg 2 line 121
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice 13
PASS: gdb.cp/ovldbreak.exp: set bp 13 on foo::overload1arg 13 line 110
PASS: gdb.cp/ovldbreak.exp: breakpoint info (after setting one-by-one)
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice cancel
PASS: gdb.cp/ovldbreak.exp: set bp on overload1arg canceled
PASS: gdb.cp/ovldbreak.exp: breakpoint info (after cancel)
PASS: gdb.cp/ovldbreak.exp: delete all breakpoints
PASS: gdb.cp/ovldbreak.exp: breakpoint info (after delete)
PASS: gdb.cp/ovldbreak.exp: bp menu for foo::overload1arg choice all
PASS: gdb.cp/ovldbreak.exp: set bp on overload1arg all
PASS: gdb.cp/ovldbreak.exp: breakpoint info (after setting on all)
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : (void|)
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : char
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : signed char
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : unsigned char
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : short
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : unsigned short
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : int
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : (unsigned|unsigned int)
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : long
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : unsigned long
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : float
PASS: gdb.cp/ovldbreak.exp: continue to bp overloaded : double
PASS: gdb.cp/ovldbreak.exp: set multiple-symbols cancel
PASS: gdb.cp/ovldbreak.exp: break foo::foofunc
PASS: gdb.cp/ovldbreak.exp: set multiple-symbols all
PASS: gdb.cp/ovldbreak.exp: break foo::foofunc
PASS: gdb.cp/ovldbreak.exp: continue until exit at finish program
Running ../../../master/gdb/testsuite/gdb.cp/ovsrch.exp ...
PASS: gdb.cp/ovsrch.exp: break stop_here
PASS: gdb.cp/ovsrch.exp: break 'stop_here'
PASS: gdb.cp/ovsrch.exp: continue to breakpoint: stop_here
PASS: gdb.cp/ovsrch.exp: break outer::foo  (char*)  const
PASS: gdb.cp/ovsrch.exp: break 'outer::foo  (char*)  const'
PASS: gdb.cp/ovsrch.exp: break outer::foo  (char*)  const if (a == 3)
PASS: gdb.cp/ovsrch.exp: break 'outer::foo  (char*)  const' if (a == 3)
PASS: gdb.cp/ovsrch.exp: break outer::foo  (char*)  const if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break 'outer::foo  (char*)  const' if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break outer::foo  (void)  const
PASS: gdb.cp/ovsrch.exp: break 'outer::foo  (void)  const'
PASS: gdb.cp/ovsrch.exp: break outer::foo  (int)  const
PASS: gdb.cp/ovsrch.exp: break 'outer::foo  (int)  const'
PASS: gdb.cp/ovsrch.exp: break outer::foo  (int)  const if (a == 3)
PASS: gdb.cp/ovsrch.exp: break 'outer::foo  (int)  const' if (a == 3)
PASS: gdb.cp/ovsrch.exp: break outer::foo  (int)  const if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break 'outer::foo  (int)  const' if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break outer::foo if (a == 3)
PASS: gdb.cp/ovsrch.exp: break B::stop_here_too
PASS: gdb.cp/ovsrch.exp: break 'B::stop_here_too'
PASS: gdb.cp/ovsrch.exp: continue to breakpoint: stop_here_too
PASS: gdb.cp/ovsrch.exp: break inner::foo  (char*)  const
PASS: gdb.cp/ovsrch.exp: break 'inner::foo  (char*)  const'
PASS: gdb.cp/ovsrch.exp: break inner::foo  (char*)  const if (a == 3)
PASS: gdb.cp/ovsrch.exp: break 'inner::foo  (char*)  const' if (a == 3)
PASS: gdb.cp/ovsrch.exp: break inner::foo  (char*)  const if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break 'inner::foo  (char*)  const' if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break inner::foo  (void)  const
PASS: gdb.cp/ovsrch.exp: break 'inner::foo  (void)  const'
PASS: gdb.cp/ovsrch.exp: break inner::foo  (int)  const
PASS: gdb.cp/ovsrch.exp: break 'inner::foo  (int)  const'
PASS: gdb.cp/ovsrch.exp: break inner::foo  (int)  const if (a == 3)
PASS: gdb.cp/ovsrch.exp: break 'inner::foo  (int)  const' if (a == 3)
PASS: gdb.cp/ovsrch.exp: break inner::foo  (int)  const if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break 'inner::foo  (int)  const' if (A::outer::func ())
PASS: gdb.cp/ovsrch.exp: break inner::foo if (a == 3)
Running ../../../master/gdb/testsuite/gdb.cp/paren-type.exp ...
PASS: gdb.cp/paren-type.exp: set breakpoint pending off
PASS: gdb.cp/paren-type.exp: break C::f(long)
PASS: gdb.cp/paren-type.exp: break C::f(short)
Running ../../../master/gdb/testsuite/gdb.cp/pass-by-ref.exp ...
PASS: gdb.cp/pass-by-ref.exp: call function in obj
PASS: gdb.cp/pass-by-ref.exp: call function in derived
PASS: gdb.cp/pass-by-ref.exp: call function in container
Running ../../../master/gdb/testsuite/gdb.cp/pr-1023.exp ...
PASS: gdb.cp/pr-1023.exp: break myClass::performBlocking
PASS: gdb.cp/pr-1023.exp: break myClass::performUnblocking
Running ../../../master/gdb/testsuite/gdb.cp/pr-1210.exp ...
PASS: gdb.cp/pr-1210.exp: step past initialization
PASS: gdb.cp/pr-1210.exp: print *obj
PASS: gdb.cp/pr-1210.exp: print obj->myB
Running ../../../master/gdb/testsuite/gdb.cp/pr-574.exp ...
PASS: gdb.cp/pr-574.exp: continue to breakpoint: end of constructors
PASS: gdb.cp/pr-574.exp: PR gdb/574
Running ../../../master/gdb/testsuite/gdb.cp/pr10687.exp ...
PASS: gdb.cp/pr10687.exp: continue to breakpoint: marker
PASS: gdb.cp/pr10687.exp: p a
Running ../../../master/gdb/testsuite/gdb.cp/pr10728.exp ...
PASS: gdb.cp/pr10728.exp: continue to breakpoint: marker 1
PASS: gdb.cp/pr10728.exp: print x->y2 - x->y1
Running ../../../master/gdb/testsuite/gdb.cp/pr12028.exp ...
PASS: gdb.cp/pr12028.exp: p D::foo(b)
Running ../../../master/gdb/testsuite/gdb.cp/pr9067.exp ...
PASS: gdb.cp/pr9067.exp: print b
Running ../../../master/gdb/testsuite/gdb.cp/pr9167.exp ...
PASS: gdb.cp/pr9167.exp: continue to breakpoint: marker
PASS: gdb.cp/pr9167.exp: p b
Running ../../../master/gdb/testsuite/gdb.cp/pr9631.exp ...
PASS: gdb.cp/pr9631.exp: continue to breakpoint: after bar tender is initialized
PASS: gdb.cp/pr9631.exp: print tender
Running ../../../master/gdb/testsuite/gdb.cp/printmethod.exp ...
PASS: gdb.cp/printmethod.exp: continue to breakpoint: end of constructors
PASS: gdb.cp/printmethod.exp: print virtual method.
PASS: gdb.cp/printmethod.exp: print nonvirtual method.
Running ../../../master/gdb/testsuite/gdb.cp/psmang.exp ...
PASS: gdb.cp/psmang.exp: break s::method1
PASS: gdb.cp/psmang.exp: break s::method2
Running ../../../master/gdb/testsuite/gdb.cp/psymtab-parameter.exp ...
PASS: gdb.cp/psymtab-parameter.exp: set language c++
PASS: gdb.cp/psymtab-parameter.exp: maintenance info symtabs
PASS: gdb.cp/psymtab-parameter.exp: complete p 'func<short>(
Running ../../../master/gdb/testsuite/gdb.cp/ptype-cv-cp.exp ...
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_const_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_const_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_const_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: ptype v_const_volatile_my_int
PASS: gdb.cp/ptype-cv-cp.exp: whatis v_volatile_const_my_int
KFAIL: gdb.cp/ptype-cv-cp.exp: ptype v_volatile_const_my_int (PRMS: gcc/45997)
Running ../../../master/gdb/testsuite/gdb.cp/punctuator.exp ...
PASS: gdb.cp/punctuator.exp: set lang c++
PASS: gdb.cp/punctuator.exp: print (0x5a5a bitand 0xaaaa) == (0x5a5a & 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a bitor 0xaaaa) == (0x5a5a | 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a xor 0xaaaa) == (0x5a5a ^ 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a and 0xaaaa) == (0x5a5a && 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (0x5a5a or 0xaaaa) == (0x5a5a || 0xaaaa)
PASS: gdb.cp/punctuator.exp: print (not not 0xaaaa) == (!!0xaaaa)
PASS: gdb.cp/punctuator.exp: print (compl 0xaaaa) == (~0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 1
PASS: gdb.cp/punctuator.exp: set $v 1
PASS: gdb.cp/punctuator.exp: print ($u not_eq 0xaaaa) == ($v != 0xaaaa)
PASS: gdb.cp/punctuator.exp: print ($u and_eq 0xaaaa) == ($v &= 0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 2
PASS: gdb.cp/punctuator.exp: set $v 2
PASS: gdb.cp/punctuator.exp: print ($u or_eq 0xaaaa) == ($v |= 0xaaaa)
PASS: gdb.cp/punctuator.exp: set $u 3
PASS: gdb.cp/punctuator.exp: set $v 3
PASS: gdb.cp/punctuator.exp: print ($u xor_eq 0xaaaa) == ($v ^= 0xaaaa)
Running ../../../master/gdb/testsuite/gdb.cp/re-set-overloaded.exp ...
PASS: gdb.cp/re-set-overloaded.exp: set breakpoint pending yes
PASS: gdb.cp/re-set-overloaded.exp: break C::C
PASS: gdb.cp/re-set-overloaded.exp: set variable $brk = $bpnum
KFAIL: gdb.cp/re-set-overloaded.exp: start (GDB internal error) (PRMS: breakpoints/11657)
KFAIL: gdb.cp/re-set-overloaded.exp: breakpoint resolved (PRMS: breakpoints/11657)
Running ../../../master/gdb/testsuite/gdb.cp/ref-params.exp ...
PASS: gdb.cp/ref-params.exp: print value of a Child in main
PASS: gdb.cp/ref-params.exp: print value of f1 on Child in main
PASS: gdb.cp/ref-params.exp: print value of f2 on Child in main
PASS: gdb.cp/ref-params.exp: print value of f1 on (Child&) in main
PASS: gdb.cp/ref-params.exp: print value of f2 on (Child&) in main
PASS: gdb.cp/ref-params.exp: print value of Child& in f2
PASS: gdb.cp/ref-params.exp: print value of f1 on Child& in f2
PASS: gdb.cp/ref-params.exp: print value of Parent& in f1
PASS: gdb.cp/ref-params.exp: print f1(MQ)
PASS: gdb.cp/ref-params.exp: print mf1(MQ)
PASS: gdb.cp/ref-params.exp: print mf2(MQ)
PASS: gdb.cp/ref-params.exp: print f1(MQR)
PASS: gdb.cp/ref-params.exp: print mf1(MQR)
PASS: gdb.cp/ref-params.exp: print mf2(MQR)
Running ../../../master/gdb/testsuite/gdb.cp/ref-types.exp ...
PASS: gdb.cp/ref-types.exp: up from marker1 1
PASS: gdb.cp/ref-types.exp: print value of s
PASS: gdb.cp/ref-types.exp: ptype s
PASS: gdb.cp/ref-types.exp: print value of ps
PASS: gdb.cp/ref-types.exp: ptype ps
PASS: gdb.cp/ref-types.exp: print value of as[0]
PASS: gdb.cp/ref-types.exp: ptype as
PASS: gdb.cp/ref-types.exp: print value of as[1]
PASS: gdb.cp/ref-types.exp: print value of as[2]
PASS: gdb.cp/ref-types.exp: print value of as[3]
PASS: gdb.cp/ref-types.exp: print value of rs
PASS: gdb.cp/ref-types.exp: ptype rs
PASS: gdb.cp/ref-types.exp: print value of *rps
PASS: gdb.cp/ref-types.exp: examine value at rps
PASS: gdb.cp/ref-types.exp: ptype rps
PASS: gdb.cp/ref-types.exp: print value of ras[0]
PASS: gdb.cp/ref-types.exp: ptype ras
PASS: gdb.cp/ref-types.exp: print value of ras[1]
PASS: gdb.cp/ref-types.exp: print value of ras[2]
PASS: gdb.cp/ref-types.exp: print value of ras[3]
PASS: gdb.cp/ref-types.exp: up from f
PASS: gdb.cp/ref-types.exp: print value of C
PASS: gdb.cp/ref-types.exp: ptype C
PASS: gdb.cp/ref-types.exp: print value of UC
PASS: gdb.cp/ref-types.exp: ptype UC
PASS: gdb.cp/ref-types.exp: print value of S
PASS: gdb.cp/ref-types.exp: ptype S
PASS: gdb.cp/ref-types.exp: print value of US
PASS: gdb.cp/ref-types.exp: ptype US
PASS: gdb.cp/ref-types.exp: print value of I
PASS: gdb.cp/ref-types.exp: ptype I
PASS: gdb.cp/ref-types.exp: print value of UI
PASS: gdb.cp/ref-types.exp: ptype UI
PASS: gdb.cp/ref-types.exp: print value of L
PASS: gdb.cp/ref-types.exp: ptype L
PASS: gdb.cp/ref-types.exp: print value of UL
PASS: gdb.cp/ref-types.exp: ptype UL
PASS: gdb.cp/ref-types.exp: print value of F
PASS: gdb.cp/ref-types.exp: ptype F
PASS: gdb.cp/ref-types.exp: print value of D
PASS: gdb.cp/ref-types.exp: ptype D
PASS: gdb.cp/ref-types.exp: ptype rC
PASS: gdb.cp/ref-types.exp: ptype rUC
PASS: gdb.cp/ref-types.exp: ptype rS
PASS: gdb.cp/ref-types.exp: ptype rUS
PASS: gdb.cp/ref-types.exp: ptype rI
PASS: gdb.cp/ref-types.exp: ptype rUI
PASS: gdb.cp/ref-types.exp: ptype rL
PASS: gdb.cp/ref-types.exp: ptype rUL
PASS: gdb.cp/ref-types.exp: ptype rF
PASS: gdb.cp/ref-types.exp: ptype rD
PASS: gdb.cp/ref-types.exp: print value of rC
PASS: gdb.cp/ref-types.exp: print value of rUC
PASS: gdb.cp/ref-types.exp: print value of rS
PASS: gdb.cp/ref-types.exp: print value of rUS
PASS: gdb.cp/ref-types.exp: print value of rI
PASS: gdb.cp/ref-types.exp: print value of UI
PASS: gdb.cp/ref-types.exp: print value of rL
PASS: gdb.cp/ref-types.exp: print value of rUL
PASS: gdb.cp/ref-types.exp: print value of rF
PASS: gdb.cp/ref-types.exp: print value of rD
Running ../../../master/gdb/testsuite/gdb.cp/rtti.exp ...
PASS: gdb.cp/rtti.exp: continue to breakpoint: end of constructors in main
PASS: gdb.cp/rtti.exp: print *e1
PASS: gdb.cp/rtti.exp: print *e2
PASS: gdb.cp/rtti.exp: continue to breakpoint: end of constructors in func
PASS: gdb.cp/rtti.exp: print *obj
PASS: gdb.cp/rtti.exp: continue to breakpoint: end of constructors in func3
PASS: gdb.cp/rtti.exp: print *obj3
Running ../../../master/gdb/testsuite/gdb.cp/shadow.exp ...
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker1
PASS: gdb.cp/shadow.exp: Print class x shadowing global x
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker2
PASS: gdb.cp/shadow.exp: Print local x shadowing class x
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker3
PASS: gdb.cp/shadow.exp: Print inner scope x
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker4
PASS: gdb.cp/shadow.exp: Print local x not namespace x
PASS: gdb.cp/shadow.exp: continue to breakpoint: marker5
PASS: gdb.cp/shadow.exp: Print imported namespace x
Running ../../../master/gdb/testsuite/gdb.cp/smartp.exp ...
PASS: gdb.cp/smartp.exp: continue to breakpoint: end of main
PASS: gdb.cp/smartp.exp: p mp->foo()
PASS: gdb.cp/smartp.exp: p mtp->foo()
PASS: gdb.cp/smartp.exp: p mt1.foo()
PASS: gdb.cp/smartp.exp: p mt4p.a
PASS: gdb.cp/smartp.exp: p mt4->a
PASS: gdb.cp/smartp.exp: p sp1->foo()
PASS: gdb.cp/smartp.exp: p sp2->foo()
PASS: gdb.cp/smartp.exp: p sp3->foo(1)
PASS: gdb.cp/smartp.exp: p sp3->foo('a')
PASS: gdb.cp/smartp.exp: p sp4->a
PASS: gdb.cp/smartp.exp: p sp4->b
PASS: gdb.cp/smartp.exp: p mt4p->a
PASS: gdb.cp/smartp.exp: p mt4p->b
PASS: gdb.cp/smartp.exp: p mt4->fake
PASS: gdb.cp/smartp.exp: p mt4->fake()
PASS: gdb.cp/smartp.exp: p b->foo()
PASS: gdb.cp/smartp.exp: p c->foo()
PASS: gdb.cp/smartp.exp: p c->inta
KFAIL: gdb.cp/smartp.exp: p c2->inta (PRMS: gdb/11606)
Running ../../../master/gdb/testsuite/gdb.cp/static-method.exp ...
PASS: gdb.cp/static-method.exp: list static-method.cc:xxx::(anonymous namespace)::func
PASS: gdb.cp/static-method.exp: list 'static-method.cc:xxx::(anonymous namespace)::func'
PASS: gdb.cp/static-method.exp: list 'static-method.cc':xxx::(anonymous namespace)::func'
PASS: gdb.cp/static-method.exp: list static-method.cc:'xxx::(anonymous namespace)::func'
PASS: gdb.cp/static-method.exp: continue to xxx::(anonymous namespace)::func
PASS: gdb.cp/static-method.exp: continue to 'xxx::(anonymous namespace)::func'
PASS: gdb.cp/static-method.exp: list static-method.cc:xxx::(anonymous namespace)::A::func
PASS: gdb.cp/static-method.exp: list 'static-method.cc:xxx::(anonymous namespace)::A::func'
PASS: gdb.cp/static-method.exp: list 'static-method.cc':xxx::(anonymous namespace)::A::func'
PASS: gdb.cp/static-method.exp: list static-method.cc:'xxx::(anonymous namespace)::A::func'
PASS: gdb.cp/static-method.exp: continue to xxx::(anonymous namespace)::A::func
PASS: gdb.cp/static-method.exp: continue to 'xxx::(anonymous namespace)::A::func'
Running ../../../master/gdb/testsuite/gdb.cp/static-print-quit.exp ...
PASS: gdb.cp/static-print-quit.exp: set width 80
PASS: gdb.cp/static-print-quit.exp: set height 2
PASS: gdb.cp/static-print-quit.exp: print c - <return>
PASS: gdb.cp/static-print-quit.exp: print c - q <return>
PASS: gdb.cp/static-print-quit.exp: print c - to quit
PASS: gdb.cp/static-print-quit.exp: q
PASS: gdb.cp/static-print-quit.exp: set pagination off
PASS: gdb.cp/static-print-quit.exp: first print
PASS: gdb.cp/static-print-quit.exp: second print
Running ../../../master/gdb/testsuite/gdb.cp/temargs.exp ...
PASS: gdb.cp/temargs.exp: set first breakpoint for temargs
PASS: gdb.cp/temargs.exp: set second breakpoint for temargs
PASS: gdb.cp/temargs.exp: set third breakpoint for temargs
PASS: gdb.cp/temargs.exp: set fourth breakpoint for temargs
PASS: gdb.cp/temargs.exp: set fifth breakpoint for temargs
PASS: gdb.cp/temargs.exp: set sixth breakpoint for temargs
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to first breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of T in base_m
PASS: gdb.cp/temargs.exp: test value of I in base_m
PASS: gdb.cp/temargs.exp: test value of P in base_m
XFAIL: gdb.cp/temargs.exp: test value of MP in base_m
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to second breakpoint for temargs
XFAIL: gdb.cp/temargs.exp: test type of T in inner_m
XFAIL: gdb.cp/temargs.exp: test value of I in inner_m
XFAIL: gdb.cp/temargs.exp: test value of P in inner_m
XFAIL: gdb.cp/temargs.exp: test value of MP in inner_m
XFAIL: gdb.cp/temargs.exp: test type of Z in inner_m
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to third breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of T in func
PASS: gdb.cp/temargs.exp: test value of I in func
PASS: gdb.cp/temargs.exp: test value of P in func
XFAIL: gdb.cp/temargs.exp: test value of MP in func
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to fourth breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of T in templ_m
PASS: gdb.cp/temargs.exp: test value of I in templ_m
PASS: gdb.cp/temargs.exp: test value of P in templ_m
XFAIL: gdb.cp/temargs.exp: test value of MP in templ_m
PASS: gdb.cp/temargs.exp: test type of Q in templ_m
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to fifth breakpoint for temargs
PASS: gdb.cp/temargs.exp: test type of F in k2_m
KFAIL: gdb.cp/temargs.exp: test value of F in k2_m (PRMS: gcc/49366)
PASS: gdb.cp/temargs.exp: continue to breakpoint: continue to sixth breakpoint for temargs
KFAIL: gdb.cp/temargs.exp: test type of F in k3_m (PRMS: gcc/49546)
KFAIL: gdb.cp/temargs.exp: test value of F in k3_m (PRMS: gcc/49546)
Running ../../../master/gdb/testsuite/gdb.cp/templates.exp ...
PASS: gdb.cp/templates.exp: set multiple-symbols ask
KFAIL: gdb.cp/templates.exp: ptype T5<int> (PRMS: gdb/1111)
KFAIL: gdb.cp/templates.exp: ptype T5<int> (PRMS: gdb/1111)
PASS: gdb.cp/templates.exp: constructor breakpoint
PASS: gdb.cp/templates.exp: destructor breakpoint
PASS: gdb.cp/templates.exp: value method breakpoint
PASS: gdb.cp/templates.exp: breakpoint on a line with no real code
PASS: gdb.cp/templates.exp: print method of template typedef
PASS: gdb.cp/templates.exp: print destructor of template typedef
PASS: gdb.cp/templates.exp: ptype empty
PASS: gdb.cp/templates.exp: ptype arg
PASS: gdb.cp/templates.exp: print t5i.value()
PASS: gdb.cp/templates.exp: b 770
PASS: gdb.cp/templates.exp: continue to line 770
PASS: gdb.cp/templates.exp: print fint
PASS: gdb.cp/templates.exp: print fvpchar
PASS: gdb.cp/templates.exp: ptype Foo
PASS: gdb.cp/templates.exp: ptype fint
PASS: gdb.cp/templates.exp: ptype fchar
KFAIL: gdb.cp/templates.exp: ptype fvpchar (PRMS: gdb/1512)
PASS: gdb.cp/templates.exp: print Foo<volatile char *>::foo
PASS: gdb.cp/templates.exp: print Foo<volatile char*>::foo
PASS: gdb.cp/templates.exp: ptype Bar
PASS: gdb.cp/templates.exp: ptype bint
PASS: gdb.cp/templates.exp: ptype bint2
PASS: gdb.cp/templates.exp: ptype Baz
PASS: gdb.cp/templates.exp: ptype bazint
PASS: gdb.cp/templates.exp: ptype bazint2
PASS: gdb.cp/templates.exp: ptype Qux
PASS: gdb.cp/templates.exp: ptype quxint
PASS: gdb.cp/templates.exp: ptype Spec
PASS: gdb.cp/templates.exp: ptype siip
PASS: gdb.cp/templates.exp: ptype Garply<int>
PASS: gdb.cp/templates.exp: ptype Garply<Garply<char> >
PASS: gdb.cp/templates.exp: print Garply<Garply<char> >::garply
PASS: gdb.cp/templates.exp: break Garply<Garply<char> >::garply
Running ../../../master/gdb/testsuite/gdb.cp/try_catch.exp ...
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 1-throw
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 1-catch
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 2-start
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 2-next
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 2-throw
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 2-catch
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 3-throw
PASS: gdb.cp/try_catch.exp: continue to breakpoint: marker 3-catch
Running ../../../master/gdb/testsuite/gdb.cp/typedef-operator.exp ...
PASS: gdb.cp/typedef-operator.exp: set language c++
PASS: gdb.cp/typedef-operator.exp: test crash
PASS: gdb.cp/typedef-operator.exp: test typedef
Running ../../../master/gdb/testsuite/gdb.cp/userdef.exp ...
PASS: gdb.cp/userdef.exp: break marker1
PASS: gdb.cp/userdef.exp: continue to marker1
PASS: gdb.cp/userdef.exp: up from marker1
PASS: gdb.cp/userdef.exp: print one + two
PASS: gdb.cp/userdef.exp: re-selected 'main' frame after inferior call
PASS: gdb.cp/userdef.exp: print one - two
PASS: gdb.cp/userdef.exp: print one * two
PASS: gdb.cp/userdef.exp: print one / two
PASS: gdb.cp/userdef.exp: print one % two
PASS: gdb.cp/userdef.exp: print one && two
PASS: gdb.cp/userdef.exp: print one || two
PASS: gdb.cp/userdef.exp: print one & two
PASS: gdb.cp/userdef.exp: print one | two
PASS: gdb.cp/userdef.exp: print one ^ two
PASS: gdb.cp/userdef.exp: print one < two
PASS: gdb.cp/userdef.exp: print one <= two
PASS: gdb.cp/userdef.exp: print one > two
PASS: gdb.cp/userdef.exp: print one >= two
PASS: gdb.cp/userdef.exp: print one == two
PASS: gdb.cp/userdef.exp: print one.operator== (two)
PASS: gdb.cp/userdef.exp: print one != two
PASS: gdb.cp/userdef.exp: print one << 31
PASS: gdb.cp/userdef.exp: print one >> 31
PASS: gdb.cp/userdef.exp: print !one
PASS: gdb.cp/userdef.exp: print +one
PASS: gdb.cp/userdef.exp: print ~one
PASS: gdb.cp/userdef.exp: print -one
PASS: gdb.cp/userdef.exp: print one++
PASS: gdb.cp/userdef.exp: print ++one
PASS: gdb.cp/userdef.exp: print one--
PASS: gdb.cp/userdef.exp: print --one
PASS: gdb.cp/userdef.exp: print one += 7
PASS: gdb.cp/userdef.exp: print two = one
PASS: gdb.cp/userdef.exp: break A2::'operator+'
PASS: gdb.cp/userdef.exp: break A2::'operator +'
PASS: gdb.cp/userdef.exp: print c
PASS: gdb.cp/userdef.exp: print *c
PASS: gdb.cp/userdef.exp: print &*c
PASS: gdb.cp/userdef.exp: ptype &*c
PASS: gdb.cp/userdef.exp: print operator== (mem1, mem2)
PASS: gdb.cp/userdef.exp: print operator== (mem1, mem1)
Running ../../../master/gdb/testsuite/gdb.cp/virtbase.exp ...
PASS: gdb.cp/virtbase.exp: continue to breakpoint: first breakpoint
PASS: gdb.cp/virtbase.exp: print *this
PASS: gdb.cp/virtbase.exp: print x in get_y
PASS: gdb.cp/virtbase.exp: continue to breakpoint: second breakpoint
PASS: gdb.cp/virtbase.exp: print x in get_z
PASS: gdb.cp/virtbase.exp: continue to breakpoint: third breakpoint
PASS: gdb.cp/virtbase.exp: print *(D *) e
PASS: gdb.cp/virtbase.exp: set print object on
PASS: gdb.cp/virtbase.exp: print/x b->mA
PASS: gdb.cp/virtbase.exp: print rtti_data
PASS: gdb.cp/virtbase.exp: print pointer to virtual base at non-zero offset of larger object
PASS: gdb.cp/virtbase.exp: print same pointer from history value
PASS: gdb.cp/virtbase.exp: print whole pointed-to object, starting from the virtual base pointer
Running ../../../master/gdb/testsuite/gdb.cp/virtfunc.exp ...
PASS: gdb.cp/virtfunc.exp: ptype VA
PASS: gdb.cp/virtfunc.exp: ptype VB
PASS: gdb.cp/virtfunc.exp: ptype V
PASS: gdb.cp/virtfunc.exp: ptype A
PASS: gdb.cp/virtfunc.exp: ptype B
PASS: gdb.cp/virtfunc.exp: ptype C
PASS: gdb.cp/virtfunc.exp: ptype AD
PASS: gdb.cp/virtfunc.exp: ptype D
PASS: gdb.cp/virtfunc.exp: ptype E
PASS: gdb.cp/virtfunc.exp: ptype dd
PASS: gdb.cp/virtfunc.exp: ptype ppd
PASS: gdb.cp/virtfunc.exp: ptype pAd
PASS: gdb.cp/virtfunc.exp: ptype a
PASS: gdb.cp/virtfunc.exp: ptype b
PASS: gdb.cp/virtfunc.exp: ptype c
PASS: gdb.cp/virtfunc.exp: ptype d
PASS: gdb.cp/virtfunc.exp: ptype e
PASS: gdb.cp/virtfunc.exp: ptype v
PASS: gdb.cp/virtfunc.exp: ptype vb
PASS: gdb.cp/virtfunc.exp: ptype pAa
PASS: gdb.cp/virtfunc.exp: ptype pAe
PASS: gdb.cp/virtfunc.exp: ptype pBe
PASS: gdb.cp/virtfunc.exp: ptype pDd
PASS: gdb.cp/virtfunc.exp: ptype pDe
PASS: gdb.cp/virtfunc.exp: ptype pVa
PASS: gdb.cp/virtfunc.exp: ptype pVv
PASS: gdb.cp/virtfunc.exp: ptype pVe
PASS: gdb.cp/virtfunc.exp: ptype pVd
PASS: gdb.cp/virtfunc.exp: ptype pADe
PASS: gdb.cp/virtfunc.exp: ptype pEe
PASS: gdb.cp/virtfunc.exp: ptype pVB
PASS: gdb.cp/virtfunc.exp: print pAe->f()
PASS: gdb.cp/virtfunc.exp: print pAa->f()
PASS: gdb.cp/virtfunc.exp: print pDe->vg()
PASS: gdb.cp/virtfunc.exp: print pADe->vg()
PASS: gdb.cp/virtfunc.exp: print pDd->vg()
PASS: gdb.cp/virtfunc.exp: print pEe->vvb()
PASS: gdb.cp/virtfunc.exp: print pVB->vvb()
PASS: gdb.cp/virtfunc.exp: print pBe->vvb()
PASS: gdb.cp/virtfunc.exp: print pDe->vvb()
PASS: gdb.cp/virtfunc.exp: print pEe->vd()
PASS: gdb.cp/virtfunc.exp: print pEe->fvb()
KFAIL: gdb.cp/virtfunc.exp: print pEe->D::vg() (PRMS: gdb/1064)
PASS: gdb.cp/virtfunc.exp: next to pAa->f call
PASS: gdb.cp/virtfunc.exp: next to pDe->vg call
PASS: gdb.cp/virtfunc.exp: step through thunk into E::vg
Running ../../../master/gdb/testsuite/gdb.cp/virtfunc2.exp ...
PASS: gdb.cp/virtfunc2.exp: continue to breakpoint: marker 1
PASS: gdb.cp/virtfunc2.exp: print o.do_print()
PASS: gdb.cp/virtfunc2.exp: print o.do_print3()
PASS: gdb.cp/virtfunc2.exp: print o2.do_print()
PASS: gdb.cp/virtfunc2.exp: print o2.do_print2()
PASS: gdb.cp/virtfunc2.exp: print o2.do_print3()
Running ../../../master/gdb/testsuite/gdb.disasm/am33.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/h8300s.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/hppa.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/mn10300.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/sh3.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t01_mov.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t02_mova.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t03_add.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t04_sub.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t05_cmp.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t06_ari2.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t07_ari3.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t08_or.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t09_xor.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t10_and.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t11_logs.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t12_bit.exp ...
Running ../../../master/gdb/testsuite/gdb.disasm/t13_otr.exp ...
Running ../../../master/gdb/testsuite/gdb.dwarf2/callframecfa.exp ...
PASS: gdb.dwarf2/callframecfa.exp: set breakpoint for call-frame-cfa
PASS: gdb.dwarf2/callframecfa.exp: continue to breakpoint: continue to breakpoint for call-frame-cfa
PASS: gdb.dwarf2/callframecfa.exp: set display for call-frame-cfa
PASS: gdb.dwarf2/callframecfa.exp: step 1 for call-frame-cfa
PASS: gdb.dwarf2/callframecfa.exp: step 2 for call-frame-cfa
PASS: gdb.dwarf2/callframecfa.exp: step 3 for call-frame-cfa
PASS: gdb.dwarf2/callframecfa.exp: step 4 for call-frame-cfa
Running ../../../master/gdb/testsuite/gdb.dwarf2/clztest.exp ...
Running ../../../master/gdb/testsuite/gdb.dwarf2/dup-psym.exp ...
PASS: gdb.dwarf2/dup-psym.exp: info sources should contain only one reference to file1.txt
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-ada-ffffffff.exp ...
PASS: gdb.dwarf2/dw2-ada-ffffffff.exp: p sizeof (t)
PASS: gdb.dwarf2/dw2-ada-ffffffff.exp: ptype t
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-anonymous-func.exp ...
PASS: gdb.dwarf2/dw2-anonymous-func.exp: list file1.txt
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-bad-parameter-type.exp ...
PASS: gdb.dwarf2/dw2-bad-parameter-type.exp: ptype f
PASS: gdb.dwarf2/dw2-bad-parameter-type.exp: ptype f
PASS: gdb.dwarf2/dw2-bad-parameter-type.exp: is alive
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-basic.exp ...
PASS: gdb.dwarf2/dw2-basic.exp: set listsize 1
PASS: gdb.dwarf2/dw2-basic.exp: list func_cu1
PASS: gdb.dwarf2/dw2-basic.exp: ptype func_cu1
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-case-insensitive.exp ...
PASS: gdb.dwarf2/dw2-case-insensitive.exp: show case-sensitive
PASS: gdb.dwarf2/dw2-case-insensitive.exp: regexp case-sensitive on
PASS: gdb.dwarf2/dw2-case-insensitive.exp: set case-sensitive off
PASS: gdb.dwarf2/dw2-case-insensitive.exp: regexp case-sensitive off
PASS: gdb.dwarf2/dw2-case-insensitive.exp: p fuNC_lang
PASS: gdb.dwarf2/dw2-case-insensitive.exp: p fuNC_symtab
PASS: gdb.dwarf2/dw2-case-insensitive.exp: setting breakpoint at fuNC_lang
PASS: gdb.dwarf2/dw2-case-insensitive.exp: setting breakpoint at fuNC_symtab
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-compressed.exp ...
PASS: gdb.dwarf2/dw2-compressed.exp: set listsize 1
PASS: gdb.dwarf2/dw2-compressed.exp: list func_cu1
PASS: gdb.dwarf2/dw2-compressed.exp: ptype func_cu1
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-const.exp ...
PASS: gdb.dwarf2/dw2-const.exp: print twelve
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-cp-infcall-ref-static.exp ...
PASS: gdb.dwarf2/dw2-cp-infcall-ref-static.exp: set language c++
PASS: gdb.dwarf2/dw2-cp-infcall-ref-static.exp: set cp-abi gnu-v3
PASS: gdb.dwarf2/dw2-cp-infcall-ref-static.exp: p f()
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-cu-size.exp ...
PASS: gdb.dwarf2/dw2-cu-size.exp: ptype noloc
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-double-set-die-type.exp ...
PASS: gdb.dwarf2/dw2-double-set-die-type.exp: ptype a
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-empty-namespace.exp ...
PASS: gdb.dwarf2/dw2-empty-namespace.exp: ptype var
PASS: gdb.dwarf2/dw2-empty-namespace.exp: p var
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-empty-pc-range.exp ...
PASS: gdb.dwarf2/dw2-empty-pc-range.exp: empty range before CU load
PASS: gdb.dwarf2/dw2-empty-pc-range.exp: valid range after CU load
PASS: gdb.dwarf2/dw2-empty-pc-range.exp: empty range after CU load
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-entry-value.exp ...
PASS: gdb.dwarf2/dw2-entry-value.exp: <optimized out> is printed
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-filename.exp ...
PASS: gdb.dwarf2/dw2-filename.exp: interpreter-exec mi -file-list-exec-source-files
PASS: gdb.dwarf2/dw2-filename.exp: info sources
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-inheritance.exp ...
PASS: gdb.dwarf2/dw2-inheritance.exp: ptype inherited
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-inline-param.exp ...
PASS: gdb.dwarf2/dw2-inline-param.exp: info addr break_at
PASS: gdb.dwarf2/dw2-inline-param.exp: bt
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-intercu.exp ...
PASS: gdb.dwarf2/dw2-intercu.exp: set listsize 1
PASS: gdb.dwarf2/dw2-intercu.exp: list func_cu1
PASS: gdb.dwarf2/dw2-intercu.exp: ptype func_cu1
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-intermix.exp ...
PASS: gdb.dwarf2/dw2-intermix.exp: set listsize 1
PASS: gdb.dwarf2/dw2-intermix.exp: list func_cu1
PASS: gdb.dwarf2/dw2-intermix.exp: ptype func_cu1
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-linkage-name-trust.exp ...
PASS: gdb.dwarf2/dw2-linkage-name-trust.exp: set language c++
PASS: gdb.dwarf2/dw2-linkage-name-trust.exp: set cp-abi gnu-v3
PASS: gdb.dwarf2/dw2-linkage-name-trust.exp: p c.membername
PASS: gdb.dwarf2/dw2-linkage-name-trust.exp: p c.membername ()
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-modula2-self-type.exp ...
PASS: gdb.dwarf2/dw2-modula2-self-type.exp: set language modula-2
PASS: gdb.dwarf2/dw2-modula2-self-type.exp: ptype v
PASS: gdb.dwarf2/dw2-modula2-self-type.exp: alive
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-noloc.exp ...
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_locno_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_locno_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_extern_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_extern_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_extern_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_extern_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_extern_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_extern_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_extern_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_extern_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: print file_extern_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: no-run: ptype file_extern_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_locno_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_locno_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_extern_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_extern_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_extern_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_extern_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_extern_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_extern_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_extern_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_extern_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: print file_extern_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: in-main: ptype file_extern_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_local_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_local_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_local_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_local_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_local_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_local_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_local_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_local_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_local_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_local_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_local_locno_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_local_locno_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_extern_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_extern_locaddr_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_extern_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_extern_locaddr_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_extern_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_extern_locempty_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_extern_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_extern_locempty_unresolvable
PASS: gdb.dwarf2/dw2-noloc.exp: print main_extern_locno_resolvable
PASS: gdb.dwarf2/dw2-noloc.exp: ptype main_extern_locno_resolvable
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-op-call.exp ...
PASS: gdb.dwarf2/dw2-op-call.exp: p array1
PASS: gdb.dwarf2/dw2-op-call.exp: array2 using DW_OP_call2
PASS: gdb.dwarf2/dw2-op-call.exp: array3 using DW_OP_call4
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-producer.exp ...
PASS: gdb.dwarf2/dw2-producer.exp: set listsize 1
PASS: gdb.dwarf2/dw2-producer.exp: list func_cu1
PASS: gdb.dwarf2/dw2-producer.exp: ptype func_cu1
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-ranges.exp ...
PASS: gdb.dwarf2/dw2-ranges.exp: info line main
PASS: gdb.dwarf2/dw2-ranges.exp: info line func
PASS: gdb.dwarf2/dw2-ranges.exp: info line main2
PASS: gdb.dwarf2/dw2-ranges.exp: info line func2
PASS: gdb.dwarf2/dw2-ranges.exp: info line main3
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-ref-missing-frame.exp ...
PASS: gdb.dwarf2/dw2-ref-missing-frame.exp: func_nofb print
PASS: gdb.dwarf2/dw2-ref-missing-frame.exp: func_nofb backtrace
PASS: gdb.dwarf2/dw2-ref-missing-frame.exp: func_loopfb print
PASS: gdb.dwarf2/dw2-ref-missing-frame.exp: func_loopfb backtrace
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-restore.exp ...
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-skip-prologue.exp ...
PASS: gdb.dwarf2/dw2-skip-prologue.exp: strip stub symbols
PASS: gdb.dwarf2/dw2-skip-prologue.exp: continue to breakpoint: func
PASS: gdb.dwarf2/dw2-skip-prologue.exp: 2 locations found
PASS: gdb.dwarf2/dw2-skip-prologue.exp: no statement got executed
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-stack-boundary.exp ...
PASS: gdb.dwarf2/dw2-stack-boundary.exp: set complaints 100
PASS: gdb.dwarf2/dw2-stack-boundary.exp: check partial symtab errors
PASS: gdb.dwarf2/dw2-stack-boundary.exp: p underflow
PASS: gdb.dwarf2/dw2-stack-boundary.exp: p overflow
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-strp.exp ...
PASS: gdb.dwarf2/dw2-strp.exp: p a_string
PASS: gdb.dwarf2/dw2-strp.exp: ptype a_string
PASS: gdb.dwarf2/dw2-strp.exp: p a_string2
PASS: gdb.dwarf2/dw2-strp.exp: ptype a_string2
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw2-unresolved.exp ...
PASS: gdb.dwarf2/dw2-unresolved.exp: continue to breakpoint: *extern_block_start
PASS: gdb.dwarf2/dw2-unresolved.exp: print/d var
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw4-sig-type-unused.exp ...
PASS: gdb.dwarf2/dw4-sig-type-unused.exp: alive
Running ../../../master/gdb/testsuite/gdb.dwarf2/dw4-sig-types.exp ...
PASS: gdb.dwarf2/dw4-sig-types.exp: maint set dwarf2 max-cache-age 0
PASS: gdb.dwarf2/dw4-sig-types.exp: p myset
PASS: gdb.dwarf2/dw4-sig-types.exp: continue to foo
Running ../../../master/gdb/testsuite/gdb.dwarf2/implptr.exp ...
PASS: gdb.dwarf2/implptr.exp: set bar breakpoint for implptr
PASS: gdb.dwarf2/implptr.exp: continue to breakpoint: continue to bar breakpoint for implptr
PASS: gdb.dwarf2/implptr.exp: print j in implptr:bar
PASS: gdb.dwarf2/implptr.exp: print *j in implptr:bar
PASS: gdb.dwarf2/implptr.exp: print **k in implptr:bar
PASS: gdb.dwarf2/implptr.exp: print ***l in implptr:bar
PASS: gdb.dwarf2/implptr.exp: set foo breakpoint for implptr
PASS: gdb.dwarf2/implptr.exp: continue to breakpoint: continue to foo breakpoint for implptr
PASS: gdb.dwarf2/implptr.exp: print p[0].x in implptr:foo
PASS: gdb.dwarf2/implptr.exp: print *p[0].x in implptr:foo
PASS: gdb.dwarf2/implptr.exp: print byte inside *p[0].x in implptr:foo
PASS: gdb.dwarf2/implptr.exp: print invalid offset from *p[0].x in implptr:foo
PASS: gdb.dwarf2/implptr.exp: print j in implptr:foo
Running ../../../master/gdb/testsuite/gdb.dwarf2/mac-fileno.exp ...
PASS: gdb.dwarf2/mac-fileno.exp: set listsize 1
PASS: gdb.dwarf2/mac-fileno.exp: list func_cu1
PASS: gdb.dwarf2/mac-fileno.exp: ptype func_cu1
Running ../../../master/gdb/testsuite/gdb.dwarf2/member-ptr-forwardref.exp ...
PASS: gdb.dwarf2/member-ptr-forwardref.exp: set cp-abi gnu-v3
PASS: gdb.dwarf2/member-ptr-forwardref.exp: show cp-abi
PASS: gdb.dwarf2/member-ptr-forwardref.exp: ptype c
Running ../../../master/gdb/testsuite/gdb.dwarf2/pieces.exp ...
PASS: gdb.dwarf2/pieces.exp: set f1 breakpoint for pieces
PASS: gdb.dwarf2/pieces.exp: continue to breakpoint: continue to f1 breakpoint for pieces
PASS: gdb.dwarf2/pieces.exp: print a in pieces:f1
PASS: gdb.dwarf2/pieces.exp: print a.j in pieces:f1
PASS: gdb.dwarf2/pieces.exp: set f2 breakpoint for pieces
PASS: gdb.dwarf2/pieces.exp: continue to breakpoint: continue to f2 breakpoint for pieces
PASS: gdb.dwarf2/pieces.exp: print a in pieces:f2
PASS: gdb.dwarf2/pieces.exp: print a[0] in pieces:f2
PASS: gdb.dwarf2/pieces.exp: print a[1] in pieces:f2
PASS: gdb.dwarf2/pieces.exp: set f3 breakpoint for pieces
PASS: gdb.dwarf2/pieces.exp: continue to breakpoint: continue to f3 breakpoint for pieces
PASS: gdb.dwarf2/pieces.exp: print a.i in pieces:f3
PASS: gdb.dwarf2/pieces.exp: print a.j in pieces:f3
PASS: gdb.dwarf2/pieces.exp: set a.i in pieces:f3
PASS: gdb.dwarf2/pieces.exp: print new a.i in pieces:f3
PASS: gdb.dwarf2/pieces.exp: set f6 breakpoint for pieces
PASS: gdb.dwarf2/pieces.exp: continue to breakpoint: continue to f6 breakpoint for pieces
PASS: gdb.dwarf2/pieces.exp: print a with optimized out piece
PASS: gdb.dwarf2/pieces.exp: print a.i with optimized out piece
Running ../../../master/gdb/testsuite/gdb.dwarf2/pr10770.exp ...
PASS: gdb.dwarf2/pr10770.exp: set breakpoint for pr10770
PASS: gdb.dwarf2/pr10770.exp: cont
PASS: gdb.dwarf2/pr10770.exp: frame 2
Running ../../../master/gdb/testsuite/gdb.dwarf2/pr11465.exp ...
PASS: gdb.dwarf2/pr11465.exp: p N::c.C
Running ../../../master/gdb/testsuite/gdb.dwarf2/typeddwarf.exp ...
PASS: gdb.dwarf2/typeddwarf.exp: set breakpoint at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: continue to breakpoint: continue to typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of j at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of l at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of m at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of n at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of o at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of p at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of q at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of r at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of s at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of t at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of u at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of v at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of w at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of x at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of y at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: check value of z at typeddwarf.c:29
PASS: gdb.dwarf2/typeddwarf.exp: set breakpoint at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: continue to breakpoint: continue to typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of j at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of l at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of m at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of p at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of q at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of r at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of s at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of t at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of u at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of v at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of w at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of x at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of y at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: check value of z at typeddwarf.c:53
PASS: gdb.dwarf2/typeddwarf.exp: set breakpoint at typeddwarf.c:73
PASS: gdb.dwarf2/typeddwarf.exp: continue to breakpoint: continue to typeddwarf.c:73
PASS: gdb.dwarf2/typeddwarf.exp: check value of w at typeddwarf.c:73
PASS: gdb.dwarf2/typeddwarf.exp: check value of x at typeddwarf.c:73
PASS: gdb.dwarf2/typeddwarf.exp: check value of y at typeddwarf.c:73
PASS: gdb.dwarf2/typeddwarf.exp: check value of z at typeddwarf.c:73
Running ../../../master/gdb/testsuite/gdb.dwarf2/valop.exp ...
PASS: gdb.dwarf2/valop.exp: set breakpoint for valop
PASS: gdb.dwarf2/valop.exp: continue to breakpoint: continue to breakpoint for valop
PASS: gdb.dwarf2/valop.exp: print uses_stack_op
PASS: gdb.dwarf2/valop.exp: print uses_lit_op
Running ../../../master/gdb/testsuite/gdb.dwarf2/watch-notconst.exp ...
PASS: gdb.dwarf2/watch-notconst.exp: watch x
Running ../../../master/gdb/testsuite/gdb.fortran/array-element.exp ...
gdb compile failed, default_target_compile: Can't find gfortran.
Running ../../../master/gdb/testsuite/gdb.fortran/charset.exp ...
gdb compile failed, default_target_compile: Can't find gfortran.
UNTESTED: gdb.fortran/charset.exp: charset.exp
Running ../../../master/gdb/testsuite/gdb.fortran/complex.exp ...
UNTESTED: gdb.fortran/complex.exp: Couldn't compile complex.f
Running ../../../master/gdb/testsuite/gdb.fortran/derived-type.exp ...
gdb compile failed, default_target_compile: Can't find gfortran.
Running ../../../master/gdb/testsuite/gdb.fortran/exprs.exp ...
PASS: gdb.fortran/exprs.exp: set print sevenbit-strings
PASS: gdb.fortran/exprs.exp: set language fortran
PASS: gdb.fortran/exprs.exp: set language to "fortran"
PASS: gdb.fortran/exprs.exp: Set value-history[1] using $1
PASS: gdb.fortran/exprs.exp: Set value-history[2] using $2
PASS: gdb.fortran/exprs.exp: Set value-history[3] using $3
PASS: gdb.fortran/exprs.exp: Print value-history[MAX-1] using inplicit index $$
PASS: gdb.fortran/exprs.exp: Print value-history[MAX-1] again using implicit index $$
PASS: gdb.fortran/exprs.exp: Print value-history[MAX] using implicit index $
PASS: gdb.fortran/exprs.exp: Print value-history[MAX-2] using explicit index $$2
PASS: gdb.fortran/exprs.exp: Print value-history[MAX] using explicit index $0
PASS: gdb.fortran/exprs.exp: Print value-history[MAX] using explicit index $$0
PASS: gdb.fortran/exprs.exp: Print value-history[1] using explicit index $1
PASS: gdb.fortran/exprs.exp: Print value-history[2] using explicit index $2
PASS: gdb.fortran/exprs.exp: Print value-history[3] using explicit index $3
PASS: gdb.fortran/exprs.exp: Print (value-history[MAX] - 3) using implicit index $
PASS: gdb.fortran/exprs.exp: Use value-history element in arithmetic expression
PASS: gdb.fortran/exprs.exp: Set a new convenience variable
PASS: gdb.fortran/exprs.exp: Print contents of new convenience variable
PASS: gdb.fortran/exprs.exp: Set convenience variable to a new value
PASS: gdb.fortran/exprs.exp: Print new contents of convenience variable
PASS: gdb.fortran/exprs.exp: Set convenience variable $_
PASS: gdb.fortran/exprs.exp: Print contents of convenience variable $_
PASS: gdb.fortran/exprs.exp: Use convenience variable in arithmetic expression
PASS: gdb.fortran/exprs.exp: Use convenience variable assignment in arithmetic expression
PASS: gdb.fortran/exprs.exp: Print contents of uninitialized convenience variable
PASS: gdb.fortran/exprs.exp: p 123
PASS: gdb.fortran/exprs.exp: p -123
PASS: gdb.fortran/exprs.exp: reject p _
PASS: gdb.fortran/exprs.exp: p .TRUE.
PASS: gdb.fortran/exprs.exp: p .FALSE.
PASS: gdb.fortran/exprs.exp: p 'a'
PASS: gdb.fortran/exprs.exp: p 'abcdefg'(2:4)
PASS: gdb.fortran/exprs.exp: p 'abcdefg'(:3)
PASS: gdb.fortran/exprs.exp: p 'abcdefg'(5:)
PASS: gdb.fortran/exprs.exp: p 'abcdefg'(:)
PASS: gdb.fortran/exprs.exp: p .44 .LT. .45
PASS: gdb.fortran/exprs.exp: p .44 .GT. .45
PASS: gdb.fortran/exprs.exp: p 0.44 .LT. 0.45
PASS: gdb.fortran/exprs.exp: p 0.44 .GT. 0.45
PASS: gdb.fortran/exprs.exp: p 44. .LT. 45.
PASS: gdb.fortran/exprs.exp: p 44. .GT. 45.
PASS: gdb.fortran/exprs.exp: p 44.0 .LT. 45.0
PASS: gdb.fortran/exprs.exp: p 44.0 .GT. 45.0
PASS: gdb.fortran/exprs.exp: p 10D20 .LT. 10D21
PASS: gdb.fortran/exprs.exp: p 10D20 .GT. 10D21
PASS: gdb.fortran/exprs.exp: p 10d20 .LT. 10d21
PASS: gdb.fortran/exprs.exp: p 10d20 .GT. 10d21
PASS: gdb.fortran/exprs.exp: p 10E20 .LT. 10E21
PASS: gdb.fortran/exprs.exp: p 10E20 .GT. 10E21
PASS: gdb.fortran/exprs.exp: p 10e20 .LT. 10e21
PASS: gdb.fortran/exprs.exp: p 10e20 .GT. 10e21
PASS: gdb.fortran/exprs.exp: p 10.D20 .LT. 10.D21
PASS: gdb.fortran/exprs.exp: p 10.D20 .GT. 10.D21
PASS: gdb.fortran/exprs.exp: p 10.d20 .LT. 10.d21
PASS: gdb.fortran/exprs.exp: p 10.d20 .GT. 10.d21
PASS: gdb.fortran/exprs.exp: p 10.E20 .LT. 10.E21
PASS: gdb.fortran/exprs.exp: p 10.E20 .GT. 10.E21
PASS: gdb.fortran/exprs.exp: p 10.e20 .LT. 10.e21
PASS: gdb.fortran/exprs.exp: p 10.e20 .GT. 10.e21
PASS: gdb.fortran/exprs.exp: p 10.0D20 .LT. 10.0D21
PASS: gdb.fortran/exprs.exp: p 10.0D20 .GT. 10.0D21
PASS: gdb.fortran/exprs.exp: p 10.0d20 .LT. 10.0d21
PASS: gdb.fortran/exprs.exp: p 10.0d20 .GT. 10.0d21
PASS: gdb.fortran/exprs.exp: p 10.0E20 .LT. 10.0E21
PASS: gdb.fortran/exprs.exp: p 10.0E20 .GT. 10.0E21
PASS: gdb.fortran/exprs.exp: p 10.0e20 .LT. 10.0e21
PASS: gdb.fortran/exprs.exp: p 10.0e20 .GT. 10.0e21
PASS: gdb.fortran/exprs.exp: p 10.0D+20 .LT. 10.0D+21
PASS: gdb.fortran/exprs.exp: p 10.0D+20 .GT. 10.0D+21
PASS: gdb.fortran/exprs.exp: p 10.0d+20 .LT. 10.0d+21
PASS: gdb.fortran/exprs.exp: p 10.0d+20 .GT. 10.0d+21
PASS: gdb.fortran/exprs.exp: p 10.0E+20 .LT. 10.0E+21
PASS: gdb.fortran/exprs.exp: p 10.0E+20 .GT. 10.0E+21
PASS: gdb.fortran/exprs.exp: p 10.0e+20 .LT. 10.0e+21
PASS: gdb.fortran/exprs.exp: p 10.0e+20 .GT. 10.0e+21
PASS: gdb.fortran/exprs.exp: p 10.0D-11 .LT. 10.0D-10
PASS: gdb.fortran/exprs.exp: p 10.0D-11 .GT. 10.0D-10
PASS: gdb.fortran/exprs.exp: p 10.0d-11 .LT. 10.0d-10
PASS: gdb.fortran/exprs.exp: p 10.0d-11 .GT. 10.0d-10
PASS: gdb.fortran/exprs.exp: p 10.0E-11 .LT. 10.0E-10
PASS: gdb.fortran/exprs.exp: p 10.0E-11 .GT. 10.0E-10
PASS: gdb.fortran/exprs.exp: p 10.0e-11 .LT. 10.0e-10
PASS: gdb.fortran/exprs.exp: p 10.0e-11 .GT. 10.0e-10
PASS: gdb.fortran/exprs.exp: unary minus applied to int
PASS: gdb.fortran/exprs.exp: unary minus applied to real
PASS: gdb.fortran/exprs.exp: bool plus int
PASS: gdb.fortran/exprs.exp: int plus int
PASS: gdb.fortran/exprs.exp: real plus int
PASS: gdb.fortran/exprs.exp: real plus real
PASS: gdb.fortran/exprs.exp: bool minus int
PASS: gdb.fortran/exprs.exp: int minus int
PASS: gdb.fortran/exprs.exp: real minus int
PASS: gdb.fortran/exprs.exp: real minus real
PASS: gdb.fortran/exprs.exp: bool times int
PASS: gdb.fortran/exprs.exp: int times int
PASS: gdb.fortran/exprs.exp: real times int
PASS: gdb.fortran/exprs.exp: real times real
PASS: gdb.fortran/exprs.exp: bool divided by int
PASS: gdb.fortran/exprs.exp: int divided by int
PASS: gdb.fortran/exprs.exp: real divided by int
PASS: gdb.fortran/exprs.exp: real divided by real
PASS: gdb.fortran/exprs.exp: int powered by int
PASS: gdb.fortran/exprs.exp: combined exponentiation expression
PASS: gdb.fortran/exprs.exp: combined exponentiation expression in specified order
PASS: gdb.fortran/exprs.exp: int powered by real
PASS: gdb.fortran/exprs.exp: real powered by real
Running ../../../master/gdb/testsuite/gdb.fortran/library-module.exp ...
gdb compile failed, default_target_compile: Can't find gfortran.
UNTESTED: gdb.fortran/library-module.exp: Couldn't compile library-module-lib.f90
Running ../../../master/gdb/testsuite/gdb.fortran/logical.exp ...
UNTESTED: gdb.fortran/logical.exp: logical.exp
UNTESTED: gdb.fortran/logical.exp: Could not compile logical.f90.
Running ../../../master/gdb/testsuite/gdb.fortran/module.exp ...
gdb compile failed, default_target_compile: Can't find gfortran.
UNTESTED: gdb.fortran/module.exp: module.exp
Running ../../../master/gdb/testsuite/gdb.fortran/multi-dim.exp ...
gdb compile failed, default_target_compile: Can't find gfortran.
UNTESTED: gdb.fortran/multi-dim.exp: multi-dim.exp
Running ../../../master/gdb/testsuite/gdb.fortran/subarray.exp ...
gdb compile failed, default_target_compile: Can't find gfortran.
Running ../../../master/gdb/testsuite/gdb.fortran/types.exp ...
PASS: gdb.fortran/types.exp: set print sevenbit-strings
PASS: gdb.fortran/types.exp: set language fortran
PASS: gdb.fortran/types.exp: set language to "fortran"
PASS: gdb.fortran/types.exp: pt 123
PASS: gdb.fortran/types.exp: reject pt _
PASS: gdb.fortran/types.exp: pt .TRUE.
PASS: gdb.fortran/types.exp: pt .FALSE.
PASS: gdb.fortran/types.exp: pt 'a'
PASS: gdb.fortran/types.exp: pt .44
PASS: gdb.fortran/types.exp: pt 44.0
PASS: gdb.fortran/types.exp: pt 10D20
PASS: gdb.fortran/types.exp: pt 10D20
PASS: gdb.fortran/types.exp: pt 10d20
PASS: gdb.fortran/types.exp: pt 10d20
PASS: gdb.fortran/types.exp: pt 10E20
PASS: gdb.fortran/types.exp: pt 10E20
PASS: gdb.fortran/types.exp: pt 10e20
PASS: gdb.fortran/types.exp: pt 10e20
Running ../../../master/gdb/testsuite/gdb.gdb/complaints.exp ...
PASS: gdb.gdb/complaints.exp: breakpoint in captured_command_loop
PASS: gdb.gdb/complaints.exp: run until breakpoint at captured_command_loop
PASS: gdb.gdb/complaints.exp: set stop_whining = 2
PASS: gdb.gdb/complaints.exp: call complaint (&symfile_complaints, "Register a complaint")
PASS: gdb.gdb/complaints.exp: print symfile_complaints->root->fmt
PASS: gdb.gdb/complaints.exp: call complaint (&symfile_complaints, symfile_complaints->root->fmt)
PASS: gdb.gdb/complaints.exp: list has one entry
PASS: gdb.gdb/complaints.exp: call complaint (&symfile_complaints, "Testing! Testing! Testing!")
PASS: gdb.gdb/complaints.exp: serial start
PASS: gdb.gdb/complaints.exp: serial line 1
PASS: gdb.gdb/complaints.exp: serial line 2
PASS: gdb.gdb/complaints.exp: serial end
PASS: gdb.gdb/complaints.exp: short start
PASS: gdb.gdb/complaints.exp: short line 1
PASS: gdb.gdb/complaints.exp: short line 2
PASS: gdb.gdb/complaints.exp: short end
PASS: gdb.gdb/complaints.exp: empty non-verbose non-noisy clear
PASS: gdb.gdb/complaints.exp: empty verbose non-noisy clear
PASS: gdb.gdb/complaints.exp: empty verbose noisy clear
PASS: gdb.gdb/complaints.exp: empty non-verbose noisy clear
Running ../../../master/gdb/testsuite/gdb.gdb/observer.exp ...
PASS: gdb.gdb/observer.exp: breakpoint in captured_main
PASS: gdb.gdb/observer.exp: run until breakpoint at captured_main
PASS: gdb.gdb/observer.exp: no observer attached; reset first observer counter
PASS: gdb.gdb/observer.exp: no observer attached; reset second observer counter
PASS: gdb.gdb/observer.exp: no observer attached; reset third observer counter
PASS: gdb.gdb/observer.exp: no observer attached; sending notification
PASS: gdb.gdb/observer.exp: no observer attached; check first observer counter value
PASS: gdb.gdb/observer.exp: no observer attached; check second observer counter value
PASS: gdb.gdb/observer.exp: no observer attached; check third observer counter value
PASS: gdb.gdb/observer.exp: second observer attached; attach second observer
PASS: gdb.gdb/observer.exp: second observer attached; reset first observer counter
PASS: gdb.gdb/observer.exp: second observer attached; reset second observer counter
PASS: gdb.gdb/observer.exp: second observer attached; reset third observer counter
PASS: gdb.gdb/observer.exp: second observer attached; sending notification
PASS: gdb.gdb/observer.exp: second observer attached; check first observer counter value
PASS: gdb.gdb/observer.exp: second observer attached; check second observer counter value
PASS: gdb.gdb/observer.exp: second observer attached; check third observer counter value
PASS: gdb.gdb/observer.exp: second observer detached; detach second observer
PASS: gdb.gdb/observer.exp: second observer detached; reset first observer counter
PASS: gdb.gdb/observer.exp: second observer detached; reset second observer counter
PASS: gdb.gdb/observer.exp: second observer detached; reset third observer counter
PASS: gdb.gdb/observer.exp: second observer detached; sending notification
PASS: gdb.gdb/observer.exp: second observer detached; check first observer counter value
PASS: gdb.gdb/observer.exp: second observer detached; check second observer counter value
PASS: gdb.gdb/observer.exp: second observer detached; check third observer counter value
PASS: gdb.gdb/observer.exp: 1st observer added; attach first observer
PASS: gdb.gdb/observer.exp: 1st observer added; reset first observer counter
PASS: gdb.gdb/observer.exp: 1st observer added; reset second observer counter
PASS: gdb.gdb/observer.exp: 1st observer added; reset third observer counter
PASS: gdb.gdb/observer.exp: 1st observer added; sending notification
PASS: gdb.gdb/observer.exp: 1st observer added; check first observer counter value
PASS: gdb.gdb/observer.exp: 1st observer added; check second observer counter value
PASS: gdb.gdb/observer.exp: 1st observer added; check third observer counter value
PASS: gdb.gdb/observer.exp: 2nd observer added; attach second observer
PASS: gdb.gdb/observer.exp: 2nd observer added; reset first observer counter
PASS: gdb.gdb/observer.exp: 2nd observer added; reset second observer counter
PASS: gdb.gdb/observer.exp: 2nd observer added; reset third observer counter
PASS: gdb.gdb/observer.exp: 2nd observer added; sending notification
PASS: gdb.gdb/observer.exp: 2nd observer added; check first observer counter value
PASS: gdb.gdb/observer.exp: 2nd observer added; check second observer counter value
PASS: gdb.gdb/observer.exp: 2nd observer added; check third observer counter value
PASS: gdb.gdb/observer.exp: 3rd observer added; attach third observer
PASS: gdb.gdb/observer.exp: 3rd observer added; reset first observer counter
PASS: gdb.gdb/observer.exp: 3rd observer added; reset second observer counter
PASS: gdb.gdb/observer.exp: 3rd observer added; reset third observer counter
PASS: gdb.gdb/observer.exp: 3rd observer added; sending notification
PASS: gdb.gdb/observer.exp: 3rd observer added; check first observer counter value
PASS: gdb.gdb/observer.exp: 3rd observer added; check second observer counter value
PASS: gdb.gdb/observer.exp: 3rd observer added; check third observer counter value
PASS: gdb.gdb/observer.exp: 2nd observer removed; detach second observer
PASS: gdb.gdb/observer.exp: 2nd observer removed; reset first observer counter
PASS: gdb.gdb/observer.exp: 2nd observer removed; reset second observer counter
PASS: gdb.gdb/observer.exp: 2nd observer removed; reset third observer counter
PASS: gdb.gdb/observer.exp: 2nd observer removed; sending notification
PASS: gdb.gdb/observer.exp: 2nd observer removed; check first observer counter value
PASS: gdb.gdb/observer.exp: 2nd observer removed; check second observer counter value
PASS: gdb.gdb/observer.exp: 2nd observer removed; check third observer counter value
PASS: gdb.gdb/observer.exp: 1st observer removed; detach first observer
PASS: gdb.gdb/observer.exp: 1st observer removed; reset first observer counter
PASS: gdb.gdb/observer.exp: 1st observer removed; reset second observer counter
PASS: gdb.gdb/observer.exp: 1st observer removed; reset third observer counter
PASS: gdb.gdb/observer.exp: 1st observer removed; sending notification
PASS: gdb.gdb/observer.exp: 1st observer removed; check first observer counter value
PASS: gdb.gdb/observer.exp: 1st observer removed; check second observer counter value
PASS: gdb.gdb/observer.exp: 1st observer removed; check third observer counter value
PASS: gdb.gdb/observer.exp: 3rd observer removed; detach third observer
PASS: gdb.gdb/observer.exp: 3rd observer removed; reset first observer counter
PASS: gdb.gdb/observer.exp: 3rd observer removed; reset second observer counter
PASS: gdb.gdb/observer.exp: 3rd observer removed; reset third observer counter
PASS: gdb.gdb/observer.exp: 3rd observer removed; sending notification
PASS: gdb.gdb/observer.exp: 3rd observer removed; check first observer counter value
PASS: gdb.gdb/observer.exp: 3rd observer removed; check second observer counter value
PASS: gdb.gdb/observer.exp: 3rd observer removed; check third observer counter value
PASS: gdb.gdb/observer.exp: three observers added; attach first observer
PASS: gdb.gdb/observer.exp: three observers added; attach second observer
PASS: gdb.gdb/observer.exp: three observers added; attach third observer
PASS: gdb.gdb/observer.exp: three observers added; reset first observer counter
PASS: gdb.gdb/observer.exp: three observers added; reset second observer counter
PASS: gdb.gdb/observer.exp: three observers added; reset third observer counter
PASS: gdb.gdb/observer.exp: three observers added; sending notification
PASS: gdb.gdb/observer.exp: three observers added; check first observer counter value
PASS: gdb.gdb/observer.exp: three observers added; check second observer counter value
PASS: gdb.gdb/observer.exp: three observers added; check third observer counter value
PASS: gdb.gdb/observer.exp: third observer removed; detach third observer
PASS: gdb.gdb/observer.exp: third observer removed; reset first observer counter
PASS: gdb.gdb/observer.exp: third observer removed; reset second observer counter
PASS: gdb.gdb/observer.exp: third observer removed; reset third observer counter
PASS: gdb.gdb/observer.exp: third observer removed; sending notification
PASS: gdb.gdb/observer.exp: third observer removed; check first observer counter value
PASS: gdb.gdb/observer.exp: third observer removed; check second observer counter value
PASS: gdb.gdb/observer.exp: third observer removed; check third observer counter value
PASS: gdb.gdb/observer.exp: second observer removed; detach second observer
PASS: gdb.gdb/observer.exp: second observer removed; reset first observer counter
PASS: gdb.gdb/observer.exp: second observer removed; reset second observer counter
PASS: gdb.gdb/observer.exp: second observer removed; reset third observer counter
PASS: gdb.gdb/observer.exp: second observer removed; sending notification
PASS: gdb.gdb/observer.exp: second observer removed; check first observer counter value
PASS: gdb.gdb/observer.exp: second observer removed; check second observer counter value
PASS: gdb.gdb/observer.exp: second observer removed; check third observer counter value
PASS: gdb.gdb/observer.exp: first observer removed; detach first observer
PASS: gdb.gdb/observer.exp: first observer removed; reset first observer counter
PASS: gdb.gdb/observer.exp: first observer removed; reset second observer counter
PASS: gdb.gdb/observer.exp: first observer removed; reset third observer counter
PASS: gdb.gdb/observer.exp: first observer removed; sending notification
PASS: gdb.gdb/observer.exp: first observer removed; check first observer counter value
PASS: gdb.gdb/observer.exp: first observer removed; check second observer counter value
PASS: gdb.gdb/observer.exp: first observer removed; check third observer counter value
Running ../../../master/gdb/testsuite/gdb.gdb/selftest.exp ...
PASS: gdb.gdb/selftest.exp: Disassemble main
PASS: gdb.gdb/selftest.exp: breakpoint in captured_main
PASS: gdb.gdb/selftest.exp: set interrupt character in test_with_self
PASS: gdb.gdb/selftest.exp: set listsize to 1
PASS: gdb.gdb/selftest.exp: run until breakpoint at captured_main
PASS: gdb.gdb/selftest.exp: printed version as string
PASS: gdb.gdb/selftest.exp: step over initial brace
PASS: gdb.gdb/selftest.exp: step over argc initialization
PASS: gdb.gdb/selftest.exp: step over argv initialization
PASS: gdb.gdb/selftest.exp: next over make_command_stats_cleanup and everything it calls
PASS: gdb.gdb/selftest.exp: step over argc initialization
PASS: gdb.gdb/selftest.exp: next over make_command_stats_cleanup and everything it calls
PASS: gdb.gdb/selftest.exp: next over setlocale LC_MESSAGES
PASS: gdb.gdb/selftest.exp: next over make_command_stats_cleanup and everything it calls
PASS: gdb.gdb/selftest.exp: next over setlocale LC_MESSAGES
PASS: gdb.gdb/selftest.exp: next over setlocale LC_CTYPE
PASS: gdb.gdb/selftest.exp: next over bindtextdomain
PASS: gdb.gdb/selftest.exp: next over textdomain PACKAGE
PASS: gdb.gdb/selftest.exp: next over lim_at_start initialization
PASS: gdb.gdb/selftest.exp: next over cmdarg initialization via xmalloc
PASS: gdb.gdb/selftest.exp: next over lim_at_start initialization
PASS: gdb.gdb/selftest.exp: next over cmdarg initialization via xmalloc
PASS: gdb.gdb/selftest.exp: print a string
PASS: gdb.gdb/selftest.exp: step into xmalloc call
PASS: gdb.gdb/selftest.exp: xgdb is at prompt
PASS: gdb.gdb/selftest.exp: Set xgdb prompt
PASS: gdb.gdb/selftest.exp: send ^C to child process
PASS: gdb.gdb/selftest.exp: send SIGINT signal to child process
PASS: gdb.gdb/selftest.exp: backtrace through signal handler
Running ../../../master/gdb/testsuite/gdb.gdb/xfullpath.exp ...
PASS: gdb.gdb/xfullpath.exp: breakpoint in captured_main
PASS: gdb.gdb/xfullpath.exp: run until breakpoint at captured_main
PASS: gdb.gdb/xfullpath.exp: A filename with ./ as the directory prefix
PASS: gdb.gdb/xfullpath.exp: A filename with ../ in the directory prefix
PASS: gdb.gdb/xfullpath.exp: A one-char filename in the current directory
PASS: gdb.gdb/xfullpath.exp: A filename in the root directory
PASS: gdb.gdb/xfullpath.exp: A filename without any directory prefix
PASS: gdb.gdb/xfullpath.exp: A one-char filename without any directory prefix
PASS: gdb.gdb/xfullpath.exp: An empty filename
Running ../../../master/gdb/testsuite/gdb.java/jmain.exp ...
PASS: gdb.java/jmain.exp: compilation jmain.java
PASS: gdb.java/jmain.exp: set print sevenbit-strings
KFAIL: gdb.java/jmain.exp: break main (PRMS: java/1567)
KPASS: gdb.java/jmain.exp: break jmain.main (PRMS java/1565)
PASS: gdb.java/jmain.exp: break jmain.main(java.lang.String[])void
Running ../../../master/gdb/testsuite/gdb.java/jmisc.exp ...
PASS: gdb.java/jmisc.exp: compilation jmisc.java
PASS: gdb.java/jmisc.exp: set print sevenbit-strings
PASS: gdb.java/jmisc.exp: set language java
PASS: gdb.java/jmisc.exp: set language to "java"
PASS: gdb.java/jmisc.exp: continue to breakpoint: jmisc.main(java.lang.String[])
PASS: gdb.java/jmisc.exp: ptype jmisc
PASS: gdb.java/jmisc.exp: p args
KFAIL: gdb.java/jmisc.exp: gdb/2214 (PRMS: p *args)
PASS: gdb.java/jmisc.exp: break exit
PASS: gdb.java/jmisc.exp: continue to exit
PASS: gdb.java/jmisc.exp: set breakpoint pending off
PASS: gdb.java/jmisc.exp: break jmisc.main(java.lang.String[])int
Running ../../../master/gdb/testsuite/gdb.java/jnpe.exp ...
PASS: gdb.java/jnpe.exp: compilation jnpe.java
XFAIL: gdb.java/jnpe.exp: check for unwinder hook in java
UNSUPPORTED: gdb.java/jnpe.exp: jnpe.exp could not find _Unwind_DebugHook
Running ../../../master/gdb/testsuite/gdb.java/jprint.exp ...
PASS: gdb.java/jprint.exp: compilation jprint.java
PASS: gdb.java/jprint.exp: set print sevenbit-strings
PASS: gdb.java/jprint.exp: set language java
PASS: gdb.java/jprint.exp: set language to "java"
PASS: gdb.java/jprint.exp: continue to breakpoint: jprint.main(java.lang.String[])
PASS: gdb.java/jprint.exp: unambiguous static call
PASS: gdb.java/jprint.exp: next
PASS: gdb.java/jprint.exp: next
PASS: gdb.java/jprint.exp: single argument print call
PASS: gdb.java/jprint.exp: double argument print call
FAIL: gdb.java/jprint.exp: virtual fn call
PASS: gdb.java/jprint.exp: inherited static call
FAIL: gdb.java/jprint.exp: inherited virtual fn call
XPASS: gdb.java/jprint.exp: print a java.util.Properties (PRMS gcc/43260)
Running ../../../master/gdb/testsuite/gdb.java/jv-exp.exp ...
PASS: gdb.java/jv-exp.exp: set print sevenbit-strings
PASS: gdb.java/jv-exp.exp: set width 0
PASS: gdb.java/jv-exp.exp: set language java
PASS: gdb.java/jv-exp.exp: set language to "java"
PASS: gdb.java/jv-exp.exp: p 1 > 2
PASS: gdb.java/jv-exp.exp: p 1 < 2
Running ../../../master/gdb/testsuite/gdb.java/jv-print.exp ...
PASS: gdb.java/jv-print.exp: print $pc
PASS: gdb.java/jv-print.exp: set print sevenbit-strings
PASS: gdb.java/jv-print.exp: set width 0
PASS: gdb.java/jv-print.exp: set language java
PASS: gdb.java/jv-print.exp: set language to "java"
PASS: gdb.java/jv-print.exp: p 123
PASS: gdb.java/jv-print.exp: p -123
PASS: gdb.java/jv-print.exp: p/d 123
PASS: gdb.java/jv-print.exp: p 0123
PASS: gdb.java/jv-print.exp: p 00123
PASS: gdb.java/jv-print.exp: p -0123
PASS: gdb.java/jv-print.exp: p/o 0123
PASS: gdb.java/jv-print.exp: p 0x123
PASS: gdb.java/jv-print.exp: p -0x123
PASS: gdb.java/jv-print.exp: p 0x0123
PASS: gdb.java/jv-print.exp: p -0x0123
PASS: gdb.java/jv-print.exp: p 0xABCDEF
PASS: gdb.java/jv-print.exp: p 0xabcdef
PASS: gdb.java/jv-print.exp: p 0xAbCdEf
PASS: gdb.java/jv-print.exp: p/x 0x123
PASS: gdb.java/jv-print.exp: p 'a'
PASS: gdb.java/jv-print.exp: p/c 'a'
PASS: gdb.java/jv-print.exp: p/c 70
PASS: gdb.java/jv-print.exp: p/x 'a'
PASS: gdb.java/jv-print.exp: p/d 'a'
PASS: gdb.java/jv-print.exp: p/t 'a'
PASS: gdb.java/jv-print.exp: p/x '\377'
PASS: gdb.java/jv-print.exp: p '\''
PASS: gdb.java/jv-print.exp: p '\\'
PASS: gdb.java/jv-print.exp: reject p 0x
PASS: gdb.java/jv-print.exp: p ''
PASS: gdb.java/jv-print.exp: p '''
PASS: gdb.java/jv-print.exp: reject p '\'
PASS: gdb.java/jv-print.exp: reject p '\\\'
PASS: gdb.java/jv-print.exp: reject p DEADBEEF
PASS: gdb.java/jv-print.exp: reject p 123DEADBEEF
PASS: gdb.java/jv-print.exp: reject p 123foobar.bazfoo3
PASS: gdb.java/jv-print.exp: reject p 123EEEEEEEEEEEEEEEEE33333k333
PASS: gdb.java/jv-print.exp: check for floating addition
PASS: gdb.java/jv-print.exp: reject p 09
PASS: gdb.java/jv-print.exp: reject p 079
PASS: gdb.java/jv-print.exp: reject p 0xG
PASS: gdb.java/jv-print.exp: reject p 0xAG
PASS: gdb.java/jv-print.exp: check fp + text
PASS: gdb.java/jv-print.exp: p 1.
PASS: gdb.java/jv-print.exp: p 1.5
PASS: gdb.java/jv-print.exp: p 1.f
PASS: gdb.java/jv-print.exp: p 1.5f
PASS: gdb.java/jv-print.exp: p 1.d
PASS: gdb.java/jv-print.exp: p 1.5d
PASS: gdb.java/jv-print.exp: p 0x1.1
PASS: gdb.java/jv-print.exp: reject p 1.1x
PASS: gdb.java/jv-print.exp: reject p 1.1ff
PASS: gdb.java/jv-print.exp: reject p 1.1dd
Running ../../../master/gdb/testsuite/gdb.mi/dw2-ref-missing-frame.exp ...
PASS: gdb.mi/dw2-ref-missing-frame.exp: breakpoint at func_nofb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: mi runto func_nofb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: test func_nofb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: breakpoint at func_loopfb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: mi runto func_loopfb_marker
PASS: gdb.mi/dw2-ref-missing-frame.exp: test func_loopfb_var
Running ../../../master/gdb/testsuite/gdb.mi/gdb2549.exp ...
PASS: gdb.mi/gdb2549.exp: wrong arguments
PASS: gdb.mi/gdb2549.exp: no executable
PASS: gdb.mi/gdb2549.exp: breakpoint at main
PASS: gdb.mi/gdb2549.exp: mi runto main
PASS: gdb.mi/gdb2549.exp: register values x
PASS: gdb.mi/gdb2549.exp: register values f
PASS: gdb.mi/gdb2549.exp: register values d
PASS: gdb.mi/gdb2549.exp: register values o
PASS: gdb.mi/gdb2549.exp: register values t
Running ../../../master/gdb/testsuite/gdb.mi/gdb669.exp ...
PASS: gdb.mi/gdb669.exp: successfully compiled posix threads test case
PASS: gdb.mi/gdb669.exp: breakpoint at main
PASS: gdb.mi/gdb669.exp: mi runto main
PASS: gdb.mi/gdb669.exp: -thread-list-ids (at main)
PASS: gdb.mi/gdb669.exp: info threads (at main)
PASS: gdb.mi/gdb669.exp: finding MI result string (at main)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (at main)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (at main)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (at main)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (at main)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (at main)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (at main)
PASS: gdb.mi/gdb669.exp: next, try 0
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 0)
PASS: gdb.mi/gdb669.exp: info threads (try 0)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 0)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 0)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 0)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 0)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 0)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 0)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 0)
PASS: gdb.mi/gdb669.exp: next, try 1
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 1)
PASS: gdb.mi/gdb669.exp: info threads (try 1)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 1)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 1)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 1)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 1)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 1)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 1)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 1)
PASS: gdb.mi/gdb669.exp: next, try 2
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 2)
PASS: gdb.mi/gdb669.exp: info threads (try 2)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 2)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 2)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 2)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 2)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 2)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 2)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 2)
PASS: gdb.mi/gdb669.exp: next, try 3
PASS: gdb.mi/gdb669.exp: -thread-list-ids (try 3)
PASS: gdb.mi/gdb669.exp: info threads (try 3)
PASS: gdb.mi/gdb669.exp: finding MI result string (try 3)
PASS: gdb.mi/gdb669.exp: finding number of threads in MI output (try 3)
PASS: gdb.mi/gdb669.exp: got number of threads from MI (try 3)
PASS: gdb.mi/gdb669.exp: console and MI have same number of threads (try 3)
PASS: gdb.mi/gdb669.exp: -thread_list_ids (try 3)
PASS: gdb.mi/gdb669.exp: finding threads in MI output (try 3)
PASS: gdb.mi/gdb669.exp: MI and console have same threads (try 3)
Running ../../../master/gdb/testsuite/gdb.mi/gdb680.exp ...
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 0
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 1
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 2
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 3
PASS: gdb.mi/gdb680.exp: -data-list-register-names -1, try 4
Running ../../../master/gdb/testsuite/gdb.mi/gdb701.exp ...
PASS: gdb.mi/gdb701.exp: breakpoint at main
PASS: gdb.mi/gdb701.exp: mi runto main
PASS: gdb.mi/gdb701.exp: step over "foo = 0"
PASS: gdb.mi/gdb701.exp: create fooPtr
PASS: gdb.mi/gdb701.exp: list children of fooPtr
PASS: gdb.mi/gdb701.exp: list children of fooPtr.x
PASS: gdb.mi/gdb701.exp: list children of fooPtr.y
PASS: gdb.mi/gdb701.exp: list children of fooPtr.z
Running ../../../master/gdb/testsuite/gdb.mi/gdb792.exp ...
PASS: gdb.mi/gdb792.exp: breakpoint at main
PASS: gdb.mi/gdb792.exp: mi runto main
PASS: gdb.mi/gdb792.exp: create var for class A
PASS: gdb.mi/gdb792.exp: list children of class A
PASS: gdb.mi/gdb792.exp: list children of A.public
PASS: gdb.mi/gdb792.exp: list children of A.private
PASS: gdb.mi/gdb792.exp: list children of A.protected
PASS: gdb.mi/gdb792.exp: list children of A.protected.b
PASS: gdb.mi/gdb792.exp: list children of A.protected.b.public
PASS: gdb.mi/gdb792.exp: list children of A.protected.b.private
PASS: gdb.mi/gdb792.exp: create var for class C which has baseclass A
PASS: gdb.mi/gdb792.exp: list children of class C
Running ../../../master/gdb/testsuite/gdb.mi/mi-async.exp ...
PASS: gdb.mi/mi-async.exp: start: stop
PASS: gdb.mi/mi-async.exp: CLI next: stop
PASS: gdb.mi/mi-async.exp: restart: stop
Running ../../../master/gdb/testsuite/gdb.mi/mi-basics.exp ...
PASS: gdb.mi/mi-basics.exp: acceptance of MI operations
PASS: gdb.mi/mi-basics.exp: file-exec-and-symbols operation
PASS: gdb.mi/mi-basics.exp: file-exec-file operation
PASS: gdb.mi/mi-basics.exp: file-symbol-file operation
PASS: gdb.mi/mi-basics.exp: break-delete (all) operation
PASS: gdb.mi/mi-basics.exp: all breakpoints removed
PASS: gdb.mi/mi-basics.exp: environment-directory arg operation
PASS: gdb.mi/mi-basics.exp: environment-directory empty-string operation
PASS: gdb.mi/mi-basics.exp: environment-directory operation
PASS: gdb.mi/mi-basics.exp: environment-cd arg operation
PASS: gdb.mi/mi-basics.exp: environment-pwd operation
PASS: gdb.mi/mi-basics.exp: environment-path
PASS: gdb.mi/mi-basics.exp: environment-path no-args operation
PASS: gdb.mi/mi-basics.exp: environment-path dir1 dir2 operation
PASS: gdb.mi/mi-basics.exp: environment-path -r dir operation
PASS: gdb.mi/mi-basics.exp: environment-path -r operation
PASS: gdb.mi/mi-basics.exp: initial tty is mi_inferior_tty_name
PASS: gdb.mi/mi-basics.exp: set tty to /dev/pts/1
PASS: gdb.mi/mi-basics.exp: tty was set correctly
PASS: gdb.mi/mi-basics.exp: set tty to the empty string
PASS: gdb.mi/mi-basics.exp: make sure tty is empty
PASS: gdb.mi/mi-basics.exp: set tty to mi_inferior_tty_name (the way it was)
PASS: gdb.mi/mi-basics.exp: verify tty is correct
Running ../../../master/gdb/testsuite/gdb.mi/mi-break.exp ...
PASS: gdb.mi/mi-break.exp: break-insert -t operation
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-break.exp: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-break.exp: list of breakpoints
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
XFAIL: gdb.mi/mi-break.exp: break-insert -r operation
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp callee2
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp callee
XFAIL: gdb.mi/mi-break.exp: insert breakpoint with regexp .*llee
XFAIL: gdb.mi/mi-break.exp: list of breakpoints
PASS: gdb.mi/mi-break.exp: delete temp breakpoints
PASS: gdb.mi/mi-break.exp: insert breakpoint with ignore count at callme
PASS: gdb.mi/mi-break.exp: run to breakpoint with ignore count
PASS: gdb.mi/mi-break.exp: breakpoint at nonexistent function
PASS: gdb.mi/mi-break.exp: create varobj for function call
PASS: gdb.mi/mi-break.exp: update varobj for function call
PASS: gdb.mi/mi-break.exp: test disabled creation
PASS: gdb.mi/mi-break.exp: test disabled creation: cleanup
PASS: gdb.mi/mi-break.exp: breakpoint commands: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-break.exp: breakpoint commands: set commands
PASS: gdb.mi/mi-break.exp: breakpoint commands: check that commands are set
PASS: gdb.mi/mi-break.exp: breakpoint commands: clear commands
PASS: gdb.mi/mi-break.exp: breakpoint commands: check that commands are cleared
PASS: gdb.mi/mi-break.exp: breakpoint at main
PASS: gdb.mi/mi-break.exp: mi runto main
PASS: gdb.mi/mi-break.exp: breakpoint commands: insert breakpoint at basics.c:callee2, again
PASS: gdb.mi/mi-break.exp: breakpoint commands: set commands
PASS: gdb.mi/mi-break.exp: intermediate stop and continue
PASS: gdb.mi/mi-break.exp: test hitting breakpoint with commands
Running ../../../master/gdb/testsuite/gdb.mi/mi-cli.exp ...
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with no arguments
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with one argument
PASS: gdb.mi/mi-cli.exp: -interpreter-exec with bogus interpreter
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console bogus
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "file $binfile"
PASS: gdb.mi/mi-cli.exp: breakpoint at main
PASS: gdb.mi/mi-cli.exp: mi runto main
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set args foobar"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "show args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "break callee4"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "info break"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set listsize 1"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list"
PASS: gdb.mi/mi-cli.exp: continue to callee4
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "delete 2"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "up"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "down"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "frame 2"
PASS: gdb.mi/mi-cli.exp: -stack-select-frame 0
PASS: gdb.mi/mi-cli.exp: check *stopped from CLI command
PASS: gdb.mi/mi-cli.exp: -break-insert -t basics.c:$line_main_hello
PASS: gdb.mi/mi-cli.exp: -exec-continue to line 66
PASS: gdb.mi/mi-cli.exp: 34 next: run
PASS: gdb.mi/mi-cli.exp: 34 next: stop
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_return
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "help set args"
PASS: gdb.mi/mi-cli.exp: -interpreter-exec console "set $pc=0x0"
Running ../../../master/gdb/testsuite/gdb.mi/mi-console.exp ...
PASS: gdb.mi/mi-console.exp: breakpoint at main
PASS: gdb.mi/mi-console.exp: mi runto main
PASS: gdb.mi/mi-console.exp: Testing console output
PASS: gdb.mi/mi-console.exp: Testing console output inferior output
PASS: gdb.mi/mi-console.exp: finished step over hello
Running ../../../master/gdb/testsuite/gdb.mi/mi-disassemble.exp ...
PASS: gdb.mi/mi-disassemble.exp: breakpoint at main
PASS: gdb.mi/mi-disassemble.exp: mi runto main
PASS: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble from pc to pc+12 assembly with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file & line, assembly with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line assembly mixed with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble range assembly mixed with opcodes
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus filename
PASS: gdb.mi/mi-disassemble.exp: data-disassemble bogus address
PASS: gdb.mi/mi-disassemble.exp: data-disassemble mix different args
PASS: gdb.mi/mi-disassemble.exp: data-disassemble wrong mode arg
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly only
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (zero lines) assembly mixed
PASS: gdb.mi/mi-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly mixed
Running ../../../master/gdb/testsuite/gdb.mi/mi-eval.exp ...
PASS: gdb.mi/mi-eval.exp: breakpoint at callee4
PASS: gdb.mi/mi-eval.exp: mi runto callee4
PASS: gdb.mi/mi-eval.exp: next at callee4
PASS: gdb.mi/mi-eval.exp: eval A
PASS: gdb.mi/mi-eval.exp: eval &A
PASS: gdb.mi/mi-eval.exp: eval A+3
PASS: gdb.mi/mi-eval.exp: eval A + 3
Running ../../../master/gdb/testsuite/gdb.mi/mi-file-transfer.exp ...
PASS: gdb.mi/mi-file-transfer.exp: put binary file
PASS: gdb.mi/mi-file-transfer.exp: get binary file
PASS: gdb.mi/mi-file-transfer.exp: compare intermediate binary file
PASS: gdb.mi/mi-file-transfer.exp: compare binary file
PASS: gdb.mi/mi-file-transfer.exp: deleted binary file
PASS: gdb.mi/mi-file-transfer.exp: verified deleted binary file
Running ../../../master/gdb/testsuite/gdb.mi/mi-file.exp ...
PASS: gdb.mi/mi-file.exp: request path info of current source file (basics.c)
PASS: gdb.mi/mi-file.exp: Getting a list of source files.
Running ../../../master/gdb/testsuite/gdb.mi/mi-hack-cli.exp ...
PASS: gdb.mi/mi-hack-cli.exp: show architecture
PASS: gdb.mi/mi-hack-cli.exp: 47show architecture
Running ../../../master/gdb/testsuite/gdb.mi/mi-nonstop-exit.exp ...
PASS: gdb.mi/mi-nonstop-exit.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nonstop-exit.exp: breakpoint at main
PASS: gdb.mi/mi-nonstop-exit.exp: mi runto main
PASS: gdb.mi/mi-nonstop-exit.exp: finished exec continue
PASS: gdb.mi/mi-nonstop-exit.exp: breakpoint at main
PASS: gdb.mi/mi-nonstop-exit.exp: mi runto main
PASS: gdb.mi/mi-nonstop-exit.exp: finished exec continue (2)
Running ../../../master/gdb/testsuite/gdb.mi/mi-nonstop.exp ...
PASS: gdb.mi/mi-nonstop.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nonstop.exp: breakpoint at main
PASS: gdb.mi/mi-nonstop.exp: mi runto main
PASS: gdb.mi/mi-nonstop.exp: breakpoint at marker
PASS: gdb.mi/mi-nonstop.exp: w0,i0 stop
PASS: gdb.mi/mi-nonstop.exp: w1,i0 stop
PASS: gdb.mi/mi-nonstop.exp: thread state, stop 1
PASS: gdb.mi/mi-nonstop.exp: select thread 2
PASS: gdb.mi/mi-nonstop.exp: create varobj in first thread
PASS: gdb.mi/mi-nonstop.exp: select thread 3
PASS: gdb.mi/mi-nonstop.exp: create varobj in second thread
PASS: gdb.mi/mi-nonstop.exp: thread state, resume 1
PASS: gdb.mi/mi-nonstop.exp: w0,i1 stop
PASS: gdb.mi/mi-nonstop.exp: thread state, stop 2
PASS: gdb.mi/mi-nonstop.exp: thread state, resume 2
PASS: gdb.mi/mi-nonstop.exp: w1,i1 stop
PASS: gdb.mi/mi-nonstop.exp: thread state, stop 3
PASS: gdb.mi/mi-nonstop.exp: update varobj, 1
PASS: gdb.mi/mi-nonstop.exp: check varobj, w0, 1
PASS: gdb.mi/mi-nonstop.exp: check varobj, w1, 1
PASS: gdb.mi/mi-nonstop.exp: interrupted
PASS: gdb.mi/mi-nonstop.exp: got interrupt
PASS: gdb.mi/mi-nonstop.exp: thread state, stop 4
PASS: gdb.mi/mi-nonstop.exp: resume all
PASS: gdb.mi/mi-nonstop.exp: w0,i2 stop
PASS: gdb.mi/mi-nonstop.exp: w1,i2 stop
PASS: gdb.mi/mi-nonstop.exp: set condition, 1
PASS: gdb.mi/mi-nonstop.exp: w0,i3 stop
PASS: gdb.mi/mi-nonstop.exp: thread state, stop on cond breakpoint
PASS: gdb.mi/mi-nonstop.exp: update varobj, 2
PASS: gdb.mi/mi-nonstop.exp: check varobj, w1, 1
PASS: gdb.mi/mi-nonstop.exp: stacktrace of running thread
PASS: gdb.mi/mi-nonstop.exp: stacktrace of stopped thread
PASS: gdb.mi/mi-nonstop.exp: select first worker thread
PASS: gdb.mi/mi-nonstop.exp: ask the second thread to exit
PASS: gdb.mi/mi-nonstop.exp: wait for thread exit
PASS: gdb.mi/mi-nonstop.exp: stacktrace of stopped thread
Running ../../../master/gdb/testsuite/gdb.mi/mi-ns-stale-regcache.exp ...
PASS: gdb.mi/mi-ns-stale-regcache.exp: breakpoint at main
PASS: gdb.mi/mi-ns-stale-regcache.exp: mi runto main
PASS: gdb.mi/mi-ns-stale-regcache.exp: no stale register cache of resumed thread
PASS: gdb.mi/mi-ns-stale-regcache.exp: no stale frame info of resumed thread
PASS: gdb.mi/mi-ns-stale-regcache.exp: main thread still running
Running ../../../master/gdb/testsuite/gdb.mi/mi-nsintrall.exp ...
PASS: gdb.mi/mi-nsintrall.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nsintrall.exp: breakpoint at main
PASS: gdb.mi/mi-nsintrall.exp: mi runto main
PASS: gdb.mi/mi-nsintrall.exp: breakpoint at thread_function
PASS: gdb.mi/mi-nsintrall.exp: stop 0
PASS: gdb.mi/mi-nsintrall.exp: stop 1
PASS: gdb.mi/mi-nsintrall.exp: stop 2
PASS: gdb.mi/mi-nsintrall.exp: stop 3
PASS: gdb.mi/mi-nsintrall.exp: stop 4
PASS: gdb.mi/mi-nsintrall.exp: stop 5
PASS: gdb.mi/mi-nsintrall.exp: thread state, all stopped
PASS: gdb.mi/mi-nsintrall.exp: resume all, no breakpoint
PASS: gdb.mi/mi-nsintrall.exp: thread state, resume all
PASS: gdb.mi/mi-nsintrall.exp: interrupt all threads
PASS: gdb.mi/mi-nsintrall.exp: interrupt 0
PASS: gdb.mi/mi-nsintrall.exp: interrupt 1
PASS: gdb.mi/mi-nsintrall.exp: interrupt 2
PASS: gdb.mi/mi-nsintrall.exp: interrupt 3
PASS: gdb.mi/mi-nsintrall.exp: interrupt 4
PASS: gdb.mi/mi-nsintrall.exp: interrupt 5
PASS: gdb.mi/mi-nsintrall.exp: thread state, all interrupted
PASS: gdb.mi/mi-nsintrall.exp: resume all after interrupting
PASS: gdb.mi/mi-nsintrall.exp: thread state, resume all after interrupting
Running ../../../master/gdb/testsuite/gdb.mi/mi-nsmoribund.exp ...
PASS: gdb.mi/mi-nsmoribund.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nsmoribund.exp: breakpoint at main
PASS: gdb.mi/mi-nsmoribund.exp: mi runto main
PASS: gdb.mi/mi-nsmoribund.exp: breakpoint at thread_function
PASS: gdb.mi/mi-nsmoribund.exp: stop 0
PASS: gdb.mi/mi-nsmoribund.exp: stop 1
PASS: gdb.mi/mi-nsmoribund.exp: stop 2
PASS: gdb.mi/mi-nsmoribund.exp: stop 3
PASS: gdb.mi/mi-nsmoribund.exp: stop 4
PASS: gdb.mi/mi-nsmoribund.exp: stop 5
PASS: gdb.mi/mi-nsmoribund.exp: stop 6
PASS: gdb.mi/mi-nsmoribund.exp: stop 7
PASS: gdb.mi/mi-nsmoribund.exp: stop 8
PASS: gdb.mi/mi-nsmoribund.exp: stop 9
PASS: gdb.mi/mi-nsmoribund.exp: thread state: all stopped except the main thread
PASS: gdb.mi/mi-nsmoribund.exp: select thread 5
PASS: gdb.mi/mi-nsmoribund.exp: thread specific breakpoint at thread_function
PASS: gdb.mi/mi-nsmoribund.exp: resume all, thread specific breakpoint
PASS: gdb.mi/mi-nsmoribund.exp: hit thread specific breakpoint
PASS: gdb.mi/mi-nsmoribund.exp: thread state: all running except the breakpoint thread
PASS: gdb.mi/mi-nsmoribund.exp: resume all, program exited normally
Running ../../../master/gdb/testsuite/gdb.mi/mi-nsthrexec.exp ...
PASS: gdb.mi/mi-nsthrexec.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-nsthrexec.exp: breakpoint at main
PASS: gdb.mi/mi-nsthrexec.exp: mi runto main
PASS: gdb.mi/mi-nsthrexec.exp: breakpoint at thread_execler
PASS: gdb.mi/mi-nsthrexec.exp: stop at thread_execler
PASS: gdb.mi/mi-nsthrexec.exp: thread state, execler stopped, main running
PASS: gdb.mi/mi-nsthrexec.exp: interrupt main thread
PASS: gdb.mi/mi-nsthrexec.exp: main thread interrupted
PASS: gdb.mi/mi-nsthrexec.exp: thread state, all stopped
PASS: gdb.mi/mi-nsthrexec.exp: breakpoint at main
PASS: gdb.mi/mi-nsthrexec.exp: stop at main after exec
Running ../../../master/gdb/testsuite/gdb.mi/mi-pending.exp ...
PASS: gdb.mi/mi-pending.exp: MI pending breakpoint on pendfunc1
PASS: gdb.mi/mi-pending.exp: Run till MI pending breakpoint on pendfunc1
Running ../../../master/gdb/testsuite/gdb.mi/mi-pthreads.exp ...
PASS: gdb.mi/mi-pthreads.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi-pthreads.exp: breakpoint at done_making_threads
PASS: gdb.mi/mi-pthreads.exp: mi runto done_making_threads
PASS: gdb.mi/mi-pthreads.exp: -thread_list_ids (in check_mi_thread_command_set)
PASS: gdb.mi/mi-pthreads.exp: finding threads in MI output (in check_mi_thread_command_set)
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 123456789
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 6
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 5
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 4
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 3
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 2
PASS: gdb.mi/mi-pthreads.exp: check_mi_thread_command_set: -thread-select 1
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 6
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 5
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 4
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 3
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 2
PASS: gdb.mi/mi-pthreads.exp: check =thread-selected: thread 1
Running ../../../master/gdb/testsuite/gdb.mi/mi-read-memory.exp ...
PASS: gdb.mi/mi-read-memory.exp: breakpoint at main
PASS: gdb.mi/mi-read-memory.exp: mi runto main
PASS: gdb.mi/mi-read-memory.exp: next at main
PASS: gdb.mi/mi-read-memory.exp: no arguments
PASS: gdb.mi/mi-read-memory.exp: 3x2, one byte
PASS: gdb.mi/mi-read-memory.exp: 3x2, one byte offset by -6
PASS: gdb.mi/mi-read-memory.exp: expression in quotes
PASS: gdb.mi/mi-read-memory.exp: ascii and data
PASS: gdb.mi/mi-read-memory.exp: decimal
PASS: gdb.mi/mi-read-memory.exp: octal
Running ../../../master/gdb/testsuite/gdb.mi/mi-regs.exp ...
Running ../../../master/gdb/testsuite/gdb.mi/mi-return.exp ...
PASS: gdb.mi/mi-return.exp: breakpoint at callee4
PASS: gdb.mi/mi-return.exp: mi runto callee4
PASS: gdb.mi/mi-return.exp: delete all breakpoints
PASS: gdb.mi/mi-return.exp: return from callee4 now
Running ../../../master/gdb/testsuite/gdb.mi/mi-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.mi/mi-simplerun.exp ...
PASS: gdb.mi/mi-simplerun.exp: break-insert operation
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi-simplerun.exp: insert breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints
PASS: gdb.mi/mi-simplerun.exp: disabling of breakpoints
PASS: gdb.mi/mi-simplerun.exp: list of breakpoints, 16 disabled
PASS: gdb.mi/mi-simplerun.exp: run to main
PASS: gdb.mi/mi-simplerun.exp: next at main
PASS: gdb.mi/mi-simplerun.exp: step at main
PASS: gdb.mi/mi-simplerun.exp: step to callee4
PASS: gdb.mi/mi-simplerun.exp: exec-finish
PASS: gdb.mi/mi-simplerun.exp: continue to end
Running ../../../master/gdb/testsuite/gdb.mi/mi-stack.exp ...
PASS: gdb.mi/mi-stack.exp: breakpoint at callee4
PASS: gdb.mi/mi-stack.exp: mi runto callee4
PASS: gdb.mi/mi-stack.exp: stack frame listing
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 1
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 3
PASS: gdb.mi/mi-stack.exp: stack frame listing wrong
PASS: gdb.mi/mi-stack.exp: selected frame listing
PASS: gdb.mi/mi-stack.exp: stack frame listing 1 300
PASS: gdb.mi/mi-stack.exp: stack args listing 0
PASS: gdb.mi/mi-stack.exp: stack args listing 0 1 1
PASS: gdb.mi/mi-stack.exp: stack args listing 0 1 3
PASS: gdb.mi/mi-stack.exp: stack args listing 1
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 1
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 3
PASS: gdb.mi/mi-stack.exp: stack args listing wrong
PASS: gdb.mi/mi-stack.exp: stack args listing 1 1 300
PASS: gdb.mi/mi-stack.exp: stack locals listing of names
PASS: gdb.mi/mi-stack.exp: next's in callee4
PASS: gdb.mi/mi-stack.exp: stack locals listing of names and values
PASS: gdb.mi/mi-stack.exp: stack locals listing, simple types: names and values, complex type: names and types
PASS: gdb.mi/mi-stack.exp: stack locals listing wrong
PASS: gdb.mi/mi-stack.exp: stack select frame 1
PASS: gdb.mi/mi-stack.exp: stack locals listing for new frame
PASS: gdb.mi/mi-stack.exp: stack locals for same frame (level 1)
PASS: gdb.mi/mi-stack.exp: stack info-depth
PASS: gdb.mi/mi-stack.exp: stack info-depth 3
PASS: gdb.mi/mi-stack.exp: stack info-depth 99
PASS: gdb.mi/mi-stack.exp: stack info-depth wrong usage
Running ../../../master/gdb/testsuite/gdb.mi/mi-stepi.exp ...
PASS: gdb.mi/mi-stepi.exp: breakpoint at main
PASS: gdb.mi/mi-stepi.exp: mi runto main
PASS: gdb.mi/mi-stepi.exp: step-instruction at main
PASS: gdb.mi/mi-stepi.exp: step-instruction at main (line check)
PASS: gdb.mi/mi-stepi.exp: next-instruction at main
PASS: gdb.mi/mi-stepi.exp: next-instruction at main (line check)
PASS: gdb.mi/mi-stepi.exp: next-instruction at main 2
PASS: gdb.mi/mi-stepi.exp: next-instruction at main 2 (line check)
Running ../../../master/gdb/testsuite/gdb.mi/mi-syn-frame.exp ...
PASS: gdb.mi/mi-syn-frame.exp: breakpoint at main
PASS: gdb.mi/mi-syn-frame.exp: mi runto main
PASS: gdb.mi/mi-syn-frame.exp: insert breakpoint foo
PASS: gdb.mi/mi-syn-frame.exp: call inferior's function with a breakpoint set in it
PASS: gdb.mi/mi-syn-frame.exp: backtrace from inferior function stopped at bp, showing gdb dummy frame
PASS: gdb.mi/mi-syn-frame.exp: finished exec continue
PASS: gdb.mi/mi-syn-frame.exp: list stack frames
PASS: gdb.mi/mi-syn-frame.exp: insert breakpoint subroutine
PASS: gdb.mi/mi-syn-frame.exp: data evaluate expression
PASS: gdb.mi/mi-syn-frame.exp: list stack frames
PASS: gdb.mi/mi-syn-frame.exp: finished exec continue
PASS: gdb.mi/mi-syn-frame.exp: list stack frames
PASS: gdb.mi/mi-syn-frame.exp: call inferior function which raises exception
PASS: gdb.mi/mi-syn-frame.exp: backtrace from inferior function at exception
Running ../../../master/gdb/testsuite/gdb.mi/mi-until.exp ...
PASS: gdb.mi/mi-until.exp: break-insert operation
PASS: gdb.mi/mi-until.exp: run to main
PASS: gdb.mi/mi-until.exp: break-delete 1
KFAIL: gdb.mi/mi-until.exp: until after while loop (stopped at wrong place) (PRMS: gdb/2104)
PASS: gdb.mi/mi-until.exp: until line number
PASS: gdb.mi/mi-until.exp: until line number:file
PASS: gdb.mi/mi-until.exp: until after current function
Running ../../../master/gdb/testsuite/gdb.mi/mi-var-block.exp ...
PASS: gdb.mi/mi-var-block.exp: breakpoint at do_block_tests
PASS: gdb.mi/mi-var-block.exp: mi runto do_block_tests
PASS: gdb.mi/mi-var-block.exp: create local variable cb
PASS: gdb.mi/mi-var-block.exp: try to create local variable foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: delete var foo
PASS: gdb.mi/mi-var-block.exp: create local variable foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: update all vars: cb foo changed
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: create local variable inner_foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
PASS: gdb.mi/mi-var-block.exp: create local variable foo2
XFAIL: gdb.mi/mi-var-block.exp: update inner_foo: should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi-var-block.exp: evaluate inner_foo: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: update foo: did not change
PASS: gdb.mi/mi-var-block.exp: delete var inner_foo
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi-var-block.exp: update foo2: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi-var-block.exp: update foo2 should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi-var-block.exp: update foo should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi-var-block.exp: update cb
PASS: gdb.mi/mi-var-block.exp: delete var foo
PASS: gdb.mi/mi-var-block.exp: delete var foo2
PASS: gdb.mi/mi-var-block.exp: delete var cb
Running ../../../master/gdb/testsuite/gdb.mi/mi-var-child-f.exp ...
UNSUPPORTED: gdb.mi/mi-var-child-f.exp: compilation array.f
Running ../../../master/gdb/testsuite/gdb.mi/mi-var-child.exp ...
PASS: gdb.mi/mi-var-child.exp: breakpoint at do_children_tests
PASS: gdb.mi/mi-var-child.exp: mi runto do_children_tests
PASS: gdb.mi/mi-var-child.exp: run to 216 (set breakpoint)
PASS: gdb.mi/mi-var-child.exp: create local variable struct_declarations
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.character
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.character
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_int
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_int
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.3
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.3
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.4
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.4
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.5
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.5
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.6
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.6
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.7
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.7
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.8
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.8
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.long_array.9
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.long_array.9
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.a
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.a
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.b
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.b
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.c
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.c
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.u1.d
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.u1.d
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.g
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.g
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.h
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.h
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.i
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.i
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: step to line $line_dct_123
PASS: gdb.mi/mi-var-child.exp: create local variable weird
PASS: gdb.mi/mi-var-child.exp: get children of weird
PASS: gdb.mi/mi-var-child.exp: get number of children of weird
PASS: gdb.mi/mi-var-child.exp: get children of weird.long_array
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.long_array
PASS: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: is weird editable
PASS: gdb.mi/mi-var-child.exp: is weird->int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable
PASS: gdb.mi/mi-var-child.exp: is weird.u1 editable
PASS: gdb.mi/mi-var-child.exp: is weird.s2 editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.a editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.b editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.u1.c editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.long_array editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations.long_array.0 editable
PASS: gdb.mi/mi-var-child.exp: is struct_declarations editable
PASS: gdb.mi/mi-var-child.exp: delete var weird
PASS: gdb.mi/mi-var-child.exp: update all vars. None changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 1
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.integer
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 4
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.char_ptr
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 5
PASS: gdb.mi/mi-var-child.exp: update all vars int_ptr_ptr and children changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 6
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.0 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 7
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.1 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_123 + 8
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.2 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.3-9 changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 1
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.func_ptr changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_nothing + 2
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.10 changed, don't print values.
PASS: gdb.mi/mi-var-child.exp: step $line_dct_a0_0
PASS: gdb.mi/mi-var-child.exp: update all vars struct_declarations.long_array.11 changed, print values.
PASS: gdb.mi/mi-var-child.exp: listing of names and values of children
PASS: gdb.mi/mi-var-child.exp: listing of children, simple types: names, type and values, complex types: names and types
PASS: gdb.mi/mi-var-child.exp: delete var struct_declarations
PASS: gdb.mi/mi-var-child.exp: delete var weird->int_ptr_ptr
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 1
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi-var-child.exp: create local variable  psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next
PASS: gdb.mi/mi-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 2
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 3
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 4
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 5
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 6
XFAIL: gdb.mi/mi-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: step $line_dct_snp0 + 7
PASS: gdb.mi/mi-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed
PASS: gdb.mi/mi-var-child.exp: run to mi-var-child.c:324 (set breakpoint)
PASS: gdb.mi/mi-var-child.exp: create varobj for s
PASS: gdb.mi/mi-var-child.exp: list children of S
PASS: gdb.mi/mi-var-child.exp: delete S.a
PASS: gdb.mi/mi-var-child.exp: delete S.b
PASS: gdb.mi/mi-var-child.exp: delete S
Running ../../../master/gdb/testsuite/gdb.mi/mi-var-cmd.exp ...
PASS: gdb.mi/mi-var-cmd.exp: create global variable
PASS: gdb.mi/mi-var-cmd.exp: create non-existent variable
PASS: gdb.mi/mi-var-cmd.exp: create out of scope variable
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: run to 131 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create local variable linteger
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpinteger
PASS: gdb.mi/mi-var-cmd.exp: create local variable lcharacter
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpcharacter
PASS: gdb.mi/mi-var-cmd.exp: create local variable llong
PASS: gdb.mi/mi-var-cmd.exp: create local variable lplong
PASS: gdb.mi/mi-var-cmd.exp: create local variable lfloat
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpfloat
PASS: gdb.mi/mi-var-cmd.exp: create local variable ldouble
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpdouble
PASS: gdb.mi/mi-var-cmd.exp: create local variable lsimple
PASS: gdb.mi/mi-var-cmd.exp: create local variable lpsimple
PASS: gdb.mi/mi-var-cmd.exp: create local variable func
PASS: gdb.mi/mi-var-cmd.exp: create lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: create lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: create lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: create int
PASS: gdb.mi/mi-var-cmd.exp: update all vars
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_test
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (2)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (3)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lcharacter changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (4)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpcharacter changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (5)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: many changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (6)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: func and lpsimple changed
PASS: gdb.mi/mi-var-cmd.exp: step at do_locals_tests (7)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lsimple and others changed
PASS: gdb.mi/mi-var-cmd.exp: assign to global_simple
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger changed after assign
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger again, same value
PASS: gdb.mi/mi-var-cmd.exp: update all vars: linteger not changed after same assign
PASS: gdb.mi/mi-var-cmd.exp: eval linteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi-var-cmd.exp: update all vars: lpinteger changed after assign
PASS: gdb.mi/mi-var-cmd.exp: update all vars: no changes on second update
PASS: gdb.mi/mi-var-cmd.exp: eval lpinteger
PASS: gdb.mi/mi-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi-var-cmd.exp: assign to lcharacter
PASS: gdb.mi/mi-var-cmd.exp: eval lcharacter
PASS: gdb.mi/mi-var-cmd.exp: assign to llong
PASS: gdb.mi/mi-var-cmd.exp: eval llong
PASS: gdb.mi/mi-var-cmd.exp: assign to llong
PASS: gdb.mi/mi-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi-var-cmd.exp: eval lplong
PASS: gdb.mi/mi-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi-var-cmd.exp: eval lfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to lpfloat
PASS: gdb.mi/mi-var-cmd.exp: assign to ldouble
PASS: gdb.mi/mi-var-cmd.exp: assign to func
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: assign to lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: var update
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func
PASS: gdb.mi/mi-var-cmd.exp: assign same value to func (update)
PASS: gdb.mi/mi-var-cmd.exp: create global variable array_ptr
PASS: gdb.mi/mi-var-cmd.exp: assign array to pointer
PASS: gdb.mi/mi-var-cmd.exp: assign array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer
PASS: gdb.mi/mi-var-cmd.exp: assign same array to pointer (update)
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at subroutine1
PASS: gdb.mi/mi-var-cmd.exp: mi runto subroutine1
PASS: gdb.mi/mi-var-cmd.exp: create i
PASS: gdb.mi/mi-var-cmd.exp: create l
PASS: gdb.mi/mi-var-cmd.exp: create linteger
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1
XFAIL: gdb.mi/mi-var-cmd.exp: update all vars: changed FIXME
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1 (2)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: i changed
PASS: gdb.mi/mi-var-cmd.exp: step at subroutine1 (3)
PASS: gdb.mi/mi-var-cmd.exp: update all vars: llong changed
PASS: gdb.mi/mi-var-cmd.exp: next out of subroutine1
PASS: gdb.mi/mi-var-cmd.exp: update all vars: all now out of scope
PASS: gdb.mi/mi-var-cmd.exp: delete var
PASS: gdb.mi/mi-var-cmd.exp: delete var linteger
PASS: gdb.mi/mi-var-cmd.exp: delete var lpinteger
PASS: gdb.mi/mi-var-cmd.exp: delete var lcharacter
PASS: gdb.mi/mi-var-cmd.exp: delete var lpcharacter
PASS: gdb.mi/mi-var-cmd.exp: delete var llong
PASS: gdb.mi/mi-var-cmd.exp: delete var lplong
PASS: gdb.mi/mi-var-cmd.exp: delete var lfloat
PASS: gdb.mi/mi-var-cmd.exp: delete var lpfloat
PASS: gdb.mi/mi-var-cmd.exp: delete var ldouble
PASS: gdb.mi/mi-var-cmd.exp: delete var lpdouble
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple
PASS: gdb.mi/mi-var-cmd.exp: delete var lpsimple
PASS: gdb.mi/mi-var-cmd.exp: delete var func
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple.character
PASS: gdb.mi/mi-var-cmd.exp: delete var  lsimple->integer
PASS: gdb.mi/mi-var-cmd.exp: delete var lsimple.integer
PASS: gdb.mi/mi-var-cmd.exp: delete var i
PASS: gdb.mi/mi-var-cmd.exp: delete var l
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: create selected_a
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at incr_a
PASS: gdb.mi/mi-var-cmd.exp: mi runto incr_a
PASS: gdb.mi/mi-var-cmd.exp: update selected_a in incr_a
PASS: gdb.mi/mi-var-cmd.exp: step a line in incr_a
PASS: gdb.mi/mi-var-cmd.exp: return from incr_a to do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: update selected_a in do_special_tests
PASS: gdb.mi/mi-var-cmd.exp: floating varobj invalidation
PASS: gdb.mi/mi-var-cmd.exp: delete selected_a
PASS: gdb.mi/mi-var-cmd.exp: delete array_ptr
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:334 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create varobj for v1
PASS: gdb.mi/mi-var-cmd.exp: create varobj for v2
PASS: gdb.mi/mi-var-cmd.exp: list children of v1
PASS: gdb.mi/mi-var-cmd.exp: list children of v1.nested
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 2
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: check V2: 4
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: V2 changed
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V2 1
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: nothing changed
PASS: gdb.mi/mi-var-cmd.exp: check V2: 5
PASS: gdb.mi/mi-var-cmd.exp: update V2 explicitly
PASS: gdb.mi/mi-var-cmd.exp: check V2: 6
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:368 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V1 1
PASS: gdb.mi/mi-var-cmd.exp: update varobjs: nothing changed
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 2
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: update V1.nested.j
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 3
PASS: gdb.mi/mi-var-cmd.exp: update V1.nested
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 1
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 9
PASS: gdb.mi/mi-var-cmd.exp: update V1.i
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 7
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:393 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: -var-set-frozen V1 0
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 7
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 8
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 9
PASS: gdb.mi/mi-var-cmd.exp: update V1
PASS: gdb.mi/mi-var-cmd.exp: check V1.i: 10
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.j: 11
PASS: gdb.mi/mi-var-cmd.exp: check V1.nested.k: 12
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:493 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create varobj for Data
PASS: gdb.mi/mi-var-cmd.exp: list children of Data
PASS: gdb.mi/mi-var-cmd.exp: access bitfield
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:436 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: create floating varobj
PASS: gdb.mi/mi-var-cmd.exp: update F (1)
PASS: gdb.mi/mi-var-cmd.exp: check F (1)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:447 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (2)
PASS: gdb.mi/mi-var-cmd.exp: check F (2)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:455 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (--all-values)
PASS: gdb.mi/mi-var-cmd.exp: run to var-cmd.c:461 (set breakpoint)
PASS: gdb.mi/mi-var-cmd.exp: update F (3)
PASS: gdb.mi/mi-var-cmd.exp: check F (3)
PASS: gdb.mi/mi-var-cmd.exp: inside breakpoint inside callee
PASS: gdb.mi/mi-var-cmd.exp: continue to where i is initialized
PASS: gdb.mi/mi-var-cmd.exp: update F inside callee
PASS: gdb.mi/mi-var-cmd.exp: check F inside callee
PASS: gdb.mi/mi-var-cmd.exp: create null_ptr
PASS: gdb.mi/mi-var-cmd.exp: update null_ptr
PASS: gdb.mi/mi-var-cmd.exp: delete null_ptr
PASS: gdb.mi/mi-var-cmd.exp: kill program before endvar
PASS: gdb.mi/mi-var-cmd.exp: create endvar
PASS: gdb.mi/mi-var-cmd.exp: update endvar
PASS: gdb.mi/mi-var-cmd.exp: delete endvar
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: create varobj
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: check initial value
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at main
PASS: gdb.mi/mi-var-cmd.exp: mi runto main
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: out of scope now, not changed
PASS: gdb.mi/mi-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now
PASS: gdb.mi/mi-var-cmd.exp: in-and-out-of-scope: in scope now, not changed
Running ../../../master/gdb/testsuite/gdb.mi/mi-var-cp.exp ...
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:20 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for rx
PASS: gdb.mi/mi-var-cp.exp: update RX (1)
PASS: gdb.mi/mi-var-cp.exp: check RX: expect 167
PASS: gdb.mi/mi-var-cp.exp: update RX (2)
PASS: gdb.mi/mi-var-cp.exp: check RX: expect 567
PASS: gdb.mi/mi-var-cp.exp: update RX (3)
PASS: gdb.mi/mi-var-cp.exp: delete RX
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:46 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for s2
PASS: gdb.mi/mi-var-cp.exp: list children of s2
PASS: gdb.mi/mi-var-cp.exp: list children of s2.s
PASS: gdb.mi/mi-var-cp.exp: list children of s2.s.public
PASS: gdb.mi/mi-var-cp.exp: check S2.S.public.i
PASS: gdb.mi/mi-var-cp.exp: check S2.S.public.j
PASS: gdb.mi/mi-var-cp.exp: delete S2
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:82 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for rptr_s
PASS: gdb.mi/mi-var-cp.exp: list public child of RPTR
PASS: gdb.mi/mi-var-cp.exp: list children of reference to pointer
PASS: gdb.mi/mi-var-cp.exp: check i member
PASS: gdb.mi/mi-var-cp.exp: check j member
PASS: gdb.mi/mi-var-cp.exp: delete RPTR
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:105 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for s
PASS: gdb.mi/mi-var-cp.exp: create varobj for s
PASS: gdb.mi/mi-var-cp.exp: check attributes of S
PASS: gdb.mi/mi-var-cp.exp: check attributes of R
PASS: gdb.mi/mi-var-cp.exp: -var-update should not list structure varobjs
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:145 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for ip
PASS: gdb.mi/mi-var-cp.exp: list children of IP
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression IP.*ip
PASS: gdb.mi/mi-var-cp.exp: create varobj for dp
PASS: gdb.mi/mi-var-cp.exp: list children of DP
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression DP.Base1
PASS: gdb.mi/mi-var-cp.exp: list children of DP.public
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression DP.public.i
PASS: gdb.mi/mi-var-cp.exp: list children of DP.Base1
PASS: gdb.mi/mi-var-cp.exp: list children of DP.Base1.public
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression DP.Base1.public.i
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression DP.public
PASS: gdb.mi/mi-var-cp.exp: create varobj for d
PASS: gdb.mi/mi-var-cp.exp: list children of D
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression D.Base1
PASS: gdb.mi/mi-var-cp.exp: run to mi-var-cp.cc:192 (set breakpoint)
PASS: gdb.mi/mi-var-cp.exp: create varobj for array
PASS: gdb.mi/mi-var-cp.exp: list children of A
PASS: gdb.mi/mi-var-cp.exp: -var-info-path-expression A.2
Running ../../../master/gdb/testsuite/gdb.mi/mi-var-display.exp ...
PASS: gdb.mi/mi-var-display.exp: break-insert operation
PASS: gdb.mi/mi-var-display.exp: run to main
PASS: gdb.mi/mi-var-display.exp: create local variable bar
PASS: gdb.mi/mi-var-display.exp: info type variable bar
PASS: gdb.mi/mi-var-display.exp: show format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar
PASS: gdb.mi/mi-var-display.exp: set format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar with new format
PASS: gdb.mi/mi-var-display.exp: assing to variable bar
PASS: gdb.mi/mi-var-display.exp: set format variable bar
PASS: gdb.mi/mi-var-display.exp: eval variable bar with new value
PASS: gdb.mi/mi-var-display.exp: delete var bar
PASS: gdb.mi/mi-var-display.exp: create local variable foo
PASS: gdb.mi/mi-var-display.exp: info type variable foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: set format variable foo
PASS: gdb.mi/mi-var-display.exp: show format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: assing to variable foo
PASS: gdb.mi/mi-var-display.exp: set format variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo
PASS: gdb.mi/mi-var-display.exp: eval variable foo in hex
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in hex
PASS: gdb.mi/mi-var-display.exp: eval variable foo in octal
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in octal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in decimal
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in decimal
PASS: gdb.mi/mi-var-display.exp: eval variable foo in natural
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in natural
PASS: gdb.mi/mi-var-display.exp: eval variable foo in binary
PASS: gdb.mi/mi-var-display.exp: show format variable foo after eval in binary
PASS: gdb.mi/mi-var-display.exp: delete var foo
PASS: gdb.mi/mi-var-display.exp: create local variable weird
PASS: gdb.mi/mi-var-display.exp: get children local variable weird
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: show format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird
PASS: gdb.mi/mi-var-display.exp: set format variable weird.integer
PASS: gdb.mi/mi-var-display.exp: set format variable weird.character
PASS: gdb.mi/mi-var-display.exp: set format variable weird.char_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.long_int
PASS: gdb.mi/mi-var-display.exp: set format variable weird.int_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.long_array
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_struct
PASS: gdb.mi/mi-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi-var-display.exp: set format variable weird.u1
PASS: gdb.mi/mi-var-display.exp: set format variable weird.s2
PASS: gdb.mi/mi-var-display.exp: delete var weird
PASS: gdb.mi/mi-var-display.exp: break-insert operation 2
PASS: gdb.mi/mi-var-display.exp: continue to do_special_tests
PASS: gdb.mi/mi-var-display.exp: create local variable u
PASS: gdb.mi/mi-var-display.exp: eval variable u
PASS: gdb.mi/mi-var-display.exp: info type variable u
PASS: gdb.mi/mi-var-display.exp: is u editable
PASS: gdb.mi/mi-var-display.exp: get number of children of u
PASS: gdb.mi/mi-var-display.exp: get children of u
PASS: gdb.mi/mi-var-display.exp: create local variable anonu
PASS: gdb.mi/mi-var-display.exp: eval variable anonu
PASS: gdb.mi/mi-var-display.exp: info type variable anonu
PASS: gdb.mi/mi-var-display.exp: is anonu editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anonu
PASS: gdb.mi/mi-var-display.exp: get children of anonu
PASS: gdb.mi/mi-var-display.exp: create local variable s
PASS: gdb.mi/mi-var-display.exp: eval variable s
PASS: gdb.mi/mi-var-display.exp: info type variable s
PASS: gdb.mi/mi-var-display.exp: is s editable
PASS: gdb.mi/mi-var-display.exp: get number of children of s
PASS: gdb.mi/mi-var-display.exp: get children of s
PASS: gdb.mi/mi-var-display.exp: create local variable anons
PASS: gdb.mi/mi-var-display.exp: eval variable anons
PASS: gdb.mi/mi-var-display.exp: info type variable anons
PASS: gdb.mi/mi-var-display.exp: is anons editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anons
PASS: gdb.mi/mi-var-display.exp: get children of anons
PASS: gdb.mi/mi-var-display.exp: create local variable e
XFAIL: gdb.mi/mi-var-display.exp: eval variable e
PASS: gdb.mi/mi-var-display.exp: info type variable e
PASS: gdb.mi/mi-var-display.exp: is e editable
PASS: gdb.mi/mi-var-display.exp: get number of children of e
PASS: gdb.mi/mi-var-display.exp: get children of e
PASS: gdb.mi/mi-var-display.exp: create local variable anone
PASS: gdb.mi/mi-var-display.exp: eval variable anone
PASS: gdb.mi/mi-var-display.exp: create duplicate local variable anone
PASS: gdb.mi/mi-var-display.exp: info type variable anone
PASS: gdb.mi/mi-var-display.exp: is anone editable
PASS: gdb.mi/mi-var-display.exp: get number of children of anone
PASS: gdb.mi/mi-var-display.exp: get children of anone
PASS: gdb.mi/mi-var-display.exp: print FP register
PASS: gdb.mi/mi-var-display.exp: breakpoint at incr_a
PASS: gdb.mi/mi-var-display.exp: mi runto incr_a
PASS: gdb.mi/mi-var-display.exp: create local variable a1
PASS: gdb.mi/mi-var-display.exp: create variable a2 in different scope
Running ../../../master/gdb/testsuite/gdb.mi/mi-var-invalidate.exp ...
PASS: gdb.mi/mi-var-invalidate.exp: create global variable
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi-var-invalidate.exp: mi runto do_locals_tests
PASS: gdb.mi/mi-var-invalidate.exp: create local variable linteger
PASS: gdb.mi/mi-var-invalidate.exp: breakpoint at main
PASS: gdb.mi/mi-var-invalidate.exp: mi runto main
PASS: gdb.mi/mi-var-invalidate.exp: linteger not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (1)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple still alive
PASS: gdb.mi/mi-var-invalidate.exp: type simpleton for valid variable global_simple
PASS: gdb.mi/mi-var-invalidate.exp: linteger not valid anymore due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable linteger (2)
PASS: gdb.mi/mi-var-invalidate.exp: global_simple not anymore in scope due to binary changes
PASS: gdb.mi/mi-var-invalidate.exp: no type for invalid variable global_simple
Running ../../../master/gdb/testsuite/gdb.mi/mi-watch.exp ...
PASS: gdb.mi/mi-watch.exp: hw watchpoints toggle (1)
PASS: gdb.mi/mi-watch.exp: sw: breakpoint at callee4
PASS: gdb.mi/mi-watch.exp: sw: mi runto callee4
PASS: gdb.mi/mi-watch.exp: sw: break-watch operation
PASS: gdb.mi/mi-watch.exp: sw: list of watchpoints
PASS: gdb.mi/mi-watch.exp: sw: watchpoint trigger
XPASS: gdb.mi/mi-watch.exp: sw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: hw watchpoints toggle (2)
PASS: gdb.mi/mi-watch.exp: hw: breakpoint at callee4
PASS: gdb.mi/mi-watch.exp: hw: mi runto callee4
PASS: gdb.mi/mi-watch.exp: hw: break-watch operation
PASS: gdb.mi/mi-watch.exp: hw: list of watchpoints
PASS: gdb.mi/mi-watch.exp: hw: watchpoint trigger
PASS: gdb.mi/mi-watch.exp: hw: watchpoint trigger
Running ../../../master/gdb/testsuite/gdb.mi/mi2-basics.exp ...
PASS: gdb.mi/mi2-basics.exp: acceptance of MI operations
PASS: gdb.mi/mi2-basics.exp: file-exec-and-symbols operation
PASS: gdb.mi/mi2-basics.exp: file-exec-file operation
PASS: gdb.mi/mi2-basics.exp: file-symbol-file operation
PASS: gdb.mi/mi2-basics.exp: break-delete (all) operation
PASS: gdb.mi/mi2-basics.exp: all breakpoints removed
PASS: gdb.mi/mi2-basics.exp: environment-directory arg operation
PASS: gdb.mi/mi2-basics.exp: environment-directory empty-string operation
PASS: gdb.mi/mi2-basics.exp: environment-directory operation
PASS: gdb.mi/mi2-basics.exp: environment-cd arg operation
PASS: gdb.mi/mi2-basics.exp: environment-pwd operation
PASS: gdb.mi/mi2-basics.exp: -environment-path
PASS: gdb.mi/mi2-basics.exp: environment-path no-args operation
PASS: gdb.mi/mi2-basics.exp: environment-path dir1 dir2 operation
PASS: gdb.mi/mi2-basics.exp: environment-path -r dir operation
PASS: gdb.mi/mi2-basics.exp: environment-path -r operation
Running ../../../master/gdb/testsuite/gdb.mi/mi2-break.exp ...
PASS: gdb.mi/mi2-break.exp: break-insert -t operation
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at basics.c:callee2
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi2-break.exp: insert temp breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi2-break.exp: list of breakpoints
PASS: gdb.mi/mi2-break.exp: delete temp breakpoints
XFAIL: gdb.mi/mi2-break.exp: break-insert -r operation
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp callee2
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp callee
XFAIL: gdb.mi/mi2-break.exp: insert breakpoint with regexp .*llee
XFAIL: gdb.mi/mi2-break.exp: list of breakpoints
PASS: gdb.mi/mi2-break.exp: delete temp breakpoints
Running ../../../master/gdb/testsuite/gdb.mi/mi2-cli.exp ...
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with no arguments
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with one argument
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec with bogus interpreter
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console bogus
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "file $binfile"
PASS: gdb.mi/mi2-cli.exp: breakpoint at main
PASS: gdb.mi/mi2-cli.exp: mi runto main
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set args foobar"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "show args"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "break callee4"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "info break"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set listsize 1"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "list"
PASS: gdb.mi/mi2-cli.exp: continue to callee4
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "delete 2"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "up"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "down"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "frame 2"
PASS: gdb.mi/mi2-cli.exp: -stack-select-frame 0
PASS: gdb.mi/mi2-cli.exp: -break-insert -t basics.c:$line_main_hello
PASS: gdb.mi/mi2-cli.exp: -exec-continue to line 66
PASS: gdb.mi/mi2-cli.exp: -exec-next to line 68
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "list" at basics.c:$line_main_return
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "help set args"
PASS: gdb.mi/mi2-cli.exp: -interpreter-exec console "set $pc=0x0"
Running ../../../master/gdb/testsuite/gdb.mi/mi2-console.exp ...
PASS: gdb.mi/mi2-console.exp: breakpoint at main
PASS: gdb.mi/mi2-console.exp: mi runto main
PASS: gdb.mi/mi2-console.exp: Started step over hello
KFAIL: gdb.mi/mi2-console.exp: Hello message (PRMS: gdb/623)
PASS: gdb.mi/mi2-console.exp: finished step over hello
Running ../../../master/gdb/testsuite/gdb.mi/mi2-disassemble.exp ...
PASS: gdb.mi/mi2-disassemble.exp: breakpoint at main
PASS: gdb.mi/mi2-disassemble.exp: mi runto main
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble from pc to pc+12 assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file & line, assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble from pc to pc+12 assembly with opcodes
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file & line, assembly with opcodes
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble range assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line assembly mixed with opcodes
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble range assembly mixed with opcodes
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble bogus filename
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble bogus address
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble mix different args
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble wrong mode arg
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (zero lines) assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly only
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (zero lines) assembly mixed
PASS: gdb.mi/mi2-disassemble.exp: data-disassemble file, line, number (more than main lines) assembly mixed
Running ../../../master/gdb/testsuite/gdb.mi/mi2-eval.exp ...
PASS: gdb.mi/mi2-eval.exp: breakpoint at callee4
PASS: gdb.mi/mi2-eval.exp: mi runto callee4
PASS: gdb.mi/mi2-eval.exp: next at callee4
PASS: gdb.mi/mi2-eval.exp: eval A
PASS: gdb.mi/mi2-eval.exp: eval &A
PASS: gdb.mi/mi2-eval.exp: eval A+3
PASS: gdb.mi/mi2-eval.exp: eval A + 3
Running ../../../master/gdb/testsuite/gdb.mi/mi2-file.exp ...
PASS: gdb.mi/mi2-file.exp: request path info of current source file (basics.c)
Running ../../../master/gdb/testsuite/gdb.mi/mi2-hack-cli.exp ...
PASS: gdb.mi/mi2-hack-cli.exp: show architecture
PASS: gdb.mi/mi2-hack-cli.exp: 47show architecture
Running ../../../master/gdb/testsuite/gdb.mi/mi2-pthreads.exp ...
PASS: gdb.mi/mi2-pthreads.exp: successfully compiled posix threads test case
PASS: gdb.mi/mi2-pthreads.exp: breakpoint at done_making_threads
PASS: gdb.mi/mi2-pthreads.exp: mi runto done_making_threads
PASS: gdb.mi/mi2-pthreads.exp: -thread_list_ids (in check_mi_thread_command_set)
PASS: gdb.mi/mi2-pthreads.exp: finding threads in MI output (in check_mi_thread_command_set)
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 123456789
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 6
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 5
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 4
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 3
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 2
PASS: gdb.mi/mi2-pthreads.exp: check_mi_thread_command_set: -thread-select 1
Running ../../../master/gdb/testsuite/gdb.mi/mi2-read-memory.exp ...
PASS: gdb.mi/mi2-read-memory.exp: breakpoint at main
PASS: gdb.mi/mi2-read-memory.exp: mi runto main
PASS: gdb.mi/mi2-read-memory.exp: next at main
PASS: gdb.mi/mi2-read-memory.exp: no arguments
PASS: gdb.mi/mi2-read-memory.exp: 3x2, one byte
PASS: gdb.mi/mi2-read-memory.exp: 3x2, one byte offset by -6
PASS: gdb.mi/mi2-read-memory.exp: expression in quotes
PASS: gdb.mi/mi2-read-memory.exp: ascii and data
PASS: gdb.mi/mi2-read-memory.exp: decimal
PASS: gdb.mi/mi2-read-memory.exp: octal
Running ../../../master/gdb/testsuite/gdb.mi/mi2-regs.exp ...
Running ../../../master/gdb/testsuite/gdb.mi/mi2-return.exp ...
PASS: gdb.mi/mi2-return.exp: breakpoint at callee4
PASS: gdb.mi/mi2-return.exp: mi runto callee4
PASS: gdb.mi/mi2-return.exp: delete all breakpoints
PASS: gdb.mi/mi2-return.exp: return from callee4 now
Running ../../../master/gdb/testsuite/gdb.mi/mi2-simplerun.exp ...
PASS: gdb.mi/mi2-simplerun.exp: break-insert operation
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at basics.c:callee2
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at basics.c:$line_callee3_head
PASS: gdb.mi/mi2-simplerun.exp: insert breakpoint at "<fullfilename>":$line_callee4_head
PASS: gdb.mi/mi2-simplerun.exp: list of breakpoints
PASS: gdb.mi/mi2-simplerun.exp: disabling of breakpoints
PASS: gdb.mi/mi2-simplerun.exp: list of breakpoints, 16 disabled
PASS: gdb.mi/mi2-simplerun.exp: run to main
PASS: gdb.mi/mi2-simplerun.exp: next at main
PASS: gdb.mi/mi2-simplerun.exp: step at main
PASS: gdb.mi/mi2-simplerun.exp: step to callee4
PASS: gdb.mi/mi2-simplerun.exp: exec-finish
PASS: gdb.mi/mi2-simplerun.exp: continue to end
Running ../../../master/gdb/testsuite/gdb.mi/mi2-stack.exp ...
PASS: gdb.mi/mi2-stack.exp: breakpoint at callee4
PASS: gdb.mi/mi2-stack.exp: mi runto callee4
PASS: gdb.mi/mi2-stack.exp: stack frame listing
PASS: gdb.mi/mi2-stack.exp: stack frame listing 1 1
PASS: gdb.mi/mi2-stack.exp: stack frame listing 1 3
PASS: gdb.mi/mi2-stack.exp: stack frame listing wrong
PASS: gdb.mi/mi2-stack.exp: selected frame listing
PASS: gdb.mi/mi2-stack.exp: stack frame listing 1 300
PASS: gdb.mi/mi2-stack.exp: stack args listing 0
PASS: gdb.mi/mi2-stack.exp: stack args listing 0 1 1
PASS: gdb.mi/mi2-stack.exp: stack args listing 0 1 3
PASS: gdb.mi/mi2-stack.exp: stack args listing 1
PASS: gdb.mi/mi2-stack.exp: stack args listing 1 1 1
PASS: gdb.mi/mi2-stack.exp: stack args listing 1 1 3
PASS: gdb.mi/mi2-stack.exp: stack args listing wrong
PASS: gdb.mi/mi2-stack.exp: stack args listing 1 1 300
PASS: gdb.mi/mi2-stack.exp: stack locals listing of names
PASS: gdb.mi/mi2-stack.exp: next's in callee4
PASS: gdb.mi/mi2-stack.exp: stack locals listing of names and values
PASS: gdb.mi/mi2-stack.exp: stack locals listing, simple types: names and values, complex type: names and types
PASS: gdb.mi/mi2-stack.exp: stack locals listing wrong
PASS: gdb.mi/mi2-stack.exp: stack select frame 1
PASS: gdb.mi/mi2-stack.exp: stack locals listing for new frame
PASS: gdb.mi/mi2-stack.exp: stack locals for same frame (level 1)
PASS: gdb.mi/mi2-stack.exp: stack info-depth
PASS: gdb.mi/mi2-stack.exp: stack info-depth 3
PASS: gdb.mi/mi2-stack.exp: stack info-depth 99
PASS: gdb.mi/mi2-stack.exp: stack info-depth wrong usage
Running ../../../master/gdb/testsuite/gdb.mi/mi2-stepi.exp ...
PASS: gdb.mi/mi2-stepi.exp: breakpoint at main
PASS: gdb.mi/mi2-stepi.exp: mi runto main
PASS: gdb.mi/mi2-stepi.exp: step-instruction at main
PASS: gdb.mi/mi2-stepi.exp: step-instruction at main (line check)
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main (line check)
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main 2
PASS: gdb.mi/mi2-stepi.exp: next-instruction at main 2 (line check)
Running ../../../master/gdb/testsuite/gdb.mi/mi2-syn-frame.exp ...
PASS: gdb.mi/mi2-syn-frame.exp: breakpoint at main
PASS: gdb.mi/mi2-syn-frame.exp: mi runto main
PASS: gdb.mi/mi2-syn-frame.exp: insert breakpoint foo
PASS: gdb.mi/mi2-syn-frame.exp: call inferior's function with a breakpoint set in it
PASS: gdb.mi/mi2-syn-frame.exp: backtrace from inferior function stopped at bp, showing gdb dummy frame
PASS: gdb.mi/mi2-syn-frame.exp: finished exec continue
PASS: gdb.mi/mi2-syn-frame.exp: list stack frames
PASS: gdb.mi/mi2-syn-frame.exp: insert breakpoint subroutine
PASS: gdb.mi/mi2-syn-frame.exp: evaluate expression have_a_very_merry_interrupt
PASS: gdb.mi/mi2-syn-frame.exp: list stack frames
PASS: gdb.mi/mi2-syn-frame.exp: finished exec continue
PASS: gdb.mi/mi2-syn-frame.exp: list stack frames
PASS: gdb.mi/mi2-syn-frame.exp: call inferior function which raises exception
PASS: gdb.mi/mi2-syn-frame.exp: backtrace from inferior function at exception
Running ../../../master/gdb/testsuite/gdb.mi/mi2-until.exp ...
PASS: gdb.mi/mi2-until.exp: break-insert operation
PASS: gdb.mi/mi2-until.exp: run to main
PASS: gdb.mi/mi2-until.exp: break-delete 1
KFAIL: gdb.mi/mi2-until.exp: until after while loop (stopped at wrong place) (PRMS: gdb/2104)
PASS: gdb.mi/mi2-until.exp: until line number
PASS: gdb.mi/mi2-until.exp: until line number:file
PASS: gdb.mi/mi2-until.exp: until after current function
Running ../../../master/gdb/testsuite/gdb.mi/mi2-var-block.exp ...
PASS: gdb.mi/mi2-var-block.exp: breakpoint at do_block_tests
PASS: gdb.mi/mi2-var-block.exp: mi runto do_block_tests
PASS: gdb.mi/mi2-var-block.exp: create local variable cb
PASS: gdb.mi/mi2-var-block.exp: create local variable foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: delete var foo
PASS: gdb.mi/mi2-var-block.exp: create local variable foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: update all vars: cb foo changed
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: create local variable inner_foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
PASS: gdb.mi/mi2-var-block.exp: create local variable foo2
XFAIL: gdb.mi/mi2-var-block.exp: update inner_foo: should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi2-var-block.exp: evaluate inner_foo: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: update foo: did not change
PASS: gdb.mi/mi2-var-block.exp: delete var inner_foo
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi2-var-block.exp: update foo2: should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: step at do_block_test
XFAIL: gdb.mi/mi2-var-block.exp: update foo2 should be out of scope: KNOWN PROBLEM
XFAIL: gdb.mi/mi2-var-block.exp: update foo should be out of scope: KNOWN PROBLEM
PASS: gdb.mi/mi2-var-block.exp: update cb
PASS: gdb.mi/mi2-var-block.exp: delete var foo
PASS: gdb.mi/mi2-var-block.exp: delete var foo2
PASS: gdb.mi/mi2-var-block.exp: delete var cb
Running ../../../master/gdb/testsuite/gdb.mi/mi2-var-child.exp ...
PASS: gdb.mi/mi2-var-child.exp: breakpoint at do_children_tests
PASS: gdb.mi/mi2-var-child.exp: mi runto do_children_tests
PASS: gdb.mi/mi2-var-child.exp: run to 220 (set breakpoint)
PASS: gdb.mi/mi2-var-child.exp: create local variable struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.character
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.character
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_int
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_int
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_struct
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.func_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.3
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.3
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.4
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.4
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.5
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.5
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.6
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.6
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.7
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.7
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.8
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.8
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.long_array.9
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.long_array.9
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.a
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.a
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.b
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.b
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.c
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.c
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.u1.d
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.u1.d
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.g
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.g
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.h
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.h
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.i
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.i
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.f
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.d
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.e
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.func
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s1.foo
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.array_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.s2.u2.u1s2.func
PASS: gdb.mi/mi2-var-child.exp: get children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of struct_declarations.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: step to line $line_dct_123
PASS: gdb.mi/mi2-var-child.exp: create local variable weird
PASS: gdb.mi/mi2-var-child.exp: get children of weird
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird
PASS: gdb.mi/mi2-var-child.exp: get children of weird.long_array
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.long_array
PASS: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird.int_ptr_ptr.*int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of weird->int_ptr_ptr.*weird->int_ptr_ptr.**weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: is weird editable
PASS: gdb.mi/mi2-var-child.exp: is weird->int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.int_ptr_ptr.*int_ptr_ptr.**int_ptr_ptr editable
PASS: gdb.mi/mi2-var-child.exp: is weird.u1 editable
PASS: gdb.mi/mi2-var-child.exp: is weird.s2 editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.a editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.b editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.u1.c editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations.long_array.0 editable
PASS: gdb.mi/mi2-var-child.exp: is struct_declarations editable
PASS: gdb.mi/mi2-var-child.exp: delete var weird
PASS: gdb.mi/mi2-var-child.exp: update all vars. None changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 1
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.integer
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 4
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.char_ptr
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 5
PASS: gdb.mi/mi2-var-child.exp: update all vars int_ptr_ptr and children changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 6
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.0 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 7
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.1 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_123 + 8
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.2 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_nothing
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.long_array.3-9 changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_a0_0
PASS: gdb.mi/mi2-var-child.exp: update all vars struct_declarations.func_ptr changed
PASS: gdb.mi/mi2-var-child.exp: delete var struct_declarations
PASS: gdb.mi/mi2-var-child.exp: delete var weird->int_ptr_ptr
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 1
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->char_ptr.*psnp->char_ptr.**psnp->char_ptr.***psnp->char_ptr.****psnp->char_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->long_ptr.*psnp->long_ptr.**psnp->long_ptr.***psnp->long_ptr.****psnp->long_ptr
PASS: gdb.mi/mi2-var-child.exp: create local variable  psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get number of children of psnp->ptrs.0.next.char_ptr.*char_ptr.**char_ptr.***char_ptr
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next
PASS: gdb.mi/mi2-var-child.exp: get children of psnp->ptrs.0.next.next.ptrs
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 2
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->char_ptr (and 0.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 3
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->char_ptr (and 1.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 4
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->char_ptr (and 2.char_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 5
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->long_ptr (and 0.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 6
XFAIL: gdb.mi/mi2-var-child.exp: update all vars psnp->next->long_ptr (and 1.long_ptr) changed
PASS: gdb.mi/mi2-var-child.exp: step $line_dct_snp0 + 7
PASS: gdb.mi/mi2-var-child.exp: update all vars psnp->next->next->long_ptr (and 2.long_ptr) changed
Running ../../../master/gdb/testsuite/gdb.mi/mi2-var-cmd.exp ...
PASS: gdb.mi/mi2-var-cmd.exp: create global variable
PASS: gdb.mi/mi2-var-cmd.exp: create non-existent variable
PASS: gdb.mi/mi2-var-cmd.exp: create out of scope variable
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at do_locals_tests
PASS: gdb.mi/mi2-var-cmd.exp: mi runto do_locals_tests
PASS: gdb.mi/mi2-var-cmd.exp: run to 131 (set breakpoint)
PASS: gdb.mi/mi2-var-cmd.exp: create local variable linteger
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpcharacter
PASS: gdb.mi/mi2-var-cmd.exp: create local variable llong
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lplong
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lfloat
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: create local variable ldouble
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpdouble
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lsimple
PASS: gdb.mi/mi2-var-cmd.exp: create local variable lpsimple
PASS: gdb.mi/mi2-var-cmd.exp: create local variable func
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: create lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: create int
PASS: gdb.mi/mi2-var-cmd.exp: update all vars
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_test
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (2)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpinteger changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (3)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lcharacter changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (4)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpcharacter changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (5)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: many changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (6)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: func and lpsimple changed
PASS: gdb.mi/mi2-var-cmd.exp: step at do_locals_tests (7)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lsimple and others changed
PASS: gdb.mi/mi2-var-cmd.exp: assign to global_simple
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger changed after assign
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger again, same value
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: linteger not changed after same assign
PASS: gdb.mi/mi2-var-cmd.exp: eval linteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: lpinteger changed after assign
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: no changes on second update
PASS: gdb.mi/mi2-var-cmd.exp: eval lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to linteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: assign to lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: eval lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: assign to llong
PASS: gdb.mi/mi2-var-cmd.exp: eval llong
PASS: gdb.mi/mi2-var-cmd.exp: assign to llong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi2-var-cmd.exp: eval lplong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lplong
PASS: gdb.mi/mi2-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi2-var-cmd.exp: eval lfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to lfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: assign to ldouble
PASS: gdb.mi/mi2-var-cmd.exp: assign to func
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: assign to lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: mi runto subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: create i
PASS: gdb.mi/mi2-var-cmd.exp: create l
PASS: gdb.mi/mi2-var-cmd.exp: create linteger
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1
XFAIL: gdb.mi/mi2-var-cmd.exp: update all vars: changed FIXME
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1 (2)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: i changed
PASS: gdb.mi/mi2-var-cmd.exp: step at subroutine1 (3)
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: llong changed
PASS: gdb.mi/mi2-var-cmd.exp: next out of subroutine1
PASS: gdb.mi/mi2-var-cmd.exp: update all vars: all now out of scope
PASS: gdb.mi/mi2-var-cmd.exp: delete var
PASS: gdb.mi/mi2-var-cmd.exp: delete var linteger
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpinteger
PASS: gdb.mi/mi2-var-cmd.exp: delete var lcharacter
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpcharacter
PASS: gdb.mi/mi2-var-cmd.exp: delete var llong
PASS: gdb.mi/mi2-var-cmd.exp: delete var lplong
PASS: gdb.mi/mi2-var-cmd.exp: delete var lfloat
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpfloat
PASS: gdb.mi/mi2-var-cmd.exp: delete var ldouble
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpdouble
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple
PASS: gdb.mi/mi2-var-cmd.exp: delete var lpsimple
PASS: gdb.mi/mi2-var-cmd.exp: delete var func
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple.character
PASS: gdb.mi/mi2-var-cmd.exp: delete var  lsimple->integer
PASS: gdb.mi/mi2-var-cmd.exp: delete var lsimple.integer
PASS: gdb.mi/mi2-var-cmd.exp: delete var i
PASS: gdb.mi/mi2-var-cmd.exp: delete var l
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: mi runto do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: create selected_a
PASS: gdb.mi/mi2-var-cmd.exp: breakpoint at incr_a
PASS: gdb.mi/mi2-var-cmd.exp: mi runto incr_a
PASS: gdb.mi/mi2-var-cmd.exp: update selected_a in incr_a
PASS: gdb.mi/mi2-var-cmd.exp: step a line in incr_a
PASS: gdb.mi/mi2-var-cmd.exp: return from incr_a to do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: update selected_a in do_special_tests
PASS: gdb.mi/mi2-var-cmd.exp: floating varobj invalidation
Running ../../../master/gdb/testsuite/gdb.mi/mi2-var-display.exp ...
PASS: gdb.mi/mi2-var-display.exp: break-insert operation
PASS: gdb.mi/mi2-var-display.exp: run to main
PASS: gdb.mi/mi2-var-display.exp: create local variable bar
PASS: gdb.mi/mi2-var-display.exp: info type variable bar
PASS: gdb.mi/mi2-var-display.exp: show format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar
PASS: gdb.mi/mi2-var-display.exp: set format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar with new format
PASS: gdb.mi/mi2-var-display.exp: assing to variable bar
PASS: gdb.mi/mi2-var-display.exp: set format variable bar
PASS: gdb.mi/mi2-var-display.exp: eval variable bar with new value
PASS: gdb.mi/mi2-var-display.exp: delete var bar
PASS: gdb.mi/mi2-var-display.exp: create local variable foo
PASS: gdb.mi/mi2-var-display.exp: info type variable foo
PASS: gdb.mi/mi2-var-display.exp: show format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: set format variable foo
PASS: gdb.mi/mi2-var-display.exp: show format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: assing to variable foo
PASS: gdb.mi/mi2-var-display.exp: set format variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in hex
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in hex
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in octal
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in octal
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in decimal
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in decimal
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in natural
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in natural
PASS: gdb.mi/mi2-var-display.exp: eval variable foo in binary
PASS: gdb.mi/mi2-var-display.exp: show format variable foo after eval in binary
PASS: gdb.mi/mi2-var-display.exp: delete var foo
PASS: gdb.mi/mi2-var-display.exp: create local variable weird
PASS: gdb.mi/mi2-var-display.exp: get children local variable weird
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: show format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: show format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.integer
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.character
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.char_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.long_int
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.int_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.long_array
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_struct
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.func_ptr_ptr
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.u1
PASS: gdb.mi/mi2-var-display.exp: set format variable weird.s2
PASS: gdb.mi/mi2-var-display.exp: delete var weird
PASS: gdb.mi/mi2-var-display.exp: break-insert operation 2
PASS: gdb.mi/mi2-var-display.exp: continue to do_special_tests
PASS: gdb.mi/mi2-var-display.exp: create local variable u
PASS: gdb.mi/mi2-var-display.exp: eval variable u
PASS: gdb.mi/mi2-var-display.exp: info type variable u
PASS: gdb.mi/mi2-var-display.exp: is u editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of u
PASS: gdb.mi/mi2-var-display.exp: get children of u
PASS: gdb.mi/mi2-var-display.exp: create local variable anonu
PASS: gdb.mi/mi2-var-display.exp: eval variable anonu
PASS: gdb.mi/mi2-var-display.exp: info type variable anonu
PASS: gdb.mi/mi2-var-display.exp: is anonu editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anonu
PASS: gdb.mi/mi2-var-display.exp: get children of anonu
PASS: gdb.mi/mi2-var-display.exp: create local variable s
PASS: gdb.mi/mi2-var-display.exp: eval variable s
PASS: gdb.mi/mi2-var-display.exp: info type variable s
PASS: gdb.mi/mi2-var-display.exp: is s editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of s
PASS: gdb.mi/mi2-var-display.exp: get children of s
PASS: gdb.mi/mi2-var-display.exp: create local variable anons
PASS: gdb.mi/mi2-var-display.exp: eval variable anons
PASS: gdb.mi/mi2-var-display.exp: info type variable anons
PASS: gdb.mi/mi2-var-display.exp: is anons editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anons
PASS: gdb.mi/mi2-var-display.exp: get children of anons
PASS: gdb.mi/mi2-var-display.exp: create local variable e
XFAIL: gdb.mi/mi2-var-display.exp: eval variable e
PASS: gdb.mi/mi2-var-display.exp: info type variable e
PASS: gdb.mi/mi2-var-display.exp: is e editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of e
PASS: gdb.mi/mi2-var-display.exp: get children of e
PASS: gdb.mi/mi2-var-display.exp: create local variable anone
PASS: gdb.mi/mi2-var-display.exp: eval variable anone
PASS: gdb.mi/mi2-var-display.exp: create duplicate local variable anone
PASS: gdb.mi/mi2-var-display.exp: info type variable anone
PASS: gdb.mi/mi2-var-display.exp: is anone editable
PASS: gdb.mi/mi2-var-display.exp: get number of children of anone
PASS: gdb.mi/mi2-var-display.exp: get children of anone
PASS: gdb.mi/mi2-var-display.exp: print FP register
PASS: gdb.mi/mi2-var-display.exp: breakpoint at incr_a
PASS: gdb.mi/mi2-var-display.exp: mi runto incr_a
PASS: gdb.mi/mi2-var-display.exp: create local variable a1
PASS: gdb.mi/mi2-var-display.exp: create variable a2 in different scope
Running ../../../master/gdb/testsuite/gdb.mi/mi2-watch.exp ...
PASS: gdb.mi/mi2-watch.exp: hw watchpoints toggle (1)
PASS: gdb.mi/mi2-watch.exp: sw: breakpoint at callee4
PASS: gdb.mi/mi2-watch.exp: sw: mi runto callee4
PASS: gdb.mi/mi2-watch.exp: sw: break-watch operation
PASS: gdb.mi/mi2-watch.exp: sw: list of watchpoints
PASS: gdb.mi/mi2-watch.exp: sw: watchpoint trigger
XPASS: gdb.mi/mi2-watch.exp: sw: watchpoint trigger
PASS: gdb.mi/mi2-watch.exp: hw watchpoints toggle (2)
PASS: gdb.mi/mi2-watch.exp: hw: breakpoint at callee4
PASS: gdb.mi/mi2-watch.exp: hw: mi runto callee4
PASS: gdb.mi/mi2-watch.exp: hw: break-watch operation
PASS: gdb.mi/mi2-watch.exp: hw: list of watchpoints
PASS: gdb.mi/mi2-watch.exp: hw: watchpoint trigger
PASS: gdb.mi/mi2-watch.exp: hw: watchpoint trigger
Running ../../../master/gdb/testsuite/gdb.modula2/unbounded-array.exp ...
PASS: gdb.modula2/unbounded-array.exp: switch to modula-2
PASS: gdb.modula2/unbounded-array.exp: print the last legal element of array a
PASS: gdb.modula2/unbounded-array.exp: print unbounded array contents
PASS: gdb.modula2/unbounded-array.exp: print the 1st element of array a
PASS: gdb.modula2/unbounded-array.exp: print the 2nd element of array a
PASS: gdb.modula2/unbounded-array.exp: print the 3rd element of array a
PASS: gdb.modula2/unbounded-array.exp: print the 4th element of array a
PASS: gdb.modula2/unbounded-array.exp: print the 5th element of array a
Running ../../../master/gdb/testsuite/gdb.multi/base.exp ...
PASS: gdb.multi/base.exp: add empty inferior 2
PASS: gdb.multi/base.exp: switch to inferior 2
PASS: gdb.multi/base.exp: load hangout file in inferior 2
PASS: gdb.multi/base.exp: add inferior 3 with -exec goodbye
PASS: gdb.multi/base.exp: info inferiors
PASS: gdb.multi/base.exp: info inferior 2 3
PASS: gdb.multi/base.exp: info inferior 1-2
PASS: gdb.multi/base.exp: switch to inferior 1
PASS: gdb.multi/base.exp: 'info functions commonfun' in inferior 1
PASS: gdb.multi/base.exp: switch to inferior 3
PASS: gdb.multi/base.exp: 'info functions commonfun' in inferior 3
PASS: gdb.multi/base.exp: switch back to inferior 1
PASS: gdb.multi/base.exp: set listsize 1
PASS: gdb.multi/base.exp: list commonfun in hello
PASS: gdb.multi/base.exp: print hglob
PASS: gdb.multi/base.exp: print glob (hello)
PASS: gdb.multi/base.exp: switch to inferior 3 to print globals
PASS: gdb.multi/base.exp: print gglob
PASS: gdb.multi/base.exp: print glob (goodbye)
PASS: gdb.multi/base.exp: list commonfun in goodbye
PASS: gdb.multi/base.exp: switch to inferior 1 to run it
PASS: gdb.multi/base.exp: break hello
PASS: gdb.multi/base.exp: continue
PASS: gdb.multi/base.exp: remove-inferiors 2-3
PASS: gdb.multi/base.exp: check remove-inferiors
Running ../../../master/gdb/testsuite/gdb.multi/bkpt-multi-exec.exp ...
PASS: gdb.multi/bkpt-multi-exec.exp: continue
PASS: gdb.multi/bkpt-multi-exec.exp: add inferior 2 with -exec crashme
PASS: gdb.multi/bkpt-multi-exec.exp: inferior 2
PASS: gdb.multi/bkpt-multi-exec.exp: break crashme.c:9
PASS: gdb.multi/bkpt-multi-exec.exp: inferior 1
PASS: gdb.multi/bkpt-multi-exec.exp: run
Running ../../../master/gdb/testsuite/gdb.objc/basicclass.exp ...
UNSUPPORTED: gdb.objc/basicclass.exp: Couldn't compile ../../../master/gdb/testsuite/gdb.objc/basicclass.m: unrecognized error
Running ../../../master/gdb/testsuite/gdb.objc/nondebug.exp ...
UNSUPPORTED: gdb.objc/nondebug.exp: Couldn't compile ../../../master/gdb/testsuite/gdb.objc/nondebug.m: unrecognized error
Running ../../../master/gdb/testsuite/gdb.objc/objcdecode.exp ...
UNSUPPORTED: gdb.objc/objcdecode.exp: Couldn't compile ../../../master/gdb/testsuite/gdb.objc/objcdecode.m: unrecognized error
Running ../../../master/gdb/testsuite/gdb.objc/print.exp ...
PASS: gdb.objc/print.exp: set language objective-c
PASS: gdb.objc/print.exp: set language to "objective-c"
PASS: gdb.objc/print.exp: check fp + text
PASS: gdb.objc/print.exp: p 1.
PASS: gdb.objc/print.exp: p 1.5
KFAIL: gdb.objc/print.exp: p 1.f (PRMS: gdb/11925)
KFAIL: gdb.objc/print.exp: p 1.5f (PRMS: gdb/11925)
KFAIL: gdb.objc/print.exp: p 1.l (PRMS: gdb/11925)
KFAIL: gdb.objc/print.exp: p 1.5l (PRMS: gdb/11925)
PASS: gdb.objc/print.exp: p 0x1.1
PASS: gdb.objc/print.exp: reject p 1.1x
PASS: gdb.objc/print.exp: reject p 1.1ff
PASS: gdb.objc/print.exp: reject p 1.1ll
Running ../../../master/gdb/testsuite/gdb.opencl/callfuncs.exp ...
Running ../../../master/gdb/testsuite/gdb.opencl/convs_casts.exp ...
Running ../../../master/gdb/testsuite/gdb.opencl/datatypes.exp ...
Running ../../../master/gdb/testsuite/gdb.opencl/operators.exp ...
Running ../../../master/gdb/testsuite/gdb.opencl/vec_comps.exp ...
Running ../../../master/gdb/testsuite/gdb.opt/clobbered-registers-O2.exp ...
PASS: gdb.opt/clobbered-registers-O2.exp: Backtracing
PASS: gdb.opt/clobbered-registers-O2.exp: print operand0
PASS: gdb.opt/clobbered-registers-O2.exp: print operand1
Running ../../../master/gdb/testsuite/gdb.opt/inline-bt.exp ...
PASS: gdb.opt/inline-bt.exp: continue to bar (1)
PASS: gdb.opt/inline-bt.exp: backtrace from bar (1)
PASS: gdb.opt/inline-bt.exp: bar not inlined
PASS: gdb.opt/inline-bt.exp: continue to bar (2)
PASS: gdb.opt/inline-bt.exp: backtrace from bar (2)
PASS: gdb.opt/inline-bt.exp: up from bar (2)
PASS: gdb.opt/inline-bt.exp: func1 inlined (2)
PASS: gdb.opt/inline-bt.exp: continue to bar (3)
PASS: gdb.opt/inline-bt.exp: backtrace from bar (3)
PASS: gdb.opt/inline-bt.exp: up from bar (3)
PASS: gdb.opt/inline-bt.exp: func1 inlined (3)
PASS: gdb.opt/inline-bt.exp: up from func1 (3)
PASS: gdb.opt/inline-bt.exp: func2 inlined (3)
Running ../../../master/gdb/testsuite/gdb.opt/inline-cmds.exp ...
PASS: gdb.opt/inline-cmds.exp: set listsize 1
PASS: gdb.opt/inline-cmds.exp: continue to bar (1)
PASS: gdb.opt/inline-cmds.exp: backtrace from bar (1)
PASS: gdb.opt/inline-cmds.exp: up from bar (1)
PASS: gdb.opt/inline-cmds.exp: func1 inlined (1)
PASS: gdb.opt/inline-cmds.exp: continue to bar (2)
PASS: gdb.opt/inline-cmds.exp: backtrace from bar (2)
PASS: gdb.opt/inline-cmds.exp: up from bar (2)
PASS: gdb.opt/inline-cmds.exp: func1 inlined (2)
PASS: gdb.opt/inline-cmds.exp: up from func1 (2)
PASS: gdb.opt/inline-cmds.exp: func2 inlined (2)
PASS: gdb.opt/inline-cmds.exp: continue to marker
PASS: gdb.opt/inline-cmds.exp: backtrace from marker
PASS: gdb.opt/inline-cmds.exp: marker not inlined
PASS: gdb.opt/inline-cmds.exp: next over inlined functions
PASS: gdb.opt/inline-cmds.exp: next past inlined func1
PASS: gdb.opt/inline-cmds.exp: print x before func1
PASS: gdb.opt/inline-cmds.exp: backtrace does not include func1
PASS: gdb.opt/inline-cmds.exp: stepped over call to func1
PASS: gdb.opt/inline-cmds.exp: step into func1
PASS: gdb.opt/inline-cmds.exp: finish from func1
PASS: gdb.opt/inline-cmds.exp: continue to breakpoint: consecutive func1
PASS: gdb.opt/inline-cmds.exp: next to first func1
KFAIL: gdb.opt/inline-cmds.exp: next to second func1 (PRMS: gdb/NNNN)
PASS: gdb.opt/inline-cmds.exp: continue to breakpoint: func1 then func3
PASS: gdb.opt/inline-cmds.exp: next to func1 before func3
PASS: gdb.opt/inline-cmds.exp: next to func3
PASS: gdb.opt/inline-cmds.exp: continue to breakpoint: finish into func1
PASS: gdb.opt/inline-cmds.exp: next to finish marker
PASS: gdb.opt/inline-cmds.exp: step into finish marker
PASS: gdb.opt/inline-cmds.exp: finish from marker to func1
PASS: gdb.opt/inline-cmds.exp: step into func1 for finish
PASS: gdb.opt/inline-cmds.exp: finish from func1 to func3
PASS: gdb.opt/inline-cmds.exp: continue to breakpoint: before the outer_inline call
PASS: gdb.opt/inline-cmds.exp: reach 1 the outer_inline call
PASS: gdb.opt/inline-cmds.exp: reach outer_inline2
PASS: gdb.opt/inline-cmds.exp: backtrace at main of outer_inline
PASS: gdb.opt/inline-cmds.exp: enter outer_inline2
PASS: gdb.opt/inline-cmds.exp: backtrace at outer_inline2
PASS: gdb.opt/inline-cmds.exp: enter outer_inline1 from outer_inline2
XFAIL: gdb.opt/inline-cmds.exp: backtrace at outer_inline1
PASS: gdb.opt/inline-cmds.exp: step to call of noinline
PASS: gdb.opt/inline-cmds.exp: enter noinline from outer_inline1
PASS: gdb.opt/inline-cmds.exp: backtrace at noinline from outer_inline1
PASS: gdb.opt/inline-cmds.exp: enter inlined_fn from noinline
PASS: gdb.opt/inline-cmds.exp: backtrace at inlined_fn from noinline
PASS: gdb.opt/inline-cmds.exp: inlined_fn from noinline inlined
PASS: gdb.opt/inline-cmds.exp: up to noinline
PASS: gdb.opt/inline-cmds.exp: noinline from outer_inline1 not inlined
PASS: gdb.opt/inline-cmds.exp: up to outer_inline1
PASS: gdb.opt/inline-cmds.exp: outer_inline1 inlined
PASS: gdb.opt/inline-cmds.exp: up to outer_inline2
PASS: gdb.opt/inline-cmds.exp: outer_inline2 inlined
PASS: gdb.opt/inline-cmds.exp: up from outer_inline2
PASS: gdb.opt/inline-cmds.exp: main not inlined
Running ../../../master/gdb/testsuite/gdb.opt/inline-locals.exp ...
PASS: gdb.opt/inline-locals.exp: continue to bar (1)
PASS: gdb.opt/inline-locals.exp: continue to bar (2)
PASS: gdb.opt/inline-locals.exp: backtrace from bar (2)
PASS: gdb.opt/inline-locals.exp: up from bar (2)
PASS: gdb.opt/inline-locals.exp: func1 inlined (2)
PASS: gdb.opt/inline-locals.exp: info locals above bar (2)
PASS: gdb.opt/inline-locals.exp: info args above bar (2)
PASS: gdb.opt/inline-locals.exp: print local (2)
PASS: gdb.opt/inline-locals.exp: print out of scope local
PASS: gdb.opt/inline-locals.exp: continue to bar (3)
PASS: gdb.opt/inline-locals.exp: backtrace from bar (3)
PASS: gdb.opt/inline-locals.exp: up from bar (3)
PASS: gdb.opt/inline-locals.exp: func1 inlined (3)
PASS: gdb.opt/inline-locals.exp: info locals above bar (3)
PASS: gdb.opt/inline-locals.exp: info args above bar (3)
PASS: gdb.opt/inline-locals.exp: print local (3)
Running ../../../master/gdb/testsuite/gdb.pascal/floats.exp ...
UNSUPPORTED: gdb.pascal/floats.exp: No pascal compiler found
Running ../../../master/gdb/testsuite/gdb.pascal/gdb11492.exp ...
UNSUPPORTED: gdb.pascal/gdb11492.exp: No pascal compiler found
Running ../../../master/gdb/testsuite/gdb.pascal/hello.exp ...
UNSUPPORTED: gdb.pascal/hello.exp: No pascal compiler found
Running ../../../master/gdb/testsuite/gdb.pascal/integers.exp ...
UNSUPPORTED: gdb.pascal/integers.exp: No pascal compiler found
Running ../../../master/gdb/testsuite/gdb.pascal/print.exp ...
PASS: gdb.pascal/print.exp: set language pascal
PASS: gdb.pascal/print.exp: set language to "pascal"
PASS: gdb.pascal/print.exp: check fp + text
PASS: gdb.pascal/print.exp: p 1.
PASS: gdb.pascal/print.exp: p 1.5
PASS: gdb.pascal/print.exp: p 1.f
PASS: gdb.pascal/print.exp: p 1.5f
PASS: gdb.pascal/print.exp: p 1.l
PASS: gdb.pascal/print.exp: p 1.5l
PASS: gdb.pascal/print.exp: p 0x1.1
PASS: gdb.pascal/print.exp: reject p 1.1x
PASS: gdb.pascal/print.exp: reject p 1.1ff
PASS: gdb.pascal/print.exp: reject p 1.1ll
Running ../../../master/gdb/testsuite/gdb.pascal/types.exp ...
PASS: gdb.pascal/types.exp: set language pascal
PASS: gdb.pascal/types.exp: set language to "pascal"
PASS: gdb.pascal/types.exp: pt 123
PASS: gdb.pascal/types.exp: pt TRUE
PASS: gdb.pascal/types.exp: pt FALSE
PASS: gdb.pascal/types.exp: pt 'a'
KFAIL: gdb.pascal/types.exp: pt 'a simple string' (PRMS: gdb/2326)
PASS: gdb.pascal/types.exp: pt .44
PASS: gdb.pascal/types.exp: pt 44.0
PASS: gdb.pascal/types.exp: pt 10e20
PASS: gdb.pascal/types.exp: pt 10E20
Running ../../../master/gdb/testsuite/gdb.python/lib-types.exp ...
PASS: gdb.python/lib-types.exp: python import gdb.types
PASS: gdb.python/lib-types.exp: python const_class1_obj = gdb.parse_and_eval ('const_class1_obj')
PASS: gdb.python/lib-types.exp: python basic_type_const_class1_obj = gdb.types.get_basic_type (const_class1_obj.type)
PASS: gdb.python/lib-types.exp: python print str (const_class1_obj.type)
PASS: gdb.python/lib-types.exp: const stripping
PASS: gdb.python/lib-types.exp: python volatile_class1_obj = gdb.parse_and_eval ('volatile_class1_obj')
PASS: gdb.python/lib-types.exp: python basic_type_volatile_class1_obj = gdb.types.get_basic_type (volatile_class1_obj.type)
PASS: gdb.python/lib-types.exp: python print str (volatile_class1_obj.type)
PASS: gdb.python/lib-types.exp: volatile stripping
PASS: gdb.python/lib-types.exp: python const_volatile_class1_obj = gdb.parse_and_eval ('const_volatile_class1_obj')
PASS: gdb.python/lib-types.exp: python basic_type_const_volatile_class1_obj = gdb.types.get_basic_type (const_volatile_class1_obj.type)
PASS: gdb.python/lib-types.exp: python print str (const_volatile_class1_obj.type)
PASS: gdb.python/lib-types.exp: volatile+const stripping
PASS: gdb.python/lib-types.exp: python typedef_class1_obj = gdb.parse_and_eval ('typedef_class1_obj')
PASS: gdb.python/lib-types.exp: python basic_type_typedef_class1_obj = gdb.types.get_basic_type (typedef_class1_obj.type)
PASS: gdb.python/lib-types.exp: python print str (typedef_class1_obj.type)
PASS: gdb.python/lib-types.exp: typedef stripping
PASS: gdb.python/lib-types.exp: python class1_ref_obj = gdb.parse_and_eval ('class1_ref_obj')
PASS: gdb.python/lib-types.exp: python basic_type_class1_ref_obj = gdb.types.get_basic_type (class1_ref_obj.type)
PASS: gdb.python/lib-types.exp: python print str (class1_ref_obj.type)
PASS: gdb.python/lib-types.exp: reference stripping
PASS: gdb.python/lib-types.exp: python typedef_const_typedef_class1_obj = gdb.parse_and_eval ('typedef_const_typedef_class1_obj')
PASS: gdb.python/lib-types.exp: python basic_type_typedef_const_typedef_class1_obj = gdb.types.get_basic_type (typedef_const_typedef_class1_obj.type)
PASS: gdb.python/lib-types.exp: python print str (typedef_class1_obj.type)
PASS: gdb.python/lib-types.exp: nested typedef stripping
PASS: gdb.python/lib-types.exp: python typedef_const_typedef_class1_ref_obj = gdb.parse_and_eval ('typedef_const_typedef_class1_ref_obj')
PASS: gdb.python/lib-types.exp: python basic_type_typedef_const_typedef_class1_ref_obj = gdb.types.get_basic_type (typedef_const_typedef_class1_ref_obj.type)
PASS: gdb.python/lib-types.exp: python print str (typedef_const_typedef_class1_ref_obj.type)
PASS: gdb.python/lib-types.exp: nested typedef/ref stripping
PASS: gdb.python/lib-types.exp: python class1_obj = gdb.parse_and_eval ('class1_obj')
PASS: gdb.python/lib-types.exp: python print gdb.types.has_field (class1_obj.type, 'x')
PASS: gdb.python/lib-types.exp: python print gdb.types.has_field (class1_obj.type, 'nope')
PASS: gdb.python/lib-types.exp: python subclass1_obj = gdb.parse_and_eval ('subclass1_obj')
PASS: gdb.python/lib-types.exp: python print gdb.types.has_field (subclass1_obj.type, 'x')
PASS: gdb.python/lib-types.exp: python enum1_obj = gdb.parse_and_eval ('enum1_obj')
PASS: gdb.python/lib-types.exp: python enum1_dict = gdb.types.make_enum_dict (enum1_obj.type)
PASS: gdb.python/lib-types.exp: python enum1_list = enum1_dict.items ()
PASS: gdb.python/lib-types.exp: python enum1_list.sort ()
PASS: gdb.python/lib-types.exp: python print enum1_list
Running ../../../master/gdb/testsuite/gdb.python/py-block.exp ...
PASS: gdb.python/py-block.exp: continue to breakpoint: Block break here.
PASS: gdb.python/py-block.exp: Check block not None
PASS: gdb.python/py-block.exp: First anonymous block
PASS: gdb.python/py-block.exp: Check start not None
PASS: gdb.python/py-block.exp: Check end not None
PASS: gdb.python/py-block.exp: Get superblock
PASS: gdb.python/py-block.exp: Second anonymous block
PASS: gdb.python/py-block.exp: Get superblock 2
PASS: gdb.python/py-block.exp: Print superblock 2 function
PASS: gdb.python/py-block.exp: up
PASS: gdb.python/py-block.exp: Check Frame 2's block not None
PASS: gdb.python/py-block.exp: main block
PASS: gdb.python/py-block.exp: Check block validity
PASS: gdb.python/py-block.exp: Check block validity
PASS: gdb.python/py-block.exp: Check block validity
PASS: gdb.python/py-block.exp: Check block validity
Running ../../../master/gdb/testsuite/gdb.python/py-breakpoint.exp ...
PASS: gdb.python/py-breakpoint.exp: Check obj exists
PASS: gdb.python/py-breakpoint.exp: Check breakpoint location
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Check for two breakpoints
PASS: gdb.python/py-breakpoint.exp: Check obj exists
PASS: gdb.python/py-breakpoint.exp: Check breakpoint location
PASS: gdb.python/py-breakpoint.exp: Check obj exists
PASS: gdb.python/py-breakpoint.exp: Check breakpoint location
PASS: gdb.python/py-breakpoint.exp: Check breakpoint hit count
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Check breakpoint hit count
PASS: gdb.python/py-breakpoint.exp: Check expected variable result after 6 iterations
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at add.
PASS: gdb.python/py-breakpoint.exp: Check breakpoint enabled.
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at add.
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Check breakpoint thread
PASS: gdb.python/py-breakpoint.exp: Check breakpoint type
PASS: gdb.python/py-breakpoint.exp: Check breakpoint number
PASS: gdb.python/py-breakpoint.exp: Check breakpoint number
PASS: gdb.python/py-breakpoint.exp: Check breakpoint number
PASS: gdb.python/py-breakpoint.exp: Number of breakpoints before delete
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Check breakpoint invalidated
PASS: gdb.python/py-breakpoint.exp: Number of breakpoints after delete
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at end.
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Test conditional has been set
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Test conditional breakpoint stopped after five iterations
PASS: gdb.python/py-breakpoint.exp: Test conditional read
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Test breakpoint stopped after six iterations
PASS: gdb.python/py-breakpoint.exp: commands $bpnum
PASS: gdb.python/py-breakpoint.exp: print "Command for breakpoint has been executed."
PASS: gdb.python/py-breakpoint.exp: print result
PASS: gdb.python/py-breakpoint.exp: end
PASS: gdb.python/py-breakpoint.exp: python print blist[len(blist)-1].commands
PASS: gdb.python/py-breakpoint.exp: Check invisible bp obj exists
PASS: gdb.python/py-breakpoint.exp: Check breakpoint location
PASS: gdb.python/py-breakpoint.exp: Check breakpoint visibility
PASS: gdb.python/py-breakpoint.exp: Check info breakpoints shows visible breakpoints
PASS: gdb.python/py-breakpoint.exp: Check invisible bp obj exists
PASS: gdb.python/py-breakpoint.exp: Check breakpoint location
PASS: gdb.python/py-breakpoint.exp: Check breakpoint visibility
PASS: gdb.python/py-breakpoint.exp: Check info breakpoints does not show invisible breakpoints
PASS: gdb.python/py-breakpoint.exp: Check maint info breakpoints shows invisible breakpoints
PASS: gdb.python/py-breakpoint.exp: Test watchpoint write
PASS: gdb.python/py-breakpoint.exp: Check info breakpoints does not show invisible breakpoints
PASS: gdb.python/py-breakpoint.exp: Check maint info breakpoints shows invisible breakpoints
PASS: gdb.python/py-breakpoint.exp: Test watchpoint write
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint - python
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint - class bp_eval (gdb.Breakpoint):
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint -    inf_i = 0
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint -    count = 0
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint -    def stop (self):
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint -       self.count = self.count + 1
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint -       self.inf_i = gdb.parse_and_eval("i")
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint -       if self.inf_i == 3:
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint -         return True
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint -       return False
PASS: gdb.python/py-breakpoint.exp: Sub-class a breakpoint - end
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint - python
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint - class bp_also_eval (gdb.Breakpoint):
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint -    count = 0
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint -    def stop (self):
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint -       self.count = self.count + 1
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint -       if self.count == 9:
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint -         return True
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint -       return False
PASS: gdb.python/py-breakpoint.exp: Sub-class a second breakpoint - end
PASS: gdb.python/py-breakpoint.exp: Sub-class a third breakpoint - python
PASS: gdb.python/py-breakpoint.exp: Sub-class a third breakpoint - class basic (gdb.Breakpoint):
PASS: gdb.python/py-breakpoint.exp: Sub-class a third breakpoint -    count = 0
PASS: gdb.python/py-breakpoint.exp: Sub-class a third breakpoint - end
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Check inferior value matches python accounting
PASS: gdb.python/py-breakpoint.exp: Check python accounting matches inferior
PASS: gdb.python/py-breakpoint.exp: Check non firing same-location breakpoint eval function was also called at each stop.
PASS: gdb.python/py-breakpoint.exp: Check non firing same-location breakpoint eval function was also called at each stop.
PASS: gdb.python/py-breakpoint.exp: Check you cannot add a CLI condition to a Python breakpoint that
PASS: gdb.python/py-breakpoint.exp: Construct an eval function - python
PASS: gdb.python/py-breakpoint.exp: Construct an eval function - def stop_func ():
PASS: gdb.python/py-breakpoint.exp: Construct an eval function -    return True
PASS: gdb.python/py-breakpoint.exp: Construct an eval function - end
PASS: gdb.python/py-breakpoint.exp: Assign stop function to a breakpoint that has a condition
PASS: gdb.python/py-breakpoint.exp: Test that evaluate function has not been yet executed (ie count = 0)
PASS: gdb.python/py-breakpoint.exp: continue to breakpoint: Break at multiply.
PASS: gdb.python/py-breakpoint.exp: Test that evaluate function is run when location also has normal bp
PASS: gdb.python/py-breakpoint.exp: Sub-class a watchpoint - python
PASS: gdb.python/py-breakpoint.exp: Sub-class a watchpoint - class wp_eval (gdb.Breakpoint):
PASS: gdb.python/py-breakpoint.exp: Sub-class a watchpoint -    def stop (self):
PASS: gdb.python/py-breakpoint.exp: Sub-class a watchpoint -       self.result = gdb.parse_and_eval("result")
PASS: gdb.python/py-breakpoint.exp: Sub-class a watchpoint -       if self.result == 788:
PASS: gdb.python/py-breakpoint.exp: Sub-class a watchpoint -         return True
PASS: gdb.python/py-breakpoint.exp: Sub-class a watchpoint -       return False
PASS: gdb.python/py-breakpoint.exp: Sub-class a watchpoint - end
PASS: gdb.python/py-breakpoint.exp: Test watchpoint write
PASS: gdb.python/py-breakpoint.exp: Check that this unrelated breakpoints eval function was never called.
Running ../../../master/gdb/testsuite/gdb.python/py-cmd.exp ...
PASS: gdb.python/py-cmd.exp: input simple command - python
PASS: gdb.python/py-cmd.exp: input simple command - class test_cmd (gdb.Command):
PASS: gdb.python/py-cmd.exp: input simple command -   def __init__ (self):
PASS: gdb.python/py-cmd.exp: input simple command -     super (test_cmd, self).__init__ ("test_cmd", gdb.COMMAND_OBSCURE)
PASS: gdb.python/py-cmd.exp: input simple command -   def invoke (self, arg, from_tty):
PASS: gdb.python/py-cmd.exp: input simple command -     print "test_cmd output, arg = %s" % arg
PASS: gdb.python/py-cmd.exp: input simple command - test_cmd ()
PASS: gdb.python/py-cmd.exp: input simple command - end
PASS: gdb.python/py-cmd.exp: call simple command
PASS: gdb.python/py-cmd.exp: input prefix command - python
PASS: gdb.python/py-cmd.exp: input prefix command - class prefix_cmd (gdb.Command):
PASS: gdb.python/py-cmd.exp: input prefix command -   def __init__ (self):
PASS: gdb.python/py-cmd.exp: input prefix command -     super (prefix_cmd, self).__init__ ("prefix_cmd", gdb.COMMAND_OBSCURE, gdb.COMPLETE_NONE, True)
PASS: gdb.python/py-cmd.exp: input prefix command -   def invoke (self, arg, from_tty):
PASS: gdb.python/py-cmd.exp: input prefix command -     print "prefix_cmd output, arg = %s" % arg
PASS: gdb.python/py-cmd.exp: input prefix command - prefix_cmd ()
PASS: gdb.python/py-cmd.exp: input prefix command - end
PASS: gdb.python/py-cmd.exp: call prefix command
PASS: gdb.python/py-cmd.exp: input subcommand - python
PASS: gdb.python/py-cmd.exp: input subcommand - class subcmd (gdb.Command):
PASS: gdb.python/py-cmd.exp: input subcommand -   def __init__ (self):
PASS: gdb.python/py-cmd.exp: input subcommand -     super (subcmd, self).__init__ ("prefix_cmd subcmd", gdb.COMMAND_OBSCURE)
PASS: gdb.python/py-cmd.exp: input subcommand -   def invoke (self, arg, from_tty):
PASS: gdb.python/py-cmd.exp: input subcommand -     print "subcmd output, arg = %s" % arg
PASS: gdb.python/py-cmd.exp: input subcommand - subcmd ()
PASS: gdb.python/py-cmd.exp: input subcommand - end
PASS: gdb.python/py-cmd.exp: call subcmd
PASS: gdb.python/py-cmd.exp: input prefix command, keyword arguments - python
PASS: gdb.python/py-cmd.exp: input prefix command, keyword arguments - class prefix_cmd2 (gdb.Command):
PASS: gdb.python/py-cmd.exp: input prefix command, keyword arguments -   def __init__ (self):
PASS: gdb.python/py-cmd.exp: input prefix command, keyword arguments -     super (prefix_cmd2, self).__init__ ("prefix_cmd2", gdb.COMMAND_OBSCURE, prefix = True, completer_class = gdb.COMPLETE_FILENAME)
PASS: gdb.python/py-cmd.exp: input prefix command, keyword arguments -   def invoke (self, arg, from_tty):
PASS: gdb.python/py-cmd.exp: input prefix command, keyword arguments -     print "prefix_cmd2 output, arg = %s" % arg
PASS: gdb.python/py-cmd.exp: input prefix command, keyword arguments - prefix_cmd2 ()
PASS: gdb.python/py-cmd.exp: input prefix command, keyword arguments - end
PASS: gdb.python/py-cmd.exp: call prefix command, keyword arguments
PASS: gdb.python/py-cmd.exp: input subcommand under prefix_cmd2 - python
PASS: gdb.python/py-cmd.exp: input subcommand under prefix_cmd2 - class subcmd (gdb.Command):
PASS: gdb.python/py-cmd.exp: input subcommand under prefix_cmd2 -   def __init__ (self):
PASS: gdb.python/py-cmd.exp: input subcommand under prefix_cmd2 -     super (subcmd, self).__init__ ("prefix_cmd2 subcmd", gdb.COMMAND_OBSCURE)
PASS: gdb.python/py-cmd.exp: input subcommand under prefix_cmd2 -   def invoke (self, arg, from_tty):
PASS: gdb.python/py-cmd.exp: input subcommand under prefix_cmd2 -     print "subcmd output, arg = %s" % arg
PASS: gdb.python/py-cmd.exp: input subcommand under prefix_cmd2 - subcmd ()
PASS: gdb.python/py-cmd.exp: input subcommand under prefix_cmd2 - end
PASS: gdb.python/py-cmd.exp: call subcmd under prefix_cmd2
PASS: gdb.python/py-cmd.exp: input new subcommand - python
PASS: gdb.python/py-cmd.exp: input new subcommand - class newsubcmd (gdb.Command):
PASS: gdb.python/py-cmd.exp: input new subcommand -   def __init__ (self):
PASS: gdb.python/py-cmd.exp: input new subcommand -     super (newsubcmd, self).__init__ ("info newsubcmd", gdb.COMMAND_OBSCURE)
PASS: gdb.python/py-cmd.exp: input new subcommand -   def invoke (self, arg, from_tty):
PASS: gdb.python/py-cmd.exp: input new subcommand -     print "newsubcmd output, arg = %s" % arg
PASS: gdb.python/py-cmd.exp: input new subcommand - newsubcmd ()
PASS: gdb.python/py-cmd.exp: input new subcommand - end
PASS: gdb.python/py-cmd.exp: call newsubcmd
PASS: gdb.python/py-cmd.exp: input command to throw error - python
PASS: gdb.python/py-cmd.exp: input command to throw error - class test_error_cmd (gdb.Command):
PASS: gdb.python/py-cmd.exp: input command to throw error -   def __init__ (self):
PASS: gdb.python/py-cmd.exp: input command to throw error -     super (test_error_cmd, self).__init__ ("test_error_cmd", gdb.COMMAND_OBSCURE)
PASS: gdb.python/py-cmd.exp: input command to throw error -   def invoke (self, arg, from_tty):
PASS: gdb.python/py-cmd.exp: input command to throw error -     raise gdb.GdbError ('you lose!')
PASS: gdb.python/py-cmd.exp: input command to throw error - test_error_cmd ()
PASS: gdb.python/py-cmd.exp: input command to throw error - end
PASS: gdb.python/py-cmd.exp: call error command
PASS: gdb.python/py-cmd.exp: string_to_argv ("1 2 3")
PASS: gdb.python/py-cmd.exp: string_to_argv ("'1 2' 3")
PASS: gdb.python/py-cmd.exp: string_to_argv ('"1 2" 3')
PASS: gdb.python/py-cmd.exp: string_to_argv ('1\ 2 3')
Running ../../../master/gdb/testsuite/gdb.python/py-error.exp ...
PASS: gdb.python/py-error.exp: set host-charset IBM1047
PASS: gdb.python/py-error.exp: main reached
PASS: gdb.python/py-error.exp: no delayed error
Running ../../../master/gdb/testsuite/gdb.python/py-events.exp ...
PASS: gdb.python/py-events.exp: Test_Events
PASS: gdb.python/py-events.exp: continue
PASS: gdb.python/py-events.exp: continue
Running ../../../master/gdb/testsuite/gdb.python/py-evthreads.exp ...
PASS: gdb.python/py-evthreads.exp: successfully compiled posix threads test case
PASS: gdb.python/py-evthreads.exp: Test_Events
PASS: gdb.python/py-evthreads.exp: set non-stop on
PASS: gdb.python/py-evthreads.exp: set target-async on
PASS: gdb.python/py-evthreads.exp: reached breakpoint 1
PASS: gdb.python/py-evthreads.exp: reached breakpoint 2
PASS: gdb.python/py-evthreads.exp: reached breakpoint 3
PASS: gdb.python/py-evthreads.exp: continue thread 1
PASS: gdb.python/py-evthreads.exp: thread 2
PASS: gdb.python/py-evthreads.exp: continue thread 2
PASS: gdb.python/py-evthreads.exp: thread 3 was signalled
Running ../../../master/gdb/testsuite/gdb.python/py-frame-inline.exp ...
PASS: gdb.python/py-frame-inline.exp: continue to breakpoint: Block break here.
PASS: gdb.python/py-frame-inline.exp: info frame
PASS: gdb.python/py-frame-inline.exp: up
PASS: gdb.python/py-frame-inline.exp: python print gdb.selected_frame().read_var('l')
Running ../../../master/gdb/testsuite/gdb.python/py-frame.exp ...
PASS: gdb.python/py-frame.exp: continue to breakpoint: Block break here.
PASS: gdb.python/py-frame.exp: test i
PASS: gdb.python/py-frame.exp: test f
PASS: gdb.python/py-frame.exp: test b
PASS: gdb.python/py-frame.exp: test i = 1.1
PASS: gdb.python/py-frame.exp: test double i
PASS: gdb.python/py-frame.exp: test f = 2.2
PASS: gdb.python/py-frame.exp: test double f
PASS: gdb.python/py-frame.exp: test i = 99
PASS: gdb.python/py-frame.exp: test int i
PASS: gdb.python/py-frame.exp: continue to breakpoint: breakpoint at f2
PASS: gdb.python/py-frame.exp: selected frame -vs- newest frame
PASS: gdb.python/py-frame.exp: newest frame -vs- newest frame
PASS: gdb.python/py-frame.exp: test equality comparison (false)
PASS: gdb.python/py-frame.exp: test equality comparison (true)
PASS: gdb.python/py-frame.exp: test inequality comparison (true)
PASS: gdb.python/py-frame.exp: test inequality comparison (false)
PASS: gdb.python/py-frame.exp: test Frame.is_valid
PASS: gdb.python/py-frame.exp: test Frame.name
PASS: gdb.python/py-frame.exp: test Frame.type
PASS: gdb.python/py-frame.exp: test Frame.type
PASS: gdb.python/py-frame.exp: test gdb.frame_stop_reason_string
PASS: gdb.python/py-frame.exp: test Frame.pc
PASS: gdb.python/py-frame.exp: test Frame.older
PASS: gdb.python/py-frame.exp: test Frame.newer
PASS: gdb.python/py-frame.exp: test Frame.read_var - error
PASS: gdb.python/py-frame.exp: test Frame.read_var - success
PASS: gdb.python/py-frame.exp: test gdb.selected_frame
Running ../../../master/gdb/testsuite/gdb.python/py-function.exp ...
PASS: gdb.python/py-function.exp: input convenience function - python
PASS: gdb.python/py-function.exp: input convenience function - class test_func (gdb.Function):
PASS: gdb.python/py-function.exp: input convenience function -   def __init__ (self):
PASS: gdb.python/py-function.exp: input convenience function -     super (test_func, self).__init__ ("test_func")
PASS: gdb.python/py-function.exp: input convenience function -   def invoke (self, arg):
PASS: gdb.python/py-function.exp: input convenience function -     return "test_func output, arg = %s" % arg.string ()
PASS: gdb.python/py-function.exp: input convenience function - test_func ()
PASS: gdb.python/py-function.exp: input convenience function - end
PASS: gdb.python/py-function.exp: call function
PASS: gdb.python/py-function.exp: input value-returning convenience function - python
PASS: gdb.python/py-function.exp: input value-returning convenience function - class Double (gdb.Function):
PASS: gdb.python/py-function.exp: input value-returning convenience function -   def __init__ (self):
PASS: gdb.python/py-function.exp: input value-returning convenience function -     super (Double, self).__init__ ("double")
PASS: gdb.python/py-function.exp: input value-returning convenience function -   def invoke (self, n):
PASS: gdb.python/py-function.exp: input value-returning convenience function -     return n*2
PASS: gdb.python/py-function.exp: input value-returning convenience function - Double ()
PASS: gdb.python/py-function.exp: input value-returning convenience function - end
PASS: gdb.python/py-function.exp: call value-returning function
PASS: gdb.python/py-function.exp: input int-returning function - python
PASS: gdb.python/py-function.exp: input int-returning function - class Yes(gdb.Function):
PASS: gdb.python/py-function.exp: input int-returning function -     def __init__(self):
PASS: gdb.python/py-function.exp: input int-returning function -         gdb.Function.__init__(self, 'yes')
PASS: gdb.python/py-function.exp: input int-returning function -     def invoke(self):
PASS: gdb.python/py-function.exp: input int-returning function -         return 1
PASS: gdb.python/py-function.exp: input int-returning function - Yes ()
PASS: gdb.python/py-function.exp: input int-returning function - end
PASS: gdb.python/py-function.exp: call yes with &&
PASS: gdb.python/py-function.exp: call yes with ||
PASS: gdb.python/py-function.exp: Test GDBError - python
PASS: gdb.python/py-function.exp: Test GDBError - class GDBError(gdb.Function):
PASS: gdb.python/py-function.exp: Test GDBError -     def __init__(self):
PASS: gdb.python/py-function.exp: Test GDBError -         gdb.Function.__init__(self, 'gdberror')
PASS: gdb.python/py-function.exp: Test GDBError -     def invoke(self):
PASS: gdb.python/py-function.exp: Test GDBError -         raise gdb.GdbError("This is a GdbError")
PASS: gdb.python/py-function.exp: Test GDBError - GDBError ()
PASS: gdb.python/py-function.exp: Test GDBError - end
PASS: gdb.python/py-function.exp: Test GdbError.  There should not be a stack trace
PASS: gdb.python/py-function.exp: Test Normal Error - python
PASS: gdb.python/py-function.exp: Test Normal Error - class NormalError(gdb.Function):
PASS: gdb.python/py-function.exp: Test Normal Error -     def __init__(self):
PASS: gdb.python/py-function.exp: Test Normal Error -         gdb.Function.__init__(self, 'normalerror')
PASS: gdb.python/py-function.exp: Test Normal Error -     def invoke(self):
PASS: gdb.python/py-function.exp: Test Normal Error -         raise RuntimeError("This is a Normal Error")
PASS: gdb.python/py-function.exp: Test Normal Error - NormalError ()
PASS: gdb.python/py-function.exp: Test Normal Error - end
PASS: gdb.python/py-function.exp: Test a Runtime error.  There should be a stack trace.
PASS: gdb.python/py-function.exp: input command-calling function - python
PASS: gdb.python/py-function.exp: input command-calling function - class CallCommand(gdb.Function):
PASS: gdb.python/py-function.exp: input command-calling function -     def __init__(self):
PASS: gdb.python/py-function.exp: input command-calling function -         gdb.Function.__init__(self, 'call_command')
PASS: gdb.python/py-function.exp: input command-calling function -     def invoke(self):
PASS: gdb.python/py-function.exp: input command-calling function -         return gdb.execute('print 1', to_string=True)
PASS: gdb.python/py-function.exp: input command-calling function - CallCommand ()
PASS: gdb.python/py-function.exp: input command-calling function - end
PASS: gdb.python/py-function.exp: Setting a value from a function which executes a command.
PASS: gdb.python/py-function.exp: Setting a value from a function which executes a command, again.
Running ../../../master/gdb/testsuite/gdb.python/py-inferior.exp ...
PASS: gdb.python/py-inferior.exp: get inferiors list
PASS: gdb.python/py-inferior.exp: verify inferiors list
PASS: gdb.python/py-inferior.exp: test equality comparison (true)
PASS: gdb.python/py-inferior.exp: test Inferior.num
PASS: gdb.python/py-inferior.exp: test Inferior.pid
PASS: gdb.python/py-inferior.exp: test Inferior.was_attached
PASS: gdb.python/py-inferior.exp: test Inferior.threads
PASS: gdb.python/py-inferior.exp: read str contents
PASS: gdb.python/py-inferior.exp: write str
PASS: gdb.python/py-inferior.exp: ensure str was changed in the inferior
PASS: gdb.python/py-inferior.exp: py start_addr = search_buf.address
PASS: gdb.python/py-inferior.exp: py length = search_buf.type.sizeof
PASS: gdb.python/py-inferior.exp: find string pattern
PASS: gdb.python/py-inferior.exp: pattern not found at end of range
PASS: gdb.python/py-inferior.exp: pattern found at end of range
PASS: gdb.python/py-inferior.exp: py from struct import *
PASS: gdb.python/py-inferior.exp: set int16_search_buf[10] = 0x1234
PASS: gdb.python/py-inferior.exp: py search_buf = gdb.selected_frame ().read_var ('int16_search_buf')
PASS: gdb.python/py-inferior.exp: py start_addr = search_buf.address
PASS: gdb.python/py-inferior.exp: py length = search_buf.type.sizeof
PASS: gdb.python/py-inferior.exp: py pattern = pack('<H',0x1234)
PASS: gdb.python/py-inferior.exp: find 16-bit pattern, with value pattern
PASS: gdb.python/py-inferior.exp: set int32_search_buf[10] = 0x12345678
PASS: gdb.python/py-inferior.exp: py search_buf = gdb.selected_frame ().read_var ('int32_search_buf')
PASS: gdb.python/py-inferior.exp: py start_addr = search_buf.address
PASS: gdb.python/py-inferior.exp: py length = search_buf.type.sizeof
PASS: gdb.python/py-inferior.exp: py pattern = pack('<I',0x12345678)
PASS: gdb.python/py-inferior.exp: find 32-bit pattern, with python pattern
PASS: gdb.python/py-inferior.exp: set int64_search_buf[10] = 0xfedcba9876543210LL
PASS: gdb.python/py-inferior.exp: py search_buf = gdb.selected_frame ().read_var ('int64_search_buf')
PASS: gdb.python/py-inferior.exp: py start_addr = search_buf.address
PASS: gdb.python/py-inferior.exp: py length = search_buf.type.sizeof
PASS: gdb.python/py-inferior.exp: py pattern = pack('<Q', 0xfedcba9876543210)
PASS: gdb.python/py-inferior.exp: find 64-bit pattern, with value pattern
PASS: gdb.python/py-inferior.exp: set *(int8_t*) &search_buf[10] = 0x62
PASS: gdb.python/py-inferior.exp: set *(int16_t*) &search_buf[11] = 0x6363
PASS: gdb.python/py-inferior.exp: set *(int32_t*) &search_buf[13] = 0x64646464
PASS: gdb.python/py-inferior.exp: py search_buf = gdb.selected_frame ().read_var ('search_buf')
PASS: gdb.python/py-inferior.exp: py start_addr = search_buf[0].address
PASS: gdb.python/py-inferior.exp: py pattern1 = pack('B', 0x62)
PASS: gdb.python/py-inferior.exp: py pattern2 = pack('<H', 0x6363)
PASS: gdb.python/py-inferior.exp: py pattern3 = pack('<I', 0x64646464)
PASS: gdb.python/py-inferior.exp: find mixed-sized pattern
PASS: gdb.python/py-inferior.exp: find mixed-sized pattern
PASS: gdb.python/py-inferior.exp: find mixed-sized pattern
PASS: gdb.python/py-inferior.exp: set *(int32_t*) &search_buf[0*16000+100] = 0x12345678
PASS: gdb.python/py-inferior.exp: set *(int32_t*) &search_buf[1*16000+100] = 0x12345678
PASS: gdb.python/py-inferior.exp: py start_addr = gdb.selected_frame ().read_var ('search_buf')
PASS: gdb.python/py-inferior.exp: py end_addr = start_addr + gdb.selected_frame ().read_var ('search_buf_size')
PASS: gdb.python/py-inferior.exp: py pattern = pack('<I', 0x12345678)
PASS: gdb.python/py-inferior.exp: py first = gdb.inferiors()[0].search_memory (start_addr,end_addr - start_addr, pattern)
PASS: gdb.python/py-inferior.exp: search spanning large range 1st result
PASS: gdb.python/py-inferior.exp: py start_addr = first + 1
PASS: gdb.python/py-inferior.exp: py second = gdb.inferiors()[0].search_memory (start_addr, end_addr - start_addr, pattern)
PASS: gdb.python/py-inferior.exp: search spanning large range 2nd result
PASS: gdb.python/py-inferior.exp: py start_addr = second + 1
PASS: gdb.python/py-inferior.exp: py third = gdb.inferiors()[0].search_memory (start_addr, end_addr - start_addr, pattern)
PASS: gdb.python/py-inferior.exp: search spanning large range 3rd result
PASS: gdb.python/py-inferior.exp: set *(int32_t*) &search_buf[16000-1] = 0xfdb97531
PASS: gdb.python/py-inferior.exp: py pattern = pack('<I', 0xfdb97531)
PASS: gdb.python/py-inferior.exp: py start_addr = gdb.selected_frame ().read_var ('search_buf')
PASS: gdb.python/py-inferior.exp: find pattern straddling chunk boundary
PASS: gdb.python/py-inferior.exp: get initial list
PASS: gdb.python/py-inferior.exp: Get inferior list length
PASS: gdb.python/py-inferior.exp: Check inferior validity
PASS: gdb.python/py-inferior.exp: add empty inferior 2
PASS: gdb.python/py-inferior.exp: get new list
PASS: gdb.python/py-inferior.exp: Get inferior list length
PASS: gdb.python/py-inferior.exp: Check inferior validity
PASS: gdb.python/py-inferior.exp: Check inferior validity
PASS: gdb.python/py-inferior.exp: remove-inferiors 2
PASS: gdb.python/py-inferior.exp: Check inferior validity
PASS: gdb.python/py-inferior.exp: Check inferior validity
Running ../../../master/gdb/testsuite/gdb.python/py-infthread.exp ...
PASS: gdb.python/py-infthread.exp: test gdb.selected_thread
PASS: gdb.python/py-infthread.exp: verify InferiorThread object
PASS: gdb.python/py-infthread.exp: test Inferior.num
PASS: gdb.python/py-infthread.exp: test InferiorThread.ptid
PASS: gdb.python/py-infthread.exp: get supplied name of current thread
PASS: gdb.python/py-infthread.exp: set name of current thread
PASS: gdb.python/py-infthread.exp: check name of current thread
PASS: gdb.python/py-infthread.exp: reset name of current thread
PASS: gdb.python/py-infthread.exp: check name of current thread again
PASS: gdb.python/py-infthread.exp: test InferiorThread.is_stopped
PASS: gdb.python/py-infthread.exp: test InferiorThread.is_running
PASS: gdb.python/py-infthread.exp: test InferiorThread.is_exited
PASS: gdb.python/py-infthread.exp: test InferiorThread.is_valid
PASS: gdb.python/py-infthread.exp: kill inferior 1
PASS: gdb.python/py-infthread.exp: test InferiorThread.is_valid
Running ../../../master/gdb/testsuite/gdb.python/py-mi.exp ...
PASS: gdb.python/py-mi.exp: breakpoint at main
PASS: gdb.python/py-mi.exp: mi runto main
PASS: gdb.python/py-mi.exp: run to 283 (set breakpoint)
PASS: gdb.python/py-mi.exp: create container varobj, no pretty-printing
PASS: gdb.python/py-mi.exp: examine container children=0, no pretty-printing
PASS: gdb.python/py-mi.exp: delete varobj
PASS: gdb.python/py-mi.exp: create nscont varobj, no pretty-printing
PASS: gdb.python/py-mi.exp: examine nscont children=0, no pretty-printing
PASS: gdb.python/py-mi.exp: delete varobj
PASS: gdb.python/py-mi.exp: create string_1 varobj
PASS: gdb.python/py-mi.exp: create estring varobj
PASS: gdb.python/py-mi.exp: assign string_1 from string_2
PASS: gdb.python/py-mi.exp: update string varobj after assignment
PASS: gdb.python/py-mi.exp: create container varobj
PASS: gdb.python/py-mi.exp: examine container children=0
PASS: gdb.python/py-mi.exp: next over update 1
PASS: gdb.python/py-mi.exp: varobj update 1
PASS: gdb.python/py-mi.exp: next over update 2
PASS: gdb.python/py-mi.exp: varobj update 2
PASS: gdb.python/py-mi.exp: clear visualizer
PASS: gdb.python/py-mi.exp: varobj update after clearing
PASS: gdb.python/py-mi.exp: choose default visualizer
PASS: gdb.python/py-mi.exp: varobj update after choosing default
PASS: gdb.python/py-mi.exp: choose visualizer using expression
PASS: gdb.python/py-mi.exp: varobj update after choosing via expression
PASS: gdb.python/py-mi.exp: list varobj children after selecting child range
PASS: gdb.python/py-mi.exp: list varobj children after resetting child range
PASS: gdb.python/py-mi.exp: next over update 3
PASS: gdb.python/py-mi.exp: set update range
PASS: gdb.python/py-mi.exp: list children after setting update range
PASS: gdb.python/py-mi.exp: list selected children after setting range
PASS: gdb.python/py-mi.exp: list children after listing selected range
PASS: gdb.python/py-mi.exp: next over update 4
PASS: gdb.python/py-mi.exp: update after next with restricted range
PASS: gdb.python/py-mi.exp: set update range with non-zero start
PASS: gdb.python/py-mi.exp: update varobj with change outside selected range
PASS: gdb.python/py-mi.exp: next over update 5
PASS: gdb.python/py-mi.exp: create second container varobj
PASS: gdb.python/py-mi.exp: update varobj, no children requested
PASS: gdb.python/py-mi.exp: next over update 6
PASS: gdb.python/py-mi.exp: update varobj 2, no children requested
PASS: gdb.python/py-mi.exp: run to 127 (set breakpoint)
PASS: gdb.python/py-mi.exp: create outer varobj
PASS: gdb.python/py-mi.exp: list children of outer
PASS: gdb.python/py-mi.exp: list children of outer.s
PASS: gdb.python/py-mi.exp: next over outer update
PASS: gdb.python/py-mi.exp: update after updating element of outer
PASS: gdb.python/py-mi.exp: run to 206 (set breakpoint)
PASS: gdb.python/py-mi.exp: update after type change
PASS: gdb.python/py-mi.exp: run to 304 (set breakpoint)
PASS: gdb.python/py-mi.exp: create nstype varobj
PASS: gdb.python/py-mi.exp: list children after setting update range
PASS: gdb.python/py-mi.exp: clear visualizer
PASS: gdb.python/py-mi.exp: varobj update after clearing
PASS: gdb.python/py-mi.exp: choose default visualizer
PASS: gdb.python/py-mi.exp: create nstype2 varobj
PASS: gdb.python/py-mi.exp: list children after setting exception flag
PASS: gdb.python/py-mi.exp: breakpoint at main
PASS: gdb.python/py-mi.exp: mi runto main
PASS: gdb.python/py-mi.exp: run to 304 (set breakpoint)
PASS: gdb.python/py-mi.exp: create fake varobj
PASS: gdb.python/py-mi.exp: list children of fake
PASS: gdb.python/py-mi.exp: list children fake.private
PASS: gdb.python/py-mi.exp: Install visualizer on a cplus_fake_child
Running ../../../master/gdb/testsuite/gdb.python/py-objfile-script.exp ...
PASS: gdb.python/py-objfile-script.exp: info auto-load-scripts
PASS: gdb.python/py-objfile-script.exp: b 38
PASS: gdb.python/py-objfile-script.exp: continue
PASS: gdb.python/py-objfile-script.exp: print ss
Running ../../../master/gdb/testsuite/gdb.python/py-objfile.exp ...
PASS: gdb.python/py-objfile.exp: Find a symbol in objfile
PASS: gdb.python/py-objfile.exp: Get backing object file
PASS: gdb.python/py-objfile.exp: Get objfile validity
PASS: gdb.python/py-objfile.exp: Get objfile validity
PASS: gdb.python/py-objfile.exp: Get objfile validity after unload
Running ../../../master/gdb/testsuite/gdb.python/py-parameter.exp ...
PASS: gdb.python/py-parameter.exp: python print gdb.parameter ('directories')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - python
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - class TestParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    """When enabled, test param does something useful. When disabled, does nothing."""
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    show_doc = "Show the state of the boolean test-param"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    set_doc = "Set the state of the boolean test-param"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def get_show_string (self, pvalue):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       return "The state of the Test Parameter is " + pvalue
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def get_set_string (self):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       val = "on"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       if (self.value == False):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -          val = "off"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       return "Test Parameter has been set to " + val
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       super (TestParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       self.value = True
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - test_param = TestParam ('print test-param')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - end
PASS: gdb.python/py-parameter.exp: Test parameter value
PASS: gdb.python/py-parameter.exp: Show parameter on
PASS: gdb.python/py-parameter.exp: Turn off parameter
PASS: gdb.python/py-parameter.exp: Show parameter off
PASS: gdb.python/py-parameter.exp: Test parameter value
PASS: gdb.python/py-parameter.exp: Test show help
PASS: gdb.python/py-parameter.exp: Test set help
PASS: gdb.python/py-parameter.exp: Test general help
PASS: gdb.python/py-parameter.exp: enum gdb parameter - python
PASS: gdb.python/py-parameter.exp: enum gdb parameter - class TestEnumParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    """When set, test param does something useful. When disabled, does nothing."""
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    show_doc = "Show the state of the enum"
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    set_doc = "Set the state of the enum"
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    def get_show_string (self, pvalue):
PASS: gdb.python/py-parameter.exp: enum gdb parameter -       return "The state of the enum is " + pvalue
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    def get_set_string (self):
PASS: gdb.python/py-parameter.exp: enum gdb parameter -       return "The state of the enum has been set to " + self.value
PASS: gdb.python/py-parameter.exp: enum gdb parameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: enum gdb parameter -       super (TestEnumParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_ENUM, ["one", "two"])
PASS: gdb.python/py-parameter.exp: enum gdb parameter -       self.value = "one"
PASS: gdb.python/py-parameter.exp: enum gdb parameter - test_enum_param = TestEnumParam ('print test-enum-param')
PASS: gdb.python/py-parameter.exp: enum gdb parameter - end
PASS: gdb.python/py-parameter.exp: Test enum parameter value
PASS: gdb.python/py-parameter.exp: Show parameter is initial value
PASS: gdb.python/py-parameter.exp: Set enum to two
PASS: gdb.python/py-parameter.exp: Show parameter is new value
PASS: gdb.python/py-parameter.exp: Test enum parameter value
PASS: gdb.python/py-parameter.exp: Set invalid enum parameter
PASS: gdb.python/py-parameter.exp: file gdb parameter - python
PASS: gdb.python/py-parameter.exp: file gdb parameter - class TestFileParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: file gdb parameter -    """When set, test param does something useful. When disabled, does nothing."""
PASS: gdb.python/py-parameter.exp: file gdb parameter -    show_doc = "Show the name of the file"
PASS: gdb.python/py-parameter.exp: file gdb parameter -    set_doc = "Set the name of the file"
PASS: gdb.python/py-parameter.exp: file gdb parameter -    def get_show_string (self, pvalue):
PASS: gdb.python/py-parameter.exp: file gdb parameter -       return "The name of the file is " + pvalue
PASS: gdb.python/py-parameter.exp: file gdb parameter -    def get_set_string (self):
PASS: gdb.python/py-parameter.exp: file gdb parameter -       return "The name of the file has been changed to " + self.value
PASS: gdb.python/py-parameter.exp: file gdb parameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: file gdb parameter -       super (TestFileParam, self).__init__ (name, gdb.COMMAND_FILES, gdb.PARAM_FILENAME)
PASS: gdb.python/py-parameter.exp: file gdb parameter -       self.value = "foo.txt"
PASS: gdb.python/py-parameter.exp: file gdb parameter - test_file_param = TestFileParam ('test-file-param')
PASS: gdb.python/py-parameter.exp: file gdb parameter - end
PASS: gdb.python/py-parameter.exp: Test file parameter value
PASS: gdb.python/py-parameter.exp: Show initial file value
PASS: gdb.python/py-parameter.exp: Set new file parameter
PASS: gdb.python/py-parameter.exp: Show new file value
PASS: gdb.python/py-parameter.exp: Test new file parameter value
PASS: gdb.python/py-parameter.exp: set test-file-param
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - python
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - class TestUndocParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def get_show_string (self, pvalue):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       return "The state of the Test Parameter is " + pvalue
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def get_set_string (self):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       val = "on"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       if (self.value == False):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -          val = "off"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       return "Test Parameter has been set to " + val
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       super (TestUndocParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       self.value = True
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - test_undoc_param = TestUndocParam ('print test-undoc-param')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - end
PASS: gdb.python/py-parameter.exp: Show parameter on
PASS: gdb.python/py-parameter.exp: Turn off parameter
PASS: gdb.python/py-parameter.exp: Show parameter off
PASS: gdb.python/py-parameter.exp: Test parameter value
PASS: gdb.python/py-parameter.exp: Test show help
PASS: gdb.python/py-parameter.exp: Test set help
PASS: gdb.python/py-parameter.exp: Test general help
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - python
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - class TestNodocParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       super (TestNodocParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       self.value = True
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - test_nodoc_param = TestNodocParam ('print test-nodoc-param')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - end
PASS: gdb.python/py-parameter.exp: Show parameter on
PASS: gdb.python/py-parameter.exp: Turn off parameter
PASS: gdb.python/py-parameter.exp: Show parameter off
PASS: gdb.python/py-parameter.exp: Test parameter value
PASS: gdb.python/py-parameter.exp: Test show help
PASS: gdb.python/py-parameter.exp: Test set help
PASS: gdb.python/py-parameter.exp: Test general help
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - python
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - class TestParam (gdb.Parameter):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    """When enabled, test param does something useful. When disabled, does nothing."""
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    show_doc = "State of the Test Parameter"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    set_doc = "Set the state of the Test Parameter"
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -    def __init__ (self, name):
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       super (TestParam, self).__init__ (name, gdb.COMMAND_DATA, gdb.PARAM_BOOLEAN)
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter -       self.value = True
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - test_param = TestParam ('print test-param')
PASS: gdb.python/py-parameter.exp: Simple gdb booleanparameter - end
PASS: gdb.python/py-parameter.exp: Test parameter value
PASS: gdb.python/py-parameter.exp: Show parameter on
PASS: gdb.python/py-parameter.exp: Turn off parameter
PASS: gdb.python/py-parameter.exp: Show parameter off
PASS: gdb.python/py-parameter.exp: Test parameter value
PASS: gdb.python/py-parameter.exp: Test show help
PASS: gdb.python/py-parameter.exp: Test set help
PASS: gdb.python/py-parameter.exp: Test general help
Running ../../../master/gdb/testsuite/gdb.python/py-pp-maint.exp ...
PASS: gdb.python/py-pp-maint.exp: b 67
PASS: gdb.python/py-pp-maint.exp: continue
PASS: gdb.python/py-pp-maint.exp: info pretty-printer
PASS: gdb.python/py-pp-maint.exp: info pretty-printer global .*function
PASS: gdb.python/py-pp-maint.exp: info pretty-printer .* pp-test
PASS: gdb.python/py-pp-maint.exp: print flt enabled #1
PASS: gdb.python/py-pp-maint.exp: print ss enabled #1
PASS: gdb.python/py-pp-maint.exp: disable pretty-printer
PASS: gdb.python/py-pp-maint.exp: enable pretty-printer
PASS: gdb.python/py-pp-maint.exp: disable pretty-printer global
PASS: gdb.python/py-pp-maint.exp: enable pretty-printer
PASS: gdb.python/py-pp-maint.exp: disable pretty-printer global lookup_function_lookup_test
PASS: gdb.python/py-pp-maint.exp: disable pretty-printer global pp-test;.*
PASS: gdb.python/py-pp-maint.exp: info pretty-printer global .*function
PASS: gdb.python/py-pp-maint.exp: info pretty-printer .* pp-test
PASS: gdb.python/py-pp-maint.exp: print flt disabled
PASS: gdb.python/py-pp-maint.exp: print ss disabled
PASS: gdb.python/py-pp-maint.exp: enable pretty-printer global lookup_function_lookup_test
PASS: gdb.python/py-pp-maint.exp: enable pretty-printer global pp-test
PASS: gdb.python/py-pp-maint.exp: enable pretty-printer global pp-test;.*ss.*
PASS: gdb.python/py-pp-maint.exp: enable pretty-printer global pp-test;.*s.*
PASS: gdb.python/py-pp-maint.exp: info pretty-printer
PASS: gdb.python/py-pp-maint.exp: print flt re-enabled
PASS: gdb.python/py-pp-maint.exp: print ss re-enabled
Running ../../../master/gdb/testsuite/gdb.python/py-prettyprint.exp ...
PASS: gdb.python/py-prettyprint.exp: set print pretty on
PASS: gdb.python/py-prettyprint.exp: b 304
PASS: gdb.python/py-prettyprint.exp: continue
PASS: gdb.python/py-prettyprint.exp: python execfile ('py-prettyprint.py')
PASS: gdb.python/py-prettyprint.exp: print ss
PASS: gdb.python/py-prettyprint.exp: print ssa[1]
PASS: gdb.python/py-prettyprint.exp: print ssa
PASS: gdb.python/py-prettyprint.exp: print arraystruct
PASS: gdb.python/py-prettyprint.exp: print ns2
PASS: gdb.python/py-prettyprint.exp: print x
PASS: gdb.python/py-prettyprint.exp: print cstring
PASS: gdb.python/py-prettyprint.exp: print estring
PASS: gdb.python/py-prettyprint.exp: python pp_ls_encoding = 'UTF-8'
PASS: gdb.python/py-prettyprint.exp: print estring2
PASS: gdb.python/py-prettyprint.exp: print hint_error
PASS: gdb.python/py-prettyprint.exp: print c
PASS: gdb.python/py-prettyprint.exp: print nstype
PASS: gdb.python/py-prettyprint.exp: set print pretty off
PASS: gdb.python/py-prettyprint.exp: print nstype on one line
PASS: gdb.python/py-prettyprint.exp: continue until exit
PASS: gdb.python/py-prettyprint.exp: set print pretty on
PASS: gdb.python/py-prettyprint.exp: b 304
PASS: gdb.python/py-prettyprint.exp: continue
PASS: gdb.python/py-prettyprint.exp: python execfile ('py-prettyprint.py')
PASS: gdb.python/py-prettyprint.exp: print ss
PASS: gdb.python/py-prettyprint.exp: print ssa[1]
PASS: gdb.python/py-prettyprint.exp: print ssa
PASS: gdb.python/py-prettyprint.exp: print arraystruct
PASS: gdb.python/py-prettyprint.exp: print cps
PASS: gdb.python/py-prettyprint.exp: print cpss
PASS: gdb.python/py-prettyprint.exp: print cpssa[0]
PASS: gdb.python/py-prettyprint.exp: print cpssa[1]
PASS: gdb.python/py-prettyprint.exp: print cpssa
PASS: gdb.python/py-prettyprint.exp: print sss
PASS: gdb.python/py-prettyprint.exp: print ref
PASS: gdb.python/py-prettyprint.exp: print derived
PASS: gdb.python/py-prettyprint.exp: print ns
PASS: gdb.python/py-prettyprint.exp:
PASS: gdb.python/py-prettyprint.exp: print ns
PASS: gdb.python/py-prettyprint.exp:
PASS: gdb.python/py-prettyprint.exp: print ns
PASS: gdb.python/py-prettyprint.exp:
PASS: gdb.python/py-prettyprint.exp: print ns2
PASS: gdb.python/py-prettyprint.exp: print x
PASS: gdb.python/py-prettyprint.exp: print cstring
PASS: gdb.python/py-prettyprint.exp: print estring
PASS: gdb.python/py-prettyprint.exp: python pp_ls_encoding = 'UTF-8'
PASS: gdb.python/py-prettyprint.exp: print estring2
PASS: gdb.python/py-prettyprint.exp: print hint_error
PASS: gdb.python/py-prettyprint.exp: print c
PASS: gdb.python/py-prettyprint.exp: print nstype
PASS: gdb.python/py-prettyprint.exp: set print pretty off
PASS: gdb.python/py-prettyprint.exp: print nstype on one line
PASS: gdb.python/py-prettyprint.exp: continue until exit
PASS: gdb.python/py-prettyprint.exp: b 304
PASS: gdb.python/py-prettyprint.exp: continue
PASS: gdb.python/py-prettyprint.exp: python execfile ('py-prettyprint.py')
PASS: gdb.python/py-prettyprint.exp: print ss enabled #1
PASS: gdb.python/py-prettyprint.exp: python disable_lookup_function ()
PASS: gdb.python/py-prettyprint.exp: print ss disabled
PASS: gdb.python/py-prettyprint.exp: python enable_lookup_function ()
PASS: gdb.python/py-prettyprint.exp: print ss enabled #2
Running ../../../master/gdb/testsuite/gdb.python/py-progspace.exp ...
PASS: gdb.python/py-progspace.exp: current progspace filename (None)
PASS: gdb.python/py-progspace.exp: python print gdb.progspaces()
PASS: gdb.python/py-progspace.exp: current progspace filename (py-progspace)
Running ../../../master/gdb/testsuite/gdb.python/py-section-script.exp ...
PASS: gdb.python/py-section-script.exp: info auto-load-scripts
PASS: gdb.python/py-section-script.exp: info auto-load-scripts py-section-script
PASS: gdb.python/py-section-script.exp: info auto-load-scripts no-script-matches-this
PASS: gdb.python/py-section-script.exp: b 51
PASS: gdb.python/py-section-script.exp: continue
PASS: gdb.python/py-section-script.exp: print ss
Running ../../../master/gdb/testsuite/gdb.python/py-shared.exp ...
PASS: gdb.python/py-shared.exp: func1 address
PASS: gdb.python/py-shared.exp: Aquire func1 address
PASS: gdb.python/py-shared.exp: test func1 solib location
PASS: gdb.python/py-shared.exp: main address
PASS: gdb.python/py-shared.exp: Aquire main address
PASS: gdb.python/py-shared.exp: test main solib location
Running ../../../master/gdb/testsuite/gdb.python/py-symbol.exp ...
PASS: gdb.python/py-symbol.exp: Lookup main
PASS: gdb.python/py-symbol.exp: Test main_func.is_function
PASS: gdb.python/py-symbol.exp: Test lookup_global_symbol("junk")
PASS: gdb.python/py-symbol.exp: continue to breakpoint: Block break here.
PASS: gdb.python/py-symbol.exp: Test arg.is_variable
PASS: gdb.python/py-symbol.exp: Test arg.is_constant
PASS: gdb.python/py-symbol.exp: Test arg.is_argument
PASS: gdb.python/py-symbol.exp: Test arg.is_function
PASS: gdb.python/py-symbol.exp: Test func.is_variable
PASS: gdb.python/py-symbol.exp: Test func.is_constant
PASS: gdb.python/py-symbol.exp: Test func.is_argument
PASS: gdb.python/py-symbol.exp: Test func.is_function
PASS: gdb.python/py-symbol.exp: Test func.name
PASS: gdb.python/py-symbol.exp: Test func.print_name
PASS: gdb.python/py-symbol.exp: Test func.linkage_name
PASS: gdb.python/py-symbol.exp: Test func.addr_class
PASS: gdb.python/py-symbol.exp: continue to breakpoint: Break at end.
PASS: gdb.python/py-symbol.exp: Test a.is_variable
PASS: gdb.python/py-symbol.exp: Test a.is_constant
PASS: gdb.python/py-symbol.exp: Test a.is_argument
PASS: gdb.python/py-symbol.exp: Test a.is_function
PASS: gdb.python/py-symbol.exp: Test a.addr_class
PASS: gdb.python/py-symbol.exp: Test t.is_variable
PASS: gdb.python/py-symbol.exp: Test t.is_constant
PASS: gdb.python/py-symbol.exp: Test t.is_argument
PASS: gdb.python/py-symbol.exp: Test t.is_function
PASS: gdb.python/py-symbol.exp: Test t.addr_class
PASS: gdb.python/py-symbol.exp: Get symtab
PASS: gdb.python/py-symbol.exp: continue to breakpoint: Break in class.
PASS: gdb.python/py-symbol.exp: Test func.is_variable
PASS: gdb.python/py-symbol.exp: Test func.is_constant
PASS: gdb.python/py-symbol.exp: Test func.is_argument
PASS: gdb.python/py-symbol.exp: Test func.is_function
PASS: gdb.python/py-symbol.exp: Test func.name
PASS: gdb.python/py-symbol.exp: Test func.print_name
PASS: gdb.python/py-symbol.exp: Test func.linkage_name
PASS: gdb.python/py-symbol.exp: Test func.addr_class
PASS: gdb.python/py-symbol.exp: continue to breakpoint: Break at end.
PASS: gdb.python/py-symbol.exp: Test symbol validity
PASS: gdb.python/py-symbol.exp: Test symbol validity
Running ../../../master/gdb/testsuite/gdb.python/py-symtab.exp ...
PASS: gdb.python/py-symtab.exp: continue to breakpoint: Block break here.
PASS: gdb.python/py-symtab.exp: Test symtab
PASS: gdb.python/py-symtab.exp: Test sal.pc
PASS: gdb.python/py-symtab.exp: Test sal.line
PASS: gdb.python/py-symtab.exp: Test sal.is_valid
PASS: gdb.python/py-symtab.exp: Test symtab.filename
PASS: gdb.python/py-symtab.exp: Test symtab.objfile
PASS: gdb.python/py-symtab.exp: Test symtab.fullname
PASS: gdb.python/py-symtab.exp: Test symtab.is_valid()
PASS: gdb.python/py-symtab.exp: Test sal.is_valid
PASS: gdb.python/py-symtab.exp: Test symtab.is_valid()
Running ../../../master/gdb/testsuite/gdb.python/py-template.exp ...
PASS: gdb.python/py-template.exp: print foo
PASS: gdb.python/py-template.exp: python foo = gdb.history(0)
PASS: gdb.python/py-template.exp: const int
PASS: gdb.python/py-template.exp: print foo
PASS: gdb.python/py-template.exp: python foo = gdb.history(0)
PASS: gdb.python/py-template.exp: volatile int
PASS: gdb.python/py-template.exp: print foo
PASS: gdb.python/py-template.exp: python foo = gdb.history(0)
PASS: gdb.python/py-template.exp: const int &
PASS: gdb.python/py-template.exp: print foo
PASS: gdb.python/py-template.exp: python foo = gdb.history(0)
PASS: gdb.python/py-template.exp: volatile int &
PASS: gdb.python/py-template.exp: print foo
PASS: gdb.python/py-template.exp: python foo = gdb.history(0)
PASS: gdb.python/py-template.exp: volatile int * const
PASS: gdb.python/py-template.exp: print foo
PASS: gdb.python/py-template.exp: python foo = gdb.history(0)
PASS: gdb.python/py-template.exp: volatile int * const *
PASS: gdb.python/py-template.exp: print foo
PASS: gdb.python/py-template.exp: python foo = gdb.history(0)
PASS: gdb.python/py-template.exp: const int * volatile
PASS: gdb.python/py-template.exp: print foo
PASS: gdb.python/py-template.exp: python foo = gdb.history(0)
PASS: gdb.python/py-template.exp: const int * volatile * const * volatile *
Running ../../../master/gdb/testsuite/gdb.python/py-type.exp ...
PASS: gdb.python/py-type.exp: continue to breakpoint: break to inspect struct and array.
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from history
PASS: gdb.python/py-type.exp: get fields
PASS: gdb.python/py-type.exp: Check number of fields
PASS: gdb.python/py-type.exp: Check structure field a name
PASS: gdb.python/py-type.exp: Check structure field b name
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from  history
PASS: gdb.python/py-type.exp: python fields = ar.type.fields()
PASS: gdb.python/py-type.exp: Check the number of fields
PASS: gdb.python/py-type.exp: Check array field type
PASS: gdb.python/py-type.exp: cast to array with one argument
PASS: gdb.python/py-type.exp: cast to array with two arguments
PASS: gdb.python/py-type.exp: python print ar[0].type == ar[0].type
PASS: gdb.python/py-type.exp: continue to breakpoint: break to inspect struct and array.
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from history
PASS: gdb.python/py-type.exp: get fields
PASS: gdb.python/py-type.exp: Check number of fields
PASS: gdb.python/py-type.exp: Check class field c name
PASS: gdb.python/py-type.exp: Check class field d name
PASS: gdb.python/py-type.exp: python print c.type == gdb.parse_and_eval('d').type
PASS: gdb.python/py-type.exp: python print c.type == gdb.parse_and_eval('d').type.fields()[0].type
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from history
PASS: gdb.python/py-type.exp: get fields
PASS: gdb.python/py-type.exp: Check number of fields
PASS: gdb.python/py-type.exp: Check structure field a name
PASS: gdb.python/py-type.exp: Check structure field b name
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from  history
PASS: gdb.python/py-type.exp: python fields = ar.type.fields()
PASS: gdb.python/py-type.exp: Check the number of fields
PASS: gdb.python/py-type.exp: Check array field type
PASS: gdb.python/py-type.exp: cast to array with one argument
PASS: gdb.python/py-type.exp: cast to array with two arguments
PASS: gdb.python/py-type.exp: python print ar[0].type == ar[0].type
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from  history
PASS: gdb.python/py-type.exp: get value from history
PASS: gdb.python/py-type.exp: Check the number of fields
PASS: gdb.python/py-type.exp: Check base class
PASS: gdb.python/py-type.exp: Check base class
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from history
PASS: gdb.python/py-type.exp: Check correct tuple length
PASS: gdb.python/py-type.exp: Check low range
PASS: gdb.python/py-type.exp: Check high range
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from  history
PASS: gdb.python/py-type.exp: get fields
PASS: gdb.python/py-type.exp: Check range type low bound
PASS: gdb.python/py-type.exp: Check range type high bound
PASS: gdb.python/py-type.exp: print value
PASS: gdb.python/py-type.exp: get value from history
PASS: gdb.python/py-type.exp: Check range for non ranged type.
PASS: gdb.python/py-type.exp: get type of temvar
PASS: gdb.python/py-type.exp: python print ttype.template_argument(0)
PASS: gdb.python/py-type.exp: python print isinstance(ttype.template_argument(0), gdb.Type)
PASS: gdb.python/py-type.exp: python print ttype.template_argument(1)
PASS: gdb.python/py-type.exp: python print isinstance(ttype.template_argument(1), gdb.Value)
KFAIL: gdb.python/py-type.exp: python print ttype.template_argument(2) (PRMS: gcc/41736)
Running ../../../master/gdb/testsuite/gdb.python/py-value.exp ...
PASS: gdb.python/py-value.exp: create boolean value
PASS: gdb.python/py-value.exp: create integer value
PASS: gdb.python/py-value.exp: create long value
PASS: gdb.python/py-value.exp: create double value
PASS: gdb.python/py-value.exp: create 8-bit string value
PASS: gdb.python/py-value.exp: print 8-bit string
PASS: gdb.python/py-value.exp: verify type of 8-bit string
PASS: gdb.python/py-value.exp: create unicode value
PASS: gdb.python/py-value.exp: print Unicode string
PASS: gdb.python/py-value.exp: verify type of unicode string
PASS: gdb.python/py-value.exp: Test address attribute in non-addressable value
PASS: gdb.python/py-value.exp: add two integer values
PASS: gdb.python/py-value.exp: verify type of integer add result
PASS: gdb.python/py-value.exp: add two double values
PASS: gdb.python/py-value.exp: subtract two integer values
PASS: gdb.python/py-value.exp: subtract two double values
PASS: gdb.python/py-value.exp: multiply two integer values
PASS: gdb.python/py-value.exp: multiply two double values
PASS: gdb.python/py-value.exp: divide two integer values
PASS: gdb.python/py-value.exp: divide two double values
PASS: gdb.python/py-value.exp: take remainder of two integer values
PASS: gdb.python/py-value.exp: integer value raised to the power of another integer value
PASS: gdb.python/py-value.exp: double value raised to the power of integer value
PASS: gdb.python/py-value.exp: negated integer value
PASS: gdb.python/py-value.exp: positive integer value
PASS: gdb.python/py-value.exp: negated double value
PASS: gdb.python/py-value.exp: positive double value
PASS: gdb.python/py-value.exp: absolute of integer value
PASS: gdb.python/py-value.exp: absolute of double value
PASS: gdb.python/py-value.exp: subtract integer value from python integer
PASS: gdb.python/py-value.exp: verify type of mixed integer subtraction result
PASS: gdb.python/py-value.exp: add double value with python float
PASS: gdb.python/py-value.exp: subtract python integer from integer value
PASS: gdb.python/py-value.exp: add python float with double value
PASS: gdb.python/py-value.exp: print evalue
PASS: gdb.python/py-value.exp: python evalue = gdb.history (0)
PASS: gdb.python/py-value.exp: python print int (evalue)
PASS: gdb.python/py-value.exp: add pointer value with python integer
PASS: gdb.python/py-value.exp: subtract python integer from pointer value
PASS: gdb.python/py-value.exp: subtract two pointer values
PASS: gdb.python/py-value.exp: catch error in python type conversion
PASS: gdb.python/py-value.exp: catch throw of GDB error
PASS: gdb.python/py-value.exp: define function to test booleans - python
PASS: gdb.python/py-value.exp: define function to test booleans - def test_bool (val):
PASS: gdb.python/py-value.exp: define function to test booleans -   if val:
PASS: gdb.python/py-value.exp: define function to test booleans -     print 'yay'
PASS: gdb.python/py-value.exp: define function to test booleans -   else:
PASS: gdb.python/py-value.exp: define function to test booleans -     print 'nay'
PASS: gdb.python/py-value.exp: define function to test booleans - end
PASS: gdb.python/py-value.exp: check evaluation of true boolean value in expression
PASS: gdb.python/py-value.exp: check evaluation of false boolean value in expression
PASS: gdb.python/py-value.exp: check evaluation of true integer value in expression
PASS: gdb.python/py-value.exp: check evaluation of false integer value in expression
PASS: gdb.python/py-value.exp: check evaluation of true integer value in expression
PASS: gdb.python/py-value.exp: check evaluation of false integer value in expression
PASS: gdb.python/py-value.exp: less than, equal
PASS: gdb.python/py-value.exp: less than, less
PASS: gdb.python/py-value.exp: less than, greater
PASS: gdb.python/py-value.exp: less than, None
PASS: gdb.python/py-value.exp: less or equal, equal
PASS: gdb.python/py-value.exp: less or equal, less
PASS: gdb.python/py-value.exp: less or equal, greater
PASS: gdb.python/py-value.exp: less or equal, None
PASS: gdb.python/py-value.exp: equality of gdb.Values
PASS: gdb.python/py-value.exp: inequality of gdb.Values
PASS: gdb.python/py-value.exp: equality of gdb.Value with Python value
PASS: gdb.python/py-value.exp: inequality of gdb.Value with Python value
PASS: gdb.python/py-value.exp: inequality of gdb.Value with None
PASS: gdb.python/py-value.exp: inequality, false
PASS: gdb.python/py-value.exp: inequality, true
PASS: gdb.python/py-value.exp: inequality, None
PASS: gdb.python/py-value.exp: greater than, equal
PASS: gdb.python/py-value.exp: greater than, less
PASS: gdb.python/py-value.exp: greater than, greater
PASS: gdb.python/py-value.exp: greater than, None
PASS: gdb.python/py-value.exp: greater or equal, equal
PASS: gdb.python/py-value.exp: greater or equal, less
PASS: gdb.python/py-value.exp: greater or equal, greater
PASS: gdb.python/py-value.exp: greater or equal, None
PASS: gdb.python/py-value.exp: py-value in file.filename
PASS: gdb.python/py-value.exp: python print gdb.objfiles()[0].pretty_printers
PASS: gdb.python/py-value.exp: python gdb.objfiles()[0].pretty_printers = 0
PASS: gdb.python/py-value.exp: parse_and_eval constant test
PASS: gdb.python/py-value.exp: parse_and_eval simple expression test
PASS: gdb.python/py-value.exp: parse_and_eval type test
PASS: gdb.python/py-value.exp: Simple Python value dictionary - python
PASS: gdb.python/py-value.exp: Simple Python value dictionary - one = gdb.Value(1)
PASS: gdb.python/py-value.exp: Simple Python value dictionary - two = gdb.Value(2)
PASS: gdb.python/py-value.exp: Simple Python value dictionary - three = gdb.Value(3)
PASS: gdb.python/py-value.exp: Simple Python value dictionary - vdict = {one:"one str",two:"two str",three:"three str"}
PASS: gdb.python/py-value.exp: Simple Python value dictionary - end
PASS: gdb.python/py-value.exp: Test dictionary hash
PASS: gdb.python/py-value.exp: Test dictionary hash
PASS: gdb.python/py-value.exp: Test dictionary hash
PASS: gdb.python/py-value.exp: Test inbuilt hash
PASS: gdb.python/py-value.exp: continue to breakpoint: break to inspect struct and union
PASS: gdb.python/py-value.exp: get value from history
PASS: gdb.python/py-value.exp: access element inside struct using 8-bit string name
PASS: gdb.python/py-value.exp: access element inside struct using unicode name
PASS: gdb.python/py-value.exp: dereference value
PASS: gdb.python/py-value.exp: verify dereferenced value
PASS: gdb.python/py-value.exp: Test is_optimized_out attribute
PASS: gdb.python/py-value.exp: Test address attribute
PASS: gdb.python/py-value.exp: python print gdb.parse_and_eval('*(int*)0')
PASS: gdb.python/py-value.exp: print st
PASS: gdb.python/py-value.exp: get value from history
PASS: gdb.python/py-value.exp: Test string with no length
PASS: gdb.python/py-value.exp: Test string (length = -1) is all of the string
PASS: gdb.python/py-value.exp: python print st.string (length = 6)
PASS: gdb.python/py-value.exp: Test string (length = 0) is empty
PASS: gdb.python/py-value.exp: Test length is 0
PASS: gdb.python/py-value.exp: print nullst
PASS: gdb.python/py-value.exp: get value from history
PASS: gdb.python/py-value.exp: Test string to first null
PASS: gdb.python/py-value.exp: get string beyond null
PASS: gdb.python/py-value.exp: python print repr(nullst)
PASS: gdb.python/py-value.exp: p/x fp1
PASS: gdb.python/py-value.exp: get value from history
PASS: gdb.python/py-value.exp: python fp1 = fp1.dereference()
PASS: gdb.python/py-value.exp: python result = fp1()
PASS: gdb.python/py-value.exp: python print result
PASS: gdb.python/py-value.exp: p/x fp2
PASS: gdb.python/py-value.exp: get value from history
PASS: gdb.python/py-value.exp: python fp2 = fp2.dereference()
PASS: gdb.python/py-value.exp: python result2 = fp2(10,20)
PASS: gdb.python/py-value.exp: python print result2
PASS: gdb.python/py-value.exp: p i
PASS: gdb.python/py-value.exp: get value from history
PASS: gdb.python/py-value.exp: python result3 = i()
PASS: gdb.python/py-value.exp: p/x fp2
PASS: gdb.python/py-value.exp: get value from history
PASS: gdb.python/py-value.exp: python fp3 = fp3.dereference()
PASS: gdb.python/py-value.exp: python result2 = fp3(10)
PASS: gdb.python/py-value.exp: print sptr
PASS: gdb.python/py-value.exp: Get value from history
PASS: gdb.python/py-value.exp: Aquire lazy string
PASS: gdb.python/py-value.exp: Test type name equality
PASS: gdb.python/py-value.exp: Test type name equality
PASS: gdb.python/py-value.exp: print sn
PASS: gdb.python/py-value.exp: Get value from history
PASS: gdb.python/py-value.exp: Test lazy string
PASS: gdb.python/py-value.exp: Succesfully create a lazy string
PASS: gdb.python/py-value.exp: Test lazy string length
PASS: gdb.python/py-value.exp: Test lazy string address
PASS: gdb.python/py-value.exp: create PTR type
PASS: gdb.python/py-value.exp: kill the inferior
PASS: gdb.python/py-value.exp: Discard the symbols
PASS: gdb.python/py-value.exp: cast arg0 to PTR
PASS: gdb.python/py-value.exp: delete PTR type
PASS: gdb.python/py-value.exp: print value's type
PASS: gdb.python/py-value.exp: continue to breakpoint: break to inspect pointer by reference
PASS: gdb.python/py-value.exp: Obtain address
PASS: gdb.python/py-value.exp: Obtains value from GDB
PASS: gdb.python/py-value.exp: Check pointer passed as reference
PASS: gdb.python/py-value.exp: python print bool(gdb.parse_and_eval('base').dynamic_cast(gdb.lookup_type('Derived').pointer()))
PASS: gdb.python/py-value.exp: python print gdb.parse_and_eval('base').dynamic_type
PASS: gdb.python/py-value.exp: python print gdb.parse_and_eval('5').dynamic_type
PASS: gdb.python/py-value.exp: continue to breakpoint: break to inspect struct and union
PASS: gdb.python/py-value.exp: Create a value for subscript test
PASS: gdb.python/py-value.exp: Create a value for subscript test
PASS: gdb.python/py-value.exp: Baseline print of a Python value
PASS: gdb.python/py-value.exp: Attempt to access an integer with a subscript
PASS: gdb.python/py-value.exp: Baseline print of a Python value
PASS: gdb.python/py-value.exp: Attempt to access a string with a subscript
PASS: gdb.python/py-value.exp: Build pointer to array
PASS: gdb.python/py-value.exp:
PASS: gdb.python/py-value.exp: Access array via pointer with int subscript
PASS: gdb.python/py-value.exp: Access array via pointer with value subscript
PASS: gdb.python/py-value.exp: Attempt to access an integer with a subscript
PASS: gdb.python/py-value.exp: Build array
PASS: gdb.python/py-value.exp:
PASS: gdb.python/py-value.exp: Test multiple subscript
PASS: gdb.python/py-value.exp: continue to breakpoint: break to inspect struct and union
PASS: gdb.python/py-value.exp: Create a value for subscript test
PASS: gdb.python/py-value.exp: Create a value for subscript test
PASS: gdb.python/py-value.exp: Baseline print of a Python value
PASS: gdb.python/py-value.exp: Attempt to access an integer with a subscript
PASS: gdb.python/py-value.exp: Baseline print of a Python value
PASS: gdb.python/py-value.exp: Attempt to access a string with a subscript
PASS: gdb.python/py-value.exp: Build pointer to array
PASS: gdb.python/py-value.exp:
PASS: gdb.python/py-value.exp: Access array via pointer with int subscript
PASS: gdb.python/py-value.exp: Access array via pointer with value subscript
PASS: gdb.python/py-value.exp: Attempt to access an integer with a subscript
PASS: gdb.python/py-value.exp: Build array
PASS: gdb.python/py-value.exp:
PASS: gdb.python/py-value.exp: Test multiple subscript
Running ../../../master/gdb/testsuite/gdb.python/python.exp ...
PASS: gdb.python/python.exp: multi-line python command - python
PASS: gdb.python/python.exp: multi-line python command - print 23
PASS: gdb.python/python.exp: multi-line python command - end
PASS: gdb.python/python.exp: show python command - define zzq
PASS: gdb.python/python.exp: show python command - python
PASS: gdb.python/python.exp: show python command - print 23
PASS: gdb.python/python.exp: show python command - end
PASS: gdb.python/python.exp: show python command - end
PASS: gdb.python/python.exp: show python command - show user zzq
PASS: gdb.python/python.exp: indented multi-line python command - python
PASS: gdb.python/python.exp: indented multi-line python command - def foo ():
PASS: gdb.python/python.exp: indented multi-line python command -   print 'hello, world!'
PASS: gdb.python/python.exp: indented multi-line python command - foo ()
PASS: gdb.python/python.exp: indented multi-line python command - end
PASS: gdb.python/python.exp: source ../../../master/gdb/testsuite/gdb.python/source2.py
PASS: gdb.python/python.exp: python print gdb.current_objfile()
PASS: gdb.python/python.exp: python print gdb.objfiles()
PASS: gdb.python/python.exp: pythonX.Y/lib-dynload/*.so
PASS: gdb.python/python.exp: python x = gdb.execute('printf "%d", 23', to_string = True)
PASS: gdb.python/python.exp: python print x
PASS: gdb.python/python.exp: post event insertion - python
PASS: gdb.python/python.exp: post event insertion - someVal = 0
PASS: gdb.python/python.exp: post event insertion - class Foo(object):
PASS: gdb.python/python.exp: post event insertion -   def __call__(self):
PASS: gdb.python/python.exp: post event insertion -     global someVal
PASS: gdb.python/python.exp: post event insertion -     someVal += 1
PASS: gdb.python/python.exp: post event insertion - gdb.post_event(Foo())
PASS: gdb.python/python.exp: post event insertion - end
PASS: gdb.python/python.exp: test post event execution
PASS: gdb.python/python.exp: Test non callable class
PASS: gdb.python/python.exp: show height
PASS: gdb.python/python.exp: set height 10
PASS: gdb.python/python.exp: verify pagination beforehand
PASS: gdb.python/python.exp: verify pagination beforehand: q
PASS: gdb.python/python.exp: gdb.execute does not page
PASS: gdb.python/python.exp: verify pagination afterwards
PASS: gdb.python/python.exp: verify pagination afterwards: q
PASS: gdb.python/python.exp: set height 0
PASS: gdb.python/python.exp: collect help from uiout
PASS: gdb.python/python.exp: verify help to uiout
PASS: gdb.python/python.exp: Attempt to aquire thread with no inferior
PASS: gdb.python/python.exp: Ensure that no threads are returned
PASS: gdb.python/python.exp: test decode_line no source named main
PASS: gdb.python/python.exp: test decode_line current location
PASS: gdb.python/python.exp: Test decode_line current location
PASS: gdb.python/python.exp: Test decode_line expression parse
PASS: gdb.python/python.exp: Test decode_line current location
PASS: gdb.python/python.exp: Test decode_line current locationn filename
PASS: gdb.python/python.exp: Test decode_line current location line number
PASS: gdb.python/python.exp: test decode_line python.c:26
PASS: gdb.python/python.exp: Test decode_line python.c:26 length
PASS: gdb.python/python.exp: Test decode_line expression parse
PASS: gdb.python/python.exp: Test decode_line python.c:26 length
PASS: gdb.python/python.exp: Test decode_line python.c:26 filename
PASS: gdb.python/python.exp: Test decode_line python.c:26 line number
PASS: gdb.python/python.exp: test decode_line randomfunc
PASS: gdb.python/python.exp: test decode_line func1()
PASS: gdb.python/python.exp: Test decode_line func1 length
PASS: gdb.python/python.exp: Test decode_line func1 length
PASS: gdb.python/python.exp: Test decode_line func1 filename
PASS: gdb.python/python.exp: Test decode_line func1 line number
PASS: gdb.python/python.exp: Test stderr location
PASS: gdb.python/python.exp: Test stdout location
PASS: gdb.python/python.exp: Test default write
PASS: gdb.python/python.exp: Test stderr write
PASS: gdb.python/python.exp: Test stdout write
PASS: gdb.python/python.exp: Test stdlog write
Running ../../../master/gdb/testsuite/gdb.reverse/break-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/break-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/consecutive-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/consecutive-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/finish-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/finish-reverse-bkpt.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/finish-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/i386-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/i386-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/i386-sse-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/i387-env-reverse.exp ...
PASS: gdb.reverse/i387-env-reverse.exp: Turn on process record
PASS: gdb.reverse/i387-env-reverse.exp: record to end of main
PASS: gdb.reverse/i387-env-reverse.exp: set reverse direction
PASS: gdb.reverse/i387-env-reverse.exp: rewind to beginning of main
PASS: gdb.reverse/i387-env-reverse.exp: set forward direction
PASS: gdb.reverse/i387-env-reverse.exp: begin testing fpu env
PASS: gdb.reverse/i387-env-reverse.exp: save FPU env in memory
PASS: gdb.reverse/i387-env-reverse.exp: restore FPU env
PASS: gdb.reverse/i387-env-reverse.exp: store status word in EAX
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify eax == 0x8040000
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag == 0xffff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x3800
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0x3fff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x3000
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0xfff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x2800
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0x3ff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x2000
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0xff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x1800
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0x3f
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x1000
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0xf
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x800
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0x7
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x1000
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0xf
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x1800
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0x3f
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x2000
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0xff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x2800
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0x3ff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x3000
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0xfff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0x3800
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag  == 0x3fff
PASS: gdb.reverse/i387-env-reverse.exp: push st0
PASS: gdb.reverse/i387-env-reverse.exp: verify fstat == 0
PASS: gdb.reverse/i387-env-reverse.exp: verify ftag == 0xffff
Running ../../../master/gdb/testsuite/gdb.reverse/i387-stack-reverse.exp ...
PASS: gdb.reverse/i387-stack-reverse.exp: Turn on process record
PASS: gdb.reverse/i387-stack-reverse.exp: record to end of main
PASS: gdb.reverse/i387-stack-reverse.exp: set reverse direction
PASS: gdb.reverse/i387-stack-reverse.exp: rewind to beginning of main
PASS: gdb.reverse/i387-stack-reverse.exp: set forward direction
PASS: gdb.reverse/i387-stack-reverse.exp: begin test st0
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 3.321928094*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 1.4426950406*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 1.442695040*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 1.4426950*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 3.3219280*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 1.44269506*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st4 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 0.69314*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 0.69314*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 1.442695040*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st4 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st5 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 0
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 0
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 0.69314*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st4 == 1.442695040*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st5 == 3.32192809*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st6 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 0
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 0
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 0.69314*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st4 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st5 == 1.44269504*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st6 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st7 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: undo registers, st0-st7
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 0
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 0.69314*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st4 == 1.442695040*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st5 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st6 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 0.69314*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 0.69314*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 1.442695040*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st4 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st5 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 0.301029*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 1.442695040*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st4 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 3.14159265*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 1.442695040*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st3 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 1.44269504088*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 1.442695040*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st2 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 3.3219280948*
PASS: gdb.reverse/i387-stack-reverse.exp: verify st1 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: push st0 == 1
PASS: gdb.reverse/i387-stack-reverse.exp: verify st0 == 1
Running ../../../master/gdb/testsuite/gdb.reverse/machinestate-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/machinestate.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/next-reverse-bkpt-over-sr.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/sigall-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/sigall-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/solib-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/solib-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/step-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/step-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/until-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/until-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/watch-precsave.exp ...
Running ../../../master/gdb/testsuite/gdb.reverse/watch-reverse.exp ...
Running ../../../master/gdb/testsuite/gdb.server/ext-attach.exp ...
PASS: gdb.server/ext-attach.exp: set remote exec-file
PASS: gdb.server/ext-attach.exp: attach to remote program 1
PASS: gdb.server/ext-attach.exp: backtrace 1
PASS: gdb.server/ext-attach.exp: detach
PASS: gdb.server/ext-attach.exp: backtrace with no program
PASS: gdb.server/ext-attach.exp: attach to remote program 2
PASS: gdb.server/ext-attach.exp: backtrace 2
PASS: gdb.server/ext-attach.exp: kill
PASS: gdb.server/ext-attach.exp: monitor exit
Running ../../../master/gdb/testsuite/gdb.server/ext-run.exp ...
PASS: gdb.server/ext-run.exp: set remote exec-file
PASS: gdb.server/ext-run.exp: continue to main
PASS: gdb.server/ext-run.exp: get process list
PASS: gdb.server/ext-run.exp: kill
PASS: gdb.server/ext-run.exp: load new file without any gdbserver inferior
PASS: gdb.server/ext-run.exp: monitor exit
Running ../../../master/gdb/testsuite/gdb.server/file-transfer.exp ...
PASS: gdb.server/file-transfer.exp: put binary file
PASS: gdb.server/file-transfer.exp: get binary file
PASS: gdb.server/file-transfer.exp: compare intermediate binary file
PASS: gdb.server/file-transfer.exp: compare binary file
PASS: gdb.server/file-transfer.exp: deleted binary file
PASS: gdb.server/file-transfer.exp: verified deleted binary file
PASS: gdb.server/file-transfer.exp: put text file
PASS: gdb.server/file-transfer.exp: get text file
PASS: gdb.server/file-transfer.exp: compare intermediate text file
PASS: gdb.server/file-transfer.exp: compare text file
PASS: gdb.server/file-transfer.exp: deleted text file
PASS: gdb.server/file-transfer.exp: verified deleted text file
Running ../../../master/gdb/testsuite/gdb.server/server-mon.exp ...
PASS: gdb.server/server-mon.exp: monitor help
PASS: gdb.server/server-mon.exp: monitor
PASS: gdb.server/server-mon.exp: monitor set debug 1
PASS: gdb.server/server-mon.exp: monitor set debug 0
PASS: gdb.server/server-mon.exp: monitor set remote-debug 1
PASS: gdb.server/server-mon.exp: monitor set remote-debug 0
Running ../../../master/gdb/testsuite/gdb.server/server-run.exp ...
PASS: gdb.server/server-run.exp: loaded dynamic linker
PASS: gdb.server/server-run.exp: continue to main
Running ../../../master/gdb/testsuite/gdb.stabs/exclfwd.exp ...
PASS: gdb.stabs/exclfwd.exp: ptype v1
PASS: gdb.stabs/exclfwd.exp: ptype v2
PASS: gdb.stabs/exclfwd.exp: ptype v3
Running ../../../master/gdb/testsuite/gdb.stabs/gdb11479.exp ...
PASS: gdb.stabs/gdb11479.exp: Set breakpoints forced_stabs
PASS: gdb.stabs/gdb11479.exp: Stop at first breakpoint forced_stabs
PASS: gdb.stabs/gdb11479.exp: Inspect t in test2 forced_stabs
PASS: gdb.stabs/gdb11479.exp: sizeof (e) in test2 forced_stabs
PASS: gdb.stabs/gdb11479.exp: Stop at first breakpoint forced_stabs
PASS: gdb.stabs/gdb11479.exp: Inspect t in test forced_stabs
PASS: gdb.stabs/gdb11479.exp: sizeof (e) in test forced_stabs
PASS: gdb.stabs/gdb11479.exp: Set breakpoints natural_debug_format
PASS: gdb.stabs/gdb11479.exp: Stop at first breakpoint natural_debug_format
PASS: gdb.stabs/gdb11479.exp: Inspect t in test2 natural_debug_format
PASS: gdb.stabs/gdb11479.exp: sizeof (e) in test2 natural_debug_format
PASS: gdb.stabs/gdb11479.exp: Stop at first breakpoint natural_debug_format
PASS: gdb.stabs/gdb11479.exp: Inspect t in test natural_debug_format
PASS: gdb.stabs/gdb11479.exp: sizeof (e) in test natural_debug_format
Running ../../../master/gdb/testsuite/gdb.stabs/weird.exp ...
PASS: gdb.stabs/weird.exp: weirdx.o read without error
PASS: gdb.stabs/weird.exp: stabs found
PASS: gdb.stabs/weird.exp: variable var0 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (var0)
PASS: gdb.stabs/weird.exp: variable var1 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (var1)
PASS: gdb.stabs/weird.exp: variable var2 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (var2)
PASS: gdb.stabs/weird.exp: variable var3 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (var3)
PASS: gdb.stabs/weird.exp: variable attr32 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr32)
PASS: gdb.stabs/weird.exp: variable attr33 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr33)
PASS: gdb.stabs/weird.exp: variable attr35 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr35)
PASS: gdb.stabs/weird.exp: variable attr36 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr36)
PASS: gdb.stabs/weird.exp: variable attr37 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr37)
PASS: gdb.stabs/weird.exp: variable attr38 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr38)
PASS: gdb.stabs/weird.exp: variable attr39 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr39)
PASS: gdb.stabs/weird.exp: variable attr41 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr41)
PASS: gdb.stabs/weird.exp: variable attr42 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr42)
PASS: gdb.stabs/weird.exp: variable attr43 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr43)
PASS: gdb.stabs/weird.exp: variable attr44 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr44)
PASS: gdb.stabs/weird.exp: variable attr46 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr46)
PASS: gdb.stabs/weird.exp: variable attr47 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr47)
PASS: gdb.stabs/weird.exp: variable attr58 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr58)
PASS: gdb.stabs/weird.exp: variable attr59 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr59)
PASS: gdb.stabs/weird.exp: variable attr60 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr60)
PASS: gdb.stabs/weird.exp: variable attr61 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr61)
PASS: gdb.stabs/weird.exp: variable attr62 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr62)
PASS: gdb.stabs/weird.exp: variable attr63 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr63)
PASS: gdb.stabs/weird.exp: variable attr64 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr64)
PASS: gdb.stabs/weird.exp: variable attr65 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr65)
PASS: gdb.stabs/weird.exp: variable attr66 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr66)
PASS: gdb.stabs/weird.exp: variable attr67 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr67)
PASS: gdb.stabs/weird.exp: variable attr68 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr68)
PASS: gdb.stabs/weird.exp: variable attr69 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr69)
PASS: gdb.stabs/weird.exp: variable attr70 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr70)
PASS: gdb.stabs/weird.exp: variable attr71 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr71)
PASS: gdb.stabs/weird.exp: variable attr72 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr72)
PASS: gdb.stabs/weird.exp: variable attr73 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr73)
PASS: gdb.stabs/weird.exp: variable attr74 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr74)
PASS: gdb.stabs/weird.exp: variable attr75 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr75)
PASS: gdb.stabs/weird.exp: variable attr76 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr76)
PASS: gdb.stabs/weird.exp: variable attr77 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr77)
PASS: gdb.stabs/weird.exp: variable attr78 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr78)
PASS: gdb.stabs/weird.exp: variable attr79 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr79)
PASS: gdb.stabs/weird.exp: variable attr80 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr80)
PASS: gdb.stabs/weird.exp: variable attr81 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr81)
PASS: gdb.stabs/weird.exp: variable attr82 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr82)
PASS: gdb.stabs/weird.exp: variable attr83 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr83)
PASS: gdb.stabs/weird.exp: variable attr84 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr84)
PASS: gdb.stabs/weird.exp: variable attr85 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr85)
PASS: gdb.stabs/weird.exp: variable attr86 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr86)
PASS: gdb.stabs/weird.exp: variable attr87 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr87)
PASS: gdb.stabs/weird.exp: variable attr88 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr88)
PASS: gdb.stabs/weird.exp: variable attr89 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr89)
PASS: gdb.stabs/weird.exp: variable attr90 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr90)
PASS: gdb.stabs/weird.exp: variable attr91 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr91)
PASS: gdb.stabs/weird.exp: variable attr92 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr92)
PASS: gdb.stabs/weird.exp: variable attr93 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr93)
PASS: gdb.stabs/weird.exp: variable attr94 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr94)
PASS: gdb.stabs/weird.exp: variable attr95 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr95)
PASS: gdb.stabs/weird.exp: variable attr96 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr96)
PASS: gdb.stabs/weird.exp: variable attr97 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr97)
PASS: gdb.stabs/weird.exp: variable attr98 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr98)
PASS: gdb.stabs/weird.exp: variable attr99 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr99)
PASS: gdb.stabs/weird.exp: variable attr100 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr100)
PASS: gdb.stabs/weird.exp: variable attr101 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr101)
PASS: gdb.stabs/weird.exp: variable attr102 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr102)
PASS: gdb.stabs/weird.exp: variable attr103 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr103)
PASS: gdb.stabs/weird.exp: variable attr104 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr104)
PASS: gdb.stabs/weird.exp: variable attr105 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr105)
PASS: gdb.stabs/weird.exp: variable attr106 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr106)
PASS: gdb.stabs/weird.exp: variable attr107 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr107)
PASS: gdb.stabs/weird.exp: variable attr108 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr108)
PASS: gdb.stabs/weird.exp: variable attr109 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr109)
PASS: gdb.stabs/weird.exp: variable attr110 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr110)
PASS: gdb.stabs/weird.exp: variable attr111 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr111)
PASS: gdb.stabs/weird.exp: variable attr112 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr112)
PASS: gdb.stabs/weird.exp: variable attr113 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr113)
PASS: gdb.stabs/weird.exp: variable attr114 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr114)
PASS: gdb.stabs/weird.exp: variable attr115 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr115)
PASS: gdb.stabs/weird.exp: variable attr116 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr116)
PASS: gdb.stabs/weird.exp: variable attr117 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr117)
PASS: gdb.stabs/weird.exp: variable attr118 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr118)
PASS: gdb.stabs/weird.exp: variable attr119 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr119)
PASS: gdb.stabs/weird.exp: variable attr120 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr120)
PASS: gdb.stabs/weird.exp: variable attr121 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr121)
PASS: gdb.stabs/weird.exp: variable attr122 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr122)
PASS: gdb.stabs/weird.exp: variable attr123 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr123)
PASS: gdb.stabs/weird.exp: variable attr124 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr124)
PASS: gdb.stabs/weird.exp: variable attr125 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr125)
PASS: gdb.stabs/weird.exp: variable attr126 printed properly
PASS: gdb.stabs/weird.exp: print sizeof (attr126)
PASS: gdb.stabs/weird.exp: 'e' constant on non-enum type
PASS: gdb.stabs/weird.exp: whatis const69
PASS: gdb.stabs/weird.exp: 'e' constant with embedded type
PASS: gdb.stabs/weird.exp: char constant
PASS: gdb.stabs/weird.exp: String constant 1
PASS: gdb.stabs/weird.exp: String constant 2
PASS: gdb.stabs/weird.exp: String constant 3
PASS: gdb.stabs/weird.exp: String constant 4
PASS: gdb.stabs/weird.exp: p bad_neg0
PASS: gdb.stabs/weird.exp: ptype on inttype
PASS: gdb.stabs/weird.exp: unrecognized floating point type
PASS: gdb.stabs/weird.exp: print very big integer
PASS: gdb.stabs/weird.exp: whatis consth
PASS: gdb.stabs/weird.exp: whatis consth2
XFAIL: gdb.stabs/weird.exp: print struct constant
PASS: gdb.stabs/weird.exp: print bad_type0
PASS: gdb.stabs/weird.exp: print bad_type1
XFAIL: gdb.stabs/weird.exp: array0 with strange index
XFAIL: gdb.stabs/weird.exp: array1 with strange index
PASS: gdb.stabs/weird.exp: whatis one_var (known failure in gdb 4.10)
PASS: gdb.stabs/weird.exp: whatis one_var test 2
PASS: gdb.stabs/weird.exp: whatis two_var (known failure in gdb 4.10)
PASS: gdb.stabs/weird.exp: whatis two_var test 2
XFAIL: gdb.stabs/weird.exp: whatis pointer_to_int_var
XFAIL: gdb.stabs/weird.exp: whatis intp_var
PASS: gdb.stabs/weird.exp: p common0var0
XFAIL: gdb.stabs/weird.exp: p common0var1
XFAIL: gdb.stabs/weird.exp: p common0var2
Running ../../../master/gdb/testsuite/gdb.threads/attach-into-signal.exp ...
PASS: gdb.threads/attach-into-signal.exp: nonthreaded: attach (pass 1), pending signal catch
PASS: gdb.threads/attach-into-signal.exp: nonthreaded: attach (pass 2), pending signal catch
PASS: gdb.threads/attach-into-signal.exp: successfully compiled posix threads test case
PASS: gdb.threads/attach-into-signal.exp: threaded: attach (pass 1), pending signal catch
PASS: gdb.threads/attach-into-signal.exp: threaded: attach (pass 2), pending signal catch
Running ../../../master/gdb/testsuite/gdb.threads/attach-stopped.exp ...
PASS: gdb.threads/attach-stopped.exp: nonthreaded: attach2 to stopped, after setting file
PASS: gdb.threads/attach-stopped.exp: nonthreaded: attach2 to stopped bt
PASS: gdb.threads/attach-stopped.exp: continue (nonthreaded: attach2 continue)
PASS: gdb.threads/attach-stopped.exp: nonthreaded: attach2 stop interrupt
PASS: gdb.threads/attach-stopped.exp: nonthreaded: attach2, exit leaves process sleeping
PASS: gdb.threads/attach-stopped.exp: successfully compiled posix threads test case
PASS: gdb.threads/attach-stopped.exp: threaded: attach2 to stopped, after setting file
PASS: gdb.threads/attach-stopped.exp: threaded: attach2 to stopped bt
PASS: gdb.threads/attach-stopped.exp: continue (threaded: attach2 continue)
PASS: gdb.threads/attach-stopped.exp: threaded: attach2 stop interrupt
PASS: gdb.threads/attach-stopped.exp: threaded: attach2, exit leaves process sleeping
Running ../../../master/gdb/testsuite/gdb.threads/attachstop-mt.exp ...
PASS: gdb.threads/attachstop-mt.exp: successfully compiled posix threads test case
PASS: gdb.threads/attachstop-mt.exp: attach0, initial sanity check of the sleeping state
PASS: gdb.threads/attachstop-mt.exp: attach0 to sleeping
PASS: gdb.threads/attachstop-mt.exp: attach0 to sleeping gcore invocation
PASS: gdb.threads/attachstop-mt.exp: attach0 to sleeping switch thread
PASS: gdb.threads/attachstop-mt.exp: attach0 to sleeping bt
PASS: gdb.threads/attachstop-mt.exp: attach1, post-gdb sanity check of the sleeping state - Red Hat BZ 197584
PASS: gdb.threads/attachstop-mt.exp: attach2, initial sanity check of the stopped state
PASS: gdb.threads/attachstop-mt.exp: set file, before attach3 to stopped process (re-read)
PASS: gdb.threads/attachstop-mt.exp: attach3 to stopped, after setting file
PASS: gdb.threads/attachstop-mt.exp: attach3 to stopped switch thread
PASS: gdb.threads/attachstop-mt.exp: attach3 to stopped bt
PASS: gdb.threads/attachstop-mt.exp: attach4 to stopped, after setting file
PASS: gdb.threads/attachstop-mt.exp: attach4 to stopped switch thread
PASS: gdb.threads/attachstop-mt.exp: attach4 to stopped bt
PASS: gdb.threads/attachstop-mt.exp: continue (attach4 continue)
PASS: gdb.threads/attachstop-mt.exp: attach4 stop by interrupt
PASS: gdb.threads/attachstop-mt.exp: attach4, exit leaves process sleeping
Running ../../../master/gdb/testsuite/gdb.threads/bp_in_thread.exp ...
PASS: gdb.threads/bp_in_thread.exp: successfully compiled posix threads test case
PASS: gdb.threads/bp_in_thread.exp: breakpoint on noreturn
PASS: gdb.threads/bp_in_thread.exp: run to noreturn
Running ../../../master/gdb/testsuite/gdb.threads/corethreads.exp ...
PASS: gdb.threads/corethreads.exp: successfully compiled posix threads test case
PASS: gdb.threads/corethreads.exp: load core
PASS: gdb.threads/corethreads.exp: sanity check we see the core file
PASS: gdb.threads/corethreads.exp: print pthread_t of thread0
PASS: gdb.threads/corethreads.exp: print pthread_t of thread1
PASS: gdb.threads/corethreads.exp: thread0 found
PASS: gdb.threads/corethreads.exp: thread1 found
PASS: gdb.threads/corethreads.exp: no other thread found
Running ../../../master/gdb/testsuite/gdb.threads/current-lwp-dead.exp ...
PASS: gdb.threads/current-lwp-dead.exp: continue to breakpoint: fn_return
Running ../../../master/gdb/testsuite/gdb.threads/execl.exp ...
PASS: gdb.threads/execl.exp: successfully compiled posix threads test case
PASS: gdb.threads/execl.exp: set breakpoint at execl
PASS: gdb.threads/execl.exp: continue to exec
PASS: gdb.threads/execl.exp: info threads before exec
PASS: gdb.threads/execl.exp: continue across exec
PASS: gdb.threads/execl.exp: info threads after exec
PASS: gdb.threads/execl.exp: info threads after exec
PASS: gdb.threads/execl.exp: continue until exit
Running ../../../master/gdb/testsuite/gdb.threads/fork-child-threads.exp ...
PASS: gdb.threads/fork-child-threads.exp: successfully compiled posix threads test case
PASS: gdb.threads/fork-child-threads.exp: set follow-fork-mode child
PASS: gdb.threads/fork-child-threads.exp: next over fork
PASS: gdb.threads/fork-child-threads.exp: get to the spawned thread
PASS: gdb.threads/fork-child-threads.exp: two threads found
Running ../../../master/gdb/testsuite/gdb.threads/fork-thread-pending.exp ...
PASS: gdb.threads/fork-thread-pending.exp: successfully compiled posix threads test case
PASS: gdb.threads/fork-thread-pending.exp: 1, set follow-fork-mode child
PASS: gdb.threads/fork-thread-pending.exp: 1, insert fork catchpoint
PASS: gdb.threads/fork-thread-pending.exp: 1, get to the fork event
PASS: gdb.threads/fork-thread-pending.exp: 1, multiple threads found
PASS: gdb.threads/fork-thread-pending.exp: 1, switched away from event thread
PASS: gdb.threads/fork-thread-pending.exp: 1, refused to resume
PASS: gdb.threads/fork-thread-pending.exp: 1, followed to the child, found one thread
PASS: gdb.threads/fork-thread-pending.exp: 1, get to the spawned thread in fork child
PASS: gdb.threads/fork-thread-pending.exp: 1, followed to the child, found two threads
PASS: gdb.threads/fork-thread-pending.exp: 2, set follow-fork-mode child
PASS: gdb.threads/fork-thread-pending.exp: 2, insert fork catchpoint
PASS: gdb.threads/fork-thread-pending.exp: 2, get to the fork event
PASS: gdb.threads/fork-thread-pending.exp: 2, multiple threads found
PASS: gdb.threads/fork-thread-pending.exp: 2, get to the spawned thread in fork child
PASS: gdb.threads/fork-thread-pending.exp: 2, followed to the child, found two threads
Running ../../../master/gdb/testsuite/gdb.threads/gcore-thread.exp ...
PASS: gdb.threads/gcore-thread.exp: successfully compiled posix threads test case
PASS: gdb.threads/gcore-thread.exp: successfully compiled posix threads test case
PASS: gdb.threads/gcore-thread.exp: help gcore
PASS: gdb.threads/gcore-thread.exp: thread 1 is running
PASS: gdb.threads/gcore-thread.exp: thread 2 is running
PASS: gdb.threads/gcore-thread.exp: save a corefile
PASS: gdb.threads/gcore-thread.exp: clear __stack_user.next
PASS: gdb.threads/gcore-thread.exp: clear stack_used.next
PASS: gdb.threads/gcore-thread.exp: save a zeroed-threads corefile
PASS: gdb.threads/gcore-thread.exp: re-load generated corefile
PASS: gdb.threads/gcore-thread.exp: corefile contains at least two threads
PASS: gdb.threads/gcore-thread.exp: a corefile thread is executing thread2
PASS: gdb.threads/gcore-thread.exp: thread2 is current thread in corefile
PASS: gdb.threads/gcore-thread.exp: re-load generated corefile
PASS: gdb.threads/gcore-thread.exp: zeroed-threads cannot be listed
Running ../../../master/gdb/testsuite/gdb.threads/hand-call-in-threads.exp ...
PASS: gdb.threads/hand-call-in-threads.exp: successfully compiled posix threads test case
PASS: gdb.threads/hand-call-in-threads.exp: breakpoint on all_threads_running
PASS: gdb.threads/hand-call-in-threads.exp: breakpoint on hand_call
PASS: gdb.threads/hand-call-in-threads.exp: run to all_threads_running
PASS: gdb.threads/hand-call-in-threads.exp: enable scheduler locking
PASS: gdb.threads/hand-call-in-threads.exp: show scheduler locking on
PASS: gdb.threads/hand-call-in-threads.exp: prepare to make hand call, thread 1
PASS: gdb.threads/hand-call-in-threads.exp: hand call, thread 1
PASS: gdb.threads/hand-call-in-threads.exp: prepare to make hand call, thread 2
PASS: gdb.threads/hand-call-in-threads.exp: hand call, thread 2
PASS: gdb.threads/hand-call-in-threads.exp: prepare to make hand call, thread 3
PASS: gdb.threads/hand-call-in-threads.exp: hand call, thread 3
PASS: gdb.threads/hand-call-in-threads.exp: prepare to make hand call, thread 4
PASS: gdb.threads/hand-call-in-threads.exp: hand call, thread 4
PASS: gdb.threads/hand-call-in-threads.exp: prepare to make hand call, thread 5
PASS: gdb.threads/hand-call-in-threads.exp: hand call, thread 5
PASS: gdb.threads/hand-call-in-threads.exp: set confirm off
PASS: gdb.threads/hand-call-in-threads.exp: prepare to discard hand call, thread 1
PASS: gdb.threads/hand-call-in-threads.exp: dummy stack frame number, thread 1
PASS: gdb.threads/hand-call-in-threads.exp: setting frame, thread 1
PASS: gdb.threads/hand-call-in-threads.exp: discard hand call, thread 1
PASS: gdb.threads/hand-call-in-threads.exp: prepare to discard hand call, thread 2
PASS: gdb.threads/hand-call-in-threads.exp: dummy stack frame number, thread 2
PASS: gdb.threads/hand-call-in-threads.exp: setting frame, thread 2
PASS: gdb.threads/hand-call-in-threads.exp: discard hand call, thread 2
PASS: gdb.threads/hand-call-in-threads.exp: prepare to discard hand call, thread 3
PASS: gdb.threads/hand-call-in-threads.exp: dummy stack frame number, thread 3
PASS: gdb.threads/hand-call-in-threads.exp: setting frame, thread 3
PASS: gdb.threads/hand-call-in-threads.exp: discard hand call, thread 3
PASS: gdb.threads/hand-call-in-threads.exp: prepare to discard hand call, thread 4
PASS: gdb.threads/hand-call-in-threads.exp: dummy stack frame number, thread 4
PASS: gdb.threads/hand-call-in-threads.exp: setting frame, thread 4
PASS: gdb.threads/hand-call-in-threads.exp: discard hand call, thread 4
PASS: gdb.threads/hand-call-in-threads.exp: prepare to discard hand call, thread 5
PASS: gdb.threads/hand-call-in-threads.exp: dummy stack frame number, thread 5
PASS: gdb.threads/hand-call-in-threads.exp: setting frame, thread 5
PASS: gdb.threads/hand-call-in-threads.exp: discard hand call, thread 5
PASS: gdb.threads/hand-call-in-threads.exp: all dummies popped
PASS: gdb.threads/hand-call-in-threads.exp: disable scheduler locking
PASS: gdb.threads/hand-call-in-threads.exp: show scheduler locking off
Running ../../../master/gdb/testsuite/gdb.threads/ia64-sigill.exp ...
PASS: gdb.threads/ia64-sigill.exp: successfully compiled posix threads test case
PASS: gdb.threads/ia64-sigill.exp: info addr label
PASS: gdb.threads/ia64-sigill.exp: set $sigill_bpnum=$bpnum
PASS: gdb.threads/ia64-sigill.exp: set debug infrun 1
PASS: gdb.threads/ia64-sigill.exp: continue
PASS: gdb.threads/ia64-sigill.exp: delete $sigill_bpnum
PASS: gdb.threads/ia64-sigill.exp: continue for the pending signal
Running ../../../master/gdb/testsuite/gdb.threads/interrupted-hand-call.exp ...
PASS: gdb.threads/interrupted-hand-call.exp: successfully compiled posix threads test case
PASS: gdb.threads/interrupted-hand-call.exp: breakpoint on all_threads_running
PASS: gdb.threads/interrupted-hand-call.exp: run to all_threads_running
PASS: gdb.threads/interrupted-hand-call.exp: hand-call interrupted by signal in another thread
PASS: gdb.threads/interrupted-hand-call.exp: dummy stack frame present
PASS: gdb.threads/interrupted-hand-call.exp: finish hand-call
PASS: gdb.threads/interrupted-hand-call.exp: dummy frame popped
PASS: gdb.threads/interrupted-hand-call.exp: continue until exit
Running ../../../master/gdb/testsuite/gdb.threads/killed.exp ...
PASS: gdb.threads/killed.exp: successfully compiled posix threads test case
PASS: gdb.threads/killed.exp: run program to completion
PASS: gdb.threads/killed.exp: GDB exits after multi-threaded program exits messily
Running ../../../master/gdb/testsuite/gdb.threads/leader-exit.exp ...
PASS: gdb.threads/leader-exit.exp: successfully compiled posix threads test case
PASS: gdb.threads/leader-exit.exp: continue to breakpoint: break-here
PASS: gdb.threads/leader-exit.exp: Single thread has been left
Running ../../../master/gdb/testsuite/gdb.threads/linux-dp.exp ...
PASS: gdb.threads/linux-dp.exp: successfully compiled posix threads test case
PASS: gdb.threads/linux-dp.exp: set print sevenbit-strings
PASS: gdb.threads/linux-dp.exp: info threads 1
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: about to create philosopher: 0
PASS: gdb.threads/linux-dp.exp: create philosopher: 0
PASS: gdb.threads/linux-dp.exp: info threads after: 0
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: about to create philosopher: 1
PASS: gdb.threads/linux-dp.exp: create philosopher: 1
PASS: gdb.threads/linux-dp.exp: info threads after: 1
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: about to create philosopher: 2
PASS: gdb.threads/linux-dp.exp: create philosopher: 2
PASS: gdb.threads/linux-dp.exp: info threads after: 2
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: about to create philosopher: 3
PASS: gdb.threads/linux-dp.exp: create philosopher: 3
PASS: gdb.threads/linux-dp.exp: info threads after: 3
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: about to create philosopher: 4
PASS: gdb.threads/linux-dp.exp: create philosopher: 4
PASS: gdb.threads/linux-dp.exp: info threads after: 4
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: main thread's sleep
PASS: gdb.threads/linux-dp.exp: info threads 2
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print
PASS: gdb.threads/linux-dp.exp: first thread-specific breakpoint hit
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 0
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 1
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 2
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 3
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 4
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 5
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 6
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 7
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 8
PASS: gdb.threads/linux-dp.exp: continue to breakpoint: thread 5's print, pass: 9
PASS: gdb.threads/linux-dp.exp: thread-specific breakpoint is thread-specific
PASS: gdb.threads/linux-dp.exp: selected thread: 1
PASS: gdb.threads/linux-dp.exp: main is distinct: 1
PASS: gdb.threads/linux-dp.exp: selected thread: 2
PASS: gdb.threads/linux-dp.exp: philosopher is distinct: 2
PASS: gdb.threads/linux-dp.exp: selected thread: 3
PASS: gdb.threads/linux-dp.exp: philosopher is distinct: 3
PASS: gdb.threads/linux-dp.exp: selected thread: 4
PASS: gdb.threads/linux-dp.exp: philosopher is distinct: 4
PASS: gdb.threads/linux-dp.exp: selected thread: 5
PASS: gdb.threads/linux-dp.exp: philosopher is distinct: 5
PASS: gdb.threads/linux-dp.exp: selected thread: 6
PASS: gdb.threads/linux-dp.exp: philosopher is distinct: 6
PASS: gdb.threads/linux-dp.exp: found an interesting thread
PASS: gdb.threads/linux-dp.exp: manager thread found (not found) when expected
Running ../../../master/gdb/testsuite/gdb.threads/local-watch-wrong-thread.exp ...
PASS: gdb.threads/local-watch-wrong-thread.exp: successfully compiled posix threads test case
PASS: gdb.threads/local-watch-wrong-thread.exp: breakpoint on thread_function0
PASS: gdb.threads/local-watch-wrong-thread.exp: continue to thread_function0
PASS: gdb.threads/local-watch-wrong-thread.exp: set local watchpoint on *myp
PASS: gdb.threads/local-watch-wrong-thread.exp: local watchpoint triggers
PASS: gdb.threads/local-watch-wrong-thread.exp: set local watchpoint on *myp, with false conditional
PASS: gdb.threads/local-watch-wrong-thread.exp: breakpoint on the other thread
PASS: gdb.threads/local-watch-wrong-thread.exp: the other thread stopped on breakpoint
PASS: gdb.threads/local-watch-wrong-thread.exp: local watchpoint is still in breakpoint list
PASS: gdb.threads/local-watch-wrong-thread.exp: let local watchpoint trigger
PASS: gdb.threads/local-watch-wrong-thread.exp: local watchpoint still triggers
PASS: gdb.threads/local-watch-wrong-thread.exp: let thread_function0 return
PASS: gdb.threads/local-watch-wrong-thread.exp: breakpoint on thread_function0's caller
PASS: gdb.threads/local-watch-wrong-thread.exp: local watchpoint automatically deleted
Running ../../../master/gdb/testsuite/gdb.threads/manythreads.exp ...
PASS: gdb.threads/manythreads.exp: successfully compiled posix threads test case
PASS: gdb.threads/manythreads.exp: set print sevenbit-strings
PASS: gdb.threads/manythreads.exp: shell stty intr '^C'
PASS: gdb.threads/manythreads.exp: first continue
PASS: gdb.threads/manythreads.exp: stop threads 1
PASS: gdb.threads/manythreads.exp: info threads
PASS: gdb.threads/manythreads.exp: give a name to the thread
PASS: gdb.threads/manythreads.exp: check thread name
PASS: gdb.threads/manythreads.exp: second continue
PASS: gdb.threads/manythreads.exp: check for duplicate SIGINT
PASS: gdb.threads/manythreads.exp: stop threads 2
PASS: gdb.threads/manythreads.exp: GDB exits after stopping multithreaded program
Running ../../../master/gdb/testsuite/gdb.threads/multi-create.exp ...
PASS: gdb.threads/multi-create.exp: successfully compiled posix threads test case
PASS: gdb.threads/multi-create.exp: continue to breakpoint 0
PASS: gdb.threads/multi-create.exp: continue to breakpoint 1
PASS: gdb.threads/multi-create.exp: continue to breakpoint 2
PASS: gdb.threads/multi-create.exp: continue to breakpoint 3
PASS: gdb.threads/multi-create.exp: continue to breakpoint 4
PASS: gdb.threads/multi-create.exp: continue to breakpoint 5
PASS: gdb.threads/multi-create.exp: continue to breakpoint 6
PASS: gdb.threads/multi-create.exp: continue to breakpoint 7
PASS: gdb.threads/multi-create.exp: continue to breakpoint 8
PASS: gdb.threads/multi-create.exp: continue to breakpoint 9
PASS: gdb.threads/multi-create.exp: continue to breakpoint 10
PASS: gdb.threads/multi-create.exp: continue to breakpoint 11
PASS: gdb.threads/multi-create.exp: continue to breakpoint 12
PASS: gdb.threads/multi-create.exp: continue to breakpoint 13
PASS: gdb.threads/multi-create.exp: continue to breakpoint 14
PASS: gdb.threads/multi-create.exp: continue to breakpoint 15
PASS: gdb.threads/multi-create.exp: continue to breakpoint 16
PASS: gdb.threads/multi-create.exp: continue to breakpoint 17
PASS: gdb.threads/multi-create.exp: continue to breakpoint 18
PASS: gdb.threads/multi-create.exp: continue to breakpoint 19
PASS: gdb.threads/multi-create.exp: continue to breakpoint 20
PASS: gdb.threads/multi-create.exp: continue to breakpoint 21
PASS: gdb.threads/multi-create.exp: continue to breakpoint 22
PASS: gdb.threads/multi-create.exp: continue to breakpoint 23
PASS: gdb.threads/multi-create.exp: continue to breakpoint 24
PASS: gdb.threads/multi-create.exp: continue to breakpoint 25
PASS: gdb.threads/multi-create.exp: continue to breakpoint 26
PASS: gdb.threads/multi-create.exp: continue to breakpoint 27
PASS: gdb.threads/multi-create.exp: continue to breakpoint 28
PASS: gdb.threads/multi-create.exp: continue to breakpoint 29
PASS: gdb.threads/multi-create.exp: continue to breakpoint 30
PASS: gdb.threads/multi-create.exp: continue to breakpoint 31
Running ../../../master/gdb/testsuite/gdb.threads/pending-step.exp ...
PASS: gdb.threads/pending-step.exp: successfully compiled posix threads test case
PASS: gdb.threads/pending-step.exp: continue to breakpoint: continue to first breakpoint hit
PASS: gdb.threads/pending-step.exp: next in multiple threads with breakpoints
Running ../../../master/gdb/testsuite/gdb.threads/print-threads.exp ...
PASS: gdb.threads/print-threads.exp: successfully compiled posix threads test case
PASS: gdb.threads/print-threads.exp: set print sevenbit-strings
PASS: gdb.threads/print-threads.exp: set width 0
PASS: gdb.threads/print-threads.exp: shell stty intr '^C'
PASS: gdb.threads/print-threads.exp: break thread_function
PASS: gdb.threads/print-threads.exp: set var slow = 0
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 1 (fast)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 2 (fast)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 3 (fast)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 4 (fast)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 5 (fast)
PASS: gdb.threads/print-threads.exp: program exited normally
PASS: gdb.threads/print-threads.exp: all threads ran once (fast)
PASS: gdb.threads/print-threads.exp: break thread_function (2)
PASS: gdb.threads/print-threads.exp: set var slow = 1
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 1 (slow)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 2 (slow)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 3 (slow)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 4 (slow)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 5 (slow)
PASS: gdb.threads/print-threads.exp: program exited normally
PASS: gdb.threads/print-threads.exp: all threads ran once (slow)
PASS: gdb.threads/print-threads.exp: break thread_function (3)
PASS: gdb.threads/print-threads.exp: set var slow = 1 (2)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 1 (slow with kill breakpoint)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 2 (slow with kill breakpoint)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 3 (slow with kill breakpoint)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 4 (slow with kill breakpoint)
PASS: gdb.threads/print-threads.exp: Hit thread_function breakpoint, 5 (slow with kill breakpoint)
PASS: gdb.threads/print-threads.exp: program exited normally
PASS: gdb.threads/print-threads.exp: all threads ran once (slow with kill breakpoint)
Running ../../../master/gdb/testsuite/gdb.threads/pthread_cond_wait.exp ...
PASS: gdb.threads/pthread_cond_wait.exp: successfully compiled posix threads test case
PASS: gdb.threads/pthread_cond_wait.exp: breakpoint on break_me
PASS: gdb.threads/pthread_cond_wait.exp: run to break_me
PASS: gdb.threads/pthread_cond_wait.exp: backtrace in blocked thread
Running ../../../master/gdb/testsuite/gdb.threads/pthreads.exp ...
PASS: gdb.threads/pthreads.exp: successfully compiled posix threads test case
PASS: gdb.threads/pthreads.exp: set print sevenbit-strings
PASS: gdb.threads/pthreads.exp: set width 0
PASS: gdb.threads/pthreads.exp: shell stty intr '^C'
PASS: gdb.threads/pthreads.exp: info threads
PASS: gdb.threads/pthreads.exp: break thread1
PASS: gdb.threads/pthreads.exp: Continue to creation of first thread
PASS: gdb.threads/pthreads.exp: disable
PASS: gdb.threads/pthreads.exp: break thread2
PASS: gdb.threads/pthreads.exp: Continue to creation of second thread
PASS: gdb.threads/pthreads.exp: set var common_routine::hits=0
PASS: gdb.threads/pthreads.exp: set var common_routine::from_thread1=0
PASS: gdb.threads/pthreads.exp: set var common_routine::from_thread2=0
PASS: gdb.threads/pthreads.exp: set var common_routine::from_main=0
PASS: gdb.threads/pthreads.exp: set var common_routine::full_coverage=0
PASS: gdb.threads/pthreads.exp: disable
PASS: gdb.threads/pthreads.exp: tbreak common_routine if hits >= 15
PASS: gdb.threads/pthreads.exp: stopped before calling common_routine 15 times
PASS: gdb.threads/pthreads.exp: All threads running after startup
PASS: gdb.threads/pthreads.exp: Continue with all threads running
PASS: gdb.threads/pthreads.exp: Stopped with a ^C
PASS: gdb.threads/pthreads.exp: bt
PASS: gdb.threads/pthreads.exp: set var common_routine::hits=0
PASS: gdb.threads/pthreads.exp: set var common_routine::from_thread1=0
PASS: gdb.threads/pthreads.exp: set var common_routine::from_thread2=0
PASS: gdb.threads/pthreads.exp: set var common_routine::from_main=0
PASS: gdb.threads/pthreads.exp: set var common_routine::full_coverage=0
PASS: gdb.threads/pthreads.exp: disable
PASS: gdb.threads/pthreads.exp: tbreak common_routine if hits >= 15
PASS: gdb.threads/pthreads.exp: stopped before calling common_routine 15 times
PASS: gdb.threads/pthreads.exp: All threads running after continuing from ^C stop
PASS: gdb.threads/pthreads.exp: check backtrace from main thread
PASS: gdb.threads/pthreads.exp: check backtrace from thread 1
PASS: gdb.threads/pthreads.exp: check backtrace from thread 2
PASS: gdb.threads/pthreads.exp: apply backtrace command to all three threads
PASS: gdb.threads/pthreads.exp: set break at common_routine in thread 2
PASS: gdb.threads/pthreads.exp: continue to bkpt at common_routine in thread 2
PASS: gdb.threads/pthreads.exp: backtrace from thread 2 bkpt in common_routine
Running ../../../master/gdb/testsuite/gdb.threads/schedlock.exp ...
PASS: gdb.threads/schedlock.exp: successfully compiled posix threads test case
PASS: gdb.threads/schedlock.exp: shell stty intr '^C'
PASS: gdb.threads/schedlock.exp: set print sevenbit-strings
PASS: gdb.threads/schedlock.exp: set width 0
PASS: gdb.threads/schedlock.exp: scheduler locking set to none
PASS: gdb.threads/schedlock.exp: continue to breakpoint: all threads started
PASS: gdb.threads/schedlock.exp: listed args (1)
PASS: gdb.threads/schedlock.exp: continue (initial)
PASS: gdb.threads/schedlock.exp: stop all threads (initial)
PASS: gdb.threads/schedlock.exp: continue to breakpoint: return to loop (initial)
PASS: gdb.threads/schedlock.exp: listed args (2)
PASS: gdb.threads/schedlock.exp: all threads alive
PASS: gdb.threads/schedlock.exp: find current thread (1)
PASS: gdb.threads/schedlock.exp: set scheduler-locking off
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 0)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 1)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 2)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 3)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 4)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 5)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 6)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 7)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 8)
PASS: gdb.threads/schedlock.exp: step to increment (unlocked 9)
PASS: gdb.threads/schedlock.exp: find current thread (2)
PASS: gdb.threads/schedlock.exp: step without lock does not change thread
PASS: gdb.threads/schedlock.exp: listed args (3)
PASS: gdb.threads/schedlock.exp: current thread stepped
PASS: gdb.threads/schedlock.exp: other threads ran - unlocked
PASS: gdb.threads/schedlock.exp: set scheduler-locking on
PASS: gdb.threads/schedlock.exp: continue (with lock)
PASS: gdb.threads/schedlock.exp: stop all threads (with lock)
PASS: gdb.threads/schedlock.exp: continue to breakpoint: return to loop (with lock)
PASS: gdb.threads/schedlock.exp: find current thread (3)
PASS: gdb.threads/schedlock.exp: continue with lock does not change thread
PASS: gdb.threads/schedlock.exp: listed args (4)
PASS: gdb.threads/schedlock.exp: current thread ran
PASS: gdb.threads/schedlock.exp: other threads didn't run - locked
PASS: gdb.threads/schedlock.exp: step to increment (locked 0)
PASS: gdb.threads/schedlock.exp: step to increment (locked 1)
PASS: gdb.threads/schedlock.exp: step to increment (locked 2)
PASS: gdb.threads/schedlock.exp: step to increment (locked 3)
PASS: gdb.threads/schedlock.exp: step to increment (locked 4)
PASS: gdb.threads/schedlock.exp: step to increment (locked 5)
PASS: gdb.threads/schedlock.exp: step to increment (locked 6)
PASS: gdb.threads/schedlock.exp: step to increment (locked 7)
PASS: gdb.threads/schedlock.exp: step to increment (locked 8)
PASS: gdb.threads/schedlock.exp: step to increment (locked 9)
PASS: gdb.threads/schedlock.exp: find current thread (2)
PASS: gdb.threads/schedlock.exp: step with lock does not change thread
PASS: gdb.threads/schedlock.exp: listed args (5)
PASS: gdb.threads/schedlock.exp: current thread stepped locked
PASS: gdb.threads/schedlock.exp: other threads didn't run - step locked
Running ../../../master/gdb/testsuite/gdb.threads/sigthread.exp ...
PASS: gdb.threads/sigthread.exp: successfully compiled posix threads test case
PASS: gdb.threads/sigthread.exp: handle SIGUSR1 nostop noprint pass
PASS: gdb.threads/sigthread.exp: handle SIGUSR2 nostop noprint pass
PASS: gdb.threads/sigthread.exp: continue
PASS: gdb.threads/sigthread.exp: stop with control-c
Running ../../../master/gdb/testsuite/gdb.threads/staticthreads.exp ...
PASS: gdb.threads/staticthreads.exp: successfully compiled posix threads test case
PASS: gdb.threads/staticthreads.exp: set print sevenbit-strings
PASS: gdb.threads/staticthreads.exp: break sem_post
PASS: gdb.threads/staticthreads.exp: Continue to main's call of sem_post
PASS: gdb.threads/staticthreads.exp: rerun to main
PASS: gdb.threads/staticthreads.exp: handle SIG32 nostop noprint pass
PASS: gdb.threads/staticthreads.exp: handle SIG32 helps
PASS: gdb.threads/staticthreads.exp: info threads
PASS: gdb.threads/staticthreads.exp: GDB exits with static thread program
Running ../../../master/gdb/testsuite/gdb.threads/step.exp ...
Running ../../../master/gdb/testsuite/gdb.threads/step2.exp ...
Running ../../../master/gdb/testsuite/gdb.threads/switch-threads.exp ...
PASS: gdb.threads/switch-threads.exp: successfully compiled posix threads test case
PASS: gdb.threads/switch-threads.exp: continue to breakpoint: continue to thread_func
PASS: gdb.threads/switch-threads.exp: next
Running ../../../master/gdb/testsuite/gdb.threads/thread-execl.exp ...
PASS: gdb.threads/thread-execl.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread-execl.exp: continue to thread start
PASS: gdb.threads/thread-execl.exp: get to main in new image
Running ../../../master/gdb/testsuite/gdb.threads/thread-find.exp ...
PASS: gdb.threads/thread-find.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread-find.exp: set print sevenbit-strings
PASS: gdb.threads/thread-find.exp: continue to breakpoint: main thread's sleep
PASS: gdb.threads/thread-find.exp: name thread 1
PASS: gdb.threads/thread-find.exp: name thread 2
PASS: gdb.threads/thread-find.exp: name thread 3
PASS: gdb.threads/thread-find.exp: name thread 4
PASS: gdb.threads/thread-find.exp: name thread 5
PASS: gdb.threads/thread-find.exp: name thread 6
PASS: gdb.threads/thread-find.exp: collect thread id
PASS: gdb.threads/thread-find.exp: got thread ids
PASS: gdb.threads/thread-find.exp: collect process id
PASS: gdb.threads/thread-find.exp: collect lwp id
PASS: gdb.threads/thread-find.exp: got lwp ids
PASS: gdb.threads/thread-find.exp: find thread name 6
PASS: gdb.threads/thread-find.exp: find thread name 5
PASS: gdb.threads/thread-find.exp: find thread name 4
PASS: gdb.threads/thread-find.exp: find thread name 3
PASS: gdb.threads/thread-find.exp: find thread name 2
PASS: gdb.threads/thread-find.exp: find thread name 1
PASS: gdb.threads/thread-find.exp: find thread id 6
PASS: gdb.threads/thread-find.exp: find thread id 5
PASS: gdb.threads/thread-find.exp: find thread id 4
PASS: gdb.threads/thread-find.exp: find thread id 3
PASS: gdb.threads/thread-find.exp: find thread id 2
PASS: gdb.threads/thread-find.exp: find thread id 1
PASS: gdb.threads/thread-find.exp: find lwp id 6
PASS: gdb.threads/thread-find.exp: find lwp id 5
PASS: gdb.threads/thread-find.exp: find lwp id 4
PASS: gdb.threads/thread-find.exp: find lwp id 3
PASS: gdb.threads/thread-find.exp: find lwp id 2
PASS: gdb.threads/thread-find.exp: find lwp id 1
PASS: gdb.threads/thread-find.exp: no thread
PASS: gdb.threads/thread-find.exp: test regular exp
PASS: gdb.threads/thread-find.exp: info threads 2 4 6
PASS: gdb.threads/thread-find.exp: info threads 3-5
PASS: gdb.threads/thread-find.exp: test inverted range
PASS: gdb.threads/thread-find.exp: info threads 3-3
PASS: gdb.threads/thread-find.exp: info thread foo
PASS: gdb.threads/thread-find.exp: info thread foo -1
Running ../../../master/gdb/testsuite/gdb.threads/thread-specific.exp ...
PASS: gdb.threads/thread-specific.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread-specific.exp: set print sevenbit-strings
PASS: gdb.threads/thread-specific.exp: set width 0
PASS: gdb.threads/thread-specific.exp: thread var when not running
PASS: gdb.threads/thread-specific.exp: continue to breakpoint: all threads started
PASS: gdb.threads/thread-specific.exp: get threads list
PASS: gdb.threads/thread-specific.exp: thread var in main
PASS: gdb.threads/thread-specific.exp: breakpoint 59 main thread
PASS: gdb.threads/thread-specific.exp: continue to thread-specific breakpoint
PASS: gdb.threads/thread-specific.exp: found breakpoint for thread number
PASS: gdb.threads/thread-specific.exp: thread var at break
Running ../../../master/gdb/testsuite/gdb.threads/thread-unwindonsignal.exp ...
PASS: gdb.threads/thread-unwindonsignal.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread-unwindonsignal.exp: breakpoint on all_threads_running
PASS: gdb.threads/thread-unwindonsignal.exp: run to all_threads_running
PASS: gdb.threads/thread-unwindonsignal.exp: setting unwindonsignal
PASS: gdb.threads/thread-unwindonsignal.exp: showing unwindonsignal
PASS: gdb.threads/thread-unwindonsignal.exp: hand-call interrupted by signal in another thread
PASS: gdb.threads/thread-unwindonsignal.exp: dummy stack frame present
PASS: gdb.threads/thread-unwindonsignal.exp: wrong thread not unwound
PASS: gdb.threads/thread-unwindonsignal.exp: finish hand-call
PASS: gdb.threads/thread-unwindonsignal.exp: dummy frame popped
PASS: gdb.threads/thread-unwindonsignal.exp: continue until exit
Running ../../../master/gdb/testsuite/gdb.threads/thread_check.exp ...
PASS: gdb.threads/thread_check.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread_check.exp: breakpoint at tf
PASS: gdb.threads/thread_check.exp: continue to tf
PASS: gdb.threads/thread_check.exp: backtrace from thread function
Running ../../../master/gdb/testsuite/gdb.threads/thread_events.exp ...
PASS: gdb.threads/thread_events.exp: successfully compiled posix threads test case
PASS: gdb.threads/thread_events.exp: set print thread-events off
PASS: gdb.threads/thread_events.exp: breakpoint at threadfunc with messages disabled
PASS: gdb.threads/thread_events.exp: breakpoint at after_join_func with messages disabled
PASS: gdb.threads/thread_events.exp: continue to threadfunc with messages disabled
PASS: gdb.threads/thread_events.exp: continue to after_join_func with messages disabled
PASS: gdb.threads/thread_events.exp: set print thread-events on
PASS: gdb.threads/thread_events.exp: breakpoint at threadfunc with messages enabled
PASS: gdb.threads/thread_events.exp: breakpoint at after_join_func with messages enabled
PASS: gdb.threads/thread_events.exp: continue to threadfunc with messages enabled
PASS: gdb.threads/thread_events.exp: continue to after_join_func with messages enabled
Running ../../../master/gdb/testsuite/gdb.threads/threadapply.exp ...
PASS: gdb.threads/threadapply.exp: successfully compiled posix threads test case
PASS: gdb.threads/threadapply.exp: b 63
PASS: gdb.threads/threadapply.exp: continue
PASS: gdb.threads/threadapply.exp: macro details
PASS: gdb.threads/threadapply.exp: defining macro
PASS: gdb.threads/threadapply.exp: set backtrace limit 3
PASS: gdb.threads/threadapply.exp: thread apply all backthread
PASS: gdb.threads/threadapply.exp: step to the thread_function
PASS: gdb.threads/threadapply.exp: go up in the stack frame
PASS: gdb.threads/threadapply.exp: run a simple print command on all threads
PASS: gdb.threads/threadapply.exp: go down and check selected frame
Running ../../../master/gdb/testsuite/gdb.threads/threxit-hop-specific.exp ...
PASS: gdb.threads/threxit-hop-specific.exp: successfully compiled posix threads test case
PASS: gdb.threads/threxit-hop-specific.exp: continue to thread start
PASS: gdb.threads/threxit-hop-specific.exp: set thread specific breakpoint
PASS: gdb.threads/threxit-hop-specific.exp: get past the thread specific breakpoint
Running ../../../master/gdb/testsuite/gdb.threads/tls-nodebug.exp ...
PASS: gdb.threads/tls-nodebug.exp: successfully compiled posix threads test case
PASS: gdb.threads/tls-nodebug.exp: thread local storage
Running ../../../master/gdb/testsuite/gdb.threads/tls-shared.exp ...
PASS: gdb.threads/tls-shared.exp: successfully compiled posix threads test case
PASS: gdb.threads/tls-shared.exp: successfully compiled posix threads test case
PASS: gdb.threads/tls-shared.exp: successfully compiled posix threads test case
PASS: gdb.threads/tls-shared.exp: print thread local storage variable
PASS: gdb.threads/tls-shared.exp: ptype of thread local storage variable
PASS: gdb.threads/tls-shared.exp: print storage info for thread local storage variable
PASS: gdb.threads/tls-shared.exp: break at and of main
PASS: gdb.threads/tls-shared.exp: continue to break
PASS: gdb.threads/tls-shared.exp: print result
Running ../../../master/gdb/testsuite/gdb.threads/tls.exp ...
PASS: gdb.threads/tls.exp: successfully compiled posix threads test case
PASS: gdb.threads/tls.exp: set breakpoint at all threads
PASS: gdb.threads/tls.exp: set breakpoint at synch point
PASS: gdb.threads/tls.exp: set breakpoint at exit
PASS: gdb.threads/tls.exp: continue to first thread: get to thread
PASS: gdb.threads/tls.exp: at least one th in spin while stopped at first th
PASS: gdb.threads/tls.exp: first thread print me
PASS: gdb.threads/tls.exp: first thread local storage
PASS: gdb.threads/tls.exp: first another thread local storage
PASS: gdb.threads/tls.exp: first info address a_thread_local
PASS: gdb.threads/tls.exp: first info address another_thread_local
PASS: gdb.threads/tls.exp: continue to second thread
PASS: gdb.threads/tls.exp: at least one th in spin while stopped at second th
PASS: gdb.threads/tls.exp: second thread print me
PASS: gdb.threads/tls.exp: second thread local storage
PASS: gdb.threads/tls.exp: second another thread local storage
PASS: gdb.threads/tls.exp: second info address a_thread_local
PASS: gdb.threads/tls.exp: second info address another_thread_local
PASS: gdb.threads/tls.exp: continue to third thread
PASS: gdb.threads/tls.exp: at least one th in spin while stopped at third th
PASS: gdb.threads/tls.exp: third thread print me
PASS: gdb.threads/tls.exp: third thread local storage
PASS: gdb.threads/tls.exp: third another thread local storage
PASS: gdb.threads/tls.exp: third info address a_thread_local
PASS: gdb.threads/tls.exp: third info address another_thread_local
PASS: gdb.threads/tls.exp: continue to synch point
PASS: gdb.threads/tls.exp: get number of threads
PASS: gdb.threads/tls.exp: selected thread: 1
PASS: gdb.threads/tls.exp: backtrace of thread number 1 not relevant
PASS: gdb.threads/tls.exp: selected thread: 2
PASS: gdb.threads/tls.exp: backtrace of thread number 2 in spin
PASS: gdb.threads/tls.exp: selected thread: 3
PASS: gdb.threads/tls.exp: backtrace of thread number 3 in spin
PASS: gdb.threads/tls.exp: selected thread: 4
PASS: gdb.threads/tls.exp: backtrace of thread number 4 in spin
PASS: gdb.threads/tls.exp: selected thread: 4
PASS: gdb.threads/tls.exp: thread 4 up
PASS: gdb.threads/tls.exp: 4 thread print me
PASS: gdb.threads/tls.exp: 4 thread local storage
PASS: gdb.threads/tls.exp: 4 another thread local storage
PASS: gdb.threads/tls.exp: 4 info address a_thread_local
PASS: gdb.threads/tls.exp: 4 info address another_thread_local
PASS: gdb.threads/tls.exp: selected thread: 2
PASS: gdb.threads/tls.exp: thread 2 up
PASS: gdb.threads/tls.exp: 2 thread print me
PASS: gdb.threads/tls.exp: 2 thread local storage
PASS: gdb.threads/tls.exp: 2 another thread local storage
PASS: gdb.threads/tls.exp: 2 info address a_thread_local
PASS: gdb.threads/tls.exp: 2 info address another_thread_local
PASS: gdb.threads/tls.exp: selected thread: 3
PASS: gdb.threads/tls.exp: thread 3 up
PASS: gdb.threads/tls.exp: 3 thread print me
PASS: gdb.threads/tls.exp: 3 thread local storage
PASS: gdb.threads/tls.exp: 3 another thread local storage
PASS: gdb.threads/tls.exp: 3 info address a_thread_local
PASS: gdb.threads/tls.exp: 3 info address another_thread_local
PASS: gdb.threads/tls.exp: threads exited
PASS: gdb.threads/tls.exp: Expect only base thread at end
PASS: gdb.threads/tls.exp: info address a_global
PASS: gdb.threads/tls.exp: info address me
PASS: gdb.threads/tls.exp: p a_thread_local
PASS: gdb.threads/tls.exp: p file2_thread_local
PASS: gdb.threads/tls.exp: info address file2_thread_local
PASS: gdb.threads/tls.exp: p a_thread_local second time
PASS: gdb.threads/tls.exp: info address a_thread_local
Running ../../../master/gdb/testsuite/gdb.threads/watchthreads-reorder.exp ...
PASS: gdb.threads/watchthreads-reorder.exp: successfully compiled posix threads test case
PASS: gdb.threads/watchthreads-reorder.exp: reorder0: set can-use-hw-watchpoints 1
PASS: gdb.threads/watchthreads-reorder.exp: reorder0: rwatch thread1_rwatch
PASS: gdb.threads/watchthreads-reorder.exp: reorder0: rwatch thread2_rwatch
PASS: gdb.threads/watchthreads-reorder.exp: reorder0: continue a
PASS: gdb.threads/watchthreads-reorder.exp: reorder0: continue b
PASS: gdb.threads/watchthreads-reorder.exp: reorder0: set debug infrun 1
PASS: gdb.threads/watchthreads-reorder.exp: reorder0: continue to breakpoint: break-at-exit
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: set can-use-hw-watchpoints 1
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: rwatch thread1_rwatch
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: rwatch thread2_rwatch
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: continue a
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: rwatch unused1_rwatch
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: rwatch unused2_rwatch
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: continue b
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: set debug infrun 1
PASS: gdb.threads/watchthreads-reorder.exp: reorder1: continue to breakpoint: break-at-exit
Running ../../../master/gdb/testsuite/gdb.threads/watchthreads.exp ...
PASS: gdb.threads/watchthreads.exp: successfully compiled posix threads test case
PASS: gdb.threads/watchthreads.exp: watch args[0]
PASS: gdb.threads/watchthreads.exp: watch args[1]
PASS: gdb.threads/watchthreads.exp: disable first watchpoint at 10
PASS: gdb.threads/watchthreads.exp: threaded watch loop
PASS: gdb.threads/watchthreads.exp: first watchpoint on args[0] hit
PASS: gdb.threads/watchthreads.exp: first watchpoint on args[1] hit
PASS: gdb.threads/watchthreads.exp: watchpoint on args[0] hit in thread
PASS: gdb.threads/watchthreads.exp: watchpoint on args[1] hit in thread
PASS: gdb.threads/watchthreads.exp: combination of threaded watchpoints = 30
Running ../../../master/gdb/testsuite/gdb.threads/watchthreads2.exp ...
PASS: gdb.threads/watchthreads2.exp: successfully compiled posix threads test case
PASS: gdb.threads/watchthreads2.exp: breakpoint on thread_started
PASS: gdb.threads/watchthreads2.exp: all threads started
PASS: gdb.threads/watchthreads2.exp: watch x
PASS: gdb.threads/watchthreads2.exp: set var test_ready = 1
PASS: gdb.threads/watchthreads2.exp: all threads incremented x
Running ../../../master/gdb/testsuite/gdb.trace/actions.exp ...
PASS: gdb.trace/actions.exp: 5.1a: set three tracepoints, no actions
PASS: gdb.trace/actions.exp: 5.1b: set actions for first tracepoint
PASS: gdb.trace/actions.exp: 5.1c: verify actions set for first tracepoint
PASS: gdb.trace/actions.exp: 5.1d: set actions for second tracepoint
PASS: gdb.trace/actions.exp: 5.1e: verify actions set for second tracepoint
PASS: gdb.trace/actions.exp: 5.2a: set actions for last (default) tracepoint
PASS: gdb.trace/actions.exp: 5.1e: verify actions set for second tracepoint
PASS: gdb.trace/actions.exp: 5.3a: reset actions for first tracepoint
PASS: gdb.trace/actions.exp: 5.3b: verify actions set for first tracepoint
PASS: gdb.trace/actions.exp: 5.4: 'end' command out of context
PASS: gdb.trace/actions.exp: 5.5a: set empty actions for first tracepoint
PASS: gdb.trace/actions.exp: 5.5c: verify NO actions for first tracepoint
PASS: gdb.trace/actions.exp: 5.6: actions for invalid tracepoint number
PASS: gdb.trace/actions.exp: 5.7: invalid action
PASS: gdb.trace/actions.exp: 5.8a: help actions
PASS: gdb.trace/actions.exp: 5.8b: help collect
PASS: gdb.trace/actions.exp: 5.8c: help while-stepping
PASS: gdb.trace/actions.exp: 5.8d: help end
PASS: gdb.trace/actions.exp: 5.9a: set default-collect
PASS: gdb.trace/actions.exp: 5.9b: show default-collect
PASS: gdb.trace/actions.exp: 5.9c: set default-collect
PASS: gdb.trace/actions.exp: Create a trace state variable
PASS: gdb.trace/actions.exp: 5.10a: set teval action for first tracepoint
PASS: gdb.trace/actions.exp: 5.10a: set teval action for second tracepoint
PASS: gdb.trace/actions.exp: 5.10a: verify teval actions set for two tracepoints
Running ../../../master/gdb/testsuite/gdb.trace/ax.exp ...
PASS: gdb.trace/ax.exp: maint agent 12
PASS: gdb.trace/ax.exp: maint agent gdb_char_test
PASS: gdb.trace/ax.exp: maint agent gdb_arr_test[12]
PASS: gdb.trace/ax.exp: maint agent gdb_arr_test[gdb_short_test]
PASS: gdb.trace/ax.exp: maint agent gdb_struct1_test
PASS: gdb.trace/ax.exp: maint agent gdb_struct1_test.s
PASS: gdb.trace/ax.exp: maint agent gdb_struct1_test.arr[gdb_struct1_test.c]
PASS: gdb.trace/ax.exp: maint agent gdb_structp_test
PASS: gdb.trace/ax.exp: maint agent gdb_structp_test->l
PASS: gdb.trace/ax.exp: maint agent gdb_structp_test->bfield
PASS: gdb.trace/ax.exp: maint agent gdb_long_test + gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test - gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test * gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test / gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_structp_test + 1
PASS: gdb.trace/ax.exp: maint agent gdb_long_test == gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test != gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test < gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test <= gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test > gdb_short_test
PASS: gdb.trace/ax.exp: maint agent gdb_long_test >= gdb_short_test
PASS: gdb.trace/ax.exp: maint agent &gdb_long_test == &gdb_short_test
PASS: gdb.trace/ax.exp: maint agent &gdb_long_test < &gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval 12
PASS: gdb.trace/ax.exp: maint agent-eval gdb_char_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_arr_test[12]
PASS: gdb.trace/ax.exp: maint agent-eval gdb_arr_test[gdb_short_test]
PASS: gdb.trace/ax.exp: maint agent-eval gdb_struct1_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_struct1_test.s
PASS: gdb.trace/ax.exp: maint agent-eval gdb_struct1_test.arr[gdb_struct1_test.c]
PASS: gdb.trace/ax.exp: maint agent-eval gdb_structp_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_structp_test->l
PASS: gdb.trace/ax.exp: maint agent-eval gdb_structp_test->bfield
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test + gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test - gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test * gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test / gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_structp_test + 1
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test == gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test != gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test < gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test <= gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test > gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval gdb_long_test >= gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval &gdb_long_test == &gdb_short_test
PASS: gdb.trace/ax.exp: maint agent-eval &gdb_long_test < &gdb_short_test
Running ../../../master/gdb/testsuite/gdb.trace/backtrace.exp ...
PASS: gdb.trace/backtrace.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/circ.exp ...
PASS: gdb.trace/circ.exp: set circular-trace-buffer on
PASS: gdb.trace/circ.exp: show circular-trace-buffer (on)
PASS: gdb.trace/circ.exp: set circular-trace-buffer off
PASS: gdb.trace/circ.exp: show circular-trace-buffer (off)
PASS: gdb.trace/circ.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/collection.exp ...
PASS: gdb.trace/collection.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/deltrace.exp ...
PASS: gdb.trace/deltrace.exp: set tracepoint 1
PASS: gdb.trace/deltrace.exp: set tracepoint 2
PASS: gdb.trace/deltrace.exp: set tracepoint 3
PASS: gdb.trace/deltrace.exp: 3.1a: set three tracepoints
PASS: gdb.trace/deltrace.exp: 3.1b: delete all tracepoints
PASS: gdb.trace/deltrace.exp: 3.2a: set three tracepoints
PASS: gdb.trace/deltrace.exp: 3.2b: delete first tracepoint
PASS: gdb.trace/deltrace.exp: 3.2c: verify delete first tracepoint
PASS: gdb.trace/deltrace.exp: 3.2d: delete second tracepoint
PASS: gdb.trace/deltrace.exp: 3.2e: verify delete second tracepoint
PASS: gdb.trace/deltrace.exp: 3.2f: delete third tracepoint
PASS: gdb.trace/deltrace.exp: 3.2g: verify delete third tracepoint
PASS: gdb.trace/deltrace.exp: 3.3a: set three tracepoints
PASS: gdb.trace/deltrace.exp: 3.3b: delete three tracepoints
PASS: gdb.trace/deltrace.exp: 3.3c: verify delete three tracepoints
PASS: gdb.trace/deltrace.exp: 3.4: delete invalid tracepoint number
PASS: gdb.trace/deltrace.exp: 3.5: delete tracepoint number zero
PASS: gdb.trace/deltrace.exp: 3.6: help delete tracepoints
Running ../../../master/gdb/testsuite/gdb.trace/infotrace.exp ...
PASS: gdb.trace/infotrace.exp: 2.1: info tracepoints (all)
PASS: gdb.trace/infotrace.exp: 2.2a: info tracepoint 1 (gdb_c_test)
PASS: gdb.trace/infotrace.exp: 2.2b: info tracepoint 2 (gdb_asm_test)
PASS: gdb.trace/infotrace.exp: 2.3: info tracepoint (invalid tracepoint number)
PASS: gdb.trace/infotrace.exp: 2.4: info trace rejects multiple tracepoint numbers
PASS: gdb.trace/infotrace.exp: 2.5: help info tracepoints
Running ../../../master/gdb/testsuite/gdb.trace/packetlen.exp ...
PASS: gdb.trace/packetlen.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/passc-dyn.exp ...
PASS: gdb.trace/passc-dyn.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/passcount.exp ...
PASS: gdb.trace/passcount.exp: 4.1a: set three tracepoints, passcounts all zero
PASS: gdb.trace/passcount.exp: 4.1b: set 1st tracepoint's passcount to two
PASS: gdb.trace/passcount.exp: 4.1c: verify 1st tracepoint's passcount set to two
PASS: gdb.trace/passcount.exp: 4.1d: set 2nd tracepoint's passcount to four
PASS: gdb.trace/passcount.exp: 4.1c: verify 2nd tracepoint's passcount set to four
PASS: gdb.trace/passcount.exp: 4.2b: set last (default) tp's passcount to six
PASS: gdb.trace/passcount.exp: 4.2b: verify last (default) tp's passcount set to six
PASS: gdb.trace/passcount.exp: 4.4a: reset last (default) tp's passcount to seven
PASS: gdb.trace/passcount.exp: 4.4a: verify reset last (default) tp's passcount to seven
PASS: gdb.trace/passcount.exp: 4.4b: reset second tracepoint's passcount to five
PASS: gdb.trace/passcount.exp: 4.4c: verify reset second tracepoint's passcount to five
PASS: gdb.trace/passcount.exp: 4.20a: set all three passcounts to three
PASS: gdb.trace/passcount.exp: 4.20a: set all three passcounts to three
PASS: gdb.trace/passcount.exp: 4.20a: reset all three passcounts to four
PASS: gdb.trace/passcount.exp: 4.20b: reset all three passcounts to four
PASS: gdb.trace/passcount.exp: 4.6: set passcount to zero
PASS: gdb.trace/passcount.exp: 4.6: set passcount to zero
PASS: gdb.trace/passcount.exp: 4.7: set passcount to large number (32767)
PASS: gdb.trace/passcount.exp: 4.7: set passcount to large number (32767)
PASS: gdb.trace/passcount.exp: 4.8: invalid tracepoint number in passcount
PASS: gdb.trace/passcount.exp: 4.9: help passcount
Running ../../../master/gdb/testsuite/gdb.trace/report.exp ...
PASS: gdb.trace/report.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/save-trace.exp ...
PASS: gdb.trace/save-trace.exp: 10.x: set passcount for tracepoint 1
PASS: gdb.trace/save-trace.exp: 10.x: set condition for tracepoint 1
PASS: gdb.trace/save-trace.exp: 10.x: set actions for tracepoint 1
PASS: gdb.trace/save-trace.exp: 10.x: set passcount for tracepoint 2
PASS: gdb.trace/save-trace.exp: 10.x: set condition for tracepoint 2
PASS: gdb.trace/save-trace.exp: 10.x: set actions for tracepoint 2
PASS: gdb.trace/save-trace.exp: 10.x: set passcount for tracepoint 3
PASS: gdb.trace/save-trace.exp: 10.x: set condition for tracepoint 3
PASS: gdb.trace/save-trace.exp: 10.x: set actions for tracepoint 3
PASS: gdb.trace/save-trace.exp: 10.x: set passcount for tracepoint 4
PASS: gdb.trace/save-trace.exp: 10.x: set condition for tracepoint 4
PASS: gdb.trace/save-trace.exp: 10.x: set actions for tracepoint 4
PASS: gdb.trace/save-trace.exp: 10.x: set passcount for tracepoint 5
PASS: gdb.trace/save-trace.exp: 10.x: set condition for tracepoint 5
PASS: gdb.trace/save-trace.exp: 10.x: set actions for tracepoint 5
PASS: gdb.trace/save-trace.exp: 10.x: set passcount for tracepoint 6
PASS: gdb.trace/save-trace.exp: 10.x: set condition for tracepoint 6
PASS: gdb.trace/save-trace.exp: 10.x: set actions for tracepoint 6
PASS: gdb.trace/save-trace.exp: 10: set default-collect
PASS: gdb.trace/save-trace.exp: 10.x: verify trace setup
PASS: gdb.trace/save-trace.exp: 10: show default-collect
PASS: gdb.trace/save-trace.exp: 10.1: save tracepoint definitions
PASS: gdb.trace/save-trace.exp: 10.2: clear default-collect
PASS: gdb.trace/save-trace.exp: 10.2: delete tracepoints
PASS: gdb.trace/save-trace.exp: 10.2: read back saved tracepoints
PASS: gdb.trace/save-trace.exp: 10.2: verify recovered tracepoints
PASS: gdb.trace/save-trace.exp: 10: show default-collect
PASS: gdb.trace/save-trace.exp: 10.3: save tracepoint definitions, full path
PASS: gdb.trace/save-trace.exp: 10.3: clear default-collect
PASS: gdb.trace/save-trace.exp: 10.3: delete tracepoints
PASS: gdb.trace/save-trace.exp: 10.4: read saved tracepoints, full path
PASS: gdb.trace/save-trace.exp: 10.3: verify recovered tracepoints, full path
PASS: gdb.trace/save-trace.exp: 10: show default-collect
PASS: gdb.trace/save-trace.exp: 10.7: help save-tracepoints
Running ../../../master/gdb/testsuite/gdb.trace/tfile.exp ...
PASS: gdb.trace/tfile.exp: target tfile
PASS: gdb.trace/tfile.exp: info tracepoints on trace file
PASS: gdb.trace/tfile.exp: tfind 0 on trace file
PASS: gdb.trace/tfile.exp: print testglob on trace file
PASS: gdb.trace/tfile.exp: print testglob2 on trace file
PASS: gdb.trace/tfile.exp: print constglob on trace file
PASS: gdb.trace/tfile.exp: tfind does not find a second frame in trace file
PASS: gdb.trace/tfile.exp: tstatus on trace file
PASS: gdb.trace/tfile.exp: leave tfind mode
PASS: gdb.trace/tfile.exp: no stack if no traceframe selected
PASS: gdb.trace/tfile.exp: no registers if no traceframe selected
PASS: gdb.trace/tfile.exp: target tfile
PASS: gdb.trace/tfile.exp: tstatus on error trace file
PASS: gdb.trace/tfile.exp: interpreter-exec mi "-target-select tfile basic.tf"
Running ../../../master/gdb/testsuite/gdb.trace/tfind.exp ...
PASS: gdb.trace/tfind.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/tracecmd.exp ...
PASS: gdb.trace/tracecmd.exp: 1.0: help tracepoints
PASS: gdb.trace/tracecmd.exp: 1.1a: set tracepoint at sourceline
PASS: gdb.trace/tracecmd.exp: 1.1b: trace sourcefile:line
PASS: gdb.trace/tracecmd.exp: 1.2a: trace invalid line in sourcefile
PASS: gdb.trace/tracecmd.exp: 1.2b: reject invalid line in srcfile
PASS: gdb.trace/tracecmd.exp: set breakpoint pending off
PASS: gdb.trace/tracecmd.exp: 1.3a: trace invalid source file
PASS: gdb.trace/tracecmd.exp: 1.3b: reject invalid srcfile
PASS: gdb.trace/tracecmd.exp: 1.4a: trace function by name
PASS: gdb.trace/tracecmd.exp: 1.4b: trace function by name
PASS: gdb.trace/tracecmd.exp: 1.5a: trace invalid function
PASS: gdb.trace/tracecmd.exp: 1.5b: reject invalid srcfile
PASS: gdb.trace/tracecmd.exp: 1.6a: trace at specific address
PASS: gdb.trace/tracecmd.exp: 1.6b: verify trace at specific address
PASS: gdb.trace/tracecmd.exp: 1.7a: trace at function label (before prologue)
PASS: gdb.trace/tracecmd.exp: 1.7b: verify trace at specific address
PASS: gdb.trace/tracecmd.exp: 1.9: trace <no arguments>
PASS: gdb.trace/tracecmd.exp: 1.11a: conditional tracepoint
PASS: gdb.trace/tracecmd.exp: 1.11b: verify conditional tracepoint
PASS: gdb.trace/tracecmd.exp: 1.14: help trace
PASS: gdb.trace/tracecmd.exp: Declined to set a fast tracepoint
Running ../../../master/gdb/testsuite/gdb.trace/tsv.exp ...
PASS: gdb.trace/tsv.exp: Create a trace state variable
PASS: gdb.trace/tsv.exp: Create a trace state variable with initial value
PASS: gdb.trace/tsv.exp: Change initial value of a trace state variable
PASS: gdb.trace/tsv.exp: Create a trace state variable with expression
PASS: gdb.trace/tsv.exp: Init trace state variable to a 64-bit value
PASS: gdb.trace/tsv.exp: tvariable syntax error, bad name
PASS: gdb.trace/tsv.exp: tvariable syntax error, not an assignment
PASS: gdb.trace/tsv.exp: List tvariables
PASS: gdb.trace/tsv.exp: Print a trace state variable before run
PASS: gdb.trace/tsv.exp: delete trace state variable
PASS: gdb.trace/tsv.exp: List tvariables after deletion
PASS: gdb.trace/tsv.exp: Delete all trace state variables
PASS: gdb.trace/tsv.exp: List tvariables after deleting all
PASS: gdb.trace/tsv.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/unavailable.exp ...
PASS: gdb.trace/unavailable.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/while-dyn.exp ...
PASS: gdb.trace/while-dyn.exp: Current target does not support trace
Running ../../../master/gdb/testsuite/gdb.trace/while-stepping.exp ...
PASS: gdb.trace/while-stepping.exp: 5.12: set a tracepoint, stepcount is zero
PASS: gdb.trace/while-stepping.exp: 5.12: set stepcount to 12
PASS: gdb.trace/while-stepping.exp: 5.12: info trace shows "while-stepping"
PASS: gdb.trace/while-stepping.exp: 5.14: while-stepping null stepcount
PASS: gdb.trace/while-stepping.exp: 5.15: while-stepping rejects zero stepcount
PASS: gdb.trace/while-stepping.exp: 5.16: step without collecting anything
PASS: gdb.trace/while-stepping.exp: 5.16: confirm actions, step without collecting anything
Running ../../../master/gdb/testsuite/gdb.xml/tdesc-arch.exp ...
PASS: gdb.xml/tdesc-arch.exp: read valid architectures
PASS: gdb.xml/tdesc-arch.exp: read default architecture
PASS: gdb.xml/tdesc-arch.exp: set tdesc filename tdesc-arch.xml (first architecture)
PASS: gdb.xml/tdesc-arch.exp: show architecture (first architecture)
KFAIL: gdb.xml/tdesc-arch.exp: set tdesc filename tdesc-arch.xml (second architecture) (PRMS: gdb/2225)
PASS: gdb.xml/tdesc-arch.exp: show architecture (second architecture)
PASS: gdb.xml/tdesc-arch.exp: set tdesc filename tdesc-arch.xml (invalid architecture)
PASS: gdb.xml/tdesc-arch.exp: show architecture (invalid architecture)
Running ../../../master/gdb/testsuite/gdb.xml/tdesc-errors.exp ...
PASS: gdb.xml/tdesc-errors.exp: set tdesc filename gdb.xml/tdesc-bogus.xml
PASS: gdb.xml/tdesc-errors.exp: set tdesc filename gdb.xml/tdesc-unknown.xml
Running ../../../master/gdb/testsuite/gdb.xml/tdesc-regs.exp ...
PASS: gdb.xml/tdesc-regs.exp: set tdesc file single-reg.xml
PASS: gdb.xml/tdesc-regs.exp: set tdesc filename regs.xml - from extra-regs.xml
PASS: gdb.xml/tdesc-regs.exp: ptype $extrareg
PASS: gdb.xml/tdesc-regs.exp: ptype $uintreg
PASS: gdb.xml/tdesc-regs.exp: ptype $vecreg
PASS: gdb.xml/tdesc-regs.exp: ptype $unionreg
PASS: gdb.xml/tdesc-regs.exp: ptype $unionreg.v4
PASS: gdb.xml/tdesc-regs.exp: ptype $structreg
PASS: gdb.xml/tdesc-regs.exp: ptype $structreg.v4
PASS: gdb.xml/tdesc-regs.exp: ptype $bitfields
PASS: gdb.xml/tdesc-regs.exp: set tdesc filename regs.xml - from core-only.xml
PASS: gdb.xml/tdesc-regs.exp: ptype $extrareg
Running ../../../master/gdb/testsuite/gdb.xml/tdesc-xinclude.exp ...
PASS: gdb.xml/tdesc-xinclude.exp: set tdesc filename gdb.xml/includes.xml
PASS: gdb.xml/tdesc-xinclude.exp: set tdesc filename gdb.xml/bad-include.xml
PASS: gdb.xml/tdesc-xinclude.exp: set tdesc filename gdb.xml/loop.xml

		=== gdb Summary ===

# of expected passes		17595
# of unexpected failures	11
# of unexpected successes	3
# of expected failures		73
# of untested testcases		12
# of unsupported tests		69
[...]/hurd/master.build/gdb/testsuite/../../gdb/gdb version  7.3.50.20110704-cvs -nw -nx -data-directory [...]/hurd/master.build/gdb/testsuite/../data-directory 

