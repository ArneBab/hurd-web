[[!meta copyright="Copyright Â© 2011 Free Software Foundation, Inc."]]

[[!meta license="""[[!toggle id="license" text="GFDL 1.2+"]][[!toggleable
id="license" text="Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
is included in the section entitled [[GNU Free Documentation
License|/fdl]]."]]"""]]

[[!tag open_issue_gnumach]]

IRC, freenode, #hurd, 2011-11-28:

    <braunr> youpi: would you find it reasonable to completely disable the page
      cache in gnumach ?
    <braunr> i'm wondering if it wouldn't help make the system more stable
      under memory pressure
    <youpi> assuming cache=writeback in gnumach?
    <youpi> because disabling the page cache will horribly hit performance
    <braunr> no, it doesn't have anything to do with the host
    <braunr> i'm not so sure
    <braunr> while observing the slab allocator, i noticed our page cache is
      not used that often
    <youpi> eeh?
    <youpi> apart from the damn 4000 limitation, I've seen it used
    <youpi> (and I don't  why it wouldn't be used)
    <youpi> (e.g. for all parts of libc)
    <youpi> ah, no, libc would be kept open by ext2fs
    <braunr> taht's precisely because of the 4k limit
    <youpi> but e.g. .o file emitted during make
    <braunr> well, no
    <youpi> well, see the summary I had posted some time ago, the 4k limit
      makes it completely randomized
    <youpi> and thus you lose locality
    <braunr> yes
    <youpi> but dropping the limit would just fix it
    <braunr> that's my point
    <youpi> which I had tried to do, and there were issues, you mentioned why
    <youpi> and (as usual), I haven't had anyu time to have a look at the issue
      again
    <braunr> i'm just trying to figure out the pros and cons for having teh
      current page cache implementation
    <braunr> but are you saying you tried with a strict limit of 0 ?
    <youpi> non, I'm saying I tried with no limit
    <youpi> but then memory fills up
    <braunr> yes
    <youpi> so trying to garbage collect
    <braunr> i tried that too, the system became unstable very quickly
    <youpi> but refs don't falldown to 0, you said
    <braunr> did i ?
    <youpi> or maybe somebody else
    <youpi> see the list archives
    <braunr> that's possible
    <braunr> i'd imagine someone like sergio lopez
    <youpi> possibly
    <youpi> somebody that knows memory stuff way better than me in any case
    <braunr> youpi: i'm just wondering how much we'd loose by disabling the
      page cache, and if we actually gain more stability (and ofc, if it's
      worth it)
    <youpi> no idea, measures will tell
    <youpi> fixing the page cache shouldn't be too hard I believe, however
    <youpi> you just need to know what you are doing, which I don't
    <youpi> I do believe the cache is still at least a bit useful
    <youpi> even if dumb because of randomness
    <youpi> e.g. running make lib in the glibc tree gets faster on second time
    <youpi> because the cache wouldbe filled at least randomly with glibc tree
      stuff
    <braunr> yes, i agree on that
    <youpi> braunr: btw, the current stability is fine for the buildds
    <youpi> restarting them every few days is ok
    <youpi> so I'd rather keep the performance :)
    <braunr> ok
