[[!meta copyright="Copyright Â© 2011 Free Software Foundation, Inc."]]

[[!meta license="""[[!toggle id="license" text="GFDL 1.2+"]][[!toggleable
id="license" text="Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
is included in the section entitled [[GNU Free Documentation
License|/fdl]]."]]"""]]

[[!tag open_issue_documentation open_issue_hurd]]


# IRC, freenode, #hurd, 2011-11-18

    <nocturnal> I'm learning about GNU Hurd and was speculating with a friend
      who is also a computer enthusiast. I would like to know if Hurds
      microkernel can recover services should they crash? and if it can, does
      that recovery code exist in multiple services or just one core kernel
      service? 
    <braunr> nocturnal: you should read about passive translators
    <braunr> basically, there is no dedicated service to restore crashed
      servers
    <etenil> Hi everyone!
    <braunr> services can crash and be restarted, but persistence support is
      limited, and rather per serivce
    <braunr> actually persistence is more a side effect than a designed thing
    <braunr> etenil: hello
    <etenil> braunr: translators can also be spawned on an ad-hoc basis, for
      instance when accessing a particular file, no?
    <braunr> that's what being passive, for a translator, means
    <etenil> ah yeah I thought so :)


# IRC, freenode, #hurd, 2011-11-19

    <chromaticwt> will hurd ever have the equivalent of a rs server?, is that
      even possible with hurd?
    <youpi> chromaticwt: what is an rs server ?
    <chromaticwt> a reincarnation server
    <youpi> ah, like minix. Well, the main ground issue is restoring existing
      information, such as pids of processes, etc.
    <youpi> I don't know how minix manages it
    <antrik> chromaticwt: I have a vision of a session manager that could also
      take care of reincarnation... but then, knowing myself, I'll probably
      never imlement it
    <youpi> we do get proc  crashes from times to times
    <youpi> it'd be cool to see the system heal itself :)
    <braunr> i need a better description of reincarnation
    <braunr> i didn't think it would make core servers like proc able to get
      resurrected in a safe way
    <antrik> depends on how it is implemented
    <antrik> I don't know much about Minix, but I suspect they can recover most
      core servers
    <antrik> essentially, the condition is to make all precious state be
      constantly serialised, and held by some third party, so the reincarnated
      server could restore it
    <braunr> should it work across reboots ?
    <antrik> I haven't thought about the details of implementing it for each
      core server; but proc should be doable I guess... it's not necessary for
      the system to operate, just for various UNIX mechanisms
    <antrik> well, I'm not aware of the Minix implementation working across
      reboots. the one I have in mind based on a generic session management
      infrastructure should though :-)
