[[!meta copyright="Copyright Â© 2013 Free Software Foundation, Inc."]]

[[!meta license="""[[!toggle id="license" text="GFDL 1.2+"]][[!toggleable
id="license" text="Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
is included in the section entitled [[GNU Free Documentation
License|/fdl]]."]]"""]]

[[!tag open_issue_hurd]]


# IRC, freenode, #hurd, 2013-02-09

    <youpi> also, can you actually gdb a process of another subhurd?
    <braunr> yes
    <youpi> but you need to talk to its proc server, don't you?
    <braunr> i don't know
    <braunr> but i did it several times
    <youpi> how?
    <braunr> the usual way
    <braunr> gdb /path/to/bin pid
    <youpi> but which pid?
    <braunr> the hard part was finding the right pid
    <youpi> well, gdb still needs to talk with the right proc too
    <braunr> i don't think it does
    <youpi> btw about the "unable to adjust libports thread priority" errors
      I'm seeing on the buildd consoles
    <braunr> from what i've seen, proc "creates" tasks when it first sees them
      too
    <youpi> it's about the destination port
    <braunr> yes
    <braunr> i have those when starting a subhurd too
    <youpi> so it would mean that proc somehow got bogus
    <youpi> ah
    <youpi> so  you can actually use your own proc
    <braunr> yes
    <braunr> and it feels bogus to me
    <youpi> and I guess mach lets that proc access the task because your proc
      is privileged
    <braunr> probably
    <braunr> it feels bogus because, you can't rely on pids being allocated per
      task
    <braunr> what i mean is that, if some tasks spawn and die quickly
    <braunr> and you start another application running long enough to see it in
      ps
    <braunr> it's pid will be +1, not +the number of created tasks
    <braunr> which means the proc server will never have seen those previous
      tasks
    <braunr> it's minor but a bit confusing
    <braunr> i personally don't like seeing the tasks of other systems in ps :/
    <braunr> and despite the ability to use gdb from another hurd, i think we
      should improve the intra system debugging tools
