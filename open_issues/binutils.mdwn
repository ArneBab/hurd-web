[[!meta copyright="Copyright Â© 2007, 2008, 2010, 2011 Free Software Foundation,
Inc."]]

[[!meta license="""[[!toggle id="license" text="GFDL 1.2+"]][[!toggleable
id="license" text="Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
is included in the section entitled [[GNU Free Documentation
License|/fdl]]."]]"""]]

[[!tag stable_URL open_issue_binutils]]

Here's what's to be done for maintaining GNU Binutils.

As these tools primarily deal with low-level parts of the target architecture
and the object file format (ELF ABI), which are essentially (at least meant to
be) the same, there shouldn't be many differences comparing the binutils
between the GNU/Hurd and GNU/Linux ports, for example.  There are a few,
though, as explained below.

[[!toc levels=2]]


# [[General information|/binutils]]


# [[Sources|source_repositories/binutils]]


# Configuration

Last reviewed up to the [[Git mirror's 57a1a9e822a763aeeb3ea66fd493aa58888c76c4
(2011-07-03) sources|source_repositories/binutils]].

  * Globally

      * a.out, COFF, PE image support and 64 bit support are not interesting.

      * In the testsuites, `.exp` and `.d` files very likely should not only
        care for `*-*-linux*`, but also `*-*-gnu*`.  (If the need to be
        conditionalized like this at all.)

  * `bfd/`

      * `config.bfd`

          * `i[3-7]86-*-gnu*`

            Comparing to `i[3-7]86-*-linux-*`:

              * `i386linux_vec` -- a.out.

              * `i386pei_vec` -- PE.

              * 64 bit.

      * `configure.host`

        Souldn't need anything.  x86 Linux neither.

      * `configure.in`

        Linux:

          * `COREFILE=trad-core.lo` with `TRAD_HEADER='"hosts/i386linux.h"'`

            We don't have any such core file support configured.  TODO: should
            we?  Where is this core file reading exactly used?  GDB?

          * `i386linux_vec` -- a.out.

          * `i386pei_vec` -- PE.

  * `binutils/`

      * `configure.tgt`

  * `gas/`

      * `config/te-gnu.h`

        C.f. `te-linux.h`; search tree for `TE_LINUX` vs. `TE_GNU` usage.

          * `tc-i386.h`

            Sole `TE_LINUX` usage is for a.out.

      * `configure.tgt`

  * `ld/`

     * `configure.host`

         * `*-*-gnu*`

            TODO: resolve `crt0.o` vs. `crt1.o` issue.  [[Testsuite
            failures|binutils#static]].

      * `configure.tgt`

          * `i[3-7]86-*-gnu*`

            Compare to `i[3-7]86-*-linux-*`, but don't need a.out (`i386linux`)
            and 64 bit support.


# Build

Here's a log of a binutils build run; this is from our [[Git repository's
6d4a384ae978b7a423f2cd51b396d366b9000df2 (2011-07-03)
sources|source_repositories/binutils]], run on kepler.SCHWINGE and
coulomb.SCHWINGE.

    $ export LC_ALL=C
    $ ../master/configure --prefix="$PWD".install SHELL=/bin/dash CC=gcc-4.6 CXX=g++-4.6 2>&1 | tee log_build
    [...]
    $ make 2>&1 | tee log_build_
    [...]

(Different hosts may default to different shells and compiler versions; thus
harmonized.)

This takes up around 100 MiB, and needs roughly 4 min on kepler.SCHWINGE, and
15 min on coulomb.SCHWINGE.


## Analysis

x86 GNU/Linux and GNU/Hurd's configurations are slightly
different, thus mask out most of the differences that are due to
GNU/Linux supporting more core file formats, and more emulation vectors.

    $ diff -wu <(ssh kepler.SCHWINGE 'cd tmp/source/binutils/ && cat hurd/master.build/log_build* | sed -e "s%\(/media/data\)\?${PWD}%[...]%g"' | sed -f open_issues/binutils/log_build-linux.sed) <(ssh coulomb.SCHWINGE 'cd tmp/binutils/ && cat hurd/master.build/log_build* | sed "s%\(/media/erich\)\?${PWD}%[...]%g"' | sed -f open_issues/binutils/log_build-hurd.sed) > open_issues/binutils/log_build.diff

[[log_build.diff]].


# Install

    $ make install 2>&1 | tee log_install
    [...]

This takes up around 60 MiB, and needs roughly 1 min on kepler.SCHWINGE, and 5
min on coulomb.SCHWINGE.


## Analysis

    $ diff -wu <(ssh kepler.SCHWINGE 'cd tmp/source/binutils/ && cat hurd/master.build/log_install | sed -e "s%\(/media/data\)\?${PWD}%[...]%g"' | sed -f open_issues/binutils/log_install-linux.sed) <(ssh coulomb.SCHWINGE 'cd tmp/binutils/ && cat hurd/master.build/log_install | sed "s%\(/media/erich\)\?${PWD}%[...]%g"' | sed -f open_issues/binutils/log_install-hurd.sed) > open_issues/binutils/log_install.diff

[[log_install.diff]].

  * `libtool: finish`: `ldconfig` is not run for the Hurd.


# Testsuite

    $ make -k check
    [...]

This needs roughly 5 min on kepler.SCHWINGE, and 15 min on coulomb.SCHWINGE.

    $ ssh kepler.SCHWINGE 'cd tmp/source/binutils/ && cat hurd/master.build/*/*.sum hurd/master.build/*/*/*.sum | sed -e "s%\(/media/data\)\?${PWD}%[...]%g"' > open_issues/binutils/sum_linux
    $ ssh coulomb.SCHWINGE 'cd tmp/binutils/ && cat hurd/master.build/*/*.sum hurd/master.build/*/*/*.sum | sed "s%\(/media/erich\)\?${PWD}%[...]%g"' > open_issues/binutils/sum_hurd

Comparing the results files, [[sum_linux]] to [[sum_hurd]]:

    $ diff -u -F ^Running open_issues/binutils/sum_linux open_issues/binutils/sum_hurd
    --- open_issues/binutils/sum_linux	2011-07-03 23:54:19.000000000 +0200
    +++ open_issues/binutils/sum_hurd	2011-07-03 23:54:25.000000000 +0200
    @@ -1,5 +1,5 @@
    -Test Run By thomas on Sun Jul  3 18:33:54 2011
    -Native configuration is i686-pc-linux-gnu
    +Test Run By thomas on Sun Jul  3 19:11:49 2011
    +Native configuration is i686-unknown-gnu0.3
     
     		=== binutils tests ===
     
    @@ -119,8 +119,8 @@ Running [...]/hurd/master/binutils/tests
     
     # of expected passes		88
     # of unsupported tests		2
    -Test Run By thomas on Sun Jul  3 18:34:31 2011
    -Native configuration is i686-pc-linux-gnu
    +Test Run By thomas on Sun Jul  3 19:14:02 2011
    +Native configuration is i686-unknown-gnu0.3
     
     		=== ld tests ===
     
    @@ -324,10 +324,10 @@ Running [...]/hurd/master/ld/testsuite/l
     PASS: PIE init array
     PASS: PIE fini array
     PASS: PIE init array mixed
    -PASS: static preinit array
    -PASS: static init array
    -PASS: static fini array
    -PASS: static init array mixed
    +XFAIL: static preinit array
    +XFAIL: static init array
    +XFAIL: static fini array
    +XFAIL: static init array mixed
     Running [...]/hurd/master/ld/testsuite/ld-elf/exclude.exp ...
     PASS: ld link shared library
     PASS: ld export symbols from archive
    @@ -581,8 +581,8 @@ Running [...]/hurd/master/ld/testsuite/l
     PASS: ELF DSO weak func last DSO
     PASS: ELF weak func first
     PASS: ELF weak func last
    -PASS: ELF weak func first DSO
    -PASS: ELF weak func last DSO
    +XFAIL: ELF weak func first DSO
    +XFAIL: ELF weak func last DSO
     PASS: ELF DSO weak data first
     PASS: ELF DSO weak data last
     PASS: ELF DSO weak data first DSO
    @@ -593,10 +593,10 @@ Running [...]/hurd/master/ld/testsuite/l
     PASS: ELF weak data last
     PASS: ELF weak data first common
     PASS: ELF weak data last common
    -PASS: ELF weak data first DSO
    -PASS: ELF weak data last DSO
    -PASS: ELF weak data first DSO common
    -PASS: ELF weak data last DSO common
    +XFAIL: ELF weak data first DSO
    +XFAIL: ELF weak data last DSO
    +XFAIL: ELF weak data first DSO common
    +XFAIL: ELF weak data last DSO common
     PASS: ELF DSO small bar (size)
     PASS: ELF DSO foo with small bar (size)
     PASS: ELF DSO big bar (size)
    @@ -924,13 +924,13 @@ Running [...]/hurd/master/ld/testsuite/l
     
     		=== ld Summary ===
     
    -# of expected passes		660
    -# of expected failures		8
    +# of expected passes		650
    +# of expected failures		18
     # of untested testcases		6
     [...]/hurd/master.build/ld/ld-new 2.21.52.20110703
     
    -Test Run By thomas on Sun Jul  3 18:34:03 2011
    -Native configuration is i686-pc-linux-gnu
    +Test Run By thomas on Sun Jul  3 19:12:21 2011
    +Native configuration is i686-unknown-gnu0.3
     
     		=== gas tests ===
     


## Analysis

  * <a name="static"><!-- stable_URL -->`FAIL: static [...]`</a>

    The testsuite isn't prepared for using `crt0.o` instead of `crt1.o`
    depending on whether a static or dynamic executable is created.  Documented
    in `ld/configure.host`.  Perhaps we should finally rewrite this messy code
    in glibc?

  * <a name="64ksec">`FAIL: ld-elf/64ksec`</a>

    On the idle grubber, this one takes a few minutes wall time to complete
    successfully ([[I/O system
    weakness|performance/io_system/binutils_ld_64ksec]]), so assuming some
    system load variation, the testsuite's timeout may trigger.

  * <a name="weak"><!-- stable_URL -->`FAIL: ELF weak [...]`</a>

    [[I|tschwinge]] suppose this is due to us having an override w.r.t. weak
    symbol handling in glibc, needed for our external [[/libpthread]].  TODO:
    document properly.
