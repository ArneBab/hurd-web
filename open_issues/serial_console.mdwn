[[!meta copyright="Copyright © 2010 Free Software Foundation, Inc."]]

[[!meta license="""[[!toggle id="license" text="GFDL 1.2+"]][[!toggleable
id="license" text="Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
is included in the section entitled [[GNU Free Documentation
License|/fdl]]."]]"""]]

[[!tag open_issue_documentation]]

IRC, #hurdfr, 2010-09-20

    <youpi> tu peux compiler ton gnumach pour qu'il utilise la console série, et tu
      mets le port série sur la console qemu
    <youpi> -AC_DEFINE([RCLINE], [-1], [com port for the remote console])
    <youpi> +AC_DEFINE([RCLINE], [0], [com port for the remote console])
    <youpi> dans i386/configfrag.ac
    <manuel> grumpf, peu pratique :)
    <youpi> ben après t'auras accès vraiment à ton gnumach
    <youpi> messages de noyau etc.
    <manuel> oui c'est sûr, mais j'ai aucune idée de comment je configure qemu &
      co, ça va être sportif encore
    <youpi> -serial vc
    <manuel> je lance pas moi-même le qemu, donc j'imagine qqch comme -serial
      tcp::qqch,server
    <youpi> ben t'as pas accès à la console alors ?
    <youpi> mais sinon via tcp ça devrait aller oui
    <manuel> si, via telnet
    <manuel> youpi: et après, tu fais comment pour envoyer le c-a-D toi ?
    <manuel> (question sans doute bête)
    <youpi> c'est un code différent via com1 iirc
    <manuel> mmmmmmmmmhhhhhh
    <youpi> (c'est pas bête: c-a-d c'est pas vraiment défini pour un port série)
    <manuel> tu sais où je peux le trouver ?
    <youpi> ah tiens non yena pas
    <youpi> mais bon spa dur à ajouter
    <manuel> bcp trop compliqué pour moi
    <youpi> dans i386/i386at/com.c, à la première ligne ttyinput()
    <youpi> tu compares c à ce que tu veux
    <youpi> et dans ce cas tu appelles kdb_kintr
    <youpi> (sans paramètre)
    <youpi> mais sinon ya pas vraiment besoin d'appeller explicitement le
      débuggueur hein
    <manuel> ah ?
    <youpi> dès que tu mets debug_all_traps à 1 dans traps.c, il sera invoqué lors
      du segv
    <manuel> ok
    <youpi> pour xen j'ai mis £ comme raccourcis
    <manuel> ça me paraît plus simple dans ce cas
    <youpi> clin d'œil à la société anglaise :)
