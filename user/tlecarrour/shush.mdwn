[[!meta copyright="Copyright Â© 2012 Free Software Foundation, Inc."]]

[[!meta license="""[[!toggle id="license" text="GFDL 1.2+"]][[!toggleable
id="license" text="Permission is granted to copy, distribute and/or modify this
document under the terms of the GNU Free Documentation License, Version 1.2 or
any later version published by the Free Software Foundation; with no Invariant
Sections, no Front-Cover Texts, and no Back-Cover Texts.  A copy of the license
is included in the section entitled [[GNU Free Documentation
License|/fdl]]."]]"""]]

[[!tag open_issue_porting]]


shush
=====

Runs a command and optionally reports its output by mail.  
**Home page**: [[http://web.taranis.org/shush]]

[[!toc startlevel=2]]


* * *


Log
---

* **Started**: -
* **Discussed**: -
* **Draft Submitted**: -
* **Submitted**: -
* **Accepted**: -


* * *


ToDo
----

Here is the output of `grep -R PATH_MAX shush-1.2.3/*`:

    src/shush.c:    char cfdir[PATH_MAX+1], *slfac, *to[3];
    src/shush.c:	      strlcpy(cfdir+1, optarg, PATH_MAX);
    src/shush.c:	snprintf(cfdir+1, PATH_MAX, "%s/.shush", getenv("HOME"));
    src/crontab.c:    static char cfname[PATH_MAX];
    src/crontab.c:	snprintf(cfname, PATH_MAX, "%s/schedule", cfdname);
    src/crontab.c:	snprintf(cfname, PATH_MAX, "%s/%s", cfdname, token);
    src/crontab.c:	snprintf(cfname, PATH_MAX, "%s/%s", cfdname, entry->d_name);
    src/crontab.c:    char tag[PATH_MAX+80], *oldtab, *mytab, newtab[PATH_MAX];
    src/crontab.c:    snprintf(newtab, PATH_MAX, "%s/%s-crontab.XXXXXX",
    src/state.c:static char statepath[PATH_MAX];
    src/state.c:        snprintf(statepath, PATH_MAX, "%s/.state/shtate-%lu-%s-%s-%u",
    src/state.c:        snprintf(statepath, PATH_MAX, "%s/shtate-%lu-%s-%s-%u",
    src/run.c:    char fname[PATH_MAX], outlog[PATH_MAX], errlog[PATH_MAX], *outstr, *errstr;
    src/run.c:    snprintf(fname, PATH_MAX, "%s/%s", cfdir, job);
    src/run.c:    snprintf(outlog, PATH_MAX, "%s.stdout", cf_getstr(CF_CONFIG));
    src/run.c:    snprintf(errlog, PATH_MAX, "%s.stderr", cf_getstr(CF_CONFIG));
    src/run.c:            snprintf(fname, PATH_MAX, "%s/.%s-%s", cfdir, jid, get_hostname(0));
    src/run.c:    snprintf(outlog, PATH_MAX, "%s/%s-%s.stdout.XXXXXX",
    src/run.c:	snprintf(errlog, PATH_MAX, "%s/%s-%s.stderr.XXXXXX",
    src/check.c:    char fname[PATH_MAX], outre[PATH_MAX], errre[PATH_MAX], *outstr, *errstr;
    src/check.c:    snprintf(fname, PATH_MAX, "%s/%s", cfdir, job);
    src/check.c:    snprintf(outre, PATH_MAX, "%s.stdout", cf_getstr(CF_CONFIG));
    src/check.c:    snprintf(errre, PATH_MAX, "%s.stderr", cf_getstr(CF_CONFIG));


* * *


Comments
--------

Not yet started.
